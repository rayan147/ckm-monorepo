export*from'@prisma/client';var Jyt=Object.defineProperty;var Kyt=(c,i)=>{for(var p in i)Jyt(c,p,{get:i[p],enumerable:!0});};var $yt={};Kyt($yt,{AllergenAggregateArgsSchema:()=>nIt,AllergenArgsSchema:()=>MQ,AllergenAvgOrderByAggregateInputSchema:()=>Tot,AllergenCountOrderByAggregateInputSchema:()=>Sot,AllergenCountOutputTypeArgsSchema:()=>ZQ,AllergenCountOutputTypeSelectSchema:()=>rX,AllergenCreateArgsSchema:()=>kUt,AllergenCreateInputSchema:()=>_G,AllergenCreateManyAndReturnArgsSchema:()=>MUt,AllergenCreateManyArgsSchema:()=>jUt,AllergenCreateManyInputSchema:()=>SP,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>T4,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>v5,AllergenCreateWithoutIngredientsInputSchema:()=>kv,AllergenDeleteArgsSchema:()=>ZUt,AllergenDeleteManyArgsSchema:()=>wUt,AllergenFindFirstArgsSchema:()=>eIt,AllergenFindFirstOrThrowArgsSchema:()=>oIt,AllergenFindManyArgsSchema:()=>aIt,AllergenFindUniqueArgsSchema:()=>lIt,AllergenFindUniqueOrThrowArgsSchema:()=>rIt,AllergenGroupByArgsSchema:()=>iIt,AllergenIncludeSchema:()=>kd,AllergenMaxOrderByAggregateInputSchema:()=>Pot,AllergenMinOrderByAggregateInputSchema:()=>Wot,AllergenOrderByWithAggregationInputSchema:()=>iV,AllergenOrderByWithRelationInputSchema:()=>xm,AllergenScalarFieldEnumSchema:()=>Mg,AllergenScalarRelationFilterSchema:()=>i2,AllergenScalarWhereWithAggregatesInputSchema:()=>nA,AllergenSchema:()=>Zdt,AllergenSelectSchema:()=>xd,AllergenSumOrderByAggregateInputSchema:()=>Uot,AllergenUncheckedCreateInputSchema:()=>EG,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>xv,AllergenUncheckedUpdateInputSchema:()=>VG,AllergenUncheckedUpdateManyInputSchema:()=>QG,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>V_,AllergenUpdateArgsSchema:()=>vUt,AllergenUpdateInputSchema:()=>LG,AllergenUpdateManyAndReturnArgsSchema:()=>fUt,AllergenUpdateManyArgsSchema:()=>OUt,AllergenUpdateManyMutationInputSchema:()=>HG,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>W4,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Rpt,AllergenUpdateWithoutIngredientsInputSchema:()=>L_,AllergenUpsertArgsSchema:()=>xUt,AllergenUpsertWithoutIngredientsInputSchema:()=>Upt,AllergenWhereInputSchema:()=>lo,AllergenWhereUniqueInputSchema:()=>Jr,AvailabilityAggregateArgsSchema:()=>qbt,AvailabilityArgsSchema:()=>Uzt,AvailabilityAvgOrderByAggregateInputSchema:()=>lot,AvailabilityCountOrderByAggregateInputSchema:()=>iot,AvailabilityCreateArgsSchema:()=>eUt,AvailabilityCreateInputSchema:()=>RG,AvailabilityCreateManyAndReturnArgsSchema:()=>nUt,AvailabilityCreateManyArgsSchema:()=>aUt,AvailabilityCreateManyInputSchema:()=>gP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>mO,AvailabilityCreateManyUserInputSchema:()=>AH,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>Jn,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>sb,AvailabilityCreateWithoutUserInputSchema:()=>Iu,AvailabilityDeleteArgsSchema:()=>iUt,AvailabilityDeleteManyArgsSchema:()=>cUt,AvailabilityFindFirstArgsSchema:()=>Nbt,AvailabilityFindFirstOrThrowArgsSchema:()=>Bbt,AvailabilityFindManyArgsSchema:()=>WK,AvailabilityFindUniqueArgsSchema:()=>Dbt,AvailabilityFindUniqueOrThrowArgsSchema:()=>_bt,AvailabilityGroupByArgsSchema:()=>Fbt,AvailabilityIncludeSchema:()=>Sd,AvailabilityListRelationFilterSchema:()=>A2,AvailabilityMaxOrderByAggregateInputSchema:()=>rot,AvailabilityMinOrderByAggregateInputSchema:()=>pot,AvailabilityOrderByRelationAggregateInputSchema:()=>sat,AvailabilityOrderByWithAggregationInputSchema:()=>oV,AvailabilityOrderByWithRelationInputSchema:()=>ph,AvailabilityScalarFieldEnumSchema:()=>kg,AvailabilityScalarWhereInputSchema:()=>Tp,AvailabilityScalarWhereWithAggregatesInputSchema:()=>eA,AvailabilitySchema:()=>xdt,AvailabilitySelectSchema:()=>Td,AvailabilitySumOrderByAggregateInputSchema:()=>cot,AvailabilityUncheckedCreateInputSchema:()=>kG,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>mi,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>gu,AvailabilityUncheckedUpdateInputSchema:()=>jG,AvailabilityUncheckedUpdateManyInputSchema:()=>MG,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>Qut,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Xi,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>pJ,AvailabilityUpdateArgsSchema:()=>lUt,AvailabilityUpdateInputSchema:()=>xG,AvailabilityUpdateManyAndReturnArgsSchema:()=>pUt,AvailabilityUpdateManyArgsSchema:()=>rUt,AvailabilityUpdateManyMutationInputSchema:()=>ZN,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>bR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>fi,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>hR,AvailabilityUpdateWithoutUserInputSchema:()=>rJ,AvailabilityUpsertArgsSchema:()=>oUt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>mR,AvailabilityWhereInputSchema:()=>sn,AvailabilityWhereUniqueInputSchema:()=>Ce,BoolFieldUpdateOperationsInputSchema:()=>d,BoolFilterSchema:()=>Dt,BoolWithAggregatesFilterSchema:()=>Zl,ChecklistCompleteAggregateArgsSchema:()=>Rht,ChecklistCompleteArgsSchema:()=>PQ,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>Xtt,ChecklistCompleteCountOrderByAggregateInputSchema:()=>Ktt,ChecklistCompleteCountOutputTypeArgsSchema:()=>WQ,ChecklistCompleteCountOutputTypeSelectSchema:()=>aX,ChecklistCompleteCreateArgsSchema:()=>uPt,ChecklistCompleteCreateInputSchema:()=>U0,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>dPt,ChecklistCompleteCreateManyArgsSchema:()=>sPt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>CZ,ChecklistCompleteCreateManyChecklistInputSchema:()=>EV,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>IO,ChecklistCompleteCreateManyCompletedByInputSchema:()=>PH,ChecklistCompleteCreateManyInputSchema:()=>pP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>wB,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>ti,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>z4,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Mh,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>mb,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>p5,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>oc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>Pu,ChecklistCompleteCreateWithoutItemsInputSchema:()=>xZ,ChecklistCompleteDeleteArgsSchema:()=>zPt,ChecklistCompleteDeleteManyArgsSchema:()=>IPt,ChecklistCompleteFindFirstArgsSchema:()=>Wht,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>Uht,ChecklistCompleteFindManyArgsSchema:()=>Vw,ChecklistCompleteFindUniqueArgsSchema:()=>xht,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>jht,ChecklistCompleteGroupByArgsSchema:()=>kht,ChecklistCompleteIncludeSchema:()=>td,ChecklistCompleteListRelationFilterSchema:()=>$j,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>tet,ChecklistCompleteMinOrderByAggregateInputSchema:()=>eet,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>$1,ChecklistCompleteOrderByWithAggregationInputSchema:()=>VL,ChecklistCompleteOrderByWithRelationInputSchema:()=>Um,ChecklistCompleteScalarFieldEnumSchema:()=>bg,ChecklistCompleteScalarRelationFilterSchema:()=>K1,ChecklistCompleteScalarWhereInputSchema:()=>dl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>LC,ChecklistCompleteSchema:()=>Idt,ChecklistCompleteSelectSchema:()=>ed,ChecklistCompleteSumOrderByAggregateInputSchema:()=>oet,ChecklistCompleteUncheckedCreateInputSchema:()=>R0,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>BB,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Ii,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>ac,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Wu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>jZ,ChecklistCompleteUncheckedUpdateInputSchema:()=>x0,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>j0,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>sut,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>EB,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>$ut,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>ol,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>H3,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>zJ,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>GD,ChecklistCompleteUpdateArgsSchema:()=>mPt,ChecklistCompleteUpdateInputSchema:()=>k0,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>bPt,ChecklistCompleteUpdateManyArgsSchema:()=>hPt,ChecklistCompleteUpdateManyMutationInputSchema:()=>Zj,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>CW,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>UR,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>DB,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Bi,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>h4,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Mrt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>gW,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>WR,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>V3,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>dJ,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>YD,ChecklistCompleteUpsertArgsSchema:()=>yPt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>IW,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>PR,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>jrt,ChecklistCompleteWhereInputSchema:()=>Ve,ChecklistCompleteWhereUniqueInputSchema:()=>et,ChecklistFrequencySchema:()=>ft,ChecklistItemAggregateArgsSchema:()=>Aht,ChecklistItemArgsSchema:()=>SQ,ChecklistItemAvgOrderByAggregateInputSchema:()=>Qtt,ChecklistItemCompleteAggregateArgsSchema:()=>vht,ChecklistItemCompleteArgsSchema:()=>Izt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>net,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>aet,ChecklistItemCompleteCreateArgsSchema:()=>gPt,ChecklistItemCompleteCreateInputSchema:()=>M0,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>SPt,ChecklistItemCompleteCreateManyArgsSchema:()=>APt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>kZ,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>VV,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>TZ,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>LV,ChecklistItemCompleteCreateManyInputSchema:()=>cP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>HB,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>c4,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>vh,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>Zh,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>lc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>nc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Dm,ChecklistItemCompleteDeleteArgsSchema:()=>TPt,ChecklistItemCompleteDeleteManyArgsSchema:()=>RPt,ChecklistItemCompleteFindFirstArgsSchema:()=>Mht,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>Zht,ChecklistItemCompleteFindManyArgsSchema:()=>Hw,ChecklistItemCompleteFindUniqueArgsSchema:()=>fht,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>wht,ChecklistItemCompleteGroupByArgsSchema:()=>Oht,ChecklistItemCompleteIncludeSchema:()=>od,ChecklistItemCompleteListRelationFilterSchema:()=>Kj,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>iet,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>ret,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>J1,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>HL,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>th,ChecklistItemCompleteScalarFieldEnumSchema:()=>Ig,ChecklistItemCompleteScalarWhereInputSchema:()=>zl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>VC,ChecklistItemCompleteSchema:()=>gdt,ChecklistItemCompleteSelectSchema:()=>ad,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>pet,ChecklistItemCompleteUncheckedCreateInputSchema:()=>Z0,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>QB,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>u4,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>rc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>ic,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>O0,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>f0,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>zut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>JB,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>dut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>d4,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>$3,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>Y3,ChecklistItemCompleteUpdateArgsSchema:()=>PPt,ChecklistItemCompleteUpdateInputSchema:()=>v0,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>UPt,ChecklistItemCompleteUpdateManyArgsSchema:()=>WPt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>vj,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>UW,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>TW,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>$B,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>s4,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>WW,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>SW,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>G3,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>Q3,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>Nz,ChecklistItemCompleteUpsertArgsSchema:()=>CPt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>PW,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>AW,ChecklistItemCompleteWhereInputSchema:()=>an,ChecklistItemCompleteWhereUniqueInputSchema:()=>dt,ChecklistItemCountOrderByAggregateInputSchema:()=>Htt,ChecklistItemCountOutputTypeArgsSchema:()=>TQ,ChecklistItemCountOutputTypeSelectSchema:()=>oX,ChecklistItemCreateArgsSchema:()=>ePt,ChecklistItemCreateInputSchema:()=>A0,ChecklistItemCreateManyAndReturnArgsSchema:()=>nPt,ChecklistItemCreateManyArgsSchema:()=>aPt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>gZ,ChecklistItemCreateManyChecklistInputSchema:()=>_V,ChecklistItemCreateManyInputSchema:()=>rP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>fB,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>m4,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>jh,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>c5,ChecklistItemCreateWithoutChecklistInputSchema:()=>tc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>MZ,ChecklistItemDeleteArgsSchema:()=>iPt,ChecklistItemDeleteManyArgsSchema:()=>cPt,ChecklistItemFindFirstArgsSchema:()=>ght,ChecklistItemFindFirstOrThrowArgsSchema:()=>Cht,ChecklistItemFindManyArgsSchema:()=>SK,ChecklistItemFindUniqueArgsSchema:()=>Tht,ChecklistItemFindUniqueOrThrowArgsSchema:()=>Pht,ChecklistItemGroupByArgsSchema:()=>Sht,ChecklistItemIncludeSchema:()=>Ks,ChecklistItemListRelationFilterSchema:()=>G1,ChecklistItemMaxOrderByAggregateInputSchema:()=>Ytt,ChecklistItemMinOrderByAggregateInputSchema:()=>Gtt,ChecklistItemOrderByRelationAggregateInputSchema:()=>qtt,ChecklistItemOrderByWithAggregationInputSchema:()=>LL,ChecklistItemOrderByWithRelationInputSchema:()=>Wm,ChecklistItemScalarFieldEnumSchema:()=>hg,ChecklistItemScalarRelationFilterSchema:()=>X1,ChecklistItemScalarWhereInputSchema:()=>zp,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>EC,ChecklistItemSchema:()=>bdt,ChecklistItemSelectSchema:()=>Xs,ChecklistItemSumOrderByAggregateInputSchema:()=>$tt,ChecklistItemTypeSchema:()=>_t,ChecklistItemUncheckedCreateInputSchema:()=>S0,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>NB,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>ec,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>ZZ,ChecklistItemUncheckedUpdateInputSchema:()=>P0,ChecklistItemUncheckedUpdateManyInputSchema:()=>W0,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>yut,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>_B,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>L3,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>JD,ChecklistItemUpdateArgsSchema:()=>lPt,ChecklistItemUpdateInputSchema:()=>T0,ChecklistItemUpdateManyAndReturnArgsSchema:()=>pPt,ChecklistItemUpdateManyArgsSchema:()=>rPt,ChecklistItemUpdateManyMutationInputSchema:()=>xN,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>bW,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>FB,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>b4,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>vrt,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>hW,ChecklistItemUpdateWithoutChecklistInputSchema:()=>E3,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>$D,ChecklistItemUpsertArgsSchema:()=>oPt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>mW,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>Zrt,ChecklistItemWhereInputSchema:()=>Le,ChecklistItemWhereUniqueInputSchema:()=>Jt,ChecklistStatusSchema:()=>qt,ConstraintTypeSchema:()=>re,CookBookAggregateArgsSchema:()=>rgt,CookBookArgsSchema:()=>NQ,CookBookAvgOrderByAggregateInputSchema:()=>Uat,CookBookCountOrderByAggregateInputSchema:()=>Wat,CookBookCountOutputTypeArgsSchema:()=>BQ,CookBookCountOutputTypeSelectSchema:()=>sX,CookBookCreateArgsSchema:()=>ekt,CookBookCreateInputSchema:()=>N$,CookBookCreateManyAndReturnArgsSchema:()=>nkt,CookBookCreateManyArgsSchema:()=>akt,CookBookCreateManyInputSchema:()=>MP,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>_v,CookBookCreateManyRestaurantInputSchema:()=>eH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>ql,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>po,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>L5,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>Hh,CookBookCreateWithoutRecipesInputSchema:()=>MO,CookBookCreateWithoutRestaurantInputSchema:()=>Zc,CookBookDeleteArgsSchema:()=>ikt,CookBookDeleteManyArgsSchema:()=>ckt,CookBookFindFirstArgsSchema:()=>igt,CookBookFindFirstOrThrowArgsSchema:()=>lgt,CookBookFindManyArgsSchema:()=>jK,CookBookFindUniqueArgsSchema:()=>cgt,CookBookFindUniqueOrThrowArgsSchema:()=>ugt,CookBookGroupByArgsSchema:()=>pgt,CookBookIncludeSchema:()=>Ld,CookBookListRelationFilterSchema:()=>u2,CookBookMaxOrderByAggregateInputSchema:()=>Rat,CookBookMinOrderByAggregateInputSchema:()=>kat,CookBookOrderByRelationAggregateInputSchema:()=>tat,CookBookOrderByWithAggregationInputSchema:()=>zV,CookBookOrderByWithRelationInputSchema:()=>jm,CookBookScalarFieldEnumSchema:()=>Fg,CookBookScalarRelationFilterSchema:()=>T2,CookBookScalarWhereInputSchema:()=>hp,CookBookScalarWhereWithAggregatesInputSchema:()=>dA,CookBookSchema:()=>Ddt,CookBookSelectSchema:()=>Vd,CookBookSumOrderByAggregateInputSchema:()=>xat,CookBookUncheckedCreateInputSchema:()=>B$,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>ZO,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>vc,CookBookUncheckedUpdateInputSchema:()=>F$,CookBookUncheckedUpdateManyInputSchema:()=>D$,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Rut,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>cE,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>S8,CookBookUpdateArgsSchema:()=>lkt,CookBookUpdateInputSchema:()=>q$,CookBookUpdateManyAndReturnArgsSchema:()=>pkt,CookBookUpdateManyArgsSchema:()=>rkt,CookBookUpdateManyMutationInputSchema:()=>NN,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>yU,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>sr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ea,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Vpt,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>uU,CookBookUpdateWithoutRecipesInputSchema:()=>pE,CookBookUpdateWithoutRestaurantInputSchema:()=>A8,CookBookUpsertArgsSchema:()=>okt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>cU,CookBookUpsertWithoutRecipesInputSchema:()=>Lpt,CookBookWhereInputSchema:()=>Qe,CookBookWhereUniqueInputSchema:()=>Kt,CountStatusSchema:()=>Mt,CustomerFeedbackAggregateArgsSchema:()=>Vht,CustomerFeedbackArgsSchema:()=>Czt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>het,CustomerFeedbackCountOrderByAggregateInputSchema:()=>met,CustomerFeedbackCreateArgsSchema:()=>NPt,CustomerFeedbackCreateInputSchema:()=>D0,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>FPt,CustomerFeedbackCreateManyArgsSchema:()=>qPt,CustomerFeedbackCreateManyInputSchema:()=>yP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>fw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>zQ,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>gO,CustomerFeedbackCreateManyRespondedByInputSchema:()=>WH,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>Xv,CustomerFeedbackCreateManyRestaurantInputSchema:()=>yH,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>Hz,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ei,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>$l,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>dI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>hb,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>ob,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>Cs,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Uu,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>Kc,CustomerFeedbackCreatetagsInputSchema:()=>tp,CustomerFeedbackDeleteArgsSchema:()=>DPt,CustomerFeedbackDeleteManyArgsSchema:()=>VPt,CustomerFeedbackFindFirstArgsSchema:()=>Eht,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>Lht,CustomerFeedbackFindManyArgsSchema:()=>XS,CustomerFeedbackFindUniqueArgsSchema:()=>Qht,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>Yht,CustomerFeedbackGroupByArgsSchema:()=>Hht,CustomerFeedbackIncludeSchema:()=>ld,CustomerFeedbackListRelationFilterSchema:()=>gS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>bet,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Iet,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>cB,CustomerFeedbackOrderByWithAggregationInputSchema:()=>YL,CustomerFeedbackOrderByWithRelationInputSchema:()=>oh,CustomerFeedbackScalarFieldEnumSchema:()=>Cg,CustomerFeedbackScalarWhereInputSchema:()=>wn,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>QC,CustomerFeedbackSchema:()=>Adt,CustomerFeedbackSelectSchema:()=>rd,CustomerFeedbackSumOrderByAggregateInputSchema:()=>get,CustomerFeedbackUncheckedCreateInputSchema:()=>_0,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>tm,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>gi,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>As,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>Ru,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,CustomerFeedbackUncheckedUpdateInputSchema:()=>L0,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>V0,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Yyt,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Im,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>Jut,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>al,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Nut,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>uK,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>hJ,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>_8,CustomerFeedbackUpdateArgsSchema:()=>_Pt,CustomerFeedbackUpdateInputSchema:()=>E0,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>LPt,CustomerFeedbackUpdateManyArgsSchema:()=>EPt,CustomerFeedbackUpdateManyMutationInputSchema:()=>IT,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Cj,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>xR,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>DU,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>um,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>qi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>gj,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>kR,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>FU,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>cK,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>mJ,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>D8,CustomerFeedbackUpdatetagsInputSchema:()=>qr,CustomerFeedbackUpsertArgsSchema:()=>BPt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ij,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>RR,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>qU,CustomerFeedbackWhereInputSchema:()=>ln,CustomerFeedbackWhereUniqueInputSchema:()=>q,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>s,DateTimeNullableFilterSchema:()=>ce,DateTimeNullableWithAggregatesFilterSchema:()=>Qr,DateTimeWithAggregatesFilterSchema:()=>M,DayOfWeekSchema:()=>le,DietaryRestrictionAggregateArgsSchema:()=>Jht,DietaryRestrictionArgsSchema:()=>UQ,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>Pet,DietaryRestrictionCountOrderByAggregateInputSchema:()=>Tet,DietaryRestrictionCountOutputTypeArgsSchema:()=>RQ,DietaryRestrictionCountOutputTypeSelectSchema:()=>nX,DietaryRestrictionCreateArgsSchema:()=>HPt,DietaryRestrictionCreateInputSchema:()=>H0,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>GPt,DietaryRestrictionCreateManyArgsSchema:()=>YPt,DietaryRestrictionCreateManyInputSchema:()=>sP,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>Qz,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>To,DietaryRestrictionCreateNestedOneWithoutIngredientsInputSchema:()=>kI,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>J5,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>zI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>fb,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>uf,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Ss,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>uy,DietaryRestrictionDeleteArgsSchema:()=>$Pt,DietaryRestrictionDeleteManyArgsSchema:()=>tWt,DietaryRestrictionFindFirstArgsSchema:()=>Ght,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>$ht,DietaryRestrictionFindManyArgsSchema:()=>Yw,DietaryRestrictionFindUniqueArgsSchema:()=>Xht,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>tbt,DietaryRestrictionGroupByArgsSchema:()=>Kht,DietaryRestrictionIncludeSchema:()=>pd,DietaryRestrictionListRelationFilterSchema:()=>yM,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Wet,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Uet,DietaryRestrictionNullableScalarRelationFilterSchema:()=>q2,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>N2,DietaryRestrictionOrderByWithAggregationInputSchema:()=>GL,DietaryRestrictionOrderByWithRelationInputSchema:()=>Rm,DietaryRestrictionScalarFieldEnumSchema:()=>Ag,DietaryRestrictionScalarWhereInputSchema:()=>Tl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>YC,DietaryRestrictionSchema:()=>Sdt,DietaryRestrictionSelectSchema:()=>cd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>Ret,DietaryRestrictionUncheckedCreateInputSchema:()=>Q0,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>em,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Vo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>yf,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Ts,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>yy,DietaryRestrictionUncheckedUpdateInputSchema:()=>G0,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>$0,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>Gyt,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>gm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>hyt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Na,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>yE,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>sK,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>t7,DietaryRestrictionUpdateArgsSchema:()=>JPt,DietaryRestrictionUpdateInputSchema:()=>Y0,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>XPt,DietaryRestrictionUpdateManyArgsSchema:()=>KPt,DietaryRestrictionUpdateManyMutationInputSchema:()=>fj,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Tj,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>Zk,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>ym,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>ma,DietaryRestrictionUpdateOneWithoutIngredientsNestedInputSchema:()=>EI,DietaryRestrictionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Qpt,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Sj,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Mk,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>uE,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>yK,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>XJ,DietaryRestrictionUpsertArgsSchema:()=>QPt,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Aj,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>jk,DietaryRestrictionUpsertWithoutIngredientsInputSchema:()=>Hpt,DietaryRestrictionWhereInputSchema:()=>ve,DietaryRestrictionWhereUniqueInputSchema:()=>ot,EarlyAccessAggregateArgsSchema:()=>TIt,EarlyAccessAvgOrderByAggregateInputSchema:()=>Bot,EarlyAccessCountOrderByAggregateInputSchema:()=>Not,EarlyAccessCreateArgsSchema:()=>eRt,EarlyAccessCreateInputSchema:()=>n$,EarlyAccessCreateManyAndReturnArgsSchema:()=>nRt,EarlyAccessCreateManyArgsSchema:()=>aRt,EarlyAccessCreateManyInputSchema:()=>WP,EarlyAccessDeleteArgsSchema:()=>iRt,EarlyAccessDeleteManyArgsSchema:()=>cRt,EarlyAccessFindFirstArgsSchema:()=>CIt,EarlyAccessFindFirstOrThrowArgsSchema:()=>AIt,EarlyAccessFindManyArgsSchema:()=>SIt,EarlyAccessFindUniqueArgsSchema:()=>WIt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>UIt,EarlyAccessGroupByArgsSchema:()=>PIt,EarlyAccessMaxOrderByAggregateInputSchema:()=>qot,EarlyAccessMinOrderByAggregateInputSchema:()=>Fot,EarlyAccessOrderByWithAggregationInputSchema:()=>pV,EarlyAccessOrderByWithRelationInputSchema:()=>dh,EarlyAccessScalarFieldEnumSchema:()=>Og,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>rA,EarlyAccessSchema:()=>fdt,EarlyAccessSelectSchema:()=>Bm,EarlyAccessSumOrderByAggregateInputSchema:()=>Dot,EarlyAccessUncheckedCreateInputSchema:()=>i$,EarlyAccessUncheckedUpdateInputSchema:()=>r$,EarlyAccessUncheckedUpdateManyInputSchema:()=>c$,EarlyAccessUpdateArgsSchema:()=>lRt,EarlyAccessUpdateInputSchema:()=>l$,EarlyAccessUpdateManyAndReturnArgsSchema:()=>pRt,EarlyAccessUpdateManyArgsSchema:()=>rRt,EarlyAccessUpdateManyMutationInputSchema:()=>p$,EarlyAccessUpsertArgsSchema:()=>oRt,EarlyAccessWhereInputSchema:()=>pl,EarlyAccessWhereUniqueInputSchema:()=>qm,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>yp,EnumChecklistFrequencyFilterSchema:()=>$N,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>Vtt,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>Fm,EnumChecklistItemTypeFilterSchema:()=>JN,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>Jtt,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>wz,EnumChecklistStatusFilterSchema:()=>KN,EnumChecklistStatusWithAggregatesFilterSchema:()=>cet,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>dC,EnumConstraintTypeFilterSchema:()=>nB,EnumConstraintTypeWithAggregatesFilterSchema:()=>hot,EnumCountStatusFieldUpdateOperationsInputSchema:()=>ap,EnumCountStatusFilterSchema:()=>mB,EnumCountStatusWithAggregatesFilterSchema:()=>Tnt,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>sC,EnumDayOfWeekFilterSchema:()=>aB,EnumDayOfWeekWithAggregatesFilterSchema:()=>uot,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>up,EnumEquipmentStatusFilterSchema:()=>QN,EnumEquipmentStatusWithAggregatesFilterSchema:()=>Rtt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>Br,EnumFeedbackSourceFilterSchema:()=>XN,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Cet,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Fr,EnumFeedbackStatusFilterSchema:()=>tB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>Aet,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>ep,EnumInventoryTypeFilterSchema:()=>p2,EnumInventoryTypeWithAggregatesFilterSchema:()=>Xot,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>uC,EnumMaintenanceTypeFilterSchema:()=>GN,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>Btt,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>np,EnumOrderStatusFilterSchema:()=>hB,EnumOrderStatusWithAggregatesFilterSchema:()=>qnt,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>cC,EnumPhotoTypeFilterSchema:()=>VN,EnumPhotoTypeWithAggregatesFilterSchema:()=>LX,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>Ya,EnumPrepStatusFilterSchema:()=>TS,EnumPrepStatusWithAggregatesFilterSchema:()=>H2,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>_m,EnumShiftStatusFilterSchema:()=>bB,EnumShiftStatusWithAggregatesFilterSchema:()=>oit,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>pt,EnumSkillLevelFilterSchema:()=>dB,EnumSkillLevelWithAggregatesFilterSchema:()=>Lat,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>yC,EnumTaskTypeFilterSchema:()=>oB,EnumTaskTypeWithAggregatesFilterSchema:()=>not,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>_r,EnumTransactionTypeFilterSchema:()=>zB,EnumTransactionTypeWithAggregatesFilterSchema:()=>bnt,EnumUserRoleFieldUpdateOperationsInputSchema:()=>xt,EnumUserRoleFilterSchema:()=>uB,EnumUserRoleWithAggregatesFilterSchema:()=>gat,EquipmentAggregateArgsSchema:()=>Jmt,EquipmentArgsSchema:()=>Uj,EquipmentAvgOrderByAggregateInputSchema:()=>Ttt,EquipmentCountOrderByAggregateInputSchema:()=>Stt,EquipmentCountOutputTypeArgsSchema:()=>CQ,EquipmentCountOutputTypeSelectSchema:()=>tX,EquipmentCreateArgsSchema:()=>gTt,EquipmentCreateInputSchema:()=>e0,EquipmentCreateManyAndReturnArgsSchema:()=>STt,EquipmentCreateManyArgsSchema:()=>ATt,EquipmentCreateManyInputSchema:()=>aP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>Jv,EquipmentCreateManyRestaurantInputSchema:()=>cH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>Yl,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>ult,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>xB,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>a5,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>e5,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>tb,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>mZ,EquipmentCreateWithoutRecipesInputSchema:()=>yZ,EquipmentCreateWithoutRestaurantInputSchema:()=>Yc,EquipmentDeleteArgsSchema:()=>TTt,EquipmentDeleteManyArgsSchema:()=>RTt,EquipmentFindFirstArgsSchema:()=>Gmt,EquipmentFindFirstOrThrowArgsSchema:()=>$mt,EquipmentFindManyArgsSchema:()=>gK,EquipmentFindUniqueArgsSchema:()=>Xmt,EquipmentFindUniqueOrThrowArgsSchema:()=>tht,EquipmentGroupByArgsSchema:()=>Kmt,EquipmentIncludeSchema:()=>Ls,EquipmentListRelationFilterSchema:()=>d2,EquipmentMaxOrderByAggregateInputSchema:()=>Ptt,EquipmentMinOrderByAggregateInputSchema:()=>Wtt,EquipmentOrderByRelationAggregateInputSchema:()=>oat,EquipmentOrderByWithAggregationInputSchema:()=>FL,EquipmentOrderByWithRelationInputSchema:()=>qp,EquipmentScalarFieldEnumSchema:()=>sg,EquipmentScalarRelationFilterSchema:()=>Gj,EquipmentScalarWhereInputSchema:()=>Ip,EquipmentScalarWhereWithAggregatesInputSchema:()=>qC,EquipmentSchema:()=>ddt,EquipmentSelectSchema:()=>Vs,EquipmentStatusSchema:()=>Ot,EquipmentSumOrderByAggregateInputSchema:()=>Utt,EquipmentUncheckedCreateInputSchema:()=>o0,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>hZ,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>sZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,EquipmentUncheckedUpdateInputSchema:()=>n0,EquipmentUncheckedUpdateManyInputSchema:()=>i0,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>fut,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>qD,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>fD,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>B8,EquipmentUpdateArgsSchema:()=>PTt,EquipmentUpdateInputSchema:()=>a0,EquipmentUpdateManyAndReturnArgsSchema:()=>UTt,EquipmentUpdateManyArgsSchema:()=>WTt,EquipmentUpdateManyMutationInputSchema:()=>UN,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>fU,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>ylt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ZB,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Art,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>brt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>OU,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>BD,EquipmentUpdateWithoutRecipesInputSchema:()=>OD,EquipmentUpdateWithoutRestaurantInputSchema:()=>N8,EquipmentUpsertArgsSchema:()=>CTt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>vU,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>Crt,EquipmentUpsertWithoutRecipesInputSchema:()=>hrt,EquipmentWhereInputSchema:()=>ke,EquipmentWhereUniqueInputSchema:()=>Lt,FeedbackSourceSchema:()=>Ut,FeedbackStatusSchema:()=>Rt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>U,FloatNullableFilterSchema:()=>Ft,FloatNullableListFilterSchema:()=>Ph,FloatNullableWithAggregatesFilterSchema:()=>xl,FloatWithAggregatesFilterSchema:()=>At,FoodCostHistoryAggregateArgsSchema:()=>RAt,FoodCostHistoryArgsSchema:()=>qzt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>Dit,FoodCostHistoryCountOrderByAggregateInputSchema:()=>Fit,FoodCostHistoryCreateArgsSchema:()=>kMt,FoodCostHistoryCreateInputSchema:()=>w1,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>MMt,FoodCostHistoryCreateManyArgsSchema:()=>jMt,FoodCostHistoryCreateManyInputSchema:()=>KP,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>fO,FoodCostHistoryCreateManyRecipeInputSchema:()=>vH,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>so,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Wb,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>Lu,FoodCostHistoryDeleteArgsSchema:()=>ZMt,FoodCostHistoryDeleteManyArgsSchema:()=>wMt,FoodCostHistoryFindFirstArgsSchema:()=>WAt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>UAt,FoodCostHistoryFindManyArgsSchema:()=>wK,FoodCostHistoryFindUniqueArgsSchema:()=>xAt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>jAt,FoodCostHistoryGroupByArgsSchema:()=>kAt,FoodCostHistoryIncludeSchema:()=>Zz,FoodCostHistoryListRelationFilterSchema:()=>P2,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>_it,FoodCostHistoryMinOrderByAggregateInputSchema:()=>Eit,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>jat,FoodCostHistoryOrderByWithAggregationInputSchema:()=>fV,FoodCostHistoryOrderByWithRelationInputSchema:()=>Sh,FoodCostHistoryScalarFieldEnumSchema:()=>rC,FoodCostHistoryScalarWhereInputSchema:()=>Wp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>OA,FoodCostHistorySchema:()=>pzt,FoodCostHistorySelectSchema:()=>vz,FoodCostHistorySumOrderByAggregateInputSchema:()=>Lit,FoodCostHistoryUncheckedCreateInputSchema:()=>N1,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>fo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Vu,FoodCostHistoryUncheckedUpdateInputSchema:()=>q1,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>F1,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>lyt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ra,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>OJ,FoodCostHistoryUpdateArgsSchema:()=>vMt,FoodCostHistoryUpdateInputSchema:()=>B1,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>fMt,FoodCostHistoryUpdateManyArgsSchema:()=>OMt,FoodCostHistoryUpdateManyMutationInputSchema:()=>EN,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>ok,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>ia,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ek,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>vJ,FoodCostHistoryUpsertArgsSchema:()=>xMt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>tk,FoodCostHistoryWhereInputSchema:()=>Wn,FoodCostHistoryWhereUniqueInputSchema:()=>We,IngredientAggregateArgsSchema:()=>ggt,IngredientAllergenAggregateArgsSchema:()=>uIt,IngredientAllergenArgsSchema:()=>xzt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>kot,IngredientAllergenCountOrderByAggregateInputSchema:()=>Rot,IngredientAllergenCreateArgsSchema:()=>NUt,IngredientAllergenCreateInputSchema:()=>YG,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>Wv,IngredientAllergenCreateManyAllergenInputSchema:()=>YV,IngredientAllergenCreateManyAndReturnArgsSchema:()=>FUt,IngredientAllergenCreateManyArgsSchema:()=>qUt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>pf,IngredientAllergenCreateManyIngredientInputSchema:()=>$H,IngredientAllergenCreateManyInputSchema:()=>TP,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>Slt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>UI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>qh,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>Hb,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Ic,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Zy,IngredientAllergenDeleteArgsSchema:()=>DUt,IngredientAllergenDeleteManyArgsSchema:()=>VUt,IngredientAllergenFindFirstArgsSchema:()=>pIt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>cIt,IngredientAllergenFindManyArgsSchema:()=>$w,IngredientAllergenFindUniqueArgsSchema:()=>sIt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>dIt,IngredientAllergenGroupByArgsSchema:()=>yIt,IngredientAllergenIncludeSchema:()=>jd,IngredientAllergenListRelationFilterSchema:()=>oM,IngredientAllergenMaxOrderByAggregateInputSchema:()=>xot,IngredientAllergenMinOrderByAggregateInputSchema:()=>jot,IngredientAllergenOrderByRelationAggregateInputSchema:()=>n2,IngredientAllergenOrderByWithAggregationInputSchema:()=>lV,IngredientAllergenOrderByWithRelationInputSchema:()=>yh,IngredientAllergenScalarFieldEnumSchema:()=>Zg,IngredientAllergenScalarWhereInputSchema:()=>hl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>iA,IngredientAllergenSchema:()=>vdt,IngredientAllergenSelectSchema:()=>Md,IngredientAllergenSumOrderByAggregateInputSchema:()=>Mot,IngredientAllergenUncheckedCreateInputSchema:()=>GG,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>Tlt,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>OI,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>gc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>vy,IngredientAllergenUncheckedUpdateInputSchema:()=>JG,IngredientAllergenUncheckedUpdateManyInputSchema:()=>KG,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>Cut,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Wlt,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Ryt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>GI,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>p8,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>S7,IngredientAllergenUpdateArgsSchema:()=>_Ut,IngredientAllergenUpdateInputSchema:()=>$G,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>LUt,IngredientAllergenUpdateManyArgsSchema:()=>EUt,IngredientAllergenUpdateManyMutationInputSchema:()=>Nj,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>LW,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>yx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Plt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>DI,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>EW,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ux,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>r8,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>A7,IngredientAllergenUpsertArgsSchema:()=>BUt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>_W,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>cx,IngredientAllergenWhereInputSchema:()=>mn,IngredientAllergenWhereUniqueInputSchema:()=>mt,IngredientArgsSchema:()=>Gr,IngredientAvgOrderByAggregateInputSchema:()=>Qat,IngredientCountOrderByAggregateInputSchema:()=>Hat,IngredientCountOutputTypeArgsSchema:()=>FQ,IngredientCountOutputTypeSelectSchema:()=>zX,IngredientCreateArgsSchema:()=>gkt,IngredientCreateInputSchema:()=>Q$,IngredientCreateManyAndReturnArgsSchema:()=>Skt,IngredientCreateManyArgsSchema:()=>Akt,IngredientCreateManyDietaryRestrictionInputEnvelopeSchema:()=>EZ,IngredientCreateManyDietaryRestrictionInputSchema:()=>HV,IngredientCreateManyInputSchema:()=>vP,IngredientCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>lq,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>MF,IngredientCreateNestedOneWithoutIngredientAllergenInputSchema:()=>S4,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>WS,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>V4,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>Gq,IngredientCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>g4,IngredientCreateNestedOneWithoutWasteRecordInputSchema:()=>Tq,IngredientCreateOrConnectWithoutDietaryRestrictionInputSchema:()=>wh,IngredientCreateOrConnectWithoutIngredientAllergenInputSchema:()=>Z5,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>n3,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>b3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>X5,IngredientCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>y5,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>eI,IngredientCreateOrConnectWithoutWasteRecordInputSchema:()=>g5,IngredientCreateWithoutDietaryRestrictionInputSchema:()=>sc,IngredientCreateWithoutIngredientAllergenInputSchema:()=>Uv,IngredientCreateWithoutInventoryItemsInputSchema:()=>Wf,IngredientCreateWithoutOrderItemsInputSchema:()=>ow,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>zf,IngredientCreateWithoutSupplierPriceHistoryInputSchema:()=>fZ,IngredientCreateWithoutVendorsInputSchema:()=>$y,IngredientCreateWithoutWasteRecordInputSchema:()=>KZ,IngredientDeleteArgsSchema:()=>Tkt,IngredientDeleteManyArgsSchema:()=>Rkt,IngredientFindFirstArgsSchema:()=>bgt,IngredientFindFirstOrThrowArgsSchema:()=>Igt,IngredientFindManyArgsSchema:()=>Kw,IngredientFindUniqueArgsSchema:()=>Agt,IngredientFindUniqueOrThrowArgsSchema:()=>Sgt,IngredientGroupByArgsSchema:()=>Cgt,IngredientIncludeSchema:()=>Yd,IngredientListRelationFilterSchema:()=>eM,IngredientMaxOrderByAggregateInputSchema:()=>Yat,IngredientMinOrderByAggregateInputSchema:()=>Gat,IngredientOrderByRelationAggregateInputSchema:()=>t2,IngredientOrderByWithAggregationInputSchema:()=>hV,IngredientOrderByWithRelationInputSchema:()=>jl,IngredientScalarFieldEnumSchema:()=>_g,IngredientScalarRelationFilterSchema:()=>Kr,IngredientScalarWhereInputSchema:()=>ml,IngredientScalarWhereWithAggregatesInputSchema:()=>mA,IngredientSchema:()=>Edt,IngredientSelectSchema:()=>Gd,IngredientSumOrderByAggregateInputSchema:()=>$at,IngredientUncheckedCreateInputSchema:()=>Y$,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>cq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>OF,IngredientUncheckedCreateWithoutDietaryRestrictionInputSchema:()=>dc,IngredientUncheckedCreateWithoutIngredientAllergenInputSchema:()=>Rv,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>Uf,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>aw,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>mf,IngredientUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>wZ,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>Jy,IngredientUncheckedCreateWithoutWasteRecordInputSchema:()=>XZ,IngredientUncheckedUpdateInputSchema:()=>$$,IngredientUncheckedUpdateManyInputSchema:()=>J$,IngredientUncheckedUpdateManyWithoutDietaryRestrictionInputSchema:()=>but,IngredientUncheckedUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>mq,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>wyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>FF,IngredientUncheckedUpdateWithoutDietaryRestrictionInputSchema:()=>o8,IngredientUncheckedUpdateWithoutIngredientAllergenInputSchema:()=>E_,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>WE,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>JE,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>mE,IngredientUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>e_,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>F7,IngredientUncheckedUpdateWithoutWasteRecordInputSchema:()=>b_,IngredientUpdateArgsSchema:()=>Pkt,IngredientUpdateInputSchema:()=>G$,IngredientUpdateManyAndReturnArgsSchema:()=>Ukt,IngredientUpdateManyArgsSchema:()=>Wkt,IngredientUpdateManyMutationInputSchema:()=>qj,IngredientUpdateManyWithWhereWithoutDietaryRestrictionInputSchema:()=>fW,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Bx,IngredientUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>sq,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>NF,IngredientUpdateOneRequiredWithoutIngredientAllergenNestedInputSchema:()=>P4,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>OS,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>Q4,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>Kq,IngredientUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>A4,IngredientUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Uq,IngredientUpdateToOneWithWhereWithoutIngredientAllergenInputSchema:()=>Wpt,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>rct,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>vct,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>Jpt,IngredientUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>Nrt,IngredientUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>Xrt,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>OW,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>Nx,IngredientUpdateWithoutDietaryRestrictionInputSchema:()=>e8,IngredientUpdateWithoutIngredientAllergenInputSchema:()=>__,IngredientUpdateWithoutInventoryItemsInputSchema:()=>PE,IngredientUpdateWithoutOrderItemsInputSchema:()=>$E,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>zE,IngredientUpdateWithoutSupplierPriceHistoryInputSchema:()=>t_,IngredientUpdateWithoutVendorsInputSchema:()=>q7,IngredientUpdateWithoutWasteRecordInputSchema:()=>h_,IngredientUpsertArgsSchema:()=>Ckt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>vW,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>wx,IngredientUpsertWithoutIngredientAllergenInputSchema:()=>Ppt,IngredientUpsertWithoutInventoryItemsInputSchema:()=>lct,IngredientUpsertWithoutOrderItemsInputSchema:()=>Zct,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>$pt,IngredientUpsertWithoutSupplierPriceHistoryInputSchema:()=>wrt,IngredientUpsertWithoutWasteRecordInputSchema:()=>Krt,IngredientWhereInputSchema:()=>Wt,IngredientWhereUniqueInputSchema:()=>Q,IntFieldUpdateOperationsInputSchema:()=>a,IntFilterSchema:()=>u,IntNullableFilterSchema:()=>tt,IntNullableListFilterSchema:()=>CI,IntNullableWithAggregatesFilterSchema:()=>Rn,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>NIt,InventoryArgsSchema:()=>mI,InventoryAvgOrderByAggregateInputSchema:()=>Got,InventoryCountOrderByAggregateInputSchema:()=>Yot,InventoryCountOutputTypeArgsSchema:()=>OQ,InventoryCountOutputTypeSelectSchema:()=>cX,InventoryCreateArgsSchema:()=>gRt,InventoryCreateInputSchema:()=>h$,InventoryCreateManyAndReturnArgsSchema:()=>SRt,InventoryCreateManyArgsSchema:()=>ARt,InventoryCreateManyInputSchema:()=>RP,InventoryCreateNestedOneWithoutItemsInputSchema:()=>PS,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Fl,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>zF,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>pF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>a3,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>Ev,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>c3,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>l3,InventoryCreateWithoutItemsInputSchema:()=>Tf,InventoryCreateWithoutRestaurantInputSchema:()=>_S,InventoryCreateWithoutStockCountsInputSchema:()=>Bf,InventoryCreateWithoutTransactionsInputSchema:()=>Zf,InventoryDeleteArgsSchema:()=>TRt,InventoryDeleteManyArgsSchema:()=>RRt,InventoryFindFirstArgsSchema:()=>OIt,InventoryFindFirstOrThrowArgsSchema:()=>fIt,InventoryFindManyArgsSchema:()=>wIt,InventoryFindUniqueArgsSchema:()=>qIt,InventoryFindUniqueOrThrowArgsSchema:()=>FIt,InventoryGroupByArgsSchema:()=>BIt,InventoryIncludeSchema:()=>wd,InventoryItemAggregateArgsSchema:()=>Ngt,InventoryItemArgsSchema:()=>pS,InventoryItemAvgOrderByAggregateInputSchema:()=>pnt,InventoryItemCountOrderByAggregateInputSchema:()=>rnt,InventoryItemCountOutputTypeArgsSchema:()=>EQ,InventoryItemCountOutputTypeSelectSchema:()=>hX,InventoryItemCreateArgsSchema:()=>Hkt,InventoryItemCreateInputSchema:()=>p9,InventoryItemCreateManyAndReturnArgsSchema:()=>Gkt,InventoryItemCreateManyArgsSchema:()=>Ykt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>nf,InventoryItemCreateManyIngredientInputSchema:()=>QH,InventoryItemCreateManyInputSchema:()=>wP,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>wv,InventoryItemCreateManyInventoryInputSchema:()=>JV,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>pO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>zH,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>SI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>bM,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Ln,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>D4,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>cF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>_q,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>_b,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>_h,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>ib,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>s3,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>r3,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>x5,InventoryItemCreateWithoutIngredientInputSchema:()=>Py,InventoryItemCreateWithoutInventoryInputSchema:()=>Pc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>nu,InventoryItemCreateWithoutStockCountsInputSchema:()=>Vf,InventoryItemCreateWithoutTransactionsInputSchema:()=>Of,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>gv,InventoryItemDeleteArgsSchema:()=>$kt,InventoryItemDeleteManyArgsSchema:()=>txt,InventoryItemFindFirstArgsSchema:()=>fgt,InventoryItemFindFirstOrThrowArgsSchema:()=>wgt,InventoryItemFindManyArgsSchema:()=>iT,InventoryItemFindUniqueArgsSchema:()=>qgt,InventoryItemFindUniqueOrThrowArgsSchema:()=>Fgt,InventoryItemGroupByArgsSchema:()=>Bgt,InventoryItemIncludeSchema:()=>tz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>hN,InventoryItemListRelationFilterSchema:()=>mS,InventoryItemMaxOrderByAggregateInputSchema:()=>cnt,InventoryItemMinOrderByAggregateInputSchema:()=>unt,InventoryItemOrderByRelationAggregateInputSchema:()=>iB,InventoryItemOrderByWithAggregationInputSchema:()=>gV,InventoryItemOrderByWithRelationInputSchema:()=>cp,InventoryItemScalarFieldEnumSchema:()=>Vg,InventoryItemScalarRelationFilterSchema:()=>zS,InventoryItemScalarWhereInputSchema:()=>Zn,InventoryItemScalarWhereWithAggregatesInputSchema:()=>IA,InventoryItemSchema:()=>Hdt,InventoryItemSelectSchema:()=>ez,InventoryItemSumOrderByAggregateInputSchema:()=>ynt,InventoryItemUncheckedCreateInputSchema:()=>c9,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>jI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>CM,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>pi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>Wy,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Wc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>iu,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>Hf,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>ff,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>Cv,InventoryItemUncheckedUpdateInputSchema:()=>y9,InventoryItemUncheckedUpdateManyInputSchema:()=>s9,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Tyt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>VI,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>Tut,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>RM,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Fut,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Hi,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>z7,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>z8,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>Y8,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>DE,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>ME,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>N_,InventoryItemUpdateArgsSchema:()=>Jkt,InventoryItemUpdateInputSchema:()=>u9,InventoryItemUpdateManyAndReturnArgsSchema:()=>Xkt,InventoryItemUpdateManyArgsSchema:()=>Kkt,InventoryItemUpdateManyMutationInputSchema:()=>PT,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Xk,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>XW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>$U,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>NI,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>PM,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>ki,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>E4,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>sF,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>Vq,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Tct,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>dct,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>gpt,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Kk,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>KW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>GU,InventoryItemUpdateWithoutIngredientInputSchema:()=>d7,InventoryItemUpdateWithoutInventoryInputSchema:()=>d8,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>Q8,InventoryItemUpdateWithoutStockCountsInputSchema:()=>FE,InventoryItemUpdateWithoutTransactionsInputSchema:()=>jE,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>w_,InventoryItemUpsertArgsSchema:()=>Qkt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Jk,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>JW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>YU,InventoryItemUpsertWithoutStockCountsInputSchema:()=>Sct,InventoryItemUpsertWithoutTransactionsInputSchema:()=>sct,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Ipt,InventoryItemWhereInputSchema:()=>oe,InventoryItemWhereUniqueInputSchema:()=>f,InventoryMaxOrderByAggregateInputSchema:()=>$ot,InventoryMinOrderByAggregateInputSchema:()=>Jot,InventoryNullableScalarRelationFilterSchema:()=>y2,InventoryOrderByWithAggregationInputSchema:()=>uV,InventoryOrderByWithRelationInputSchema:()=>Yr,InventoryScalarFieldEnumSchema:()=>wg,InventoryScalarRelationFilterSchema:()=>SS,InventoryScalarWhereWithAggregatesInputSchema:()=>cA,InventorySchema:()=>Ndt,InventorySelectSchema:()=>Nd,InventorySumOrderByAggregateInputSchema:()=>Kot,InventoryTransactionAggregateArgsSchema:()=>Egt,InventoryTransactionArgsSchema:()=>vzt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>dnt,InventoryTransactionCountOrderByAggregateInputSchema:()=>snt,InventoryTransactionCreateArgsSchema:()=>ext,InventoryTransactionCreateInputSchema:()=>d9,InventoryTransactionCreateManyAndReturnArgsSchema:()=>nxt,InventoryTransactionCreateManyArgsSchema:()=>axt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>SO,InventoryTransactionCreateManyCreatedByInputSchema:()=>kH,InventoryTransactionCreateManyInputSchema:()=>NP,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>Nv,InventoryTransactionCreateManyInventoryInputSchema:()=>KV,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>xf,InventoryTransactionCreateManyItemInputSchema:()=>XH,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ni,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>IM,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>RS,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>gb,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>Eh,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>Gb,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Zu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>Uc,InventoryTransactionCreateWithoutItemInputSchema:()=>By,InventoryTransactionDeleteArgsSchema:()=>ixt,InventoryTransactionDeleteManyArgsSchema:()=>cxt,InventoryTransactionFindFirstArgsSchema:()=>Dgt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>_gt,InventoryTransactionFindManyArgsSchema:()=>lT,InventoryTransactionFindUniqueArgsSchema:()=>Vgt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>Hgt,InventoryTransactionGroupByArgsSchema:()=>Lgt,InventoryTransactionIncludeSchema:()=>oz,InventoryTransactionListRelationFilterSchema:()=>hS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>znt,InventoryTransactionMinOrderByAggregateInputSchema:()=>mnt,InventoryTransactionOrderByRelationAggregateInputSchema:()=>lB,InventoryTransactionOrderByWithAggregationInputSchema:()=>CV,InventoryTransactionOrderByWithRelationInputSchema:()=>hh,InventoryTransactionScalarFieldEnumSchema:()=>Hg,InventoryTransactionScalarWhereInputSchema:()=>vn,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>gA,InventoryTransactionSchema:()=>Qdt,InventoryTransactionSelectSchema:()=>az,InventoryTransactionSumOrderByAggregateInputSchema:()=>hnt,InventoryTransactionUncheckedCreateInputSchema:()=>z9,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Si,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>AM,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>jS,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>vu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>Rc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>qy,InventoryTransactionUncheckedUpdateInputSchema:()=>h9,InventoryTransactionUncheckedUpdateManyInputSchema:()=>b9,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>tyt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ll,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Put,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>kM,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>jyt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>qS,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>SJ,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>h8,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>k7,InventoryTransactionUpdateArgsSchema:()=>lxt,InventoryTransactionUpdateInputSchema:()=>m9,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>pxt,InventoryTransactionUpdateManyArgsSchema:()=>rxt,InventoryTransactionUpdateManyMutationInputSchema:()=>WT,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>BR,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>oU,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>Cx,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>_i,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>WM,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>wS,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>NR,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>eU,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>gx,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>AJ,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>m8,InventoryTransactionUpdateWithoutItemInputSchema:()=>R7,InventoryTransactionUpsertArgsSchema:()=>oxt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>wR,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>tU,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>Ix,InventoryTransactionWhereInputSchema:()=>gn,InventoryTransactionWhereUniqueInputSchema:()=>V,InventoryTypeSchema:()=>vt,InventoryUncheckedCreateInputSchema:()=>b$,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>Xl,InventoryUncheckedCreateWithoutItemsInputSchema:()=>Pf,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>ES,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>qf,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>vf,InventoryUncheckedUpdateInputSchema:()=>g$,InventoryUncheckedUpdateManyInputSchema:()=>A$,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Ur,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>TE,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>eO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>fE,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>xE,InventoryUpdateArgsSchema:()=>PRt,InventoryUpdateInputSchema:()=>I$,InventoryUpdateManyAndReturnArgsSchema:()=>URt,InventoryUpdateManyArgsSchema:()=>WRt,InventoryUpdateManyMutationInputSchema:()=>C$,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>vS,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>IF,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>yF,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>dr,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>ict,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>B5,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>bct,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>yct,InventoryUpdateWithoutItemsInputSchema:()=>SE,InventoryUpdateWithoutRestaurantInputSchema:()=>tO,InventoryUpdateWithoutStockCountsInputSchema:()=>OE,InventoryUpdateWithoutTransactionsInputSchema:()=>kE,InventoryUpsertArgsSchema:()=>CRt,InventoryUpsertWithoutItemsInputSchema:()=>nct,InventoryUpsertWithoutRestaurantInputSchema:()=>N5,InventoryUpsertWithoutStockCountsInputSchema:()=>hct,InventoryUpsertWithoutTransactionsInputSchema:()=>uct,InventoryWhereInputSchema:()=>wt,InventoryWhereUniqueInputSchema:()=>Ha,InventoryWithdrawalAggregateArgsSchema:()=>Jbt,InventoryWithdrawalArgsSchema:()=>kzt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>Iot,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>bot,InventoryWithdrawalCreateArgsSchema:()=>gUt,InventoryWithdrawalCreateInputSchema:()=>NG,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>SUt,InventoryWithdrawalCreateManyArgsSchema:()=>AUt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>bO,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>TH,InventoryWithdrawalCreateManyInputSchema:()=>AP,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>jf,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>tQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>FO,InventoryWithdrawalCreateManyRecipeInputSchema:()=>BH,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>Xn,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>kS,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>go,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>zb,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>$b,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Mb,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Su,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>Fy,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>oy,InventoryWithdrawalDeleteArgsSchema:()=>TUt,InventoryWithdrawalDeleteManyArgsSchema:()=>RUt,InventoryWithdrawalFindFirstArgsSchema:()=>Gbt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>$bt,InventoryWithdrawalFindManyArgsSchema:()=>aT,InventoryWithdrawalFindUniqueArgsSchema:()=>Xbt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>tIt,InventoryWithdrawalGroupByArgsSchema:()=>Kbt,InventoryWithdrawalIncludeSchema:()=>Ud,InventoryWithdrawalListRelationFilterSchema:()=>AS,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>got,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Cot,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>sB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>nV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>uh,InventoryWithdrawalScalarFieldEnumSchema:()=>jg,InventoryWithdrawalScalarWhereInputSchema:()=>Bn,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>aA,InventoryWithdrawalSchema:()=>Mdt,InventoryWithdrawalSelectSchema:()=>Rd,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Aot,InventoryWithdrawalUncheckedCreateInputSchema:()=>BG,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>bi,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>MS,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>Tu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>Dy,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>ay,InventoryWithdrawalUncheckedUpdateInputSchema:()=>FG,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>DG,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Gut,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>el,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Myt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>FS,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>syt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>va,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>sJ,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>j7,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>HJ,InventoryWithdrawalUpdateArgsSchema:()=>PUt,InventoryWithdrawalUpdateInputSchema:()=>qG,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>UUt,InventoryWithdrawalUpdateManyArgsSchema:()=>WUt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>ST,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>TR,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>Tx,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ck,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Ni,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>NS,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>ya,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>SR,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>Sx,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>gk,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>yJ,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>x7,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>VJ,InventoryWithdrawalUpsertArgsSchema:()=>CUt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>AR,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>Ax,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ik,InventoryWithdrawalWhereInputSchema:()=>zn,InventoryWithdrawalWhereUniqueInputSchema:()=>E,LeftoverItemAggregateArgsSchema:()=>cbt,LeftoverItemArgsSchema:()=>Szt,LeftoverItemAvgOrderByAggregateInputSchema:()=>Oet,LeftoverItemCountOrderByAggregateInputSchema:()=>vet,LeftoverItemCreateArgsSchema:()=>uWt,LeftoverItemCreateInputSchema:()=>oG,LeftoverItemCreateManyAndReturnArgsSchema:()=>dWt,LeftoverItemCreateManyArgsSchema:()=>sWt,LeftoverItemCreateManyInputSchema:()=>zP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>Ow,LeftoverItemCreateManyMenuItemInputSchema:()=>dQ,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>yO,LeftoverItemCreateManyRecordedByInputSchema:()=>bH,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>Yv,LeftoverItemCreateManyRestaurantInputSchema:()=>lH,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Vz,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>Qn,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>Vl,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>sI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>pb,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>Jh,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Is,LeftoverItemCreateWithoutRecordedByInputSchema:()=>uu,LeftoverItemCreateWithoutRestaurantInputSchema:()=>_c,LeftoverItemDeleteArgsSchema:()=>zWt,LeftoverItemDeleteManyArgsSchema:()=>IWt,LeftoverItemFindFirstArgsSchema:()=>rbt,LeftoverItemFindFirstOrThrowArgsSchema:()=>pbt,LeftoverItemFindManyArgsSchema:()=>tT,LeftoverItemFindUniqueArgsSchema:()=>ybt,LeftoverItemFindUniqueOrThrowArgsSchema:()=>sbt,LeftoverItemGroupByArgsSchema:()=>ubt,LeftoverItemIncludeSchema:()=>sd,LeftoverItemListRelationFilterSchema:()=>bS,LeftoverItemMaxOrderByAggregateInputSchema:()=>fet,LeftoverItemMinOrderByAggregateInputSchema:()=>wet,LeftoverItemOrderByRelationAggregateInputSchema:()=>rB,LeftoverItemOrderByWithAggregationInputSchema:()=>JL,LeftoverItemOrderByWithRelationInputSchema:()=>nh,LeftoverItemScalarFieldEnumSchema:()=>Tg,LeftoverItemScalarWhereInputSchema:()=>On,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>$C,LeftoverItemSchema:()=>Pdt,LeftoverItemSelectSchema:()=>dd,LeftoverItemSumOrderByAggregateInputSchema:()=>Net,LeftoverItemUncheckedCreateInputSchema:()=>aG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Xz,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>yi,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>gs,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>yu,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>Ec,LeftoverItemUncheckedUpdateInputSchema:()=>iG,LeftoverItemUncheckedUpdateManyInputSchema:()=>lG,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Qyt,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>bm,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Eut,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Gi,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Zut,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>pK,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>tJ,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>Z8,LeftoverItemUpdateArgsSchema:()=>mWt,LeftoverItemUpdateInputSchema:()=>nG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>bWt,LeftoverItemUpdateManyArgsSchema:()=>hWt,LeftoverItemUpdateManyMutationInputSchema:()=>gT,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>bj,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>iR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>UU,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>cm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>Mi,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Ir,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>hj,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>nR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>WU,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>rK,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>X8,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>M8,LeftoverItemUpsertArgsSchema:()=>yWt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>mj,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>aR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>PU,LeftoverItemWhereInputSchema:()=>pn,LeftoverItemWhereUniqueInputSchema:()=>F,MaintenanceLogAggregateArgsSchema:()=>cht,MaintenanceLogArgsSchema:()=>bzt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Ott,MaintenanceLogCountOrderByAggregateInputSchema:()=>vtt,MaintenanceLogCreateArgsSchema:()=>NTt,MaintenanceLogCreateInputSchema:()=>y0,MaintenanceLogCreateManyAndReturnArgsSchema:()=>FTt,MaintenanceLogCreateManyArgsSchema:()=>qTt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>pZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>DV,MaintenanceLogCreateManyInputSchema:()=>iP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>CB,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>xh,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>Kp,MaintenanceLogDeleteArgsSchema:()=>DTt,MaintenanceLogDeleteManyArgsSchema:()=>VTt,MaintenanceLogFindFirstArgsSchema:()=>rht,MaintenanceLogFindFirstOrThrowArgsSchema:()=>pht,MaintenanceLogFindManyArgsSchema:()=>CK,MaintenanceLogFindUniqueArgsSchema:()=>yht,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>sht,MaintenanceLogGroupByArgsSchema:()=>uht,MaintenanceLogIncludeSchema:()=>Ys,MaintenanceLogListRelationFilterSchema:()=>Q1,MaintenanceLogMaxOrderByAggregateInputSchema:()=>ftt,MaintenanceLogMinOrderByAggregateInputSchema:()=>wtt,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Att,MaintenanceLogOrderByWithAggregationInputSchema:()=>_L,MaintenanceLogOrderByWithRelationInputSchema:()=>Xm,MaintenanceLogScalarFieldEnumSchema:()=>zg,MaintenanceLogScalarWhereInputSchema:()=>dp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>DC,MaintenanceLogSchema:()=>mdt,MaintenanceLogSelectSchema:()=>Gs,MaintenanceLogSumOrderByAggregateInputSchema:()=>Ntt,MaintenanceLogUncheckedCreateInputSchema:()=>s0,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>SB,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>Xp,MaintenanceLogUncheckedUpdateInputSchema:()=>z0,MaintenanceLogUncheckedUpdateManyInputSchema:()=>m0,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>uut,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>RB,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>_3,MaintenanceLogUpdateArgsSchema:()=>_Tt,MaintenanceLogUpdateInputSchema:()=>d0,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>LTt,MaintenanceLogUpdateManyArgsSchema:()=>ETt,MaintenanceLogUpdateManyMutationInputSchema:()=>RN,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>zW,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>WB,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>dW,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>D3,MaintenanceLogUpsertArgsSchema:()=>BTt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>sW,MaintenanceLogWhereInputSchema:()=>on,MaintenanceLogWhereUniqueInputSchema:()=>be,MaintenanceTypeSchema:()=>ne,MenuAggregateArgsSchema:()=>oAt,MenuArgsSchema:()=>jj,MenuAvgOrderByAggregateInputSchema:()=>Cit,MenuCategoryAggregateArgsSchema:()=>qmt,MenuCategoryArgsSchema:()=>bQ,MenuCategoryAvgOrderByAggregateInputSchema:()=>stt,MenuCategoryCountOrderByAggregateInputSchema:()=>ytt,MenuCategoryCountOutputTypeArgsSchema:()=>IQ,MenuCategoryCountOutputTypeSelectSchema:()=>KK,MenuCategoryCreateArgsSchema:()=>eTt,MenuCategoryCreateInputSchema:()=>VY,MenuCategoryCreateManyAndReturnArgsSchema:()=>nTt,MenuCategoryCreateManyArgsSchema:()=>aTt,MenuCategoryCreateManyInputSchema:()=>eP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>Aw,MenuCategoryCreateManyMenuInputSchema:()=>cQ,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>$F,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>qz,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>rI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>R3,MenuCategoryCreateWithoutMenuInputSchema:()=>ps,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>kw,MenuCategoryDeleteArgsSchema:()=>iTt,MenuCategoryDeleteManyArgsSchema:()=>cTt,MenuCategoryFindFirstArgsSchema:()=>Nmt,MenuCategoryFindFirstOrThrowArgsSchema:()=>Bmt,MenuCategoryFindManyArgsSchema:()=>IK,MenuCategoryFindUniqueArgsSchema:()=>Dmt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>_mt,MenuCategoryGroupByArgsSchema:()=>Fmt,MenuCategoryIncludeSchema:()=>Fs,MenuCategoryListRelationFilterSchema:()=>Y2,MenuCategoryMaxOrderByAggregateInputSchema:()=>dtt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>yN,MenuCategoryMinOrderByAggregateInputSchema:()=>ztt,MenuCategoryNullableScalarRelationFilterSchema:()=>G2,MenuCategoryOrderByRelationAggregateInputSchema:()=>Iit,MenuCategoryOrderByWithAggregationInputSchema:()=>BL,MenuCategoryOrderByWithRelationInputSchema:()=>Pm,MenuCategoryScalarFieldEnumSchema:()=>ug,MenuCategoryScalarWhereInputSchema:()=>wp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>NC,MenuCategorySchema:()=>ydt,MenuCategorySelectSchema:()=>Ds,MenuCategorySumOrderByAggregateInputSchema:()=>mtt,MenuCategoryUncheckedCreateInputSchema:()=>HY,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>KF,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>cs,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>xw,MenuCategoryUncheckedUpdateInputSchema:()=>YY,MenuCategoryUncheckedUpdateManyInputSchema:()=>GY,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>_yt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>aD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>K7,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>bL,MenuCategoryUpdateArgsSchema:()=>lTt,MenuCategoryUpdateInputSchema:()=>QY,MenuCategoryUpdateManyAndReturnArgsSchema:()=>pTt,MenuCategoryUpdateManyArgsSchema:()=>rTt,MenuCategoryUpdateManyMutationInputSchema:()=>WN,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>oj,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>eD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>am,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>Xct,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>ej,MenuCategoryUpdateWithoutMenuInputSchema:()=>J7,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>hL,MenuCategoryUpsertArgsSchema:()=>oTt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>tj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>Kct,MenuCategoryWhereInputSchema:()=>Ze,MenuCategoryWhereUniqueInputSchema:()=>$t,MenuCountOrderByAggregateInputSchema:()=>git,MenuCountOutputTypeArgsSchema:()=>tY,MenuCountOutputTypeSelectSchema:()=>SX,MenuCreateArgsSchema:()=>Hjt,MenuCreateInputSchema:()=>m1,MenuCreateManyAndReturnArgsSchema:()=>Gjt,MenuCreateManyArgsSchema:()=>Yjt,MenuCreateManyInputSchema:()=>YP,MenuCreateManyRestaurantInputEnvelopeSchema:()=>Hv,MenuCreateManyRestaurantInputSchema:()=>nH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>El,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>o4,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>Bz,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>G6,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>U3,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>Gh,MenuCreateWithoutMenuCategoryInputSchema:()=>YM,MenuCreateWithoutMenuItemsInputSchema:()=>Uw,MenuCreateWithoutRestaurantInputSchema:()=>Bc,MenuDeleteArgsSchema:()=>$jt,MenuDeleteManyArgsSchema:()=>tMt,MenuFindFirstArgsSchema:()=>tAt,MenuFindFirstOrThrowArgsSchema:()=>eAt,MenuFindManyArgsSchema:()=>fK,MenuFindUniqueArgsSchema:()=>nAt,MenuFindUniqueOrThrowArgsSchema:()=>iAt,MenuGroupByArgsSchema:()=>aAt,MenuIncludeSchema:()=>Pz,MenuItemAggregateArgsSchema:()=>zAt,MenuItemArgsSchema:()=>$r,MenuItemAvgOrderByAggregateInputSchema:()=>Mit,MenuItemCountOrderByAggregateInputSchema:()=>jit,MenuItemCountOutputTypeArgsSchema:()=>eY,MenuItemCountOutputTypeSelectSchema:()=>TX,MenuItemCreateArgsSchema:()=>uMt,MenuItemCreateInputSchema:()=>W1,MenuItemCreateManyAndReturnArgsSchema:()=>dMt,MenuItemCreateManyArgsSchema:()=>sMt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>$M,MenuItemCreateManyCategoryInputSchema:()=>NV,MenuItemCreateManyInputSchema:()=>$P,MenuItemCreateManyMenuInputEnvelopeSchema:()=>Cw,MenuItemCreateManyMenuInputSchema:()=>pQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>a4,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>nq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>GF,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>yo,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>XB,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>bq,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>p6,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Olt,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>Ult,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>X2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>Wh,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Oh,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>d5,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>h5,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>lI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>P3,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>j3,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Pb,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>O5,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>Y6,MenuItemCreateWithoutCategoryInputSchema:()=>Lp,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>pc,MenuItemCreateWithoutFeedbackInputSchema:()=>qZ,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>HZ,MenuItemCreateWithoutMenuInputSchema:()=>ls,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>Sw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>Bw,MenuItemCreateWithoutRecipesInputSchema:()=>_u,MenuItemCreateWithoutRecommendationsInputSchema:()=>jv,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>HM,MenuItemCreateallergensInputSchema:()=>io,MenuItemCreaterecipeIdsInputSchema:()=>oo,MenuItemCreaterecipeServingsAmountInputSchema:()=>ao,MenuItemCreaterecipeServingsCostInputSchema:()=>no,MenuItemDeleteArgsSchema:()=>zMt,MenuItemDeleteManyArgsSchema:()=>IMt,MenuItemFindFirstArgsSchema:()=>sAt,MenuItemFindFirstOrThrowArgsSchema:()=>dAt,MenuItemFindManyArgsSchema:()=>JI,MenuItemFindUniqueArgsSchema:()=>hAt,MenuItemFindUniqueOrThrowArgsSchema:()=>bAt,MenuItemGroupByArgsSchema:()=>mAt,MenuItemIncludeSchema:()=>kz,MenuItemListRelationFilterSchema:()=>II,MenuItemMaxOrderByAggregateInputSchema:()=>Zit,MenuItemMinOrderByAggregateInputSchema:()=>vit,MenuItemNullableScalarRelationFilterSchema:()=>tM,MenuItemOrderByRelationAggregateInputSchema:()=>Qj,MenuItemOrderByWithAggregationInputSchema:()=>vV,MenuItemOrderByWithRelationInputSchema:()=>Ml,MenuItemRecipeAggregateArgsSchema:()=>pAt,MenuItemRecipeArgsSchema:()=>Bzt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Wit,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Pit,MenuItemRecipeCreateArgsSchema:()=>eMt,MenuItemRecipeCreateInputSchema:()=>C1,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>nMt,MenuItemRecipeCreateManyArgsSchema:()=>aMt,MenuItemRecipeCreateManyInputSchema:()=>GP,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>jw,MenuItemRecipeCreateManyMenuItemInputSchema:()=>uQ,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>BO,MenuItemRecipeCreateManyRecipeInputSchema:()=>wH,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Dz,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>bo,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>cI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>xb,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>ss,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>Ku,MenuItemRecipeDeleteArgsSchema:()=>iMt,MenuItemRecipeDeleteManyArgsSchema:()=>cMt,MenuItemRecipeFindFirstArgsSchema:()=>lAt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>rAt,MenuItemRecipeFindManyArgsSchema:()=>nN,MenuItemRecipeFindUniqueArgsSchema:()=>uAt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>yAt,MenuItemRecipeGroupByArgsSchema:()=>cAt,MenuItemRecipeIncludeSchema:()=>Uz,MenuItemRecipeListRelationFilterSchema:()=>uM,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>Uit,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>IN,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Rit,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>w2,MenuItemRecipeOrderByWithAggregationInputSchema:()=>ZV,MenuItemRecipeOrderByWithRelationInputSchema:()=>Ah,MenuItemRecipeScalarFieldEnumSchema:()=>nC,MenuItemRecipeScalarWhereInputSchema:()=>Sl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>MA,MenuItemRecipeSchema:()=>izt,MenuItemRecipeSelectSchema:()=>Rz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>kit,MenuItemRecipeUncheckedCreateInputSchema:()=>A1,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Gz,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>ds,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>Xu,MenuItemRecipeUncheckedUpdateInputSchema:()=>T1,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>P1,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Lyt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>dm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>uyt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ma,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>oK,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>_J,MenuItemRecipeUpdateArgsSchema:()=>lMt,MenuItemRecipeUpdateInputSchema:()=>S1,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>pMt,MenuItemRecipeUpdateManyArgsSchema:()=>rMt,MenuItemRecipeUpdateManyMutationInputSchema:()=>Vj,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>pj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>zk,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>im,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>ca,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>rj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>dk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>eK,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>DJ,MenuItemRecipeUpsertArgsSchema:()=>oMt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>lj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>sk,MenuItemRecipeWhereInputSchema:()=>Pn,MenuItemRecipeWhereUniqueInputSchema:()=>It,MenuItemScalarFieldEnumSchema:()=>iC,MenuItemScalarRelationFilterSchema:()=>bI,MenuItemScalarWhereInputSchema:()=>eo,MenuItemScalarWhereWithAggregatesInputSchema:()=>ZA,MenuItemSchema:()=>lzt,MenuItemSelectSchema:()=>xz,MenuItemSumOrderByAggregateInputSchema:()=>Oit,MenuItemUncheckedCreateInputSchema:()=>U1,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>n4,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>rq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>JF,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Oo,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Vp,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>cc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>FZ,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>QZ,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>rs,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Tw,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>qw,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Eu,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>Mv,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>QM,MenuItemUncheckedUpdateInputSchema:()=>k1,MenuItemUncheckedUpdateManyInputSchema:()=>x1,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>lut,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>r4,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>mut,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>dq,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>Dyt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>oD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>iyt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Ua,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>O3,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>K3,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>i_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>y_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>$7,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>yL,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>gL,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>ZJ,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>Q_,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>AD,MenuItemUpdateArgsSchema:()=>mMt,MenuItemUpdateInputSchema:()=>R1,MenuItemUpdateManyAndReturnArgsSchema:()=>bMt,MenuItemUpdateManyArgsSchema:()=>hMt,MenuItemUpdateManyMutationInputSchema:()=>cS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>oW,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>xW,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>Xx,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>XR,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>l4,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>uq,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>tD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>na,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>Cq,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>u6,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Rlt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>e4,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>oq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>flt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>Drt,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>Qrt,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>Qct,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>eut,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>xpt,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>art,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>eW,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>kW,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Kx,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>KR,MenuItemUpdateWithoutCategoryInputSchema:()=>v3,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>J3,MenuItemUpdateWithoutFeedbackInputSchema:()=>n_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>u_,MenuItemUpdateWithoutMenuInputSchema:()=>G7,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>uL,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>IL,MenuItemUpdateWithoutRecipesInputSchema:()=>MJ,MenuItemUpdateWithoutRecommendationsInputSchema:()=>H_,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>CD,MenuItemUpdateallergensInputSchema:()=>Ee,MenuItemUpdaterecipeIdsInputSchema:()=>Fe,MenuItemUpdaterecipeServingsAmountInputSchema:()=>De,MenuItemUpdaterecipeServingsCostInputSchema:()=>_e,MenuItemUpsertArgsSchema:()=>yMt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>tW,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>RW,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Jx,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>JR,MenuItemUpsertWithoutFeedbackInputSchema:()=>Frt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>Hrt,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>Hct,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>tut,MenuItemUpsertWithoutRecommendationsInputSchema:()=>kpt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>ort,MenuItemWhereInputSchema:()=>gt,MenuItemWhereUniqueInputSchema:()=>k,MenuListRelationFilterSchema:()=>s2,MenuMaxOrderByAggregateInputSchema:()=>Ait,MenuMinOrderByAggregateInputSchema:()=>Sit,MenuOrderByRelationAggregateInputSchema:()=>eat,MenuOrderByWithAggregationInputSchema:()=>MV,MenuOrderByWithRelationInputSchema:()=>Ep,MenuScalarFieldEnumSchema:()=>aC,MenuScalarRelationFilterSchema:()=>Hj,MenuScalarWhereInputSchema:()=>bp,MenuScalarWhereWithAggregatesInputSchema:()=>jA,MenuSchema:()=>nzt,MenuSelectSchema:()=>Wz,MenuSumOrderByAggregateInputSchema:()=>Tit,MenuUncheckedCreateInputSchema:()=>h1,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>or,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>GM,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>Rw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>qc,MenuUncheckedUpdateInputSchema:()=>I1,MenuUncheckedUpdateManyInputSchema:()=>g1,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>jut,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>TD,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>mL,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>k8,MenuUpdateArgsSchema:()=>Jjt,MenuUpdateInputSchema:()=>b1,MenuUpdateManyAndReturnArgsSchema:()=>Xjt,MenuUpdateManyArgsSchema:()=>Kjt,MenuUpdateManyMutationInputSchema:()=>_N,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>CU,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>hr,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>i4,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>om,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>irt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>Jct,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>gU,MenuUpdateWithoutMenuCategoryInputSchema:()=>SD,MenuUpdateWithoutMenuItemsInputSchema:()=>zL,MenuUpdateWithoutRestaurantInputSchema:()=>R8,MenuUpsertArgsSchema:()=>Qjt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>IU,MenuUpsertWithoutMenuCategoryInputSchema:()=>nrt,MenuUpsertWithoutMenuItemsInputSchema:()=>$ct,MenuWhereInputSchema:()=>Me,MenuWhereUniqueInputSchema:()=>Qt,NestedBoolFilterSchema:()=>DA,NestedBoolWithAggregatesFilterSchema:()=>C6,NestedDateTimeFilterSchema:()=>qA,NestedDateTimeNullableFilterSchema:()=>_A,NestedDateTimeNullableWithAggregatesFilterSchema:()=>A6,NestedDateTimeWithAggregatesFilterSchema:()=>b6,NestedEnumChecklistFrequencyFilterSchema:()=>VA,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>P6,NestedEnumChecklistItemTypeFilterSchema:()=>HA,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>W6,NestedEnumChecklistStatusFilterSchema:()=>QA,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>U6,NestedEnumConstraintTypeFilterSchema:()=>KA,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>M6,NestedEnumCountStatusFilterSchema:()=>aS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>w6,NestedEnumDayOfWeekFilterSchema:()=>JA,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>j6,NestedEnumEquipmentStatusFilterSchema:()=>EA,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>S6,NestedEnumFeedbackSourceFilterSchema:()=>YA,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>R6,NestedEnumFeedbackStatusFilterSchema:()=>GA,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>k6,NestedEnumInventoryTypeFilterSchema:()=>XA,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>Z6,NestedEnumMaintenanceTypeFilterSchema:()=>LA,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>T6,NestedEnumOrderStatusFilterSchema:()=>nS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>N6,NestedEnumPhotoTypeFilterSchema:()=>FA,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>I6,NestedEnumPrepStatusFilterSchema:()=>lS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>q6,NestedEnumShiftStatusFilterSchema:()=>iS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>B6,NestedEnumSkillLevelFilterSchema:()=>eS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>O6,NestedEnumTaskTypeFilterSchema:()=>$A,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>x6,NestedEnumTransactionTypeFilterSchema:()=>oS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>f6,NestedEnumUserRoleFilterSchema:()=>tS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>v6,NestedFloatFilterSchema:()=>Vr,NestedFloatNullableFilterSchema:()=>Hr,NestedFloatNullableWithAggregatesFilterSchema:()=>m6,NestedFloatWithAggregatesFilterSchema:()=>d6,NestedIntFilterSchema:()=>yt,NestedIntNullableFilterSchema:()=>cl,NestedIntNullableWithAggregatesFilterSchema:()=>g6,NestedIntWithAggregatesFilterSchema:()=>s6,NestedStringFilterSchema:()=>NA,NestedStringNullableFilterSchema:()=>BA,NestedStringNullableWithAggregatesFilterSchema:()=>h6,NestedStringWithAggregatesFilterSchema:()=>z6,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableFloatFieldUpdateOperationsInputSchema:()=>b,NullableIntFieldUpdateOperationsInputSchema:()=>m,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>JK,NutritionalInfoAggregateArgsSchema:()=>AAt,NutritionalInfoArgsSchema:()=>oY,NutritionalInfoAvgOrderByAggregateInputSchema:()=>wit,NutritionalInfoCountOrderByAggregateInputSchema:()=>fit,NutritionalInfoCreateArgsSchema:()=>gMt,NutritionalInfoCreateInputSchema:()=>j1,NutritionalInfoCreateManyAndReturnArgsSchema:()=>SMt,NutritionalInfoCreateManyArgsSchema:()=>AMt,NutritionalInfoCreateManyInputSchema:()=>JP,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>_z,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>Mw,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>$S,NutritionalInfoDeleteArgsSchema:()=>TMt,NutritionalInfoDeleteManyArgsSchema:()=>RMt,NutritionalInfoFindFirstArgsSchema:()=>IAt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>gAt,NutritionalInfoFindManyArgsSchema:()=>CAt,NutritionalInfoFindUniqueArgsSchema:()=>TAt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>PAt,NutritionalInfoGroupByArgsSchema:()=>SAt,NutritionalInfoIncludeSchema:()=>jz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>Nit,NutritionalInfoMinOrderByAggregateInputSchema:()=>Bit,NutritionalInfoNullableScalarRelationFilterSchema:()=>$2,NutritionalInfoOrderByWithAggregationInputSchema:()=>OV,NutritionalInfoOrderByWithRelationInputSchema:()=>Nm,NutritionalInfoScalarFieldEnumSchema:()=>lC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>vA,NutritionalInfoSchema:()=>rzt,NutritionalInfoSelectSchema:()=>Mz,NutritionalInfoSumOrderByAggregateInputSchema:()=>qit,NutritionalInfoUncheckedCreateInputSchema:()=>M1,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>$z,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>JS,NutritionalInfoUncheckedUpdateInputSchema:()=>v1,NutritionalInfoUncheckedUpdateManyInputSchema:()=>f1,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>zm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>Nw,NutritionalInfoUpdateArgsSchema:()=>PMt,NutritionalInfoUpdateInputSchema:()=>Z1,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>UMt,NutritionalInfoUpdateManyArgsSchema:()=>WMt,NutritionalInfoUpdateManyMutationInputSchema:()=>O1,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>lm,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>x3,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>ww,NutritionalInfoUpsertArgsSchema:()=>CMt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>k3,NutritionalInfoWhereInputSchema:()=>Be,NutritionalInfoWhereUniqueInputSchema:()=>wl,NutritionalRecommendationAggregateArgsSchema:()=>hIt,NutritionalRecommendationArgsSchema:()=>jzt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>vot,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>Zot,NutritionalRecommendationCreateArgsSchema:()=>HUt,NutritionalRecommendationCreateInputSchema:()=>XG,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>GUt,NutritionalRecommendationCreateManyArgsSchema:()=>YUt,NutritionalRecommendationCreateManyInputSchema:()=>PP,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>Zw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>yQ,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Ez,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>uI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>zs,NutritionalRecommendationDeleteArgsSchema:()=>$Ut,NutritionalRecommendationDeleteManyArgsSchema:()=>tRt,NutritionalRecommendationFindFirstArgsSchema:()=>zIt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>mIt,NutritionalRecommendationFindManyArgsSchema:()=>RK,NutritionalRecommendationFindUniqueArgsSchema:()=>IIt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>gIt,NutritionalRecommendationGroupByArgsSchema:()=>bIt,NutritionalRecommendationIncludeSchema:()=>Zd,NutritionalRecommendationListRelationFilterSchema:()=>J2,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>Oot,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>fot,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>xit,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>rV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>sh,NutritionalRecommendationScalarFieldEnumSchema:()=>vg,NutritionalRecommendationScalarWhereInputSchema:()=>Np,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>lA,NutritionalRecommendationSchema:()=>Odt,NutritionalRecommendationSelectSchema:()=>vd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>wot,NutritionalRecommendationUncheckedCreateInputSchema:()=>t$,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Jz,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>ms,NutritionalRecommendationUncheckedUpdateInputSchema:()=>o$,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>a$,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Vyt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>mm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>nK,NutritionalRecommendationUpdateArgsSchema:()=>JUt,NutritionalRecommendationUpdateInputSchema:()=>e$,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>XUt,NutritionalRecommendationUpdateManyArgsSchema:()=>KUt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>ON,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>yj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>rm,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>uj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>aK,NutritionalRecommendationUpsertArgsSchema:()=>QUt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>cj,NutritionalRecommendationWhereInputSchema:()=>hn,NutritionalRecommendationWhereUniqueInputSchema:()=>Se,OrderAggregateArgsSchema:()=>zCt,OrderArgsSchema:()=>QQ,OrderAvgOrderByAggregateInputSchema:()=>fnt,OrderCountOrderByAggregateInputSchema:()=>Ont,OrderCountOutputTypeArgsSchema:()=>YQ,OrderCountOutputTypeSelectSchema:()=>IX,OrderCreateArgsSchema:()=>Nxt,OrderCreateInputSchema:()=>O9,OrderCreateManyAndReturnArgsSchema:()=>Fxt,OrderCreateManyArgsSchema:()=>qxt,OrderCreateManyInputSchema:()=>DP,OrderCreateManyRestaurantInputEnvelopeSchema:()=>Lv,OrderCreateManyRestaurantInputSchema:()=>oH,OrderCreateManyVendorInputEnvelopeSchema:()=>nw,OrderCreateManyVendorInputSchema:()=>nQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>Dl,OrderCreateNestedManyWithoutVendorInputSchema:()=>jF,OrderCreateNestedOneWithoutItemsInputSchema:()=>L4,OrderCreateOrConnectWithoutItemsInputSchema:()=>h3,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>Qh,OrderCreateOrConnectWithoutVendorInputSchema:()=>tI,OrderCreateWithoutItemsInputSchema:()=>tw,OrderCreateWithoutRestaurantInputSchema:()=>Oc,OrderCreateWithoutVendorInputSchema:()=>Yy,OrderDeleteArgsSchema:()=>Dxt,OrderDeleteManyArgsSchema:()=>Vxt,OrderFindFirstArgsSchema:()=>sCt,OrderFindFirstOrThrowArgsSchema:()=>dCt,OrderFindManyArgsSchema:()=>oN,OrderFindUniqueArgsSchema:()=>hCt,OrderFindUniqueOrThrowArgsSchema:()=>bCt,OrderGroupByArgsSchema:()=>mCt,OrderIncludeSchema:()=>uz,OrderItemAggregateArgsSchema:()=>CCt,OrderItemArgsSchema:()=>fzt,OrderItemAvgOrderByAggregateInputSchema:()=>Dnt,OrderItemCountOrderByAggregateInputSchema:()=>Fnt,OrderItemCreateArgsSchema:()=>Hxt,OrderItemCreateInputSchema:()=>q9,OrderItemCreateManyAndReturnArgsSchema:()=>Gxt,OrderItemCreateManyArgsSchema:()=>Yxt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>lf,OrderItemCreateManyIngredientInputSchema:()=>YH,OrderItemCreateManyInputSchema:()=>_P,OrderItemCreateManyOrderInputEnvelopeSchema:()=>Xf,OrderItemCreateManyOrderInputSchema:()=>aQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>TI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>PF,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>Eb,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>Xb,OrderItemCreateWithoutIngredientInputSchema:()=>Uy,OrderItemCreateWithoutOrderInputSchema:()=>Hy,OrderItemDeleteArgsSchema:()=>$xt,OrderItemDeleteManyArgsSchema:()=>tjt,OrderItemFindFirstArgsSchema:()=>ICt,OrderItemFindFirstOrThrowArgsSchema:()=>gCt,OrderItemFindManyArgsSchema:()=>aN,OrderItemFindUniqueArgsSchema:()=>SCt,OrderItemFindUniqueOrThrowArgsSchema:()=>TCt,OrderItemGroupByArgsSchema:()=>ACt,OrderItemIncludeSchema:()=>sz,OrderItemListRelationFilterSchema:()=>sM,OrderItemMaxOrderByAggregateInputSchema:()=>_nt,OrderItemMinOrderByAggregateInputSchema:()=>Ent,OrderItemOrderByRelationAggregateInputSchema:()=>F2,OrderItemOrderByWithAggregationInputSchema:()=>WV,OrderItemOrderByWithRelationInputSchema:()=>Ih,OrderItemScalarFieldEnumSchema:()=>Jg,OrderItemScalarWhereInputSchema:()=>Pl,OrderItemScalarWhereWithAggregatesInputSchema:()=>PA,OrderItemSchema:()=>Kdt,OrderItemSelectSchema:()=>dz,OrderItemSumOrderByAggregateInputSchema:()=>Lnt,OrderItemUncheckedCreateInputSchema:()=>F9,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>MI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>WF,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>Ry,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>Qy,OrderItemUncheckedUpdateInputSchema:()=>_9,OrderItemUncheckedUpdateManyInputSchema:()=>E9,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Pyt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>HI,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>Oyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>xF,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>h7,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>w7,OrderItemUpdateArgsSchema:()=>Jxt,OrderItemUpdateInputSchema:()=>D9,OrderItemUpdateManyAndReturnArgsSchema:()=>Xxt,OrderItemUpdateManyArgsSchema:()=>Kxt,OrderItemUpdateManyMutationInputSchema:()=>Lj,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>ox,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>Zx,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>BI,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>kF,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ex,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Mx,OrderItemUpdateWithoutIngredientInputSchema:()=>m7,OrderItemUpdateWithoutOrderInputSchema:()=>f7,OrderItemUpsertArgsSchema:()=>Qxt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>tx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>jx,OrderItemWhereInputSchema:()=>An,OrderItemWhereUniqueInputSchema:()=>bt,OrderListRelationFilterSchema:()=>lM,OrderMaxOrderByAggregateInputSchema:()=>wnt,OrderMinOrderByAggregateInputSchema:()=>Nnt,OrderOrderByRelationAggregateInputSchema:()=>m2,OrderOrderByWithAggregationInputSchema:()=>PV,OrderOrderByWithRelationInputSchema:()=>Om,OrderScalarFieldEnumSchema:()=>$g,OrderScalarRelationFilterSchema:()=>L2,OrderScalarWhereInputSchema:()=>gl,OrderScalarWhereWithAggregatesInputSchema:()=>TA,OrderSchema:()=>Jdt,OrderSelectSchema:()=>yz,OrderStatusSchema:()=>Zt,OrderSumOrderByAggregateInputSchema:()=>Bnt,OrderUncheckedCreateInputSchema:()=>f9,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>tr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>vF,OrderUncheckedCreateWithoutItemsInputSchema:()=>ew,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>fc,OrderUncheckedCreateWithoutVendorInputSchema:()=>Gy,OrderUncheckedUpdateInputSchema:()=>N9,OrderUncheckedUpdateManyInputSchema:()=>B9,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>kut,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>fyt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>qF,OrderUncheckedUpdateWithoutItemsInputSchema:()=>GE,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>P8,OrderUncheckedUpdateWithoutVendorInputSchema:()=>B7,OrderUpdateArgsSchema:()=>_xt,OrderUpdateInputSchema:()=>w9,OrderUpdateManyAndReturnArgsSchema:()=>Lxt,OrderUpdateManyArgsSchema:()=>Ext,OrderUpdateManyMutationInputSchema:()=>Ej,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zU,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>fx,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>zr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>wF,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>H4,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Mct,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>dU,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Ox,OrderUpdateWithoutItemsInputSchema:()=>YE,OrderUpdateWithoutRestaurantInputSchema:()=>T8,OrderUpdateWithoutVendorInputSchema:()=>N7,OrderUpsertArgsSchema:()=>Bxt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>sU,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>vx,OrderUpsertWithoutItemsInputSchema:()=>jct,OrderWhereInputSchema:()=>Ge,OrderWhereUniqueInputSchema:()=>lt,OrganizationAggregateArgsSchema:()=>jIt,OrganizationArgsSchema:()=>kj,OrganizationAvgOrderByAggregateInputSchema:()=>Lot,OrganizationCountOrderByAggregateInputSchema:()=>Eot,OrganizationCountOutputTypeArgsSchema:()=>vQ,OrganizationCountOutputTypeSelectSchema:()=>pX,OrganizationCreateArgsSchema:()=>uRt,OrganizationCreateInputSchema:()=>u$,OrganizationCreateManyAndReturnArgsSchema:()=>dRt,OrganizationCreateManyArgsSchema:()=>sRt,OrganizationCreateManyInputSchema:()=>UP,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Nl,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Fn,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>w5,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>q5,OrganizationCreateWithoutRestaurantsInputSchema:()=>qv,OrganizationCreateWithoutUsersInputSchema:()=>oO,OrganizationDeleteArgsSchema:()=>zRt,OrganizationDeleteManyArgsSchema:()=>IRt,OrganizationFindFirstArgsSchema:()=>RIt,OrganizationFindFirstOrThrowArgsSchema:()=>kIt,OrganizationFindManyArgsSchema:()=>xIt,OrganizationFindUniqueArgsSchema:()=>ZIt,OrganizationFindUniqueOrThrowArgsSchema:()=>vIt,OrganizationGroupByArgsSchema:()=>MIt,OrganizationIncludeSchema:()=>Od,OrganizationMaxOrderByAggregateInputSchema:()=>Vot,OrganizationMinOrderByAggregateInputSchema:()=>Hot,OrganizationNullableScalarRelationFilterSchema:()=>iM,OrganizationOrderByWithAggregationInputSchema:()=>cV,OrganizationOrderByWithRelationInputSchema:()=>Dp,OrganizationScalarFieldEnumSchema:()=>fg,OrganizationScalarWhereWithAggregatesInputSchema:()=>pA,OrganizationSchema:()=>wdt,OrganizationSelectSchema:()=>fd,OrganizationSumOrderByAggregateInputSchema:()=>Qot,OrganizationUncheckedCreateInputSchema:()=>y$,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>Fv,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>aO,OrganizationUncheckedUpdateInputSchema:()=>d$,OrganizationUncheckedUpdateManyInputSchema:()=>m$,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>J_,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>X_,OrganizationUpdateArgsSchema:()=>mRt,OrganizationUpdateInputSchema:()=>s$,OrganizationUpdateManyAndReturnArgsSchema:()=>bRt,OrganizationUpdateManyArgsSchema:()=>hRt,OrganizationUpdateManyMutationInputSchema:()=>z$,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>ur,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Pi,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>vpt,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>fpt,OrganizationUpdateWithoutRestaurantsInputSchema:()=>$_,OrganizationUpdateWithoutUsersInputSchema:()=>K_,OrganizationUpsertArgsSchema:()=>yRt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>Zpt,OrganizationUpsertWithoutUsersInputSchema:()=>Opt,OrganizationWhereInputSchema:()=>Re,OrganizationWhereUniqueInputSchema:()=>Rl,PasswordResetAggregateArgsSchema:()=>$Ct,PasswordResetArgsSchema:()=>Nzt,PasswordResetAvgOrderByAggregateInputSchema:()=>zit,PasswordResetCountOrderByAggregateInputSchema:()=>dit,PasswordResetCreateArgsSchema:()=>Njt,PasswordResetCreateInputSchema:()=>u1,PasswordResetCreateManyAndReturnArgsSchema:()=>Fjt,PasswordResetCreateManyArgsSchema:()=>qjt,PasswordResetCreateManyInputSchema:()=>QP,PasswordResetCreateManyUserInputEnvelopeSchema:()=>uO,PasswordResetCreateManyUserInputSchema:()=>hH,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Hn,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>rb,PasswordResetCreateWithoutUserInputSchema:()=>pu,PasswordResetDeleteArgsSchema:()=>Djt,PasswordResetDeleteManyArgsSchema:()=>Vjt,PasswordResetFindFirstArgsSchema:()=>YCt,PasswordResetFindFirstOrThrowArgsSchema:()=>GCt,PasswordResetFindManyArgsSchema:()=>OK,PasswordResetFindUniqueArgsSchema:()=>KCt,PasswordResetFindUniqueOrThrowArgsSchema:()=>XCt,PasswordResetGroupByArgsSchema:()=>JCt,PasswordResetIncludeSchema:()=>Sz,PasswordResetListRelationFilterSchema:()=>C2,PasswordResetMaxOrderByAggregateInputSchema:()=>mit,PasswordResetMinOrderByAggregateInputSchema:()=>hit,PasswordResetOrderByRelationAggregateInputSchema:()=>yat,PasswordResetOrderByWithAggregationInputSchema:()=>jV,PasswordResetOrderByWithRelationInputSchema:()=>Ch,PasswordResetScalarFieldEnumSchema:()=>oC,PasswordResetScalarWhereInputSchema:()=>Sp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>xA,PasswordResetSchema:()=>azt,PasswordResetSelectSchema:()=>Tz,PasswordResetSumOrderByAggregateInputSchema:()=>bit,PasswordResetUncheckedCreateInputSchema:()=>y1,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>ui,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>cu,PasswordResetUncheckedUpdateInputSchema:()=>d1,PasswordResetUncheckedUpdateManyInputSchema:()=>z1,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>_ut,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Yi,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>K8,PasswordResetUpdateArgsSchema:()=>_jt,PasswordResetUpdateInputSchema:()=>s1,PasswordResetUpdateManyAndReturnArgsSchema:()=>Ljt,PasswordResetUpdateManyArgsSchema:()=>Ejt,PasswordResetUpdateManyMutationInputSchema:()=>DN,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>oR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>ji,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>eR,PasswordResetUpdateWithoutUserInputSchema:()=>J8,PasswordResetUpsertArgsSchema:()=>Bjt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>tR,PasswordResetWhereInputSchema:()=>Tn,PasswordResetWhereUniqueInputSchema:()=>Pe,PhotoTypeSchema:()=>pe,PrepBoardAggregateArgsSchema:()=>BCt,PrepBoardArgsSchema:()=>KQ,PrepBoardAvgOrderByAggregateInputSchema:()=>nit,PrepBoardCountOrderByAggregateInputSchema:()=>ait,PrepBoardCountOutputTypeArgsSchema:()=>XQ,PrepBoardCountOutputTypeSelectSchema:()=>AX,PrepBoardCreateArgsSchema:()=>gjt,PrepBoardCreateInputSchema:()=>t1,PrepBoardCreateManyAndReturnArgsSchema:()=>Sjt,PrepBoardCreateManyArgsSchema:()=>Ajt,PrepBoardCreateManyInputSchema:()=>VP,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>mo,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>_F,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>g3,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>Rb,PrepBoardCreateWithoutPrepItemsInputSchema:()=>uw,PrepBoardCreateWithoutRecipesInputSchema:()=>Yu,PrepBoardDeleteArgsSchema:()=>Tjt,PrepBoardDeleteManyArgsSchema:()=>Rjt,PrepBoardFindFirstArgsSchema:()=>wCt,PrepBoardFindFirstOrThrowArgsSchema:()=>NCt,PrepBoardFindManyArgsSchema:()=>vK,PrepBoardFindUniqueArgsSchema:()=>FCt,PrepBoardFindUniqueOrThrowArgsSchema:()=>DCt,PrepBoardGroupByArgsSchema:()=>qCt,PrepBoardIncludeSchema:()=>Iz,PrepBoardListRelationFilterSchema:()=>U2,PrepBoardMaxOrderByAggregateInputSchema:()=>iit,PrepBoardMinOrderByAggregateInputSchema:()=>lit,PrepBoardOrderByRelationAggregateInputSchema:()=>Zat,PrepBoardOrderByWithAggregationInputSchema:()=>kV,PrepBoardOrderByWithRelationInputSchema:()=>wm,PrepBoardScalarFieldEnumSchema:()=>tC,PrepBoardScalarRelationFilterSchema:()=>Q2,PrepBoardScalarWhereInputSchema:()=>Rp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>RA,PrepBoardSchema:()=>ezt,PrepBoardSelectSchema:()=>gz,PrepBoardSumOrderByAggregateInputSchema:()=>rit,PrepBoardUncheckedCreateInputSchema:()=>e1,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>No,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>yw,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>Gu,PrepBoardUncheckedUpdateInputSchema:()=>a1,PrepBoardUncheckedUpdateManyInputSchema:()=>n1,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>pyt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>xa,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>eL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>BJ,PrepBoardUpdateArgsSchema:()=>Pjt,PrepBoardUpdateInputSchema:()=>o1,PrepBoardUpdateManyAndReturnArgsSchema:()=>Ujt,PrepBoardUpdateManyArgsSchema:()=>Wjt,PrepBoardUpdateManyMutationInputSchema:()=>FN,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>pk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>ra,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>VF,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Nct,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>rk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>tL,PrepBoardUpdateWithoutRecipesInputSchema:()=>NJ,PrepBoardUpsertArgsSchema:()=>Cjt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>lk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>wct,PrepBoardWhereInputSchema:()=>Je,PrepBoardWhereUniqueInputSchema:()=>te,PrepHistoryAggregateArgsSchema:()=>vAt,PrepHistoryArgsSchema:()=>Fzt,PrepHistoryAvgOrderByAggregateInputSchema:()=>Hit,PrepHistoryCountOrderByAggregateInputSchema:()=>Vit,PrepHistoryCreateArgsSchema:()=>NMt,PrepHistoryCreateInputSchema:()=>D1,PrepHistoryCreateManyAndReturnArgsSchema:()=>FMt,PrepHistoryCreateManyArgsSchema:()=>qMt,PrepHistoryCreateManyInputSchema:()=>XP,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>wO,PrepHistoryCreateManyRecipeInputSchema:()=>OH,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>zo,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Ub,PrepHistoryCreateWithoutRecipeInputSchema:()=>Hu,PrepHistoryDeleteArgsSchema:()=>DMt,PrepHistoryDeleteManyArgsSchema:()=>VMt,PrepHistoryFindFirstArgsSchema:()=>MAt,PrepHistoryFindFirstOrThrowArgsSchema:()=>ZAt,PrepHistoryFindManyArgsSchema:()=>NK,PrepHistoryFindUniqueArgsSchema:()=>fAt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>wAt,PrepHistoryGroupByArgsSchema:()=>OAt,PrepHistoryIncludeSchema:()=>Oz,PrepHistoryListRelationFilterSchema:()=>W2,PrepHistoryMaxOrderByAggregateInputSchema:()=>Qit,PrepHistoryMinOrderByAggregateInputSchema:()=>Yit,PrepHistoryOrderByRelationAggregateInputSchema:()=>Mat,PrepHistoryOrderByWithAggregationInputSchema:()=>wV,PrepHistoryOrderByWithRelationInputSchema:()=>Th,PrepHistoryScalarFieldEnumSchema:()=>pC,PrepHistoryScalarWhereInputSchema:()=>Up,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>fA,PrepHistorySchema:()=>czt,PrepHistorySelectSchema:()=>fz,PrepHistorySumOrderByAggregateInputSchema:()=>Git,PrepHistoryUncheckedCreateInputSchema:()=>_1,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Qu,PrepHistoryUncheckedUpdateInputSchema:()=>L1,PrepHistoryUncheckedUpdateManyInputSchema:()=>V1,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>ryt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>ka,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>wJ,PrepHistoryUpdateArgsSchema:()=>_Mt,PrepHistoryUpdateInputSchema:()=>E1,PrepHistoryUpdateManyAndReturnArgsSchema:()=>LMt,PrepHistoryUpdateManyArgsSchema:()=>EMt,PrepHistoryUpdateManyMutationInputSchema:()=>LN,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>ik,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>la,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>nk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>fJ,PrepHistoryUpsertArgsSchema:()=>BMt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ak,PrepHistoryWhereInputSchema:()=>Un,PrepHistoryWhereUniqueInputSchema:()=>Ue,PrepItemAggregateArgsSchema:()=>LCt,PrepItemArgsSchema:()=>wzt,PrepItemAvgOrderByAggregateInputSchema:()=>cit,PrepItemCountOrderByAggregateInputSchema:()=>pit,PrepItemCreateArgsSchema:()=>kjt,PrepItemCreateInputSchema:()=>i1,PrepItemCreateManyAndReturnArgsSchema:()=>Mjt,PrepItemCreateManyArgsSchema:()=>jjt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>rO,PrepItemCreateManyAssignedToInputSchema:()=>dH,PrepItemCreateManyInputSchema:()=>HP,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>cw,PrepItemCreateManyPrepBoardInputSchema:()=>rQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>NO,PrepItemCreateManyRecipeInputSchema:()=>fH,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>En,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>e6,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>nb,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>iI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>kb,PrepItemCreateWithoutAssignedToInputSchema:()=>ou,PrepItemCreateWithoutPrepBoardInputSchema:()=>ns,PrepItemCreateWithoutRecipeInputSchema:()=>$u,PrepItemDeleteArgsSchema:()=>Zjt,PrepItemDeleteManyArgsSchema:()=>wjt,PrepItemFindFirstArgsSchema:()=>_Ct,PrepItemFindFirstOrThrowArgsSchema:()=>ECt,PrepItemFindManyArgsSchema:()=>rT,PrepItemFindUniqueArgsSchema:()=>HCt,PrepItemFindUniqueOrThrowArgsSchema:()=>QCt,PrepItemGroupByArgsSchema:()=>VCt,PrepItemIncludeSchema:()=>Cz,PrepItemListRelationFilterSchema:()=>CS,PrepItemMaxOrderByAggregateInputSchema:()=>uit,PrepItemMinOrderByAggregateInputSchema:()=>yit,PrepItemOrderByRelationAggregateInputSchema:()=>yB,PrepItemOrderByWithAggregationInputSchema:()=>xV,PrepItemOrderByWithRelationInputSchema:()=>gh,PrepItemScalarFieldEnumSchema:()=>eC,PrepItemScalarWhereInputSchema:()=>Nn,PrepItemScalarWhereWithAggregatesInputSchema:()=>kA,PrepItemSchema:()=>ozt,PrepItemSelectSchema:()=>Az,PrepItemSumOrderByAggregateInputSchema:()=>sit,PrepItemUncheckedCreateInputSchema:()=>l1,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>ri,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>a6,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>au,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>is,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>Ju,PrepItemUncheckedUpdateInputSchema:()=>p1,PrepItemUncheckedUpdateManyInputSchema:()=>c1,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>qut,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Vi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>Fyt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>r6,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>cyt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>ja,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>H8,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>Y7,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>FJ,PrepItemUpdateArgsSchema:()=>vjt,PrepItemUpdateInputSchema:()=>r1,PrepItemUpdateManyAndReturnArgsSchema:()=>fjt,PrepItemUpdateManyArgsSchema:()=>Ojt,PrepItemUpdateManyMutationInputSchema:()=>UT,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>QU,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>$x,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>yk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Ri,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>i6,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>pa,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>HU,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>Gx,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>uk,PrepItemUpdateWithoutAssignedToInputSchema:()=>V8,PrepItemUpdateWithoutPrepBoardInputSchema:()=>Q7,PrepItemUpdateWithoutRecipeInputSchema:()=>qJ,PrepItemUpsertArgsSchema:()=>xjt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>VU,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>Yx,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ck,PrepItemWhereInputSchema:()=>Sn,PrepItemWhereUniqueInputSchema:()=>H,PrepStatusSchema:()=>X,ProductionPlanAggregateArgsSchema:()=>Abt,ProductionPlanArgsSchema:()=>xQ,ProductionPlanAvgOrderByAggregateInputSchema:()=>Let,ProductionPlanCountOrderByAggregateInputSchema:()=>Eet,ProductionPlanCountOutputTypeArgsSchema:()=>jQ,ProductionPlanCountOutputTypeSelectSchema:()=>lX,ProductionPlanCreateArgsSchema:()=>kWt,ProductionPlanCreateInputSchema:()=>sG,ProductionPlanCreateManyAndReturnArgsSchema:()=>MWt,ProductionPlanCreateManyArgsSchema:()=>jWt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>dO,ProductionPlanCreateManyCreatedByInputSchema:()=>gH,ProductionPlanCreateManyInputSchema:()=>hP,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>$v,ProductionPlanCreateManyRestaurantInputSchema:()=>pH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>Gn,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>Ql,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>wq,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>ub,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>T5,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>Xh,ProductionPlanCreateWithoutCreatedByInputSchema:()=>zu,ProductionPlanCreateWithoutItemsInputSchema:()=>rv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>Hc,ProductionPlanDeleteArgsSchema:()=>ZWt,ProductionPlanDeleteManyArgsSchema:()=>wWt,ProductionPlanFindFirstArgsSchema:()=>gbt,ProductionPlanFindFirstOrThrowArgsSchema:()=>Cbt,ProductionPlanFindManyArgsSchema:()=>Gw,ProductionPlanFindUniqueArgsSchema:()=>Tbt,ProductionPlanFindUniqueOrThrowArgsSchema:()=>Pbt,ProductionPlanGroupByArgsSchema:()=>Sbt,ProductionPlanIncludeSchema:()=>hd,ProductionPlanItemAggregateArgsSchema:()=>Rbt,ProductionPlanItemArgsSchema:()=>Pzt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>Get,ProductionPlanItemCountOrderByAggregateInputSchema:()=>Yet,ProductionPlanItemCreateArgsSchema:()=>NWt,ProductionPlanItemCreateInputSchema:()=>bG,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>FWt,ProductionPlanItemCreateManyArgsSchema:()=>qWt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>zO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>CH,ProductionPlanItemCreateManyInputSchema:()=>bP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>lv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>QV,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>qO,ProductionPlanItemCreateManyRecipeInputSchema:()=>NH,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>$n,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>jq,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>Io,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>yb,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>Bh,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>jb,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>hu,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>hc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>ty,ProductionPlanItemDeleteArgsSchema:()=>DWt,ProductionPlanItemDeleteManyArgsSchema:()=>VWt,ProductionPlanItemFindFirstArgsSchema:()=>Wbt,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>Ubt,ProductionPlanItemFindManyArgsSchema:()=>oT,ProductionPlanItemFindUniqueArgsSchema:()=>xbt,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>jbt,ProductionPlanItemGroupByArgsSchema:()=>kbt,ProductionPlanItemIncludeSchema:()=>Id,ProductionPlanItemListRelationFilterSchema:()=>dS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>$et,ProductionPlanItemMinOrderByAggregateInputSchema:()=>Jet,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>eB,ProductionPlanItemOrderByWithAggregationInputSchema:()=>tV,ProductionPlanItemOrderByWithRelationInputSchema:()=>lh,ProductionPlanItemScalarFieldEnumSchema:()=>Ug,ProductionPlanItemScalarWhereInputSchema:()=>Mn,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>XC,ProductionPlanItemSchema:()=>Rdt,ProductionPlanItemSelectSchema:()=>gd,ProductionPlanItemSumOrderByAggregateInputSchema:()=>Ket,ProductionPlanItemUncheckedCreateInputSchema:()=>IG,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>zi,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>Mq,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Fo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>bu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>bc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>ey,ProductionPlanItemUncheckedUpdateInputSchema:()=>CG,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>AG,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Hut,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Ki,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>gut,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>fq,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>yyt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Za,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>lJ,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>l8,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>LJ,ProductionPlanItemUpdateArgsSchema:()=>_Wt,ProductionPlanItemUpdateInputSchema:()=>gG,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>LWt,ProductionPlanItemUpdateManyArgsSchema:()=>EWt,ProductionPlanItemUpdateManyMutationInputSchema:()=>AT,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>zR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>DW,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>bk,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Oi,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>Oq,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>ua,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>dR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>FW,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>hk,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>iJ,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>i8,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>EJ,ProductionPlanItemUpsertArgsSchema:()=>BWt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>sR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>qW,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>mk,ProductionPlanItemWhereInputSchema:()=>un,ProductionPlanItemWhereUniqueInputSchema:()=>_,ProductionPlanListRelationFilterSchema:()=>pM,ProductionPlanMaxOrderByAggregateInputSchema:()=>Vet,ProductionPlanMinOrderByAggregateInputSchema:()=>Het,ProductionPlanOrderByRelationAggregateInputSchema:()=>b2,ProductionPlanOrderByWithAggregationInputSchema:()=>XL,ProductionPlanOrderByWithRelationInputSchema:()=>km,ProductionPlanScalarFieldEnumSchema:()=>Wg,ProductionPlanScalarRelationFilterSchema:()=>e2,ProductionPlanScalarWhereInputSchema:()=>Al,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>KC,ProductionPlanSchema:()=>Udt,ProductionPlanSelectSchema:()=>bd,ProductionPlanSumOrderByAggregateInputSchema:()=>Qet,ProductionPlanUncheckedCreateInputSchema:()=>dG,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>di,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>mu,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>pv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,ProductionPlanUncheckedUpdateInputSchema:()=>mG,ProductionPlanUncheckedUpdateManyInputSchema:()=>hG,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Vut,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>Ji,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Out,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>nJ,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>W_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>w8,ProductionPlanUpdateArgsSchema:()=>vWt,ProductionPlanUpdateInputSchema:()=>zG,ProductionPlanUpdateManyAndReturnArgsSchema:()=>fWt,ProductionPlanUpdateManyArgsSchema:()=>OWt,ProductionPlanUpdateManyMutationInputSchema:()=>wj,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>yR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>ZU,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>vi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>qq,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>rpt,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>uR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>MU,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>aJ,ProductionPlanUpdateWithoutItemsInputSchema:()=>P_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>f8,ProductionPlanUpsertArgsSchema:()=>xWt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>cR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>jU,ProductionPlanUpsertWithoutItemsInputSchema:()=>lpt,ProductionPlanWhereInputSchema:()=>He,ProductionPlanWhereUniqueInputSchema:()=>at,ProductionStatusSchema:()=>odt,QualityChecklistAggregateArgsSchema:()=>mht,QualityChecklistArgsSchema:()=>Rj,QualityChecklistAvgOrderByAggregateInputSchema:()=>Dtt,QualityChecklistCountOrderByAggregateInputSchema:()=>Ftt,QualityChecklistCountOutputTypeArgsSchema:()=>AQ,QualityChecklistCountOutputTypeSelectSchema:()=>eX,QualityChecklistCreateArgsSchema:()=>HTt,QualityChecklistCreateInputSchema:()=>h0,QualityChecklistCreateManyAndReturnArgsSchema:()=>GTt,QualityChecklistCreateManyArgsSchema:()=>YTt,QualityChecklistCreateManyInputSchema:()=>lP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>Kv,QualityChecklistCreateManyRestaurantInputSchema:()=>uH,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>LB,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>p4,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>l5,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>i5,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>eb,QualityChecklistCreateWithoutCompletionsInputSchema:()=>PZ,QualityChecklistCreateWithoutItemsInputSchema:()=>AZ,QualityChecklistCreateWithoutRestaurantInputSchema:()=>$c,QualityChecklistDeleteArgsSchema:()=>$Tt,QualityChecklistDeleteManyArgsSchema:()=>tPt,QualityChecklistFindFirstArgsSchema:()=>dht,QualityChecklistFindFirstOrThrowArgsSchema:()=>zht,QualityChecklistFindManyArgsSchema:()=>AK,QualityChecklistFindUniqueArgsSchema:()=>bht,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Iht,QualityChecklistGroupByArgsSchema:()=>hht,QualityChecklistIncludeSchema:()=>$s,QualityChecklistListRelationFilterSchema:()=>z2,QualityChecklistMaxOrderByAggregateInputSchema:()=>_tt,QualityChecklistMinOrderByAggregateInputSchema:()=>Ett,QualityChecklistOrderByRelationAggregateInputSchema:()=>aat,QualityChecklistOrderByWithAggregationInputSchema:()=>EL,QualityChecklistOrderByWithRelationInputSchema:()=>Fp,QualityChecklistScalarFieldEnumSchema:()=>mg,QualityChecklistScalarRelationFilterSchema:()=>Jj,QualityChecklistScalarWhereInputSchema:()=>gp,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>_C,QualityChecklistSchema:()=>hdt,QualityChecklistSelectSchema:()=>Js,QualityChecklistSumOrderByAggregateInputSchema:()=>Ltt,QualityChecklistUncheckedCreateInputSchema:()=>b0,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>WZ,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>SZ,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,QualityChecklistUncheckedUpdateInputSchema:()=>g0,QualityChecklistUncheckedUpdateManyInputSchema:()=>C0,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>wut,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>VD,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>ED,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>F8,QualityChecklistUpdateArgsSchema:()=>JTt,QualityChecklistUpdateInputSchema:()=>I0,QualityChecklistUpdateManyAndReturnArgsSchema:()=>XTt,QualityChecklistUpdateManyArgsSchema:()=>KTt,QualityChecklistUpdateManyMutationInputSchema:()=>kN,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>BU,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>YB,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>y4,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Rrt,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Wrt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>NU,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>LD,QualityChecklistUpdateWithoutItemsInputSchema:()=>_D,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>q8,QualityChecklistUpsertArgsSchema:()=>QTt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>wU,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>Urt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Prt,QualityChecklistWhereInputSchema:()=>xe,QualityChecklistWhereUniqueInputSchema:()=>Vt,QueryModeSchema:()=>Pj,RecipeAggregateArgsSchema:()=>dgt,RecipeArgsSchema:()=>Gt,RecipeAvgOrderByAggregateInputSchema:()=>Fat,RecipeCountOrderByAggregateInputSchema:()=>qat,RecipeCountOutputTypeArgsSchema:()=>qQ,RecipeCountOutputTypeSelectSchema:()=>dX,RecipeCreateArgsSchema:()=>ukt,RecipeCreateInputSchema:()=>_$,RecipeCreateManyAndReturnArgsSchema:()=>dkt,RecipeCreateManyArgsSchema:()=>skt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>UO,RecipeCreateManyCookBookInputSchema:()=>jH,RecipeCreateManyInputSchema:()=>ZP,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>Vv,RecipeCreateManyRestaurantInputSchema:()=>aH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>O4,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>iq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>Fz,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>t6,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>_l,RecipeCreateNestedManyWithoutTagsInputSchema:()=>slt,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>Kit,RecipeCreateNestedOneWithoutEquipmentInputSchema:()=>kB,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>wlt,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>Yq,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>tF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>plt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>c6,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>$it,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>olt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>Blt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>EF,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>Nq,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>jlt,RecipeCreateNestedOneWithoutStorageInputSchema:()=>tlt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>nlt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>RT,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>Eq,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>llt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Ab,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>D6,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>fh,RecipeCreateOrConnectWithoutEquipmentInputSchema:()=>t5,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>M3,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>K5,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>e3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>H6,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>W3,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>pI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>F6,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>E6,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>nI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>Z3,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>C3,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>P5,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>d3,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Yh,RecipeCreateOrConnectWithoutStorageInputSchema:()=>_6,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Nh,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>L6,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>$6,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>j5,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>V6,RecipeCreateWithoutCookBookInputSchema:()=>wu,RecipeCreateWithoutCriticalPointsInputSchema:()=>ZM,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>uc,RecipeCreateWithoutEquipmentInputSchema:()=>cZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>Fw,RecipeCreateWithoutIngredientsInputSchema:()=>sf,RecipeCreateWithoutInstructionsInputSchema:()=>If,RecipeCreateWithoutLaborCostsInputSchema:()=>_M,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>Pw,RecipeCreateWithoutMenuItemsInputSchema:()=>us,RecipeCreateWithoutNutritionalInfoInputSchema:()=>jM,RecipeCreateWithoutPhotosInputSchema:()=>wM,RecipeCreateWithoutPrepBoardsInputSchema:()=>os,RecipeCreateWithoutPrepHistoryInputSchema:()=>_w,RecipeCreateWithoutPrepItemsInputSchema:()=>sw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>cv,RecipeCreateWithoutRecipeStatsInputSchema:()=>Qf,RecipeCreateWithoutRestaurantInputSchema:()=>wc,RecipeCreateWithoutStorageInputSchema:()=>OM,RecipeCreateWithoutTagsInputSchema:()=>zc,RecipeCreateWithoutTemperaturesInputSchema:()=>BM,RecipeCreateWithoutVersionsInputSchema:()=>JM,RecipeCreateWithoutWithdrawalsInputSchema:()=>Av,RecipeCreateWithoutYieldsInputSchema:()=>FM,RecipeCreateimageUrlsInputSchema:()=>Ct,RecipeCriticalPointAggregateArgsSchema:()=>$zt,RecipeCriticalPointArgsSchema:()=>uzt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>jX,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>xX,RecipeCriticalPointCreateArgsSchema:()=>HAt,RecipeCriticalPointCreateInputSchema:()=>cY,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>GAt,RecipeCriticalPointCreateManyArgsSchema:()=>YAt,RecipeCriticalPointCreateManyInputSchema:()=>YT,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>QO,RecipeCriticalPointCreateManyRecipeInputSchema:()=>LH,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>qb,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Iy,RecipeCriticalPointDeleteArgsSchema:()=>$At,RecipeCriticalPointDeleteManyArgsSchema:()=>tSt,RecipeCriticalPointFindFirstArgsSchema:()=>Yzt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>Gzt,RecipeCriticalPointFindManyArgsSchema:()=>dK,RecipeCriticalPointFindUniqueArgsSchema:()=>Kzt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>Xzt,RecipeCriticalPointGroupByArgsSchema:()=>Jzt,RecipeCriticalPointIncludeSchema:()=>Us,RecipeCriticalPointListRelationFilterSchema:()=>Z2,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>MX,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>ZX,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>Nat,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>ML,RecipeCriticalPointOrderByWithRelationInputSchema:()=>Hm,RecipeCriticalPointScalarFieldEnumSchema:()=>ag,RecipeCriticalPointScalarWhereInputSchema:()=>Zp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>jC,RecipeCriticalPointSchema:()=>ndt,RecipeCriticalPointSelectSchema:()=>Rs,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>vX,RecipeCriticalPointUncheckedCreateInputSchema:()=>uY,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>gy,RecipeCriticalPointUncheckedUpdateInputSchema:()=>sY,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>dY,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Cyt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_a,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>p7,RecipeCriticalPointUpdateArgsSchema:()=>JAt,RecipeCriticalPointUpdateInputSchema:()=>yY,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>XAt,RecipeCriticalPointUpdateManyArgsSchema:()=>KAt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>CN,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>Lk,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Ca,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ek,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>r7,RecipeCriticalPointUpsertArgsSchema:()=>QAt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>_k,RecipeCriticalPointWhereInputSchema:()=>Ga,RecipeCriticalPointWhereUniqueInputSchema:()=>se,RecipeDeleteArgsSchema:()=>zkt,RecipeDeleteManyArgsSchema:()=>Ikt,RecipeEquipmentAggregateArgsSchema:()=>aht,RecipeEquipmentArgsSchema:()=>hzt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>xtt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>ktt,RecipeEquipmentCreateArgsSchema:()=>kTt,RecipeEquipmentCreateInputSchema:()=>l0,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>MTt,RecipeEquipmentCreateManyArgsSchema:()=>jTt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>rZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>FV,RecipeEquipmentCreateManyInputSchema:()=>nP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>_O,RecipeEquipmentCreateManyRecipeInputSchema:()=>FH,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>Sf,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>KH,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>gB,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>So,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>oF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>kh,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>Ob,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>Yb,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>$p,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>py,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>wy,RecipeEquipmentDeleteArgsSchema:()=>ZTt,RecipeEquipmentDeleteManyArgsSchema:()=>wTt,RecipeEquipmentFindFirstArgsSchema:()=>eht,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>oht,RecipeEquipmentFindManyArgsSchema:()=>KS,RecipeEquipmentFindUniqueArgsSchema:()=>iht,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>lht,RecipeEquipmentGroupByArgsSchema:()=>nht,RecipeEquipmentIncludeSchema:()=>Hs,RecipeEquipmentListRelationFilterSchema:()=>yS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>jtt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>Mtt,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>YN,RecipeEquipmentOrderByWithAggregationInputSchema:()=>DL,RecipeEquipmentOrderByWithRelationInputSchema:()=>Km,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>dN,RecipeEquipmentScalarFieldEnumSchema:()=>dg,RecipeEquipmentScalarWhereInputSchema:()=>jn,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>FC,RecipeEquipmentSchema:()=>zdt,RecipeEquipmentSelectSchema:()=>Qs,RecipeEquipmentSumOrderByAggregateInputSchema:()=>Ztt,RecipeEquipmentUncheckedCreateInputSchema:()=>r0,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>AB,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>aF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>Jp,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>cy,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>Ny,RecipeEquipmentUncheckedUpdateInputSchema:()=>c0,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>u0,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>cut,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>UB,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>myt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>xyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>rF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wa,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>F3,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>KJ,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>U7,RecipeEquipmentUpdateArgsSchema:()=>vTt,RecipeEquipmentUpdateInputSchema:()=>p0,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>fTt,RecipeEquipmentUpdateManyArgsSchema:()=>OTt,RecipeEquipmentUpdateManyMutationInputSchema:()=>bT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>yW,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>xk,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>bx,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>PB,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>lF,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>za,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>uW,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>kk,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>hx,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>q3,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>JJ,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>W7,RecipeEquipmentUpsertArgsSchema:()=>xTt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>cW,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Rk,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>mx,RecipeEquipmentWhereInputSchema:()=>en,RecipeEquipmentWhereUniqueInputSchema:()=>B,RecipeFindFirstArgsSchema:()=>ygt,RecipeFindFirstOrThrowArgsSchema:()=>sgt,RecipeFindManyArgsSchema:()=>ip,RecipeFindUniqueArgsSchema:()=>mgt,RecipeFindUniqueOrThrowArgsSchema:()=>hgt,RecipeGroupByArgsSchema:()=>zgt,RecipeIncludeSchema:()=>Hd,RecipeIngredientAggregateArgsSchema:()=>Wgt,RecipeIngredientArgsSchema:()=>Zzt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>Kat,RecipeIngredientCountOrderByAggregateInputSchema:()=>Jat,RecipeIngredientCreateArgsSchema:()=>kkt,RecipeIngredientCreateInputSchema:()=>K$,RecipeIngredientCreateManyAndReturnArgsSchema:()=>Mkt,RecipeIngredientCreateManyArgsSchema:()=>jkt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>af,RecipeIngredientCreateManyIngredientInputSchema:()=>HH,RecipeIngredientCreateManyInputSchema:()=>OP,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>vO,RecipeIngredientCreateManyRecipeInputSchema:()=>MH,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>XM,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>BV,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>AI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>co,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>kT,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>Db,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Sb,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>Uh,RecipeIngredientCreateWithoutIngredientInputSchema:()=>Sy,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Bu,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>Hp,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>op,RecipeIngredientDeleteArgsSchema:()=>Zkt,RecipeIngredientDeleteManyArgsSchema:()=>wkt,RecipeIngredientFindFirstArgsSchema:()=>Tgt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>Pgt,RecipeIngredientFindManyArgsSchema:()=>nT,RecipeIngredientFindUniqueArgsSchema:()=>Rgt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>kgt,RecipeIngredientGroupByArgsSchema:()=>Ugt,RecipeIngredientIncludeSchema:()=>$d,RecipeIngredientListRelationFilterSchema:()=>uS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>Xat,RecipeIngredientMinOrderByAggregateInputSchema:()=>tnt,RecipeIngredientOrderByRelationAggregateInputSchema:()=>HN,RecipeIngredientOrderByWithAggregationInputSchema:()=>bV,RecipeIngredientOrderByWithRelationInputSchema:()=>mh,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>zN,RecipeIngredientScalarFieldEnumSchema:()=>Eg,RecipeIngredientScalarWhereInputSchema:()=>xn,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>hA,RecipeIngredientSchema:()=>Ldt,RecipeIngredientSelectSchema:()=>Jd,RecipeIngredientSumOrderByAggregateInputSchema:()=>ent,RecipeIngredientUncheckedCreateInputSchema:()=>X$,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>xI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Zo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>ZT,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Ty,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>qu,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>Qp,RecipeIngredientUncheckedUpdateInputSchema:()=>e9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>o9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>Syt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>LI,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>ayt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Pa,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>rut,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>qT,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>s7,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>kJ,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>w3,RecipeIngredientUpdateArgsSchema:()=>vkt,RecipeIngredientUpdateInputSchema:()=>t9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>fkt,RecipeIngredientUpdateManyArgsSchema:()=>Okt,RecipeIngredientUpdateManyMutationInputSchema:()=>TT,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>$k,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>QR,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>iW,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>wI,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>oa,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>fT,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Gk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>HR,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>nW,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>y7,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>RJ,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>f3,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>Dr,RecipeIngredientUpsertArgsSchema:()=>xkt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Yk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>VR,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>aW,RecipeIngredientWhereInputSchema:()=>In,RecipeIngredientWhereUniqueInputSchema:()=>L,RecipeInstructionAggregateArgsSchema:()=>Mgt,RecipeInstructionArgsSchema:()=>DQ,RecipeInstructionAvgOrderByAggregateInputSchema:()=>ant,RecipeInstructionCountOrderByAggregateInputSchema:()=>ont,RecipeInstructionCountOutputTypeArgsSchema:()=>_Q,RecipeInstructionCountOutputTypeSelectSchema:()=>mX,RecipeInstructionCreateArgsSchema:()=>Nkt,RecipeInstructionCreateInputSchema:()=>a9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>Fkt,RecipeInstructionCreateManyArgsSchema:()=>qkt,RecipeInstructionCreateManyInputSchema:()=>fP,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>OO,RecipeInstructionCreateManyRecipeInputSchema:()=>ZH,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>tZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>qV,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>uo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>xT,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>jB,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>o5,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Tb,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>Rh,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>dZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>Fu,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>Yp,RecipeInstructionDeleteArgsSchema:()=>Dkt,RecipeInstructionDeleteManyArgsSchema:()=>Vkt,RecipeInstructionFindFirstArgsSchema:()=>xgt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>jgt,RecipeInstructionFindManyArgsSchema:()=>Xw,RecipeInstructionFindUniqueArgsSchema:()=>vgt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>Ogt,RecipeInstructionGroupByArgsSchema:()=>Zgt,RecipeInstructionIncludeSchema:()=>Kd,RecipeInstructionListRelationFilterSchema:()=>Yj,RecipeInstructionMaxOrderByAggregateInputSchema:()=>nnt,RecipeInstructionMinOrderByAggregateInputSchema:()=>int,RecipeInstructionNullableScalarRelationFilterSchema:()=>Y1,RecipeInstructionOrderByRelationAggregateInputSchema:()=>H1,RecipeInstructionOrderByWithAggregationInputSchema:()=>IV,RecipeInstructionOrderByWithRelationInputSchema:()=>Mm,RecipeInstructionRecipeIdStepNumberCompoundUniqueInputSchema:()=>mN,RecipeInstructionScalarFieldEnumSchema:()=>Lg,RecipeInstructionScalarWhereInputSchema:()=>sl,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>bA,RecipeInstructionSchema:()=>Vdt,RecipeInstructionSelectSchema:()=>Xd,RecipeInstructionSumOrderByAggregateInputSchema:()=>lnt,RecipeInstructionUncheckedCreateInputSchema:()=>n9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>vT,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>zZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Du,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>Gp,RecipeInstructionUncheckedUpdateInputSchema:()=>l9,RecipeInstructionUncheckedUpdateManyInputSchema:()=>r9,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>nyt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Wa,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>put,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>FT,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>ND,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>jJ,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>B3,RecipeInstructionUpdateArgsSchema:()=>_kt,RecipeInstructionUpdateInputSchema:()=>i9,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>Lkt,RecipeInstructionUpdateManyArgsSchema:()=>Ekt,RecipeInstructionUpdateManyMutationInputSchema:()=>Fj,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>$R,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>pW,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>aa,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>wT,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>vB,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>grt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>GR,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>rW,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>wD,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>xJ,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>N3,RecipeInstructionUpsertArgsSchema:()=>Bkt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>YR,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>lW,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Irt,RecipeInstructionWhereInputSchema:()=>Oe,RecipeInstructionWhereUniqueInputSchema:()=>nt,RecipeLaborCostAggregateArgsSchema:()=>Rmt,RecipeLaborCostArgsSchema:()=>zzt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>ott,RecipeLaborCostCountOrderByAggregateInputSchema:()=>ett,RecipeLaborCostCreateArgsSchema:()=>NSt,RecipeLaborCostCreateInputSchema:()=>fY,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>FSt,RecipeLaborCostCreateManyArgsSchema:()=>qSt,RecipeLaborCostCreateManyInputSchema:()=>XT,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>VO,RecipeLaborCostCreateManyRecipeInputSchema:()=>EH,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>Bb,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>hy,RecipeLaborCostDeleteArgsSchema:()=>DSt,RecipeLaborCostDeleteManyArgsSchema:()=>VSt,RecipeLaborCostFindFirstArgsSchema:()=>Wmt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>Umt,RecipeLaborCostFindManyArgsSchema:()=>bK,RecipeLaborCostFindUniqueArgsSchema:()=>xmt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>jmt,RecipeLaborCostGroupByArgsSchema:()=>kmt,RecipeLaborCostIncludeSchema:()=>ws,RecipeLaborCostListRelationFilterSchema:()=>j2,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>att,RecipeLaborCostMinOrderByAggregateInputSchema:()=>ntt,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>wat,RecipeLaborCostOrderByWithAggregationInputSchema:()=>wL,RecipeLaborCostOrderByWithRelationInputSchema:()=>$m,RecipeLaborCostScalarFieldEnumSchema:()=>pg,RecipeLaborCostScalarWhereInputSchema:()=>Mp,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>fC,RecipeLaborCostSchema:()=>cdt,RecipeLaborCostSelectSchema:()=>Ns,RecipeLaborCostSumOrderByAggregateInputSchema:()=>itt,RecipeLaborCostUncheckedCreateInputSchema:()=>wY,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Yo,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>by,RecipeLaborCostUncheckedUpdateInputSchema:()=>BY,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>qY,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>gyt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fa,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>l7,RecipeLaborCostUpdateArgsSchema:()=>_St,RecipeLaborCostUpdateInputSchema:()=>NY,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>LSt,RecipeLaborCostUpdateManyArgsSchema:()=>ESt,RecipeLaborCostUpdateManyMutationInputSchema:()=>PN,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Dk,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Ia,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Fk,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>i7,RecipeLaborCostUpsertArgsSchema:()=>BSt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>qk,RecipeLaborCostWhereInputSchema:()=>Xa,RecipeLaborCostWhereUniqueInputSchema:()=>he,RecipeListRelationFilterSchema:()=>Xr,RecipeMaxOrderByAggregateInputSchema:()=>Dat,RecipeMinOrderByAggregateInputSchema:()=>_at,RecipeNullableScalarRelationFilterSchema:()=>a2,RecipeNutritionAggregateArgsSchema:()=>Lzt,RecipeNutritionArgsSchema:()=>mQ,RecipeNutritionAvgOrderByAggregateInputSchema:()=>WX,RecipeNutritionCountOrderByAggregateInputSchema:()=>PX,RecipeNutritionCreateArgsSchema:()=>NAt,RecipeNutritionCreateInputSchema:()=>aY,RecipeNutritionCreateManyAndReturnArgsSchema:()=>FAt,RecipeNutritionCreateManyArgsSchema:()=>qAt,RecipeNutritionCreateManyInputSchema:()=>QT,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>Ro,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>HO,RecipeNutritionCreateWithoutRecipeInputSchema:()=>LS,RecipeNutritionDeleteArgsSchema:()=>DAt,RecipeNutritionDeleteManyArgsSchema:()=>VAt,RecipeNutritionFindFirstArgsSchema:()=>Dzt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>_zt,RecipeNutritionFindManyArgsSchema:()=>Ezt,RecipeNutritionFindUniqueArgsSchema:()=>Hzt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>Qzt,RecipeNutritionGroupByArgsSchema:()=>Vzt,RecipeNutritionIncludeSchema:()=>Ps,RecipeNutritionMaxOrderByAggregateInputSchema:()=>UX,RecipeNutritionMinOrderByAggregateInputSchema:()=>RX,RecipeNutritionNullableScalarRelationFilterSchema:()=>M2,RecipeNutritionOrderByWithAggregationInputSchema:()=>jL,RecipeNutritionOrderByWithRelationInputSchema:()=>Sm,RecipeNutritionScalarFieldEnumSchema:()=>og,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>xC,RecipeNutritionSchema:()=>adt,RecipeNutritionSelectSchema:()=>Ws,RecipeNutritionSumOrderByAggregateInputSchema:()=>kX,RecipeNutritionUncheckedCreateInputSchema:()=>nY,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Go,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>VS,RecipeNutritionUncheckedUpdateInputSchema:()=>lY,RecipeNutritionUncheckedUpdateManyInputSchema:()=>pY,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Da,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>KO,RecipeNutritionUpdateArgsSchema:()=>_At,RecipeNutritionUpdateInputSchema:()=>iY,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>LAt,RecipeNutritionUpdateManyArgsSchema:()=>EAt,RecipeNutritionUpdateManyMutationInputSchema:()=>rY,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>ga,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>H5,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>JO,RecipeNutritionUpsertArgsSchema:()=>BAt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>V5,RecipeNutritionWhereInputSchema:()=>fe,RecipeNutritionWhereUniqueInputSchema:()=>vl,RecipeOrderByRelationAggregateInputSchema:()=>sS,RecipeOrderByWithAggregationInputSchema:()=>mV,RecipeOrderByWithRelationInputSchema:()=>Xe,RecipePhotoAggregateArgsSchema:()=>cmt,RecipePhotoArgsSchema:()=>yzt,RecipePhotoAvgOrderByAggregateInputSchema:()=>FX,RecipePhotoCountOrderByAggregateInputSchema:()=>qX,RecipePhotoCreateArgsSchema:()=>uSt,RecipePhotoCreateInputSchema:()=>CY,RecipePhotoCreateManyAndReturnArgsSchema:()=>dSt,RecipePhotoCreateManyArgsSchema:()=>sSt,RecipePhotoCreateManyInputSchema:()=>$T,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>GO,RecipePhotoCreateManyRecipeInputSchema:()=>VH,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>jo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>Fb,RecipePhotoCreateWithoutRecipeInputSchema:()=>Cy,RecipePhotoDeleteArgsSchema:()=>zSt,RecipePhotoDeleteManyArgsSchema:()=>ISt,RecipePhotoFindFirstArgsSchema:()=>rmt,RecipePhotoFindFirstOrThrowArgsSchema:()=>pmt,RecipePhotoFindManyArgsSchema:()=>zK,RecipePhotoFindUniqueArgsSchema:()=>ymt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>smt,RecipePhotoGroupByArgsSchema:()=>umt,RecipePhotoIncludeSchema:()=>js,RecipePhotoListRelationFilterSchema:()=>O2,RecipePhotoMaxOrderByAggregateInputSchema:()=>DX,RecipePhotoMinOrderByAggregateInputSchema:()=>_X,RecipePhotoOrderByRelationAggregateInputSchema:()=>Bat,RecipePhotoOrderByWithAggregationInputSchema:()=>vL,RecipePhotoOrderByWithRelationInputSchema:()=>Qm,RecipePhotoScalarFieldEnumSchema:()=>ig,RecipePhotoScalarWhereInputSchema:()=>vp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>ZC,RecipePhotoSchema:()=>ldt,RecipePhotoSelectSchema:()=>Ms,RecipePhotoSumOrderByAggregateInputSchema:()=>EX,RecipePhotoUncheckedCreateInputSchema:()=>AY,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ko,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Ay,RecipePhotoUncheckedUpdateInputSchema:()=>TY,RecipePhotoUncheckedUpdateManyInputSchema:()=>PY,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ayt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>La,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>u7,RecipePhotoUpdateArgsSchema:()=>mSt,RecipePhotoUpdateInputSchema:()=>SY,RecipePhotoUpdateManyAndReturnArgsSchema:()=>bSt,RecipePhotoUpdateManyArgsSchema:()=>hSt,RecipePhotoUpdateManyMutationInputSchema:()=>AN,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>Qk,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Sa,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,RecipePhotoUpdateWithoutRecipeInputSchema:()=>c7,RecipePhotoUpsertArgsSchema:()=>ySt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Vk,RecipePhotoWhereInputSchema:()=>$a,RecipePhotoWhereUniqueInputSchema:()=>de,RecipeScalarFieldEnumSchema:()=>Dg,RecipeScalarRelationFilterSchema:()=>ue,RecipeScalarWhereInputSchema:()=>ae,RecipeScalarWhereWithAggregatesInputSchema:()=>zA,RecipeSchema:()=>_dt,RecipeSelectSchema:()=>Qd,RecipeStatsAggregateArgsSchema:()=>pCt,RecipeStatsArgsSchema:()=>HQ,RecipeStatsAvgOrderByAggregateInputSchema:()=>jnt,RecipeStatsCountOrderByAggregateInputSchema:()=>xnt,RecipeStatsCreateArgsSchema:()=>kxt,RecipeStatsCreateInputSchema:()=>k9,RecipeStatsCreateManyAndReturnArgsSchema:()=>Mxt,RecipeStatsCreateManyArgsSchema:()=>jxt,RecipeStatsCreateManyInputSchema:()=>FP,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Mo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>$O,RecipeStatsCreateWithoutRecipeInputSchema:()=>YS,RecipeStatsDeleteArgsSchema:()=>Zxt,RecipeStatsDeleteManyArgsSchema:()=>wxt,RecipeStatsFindFirstArgsSchema:()=>iCt,RecipeStatsFindFirstOrThrowArgsSchema:()=>lCt,RecipeStatsFindManyArgsSchema:()=>rCt,RecipeStatsFindUniqueArgsSchema:()=>uCt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>yCt,RecipeStatsGroupByArgsSchema:()=>cCt,RecipeStatsIncludeSchema:()=>pz,RecipeStatsMaxOrderByAggregateInputSchema:()=>Mnt,RecipeStatsMinOrderByAggregateInputSchema:()=>Znt,RecipeStatsNullableScalarRelationFilterSchema:()=>f2,RecipeStatsOrderByWithAggregationInputSchema:()=>TV,RecipeStatsOrderByWithRelationInputSchema:()=>vm,RecipeStatsScalarFieldEnumSchema:()=>Gg,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>SA,RecipeStatsSchema:()=>$dt,RecipeStatsSelectSchema:()=>cz,RecipeStatsSumOrderByAggregateInputSchema:()=>vnt,RecipeStatsUncheckedCreateInputSchema:()=>x9,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Xo,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>GS,RecipeStatsUncheckedUpdateInputSchema:()=>M9,RecipeStatsUncheckedUpdateManyInputSchema:()=>v9,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Va,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>of,RecipeStatsUpdateArgsSchema:()=>vxt,RecipeStatsUpdateInputSchema:()=>j9,RecipeStatsUpdateManyAndReturnArgsSchema:()=>fxt,RecipeStatsUpdateManyArgsSchema:()=>Oxt,RecipeStatsUpdateManyMutationInputSchema:()=>Z9,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Ta,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>$5,RecipeStatsUpdateWithoutRecipeInputSchema:()=>ef,RecipeStatsUpsertArgsSchema:()=>xxt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>G5,RecipeStatsWhereInputSchema:()=>Ne,RecipeStatsWhereUniqueInputSchema:()=>fl,RecipeStorageAggregateArgsSchema:()=>amt,RecipeStorageArgsSchema:()=>hQ,RecipeStorageAvgOrderByAggregateInputSchema:()=>fX,RecipeStorageCountOrderByAggregateInputSchema:()=>OX,RecipeStorageCreateArgsSchema:()=>eSt,RecipeStorageCreateInputSchema:()=>zY,RecipeStorageCreateManyAndReturnArgsSchema:()=>nSt,RecipeStorageCreateManyArgsSchema:()=>aSt,RecipeStorageCreateManyInputSchema:()=>GT,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>xo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>YO,RecipeStorageCreateWithoutRecipeInputSchema:()=>HS,RecipeStorageDeleteArgsSchema:()=>iSt,RecipeStorageDeleteManyArgsSchema:()=>cSt,RecipeStorageFindFirstArgsSchema:()=>tmt,RecipeStorageFindFirstOrThrowArgsSchema:()=>emt,RecipeStorageFindManyArgsSchema:()=>omt,RecipeStorageFindUniqueArgsSchema:()=>imt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>lmt,RecipeStorageGroupByArgsSchema:()=>nmt,RecipeStorageIncludeSchema:()=>ks,RecipeStorageMaxOrderByAggregateInputSchema:()=>wX,RecipeStorageMinOrderByAggregateInputSchema:()=>NX,RecipeStorageNullableScalarRelationFilterSchema:()=>v2,RecipeStorageOrderByWithAggregationInputSchema:()=>ZL,RecipeStorageOrderByWithRelationInputSchema:()=>Tm,RecipeStorageScalarFieldEnumSchema:()=>ng,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>MC,RecipeStorageSchema:()=>idt,RecipeStorageSelectSchema:()=>xs,RecipeStorageSumOrderByAggregateInputSchema:()=>BX,RecipeStorageUncheckedCreateInputSchema:()=>mY,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Jo,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>QS,RecipeStorageUncheckedUpdateInputSchema:()=>bY,RecipeStorageUncheckedUpdateManyInputSchema:()=>gY,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Ea,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>tf,RecipeStorageUpdateArgsSchema:()=>lSt,RecipeStorageUpdateInputSchema:()=>hY,RecipeStorageUpdateManyAndReturnArgsSchema:()=>pSt,RecipeStorageUpdateManyArgsSchema:()=>rSt,RecipeStorageUpdateManyMutationInputSchema:()=>IY,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Aa,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>Y5,RecipeStorageUpdateWithoutRecipeInputSchema:()=>XO,RecipeStorageUpsertArgsSchema:()=>oSt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>Q5,RecipeStorageWhereInputSchema:()=>we,RecipeStorageWhereUniqueInputSchema:()=>Ol,RecipeSumOrderByAggregateInputSchema:()=>Eat,RecipeTagAggregateArgsSchema:()=>abt,RecipeTagArgsSchema:()=>Azt,RecipeTagAvgOrderByAggregateInputSchema:()=>xet,RecipeTagCountOrderByAggregateInputSchema:()=>ket,RecipeTagCountOutputTypeArgsSchema:()=>kQ,RecipeTagCountOutputTypeSelectSchema:()=>iX,RecipeTagCreateArgsSchema:()=>eWt,RecipeTagCreateInputSchema:()=>J0,RecipeTagCreateManyAndReturnArgsSchema:()=>nWt,RecipeTagCreateManyArgsSchema:()=>aWt,RecipeTagCreateManyInputSchema:()=>dP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>Co,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>Zb,RecipeTagCreateWithoutRecipesInputSchema:()=>ny,RecipeTagDeleteArgsSchema:()=>iWt,RecipeTagDeleteManyArgsSchema:()=>cWt,RecipeTagFindFirstArgsSchema:()=>ebt,RecipeTagFindFirstOrThrowArgsSchema:()=>obt,RecipeTagFindManyArgsSchema:()=>TK,RecipeTagFindUniqueArgsSchema:()=>ibt,RecipeTagFindUniqueOrThrowArgsSchema:()=>lbt,RecipeTagGroupByArgsSchema:()=>nbt,RecipeTagIncludeSchema:()=>ud,RecipeTagListRelationFilterSchema:()=>R2,RecipeTagMaxOrderByAggregateInputSchema:()=>jet,RecipeTagMinOrderByAggregateInputSchema:()=>Met,RecipeTagOrderByRelationAggregateInputSchema:()=>vat,RecipeTagOrderByWithAggregationInputSchema:()=>$L,RecipeTagOrderByWithRelationInputSchema:()=>ah,RecipeTagScalarFieldEnumSchema:()=>Sg,RecipeTagScalarWhereInputSchema:()=>kp,RecipeTagScalarWhereWithAggregatesInputSchema:()=>GC,RecipeTagSchema:()=>Tdt,RecipeTagSelectSchema:()=>yd,RecipeTagSumOrderByAggregateInputSchema:()=>Zet,RecipeTagUncheckedCreateInputSchema:()=>K0,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>_o,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>iy,RecipeTagUncheckedUpdateInputSchema:()=>tG,RecipeTagUncheckedUpdateManyInputSchema:()=>eG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>dyt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Oa,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>YJ,RecipeTagUpdateArgsSchema:()=>lWt,RecipeTagUpdateInputSchema:()=>X0,RecipeTagUpdateManyAndReturnArgsSchema:()=>pWt,RecipeTagUpdateManyArgsSchema:()=>rWt,RecipeTagUpdateManyMutationInputSchema:()=>jN,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>Tk,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>sa,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Sk,RecipeTagUpdateWithoutRecipesInputSchema:()=>QJ,RecipeTagUpsertArgsSchema:()=>oWt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Ak,RecipeTagWhereInputSchema:()=>rn,RecipeTagWhereUniqueInputSchema:()=>Ie,RecipeTemperatureAggregateArgsSchema:()=>mmt,RecipeTemperatureArgsSchema:()=>szt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>HX,RecipeTemperatureCountOrderByAggregateInputSchema:()=>VX,RecipeTemperatureCreateArgsSchema:()=>gSt,RecipeTemperatureCreateInputSchema:()=>WY,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>SSt,RecipeTemperatureCreateManyArgsSchema:()=>ASt,RecipeTemperatureCreateManyInputSchema:()=>JT,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>EO,RecipeTemperatureCreateManyRecipeInputSchema:()=>DH,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Po,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>wb,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>sy,RecipeTemperatureDeleteArgsSchema:()=>TSt,RecipeTemperatureDeleteManyArgsSchema:()=>RSt,RecipeTemperatureFindFirstArgsSchema:()=>dmt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>zmt,RecipeTemperatureFindManyArgsSchema:()=>mK,RecipeTemperatureFindUniqueArgsSchema:()=>bmt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Imt,RecipeTemperatureGroupByArgsSchema:()=>hmt,RecipeTemperatureIncludeSchema:()=>Zs,RecipeTemperatureListRelationFilterSchema:()=>k2,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>QX,RecipeTemperatureMinOrderByAggregateInputSchema:()=>YX,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>Oat,RecipeTemperatureOrderByWithAggregationInputSchema:()=>OL,RecipeTemperatureOrderByWithRelationInputSchema:()=>Ym,RecipeTemperatureScalarFieldEnumSchema:()=>lg,RecipeTemperatureScalarWhereInputSchema:()=>xp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>vC,RecipeTemperatureSchema:()=>rdt,RecipeTemperatureSelectSchema:()=>vs,RecipeTemperatureSumOrderByAggregateInputSchema:()=>GX,RecipeTemperatureUncheckedCreateInputSchema:()=>UY,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>dy,RecipeTemperatureUncheckedUpdateInputSchema:()=>kY,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>xY,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>byt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ba,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>o7,RecipeTemperatureUpdateArgsSchema:()=>PSt,RecipeTemperatureUpdateInputSchema:()=>RY,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>USt,RecipeTemperatureUpdateManyArgsSchema:()=>WSt,RecipeTemperatureUpdateManyMutationInputSchema:()=>SN,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>fk,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>ha,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ok,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>e7,RecipeTemperatureUpsertArgsSchema:()=>CSt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>vk,RecipeTemperatureWhereInputSchema:()=>Ja,RecipeTemperatureWhereUniqueInputSchema:()=>ze,RecipeUncheckedCreateInputSchema:()=>E$,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>w4,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>pq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>Yz,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>o6,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>er,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>dlt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Nu,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>vM,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>yc,RecipeUncheckedCreateWithoutEquipmentInputSchema:()=>uZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>Dw,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>df,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>gf,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>EM,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Ww,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>ys,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>MM,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>NM,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>as,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>Ew,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>dw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>uv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>Yf,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>fM,RecipeUncheckedCreateWithoutTagsInputSchema:()=>mc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>qM,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>KM,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>Sv,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>DM,RecipeUncheckedUpdateInputSchema:()=>V$,RecipeUncheckedUpdateManyInputSchema:()=>H$,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>oyt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>q4,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>hut,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>zq,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>Eyt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>sm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>qyt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>l6,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>xut,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Iut,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>mlt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>UJ,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>rD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>t8,RecipeUncheckedUpdateWithoutEquipmentInputSchema:()=>vD,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>AL,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>dE,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>gE,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>bD,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>dL,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>tK,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>iD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>yD,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>H7,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>TL,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>aL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>R_,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>EE,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>U8,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>cD,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>n8,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>dD,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>WD,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>q_,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>mD,RecipeUpdateArgsSchema:()=>mkt,RecipeUpdateInputSchema:()=>L$,RecipeUpdateManyAndReturnArgsSchema:()=>bkt,RecipeUpdateManyArgsSchema:()=>hkt,RecipeUpdateManyMutationInputSchema:()=>hI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>LR,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>ZW,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>ij,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>Qx,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>bU,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>BW,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>N4,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>yq,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>nm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>n6,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>mr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>zlt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>Xit,RecipeUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>MB,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>Nlt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>Jq,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>nF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>clt,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>y6,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>Jit,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>alt,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>qlt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>HF,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>Fq,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Mlt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>elt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>ilt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>OT,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>rlt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>Hq,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>Elt,RecipeUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>mrt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>aut,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Gpt,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>ect,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>Xlt,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>Gct,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>Dlt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>Qlt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>iut,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>qct,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>cpt,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Wct,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>Vlt,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>Glt,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>rrt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Apt,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>Jlt,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>ER,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>MW,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>nj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Hx,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>hU,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>NW,RecipeUpdateWithoutCookBookInputSchema:()=>WJ,RecipeUpdateWithoutCriticalPointsInputSchema:()=>lD,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>X3,RecipeUpdateWithoutEquipmentInputSchema:()=>ZD,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>CL,RecipeUpdateWithoutIngredientsInputSchema:()=>sE,RecipeUpdateWithoutInstructionsInputSchema:()=>IE,RecipeUpdateWithoutLaborCostsInputSchema:()=>hD,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>sL,RecipeUpdateWithoutMenuItemsInputSchema:()=>X7,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>nD,RecipeUpdateWithoutPhotosInputSchema:()=>uD,RecipeUpdateWithoutPrepBoardsInputSchema:()=>V7,RecipeUpdateWithoutPrepHistoryInputSchema:()=>SL,RecipeUpdateWithoutPrepItemsInputSchema:()=>oL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>U_,RecipeUpdateWithoutRecipeStatsInputSchema:()=>_E,RecipeUpdateWithoutRestaurantInputSchema:()=>W8,RecipeUpdateWithoutStorageInputSchema:()=>pD,RecipeUpdateWithoutTagsInputSchema:()=>a8,RecipeUpdateWithoutTemperaturesInputSchema:()=>sD,RecipeUpdateWithoutVersionsInputSchema:()=>PD,RecipeUpdateWithoutWithdrawalsInputSchema:()=>B_,RecipeUpdateWithoutYieldsInputSchema:()=>zD,RecipeUpdateimageUrlsInputSchema:()=>rt,RecipeUpsertArgsSchema:()=>ykt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>_R,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>jW,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>aj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Vx,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>mU,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>wW,RecipeUpsertWithoutCriticalPointsInputSchema:()=>_lt,RecipeUpsertWithoutEquipmentInputSchema:()=>zrt,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>out,RecipeUpsertWithoutIngredientsInputSchema:()=>Ypt,RecipeUpsertWithoutInstructionsInputSchema:()=>tct,RecipeUpsertWithoutLaborCostsInputSchema:()=>Klt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>Yct,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>Flt,RecipeUpsertWithoutPhotosInputSchema:()=>Hlt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>nut,RecipeUpsertWithoutPrepItemsInputSchema:()=>Bct,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>ppt,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Pct,RecipeUpsertWithoutStorageInputSchema:()=>Llt,RecipeUpsertWithoutTemperaturesInputSchema:()=>Ylt,RecipeUpsertWithoutVersionsInputSchema:()=>lrt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>Cpt,RecipeUpsertWithoutYieldsInputSchema:()=>$lt,RecipeVersionAggregateArgsSchema:()=>Vmt,RecipeVersionArgsSchema:()=>Wj,RecipeVersionAvgOrderByAggregateInputSchema:()=>btt,RecipeVersionCountOrderByAggregateInputSchema:()=>htt,RecipeVersionCountOutputTypeArgsSchema:()=>gQ,RecipeVersionCountOutputTypeSelectSchema:()=>XK,RecipeVersionCreateArgsSchema:()=>uTt,RecipeVersionCreateInputSchema:()=>$Y,RecipeVersionCreateManyAndReturnArgsSchema:()=>dTt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>AO,RecipeVersionCreateManyApprovedByInputSchema:()=>RH,RecipeVersionCreateManyArgsSchema:()=>sTt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>CO,RecipeVersionCreateManyCreatedByInputSchema:()=>UH,RecipeVersionCreateManyInputSchema:()=>oP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>DO,RecipeVersionCreateManyRecipeInputSchema:()=>qH,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>ai,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>oi,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Ao,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>$q,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>eF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Ib,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>bb,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>t3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>o3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>vb,RecipeVersionCreateWithoutApprovedByInputSchema:()=>ju,RecipeVersionCreateWithoutCreatedByInputSchema:()=>ku,RecipeVersionCreateWithoutIngredientsInputSchema:()=>hf,RecipeVersionCreateWithoutInstructionsInputSchema:()=>Cf,RecipeVersionCreateWithoutRecipeInputSchema:()=>ly,RecipeVersionDeleteArgsSchema:()=>zTt,RecipeVersionDeleteManyArgsSchema:()=>ITt,RecipeVersionFindFirstArgsSchema:()=>Emt,RecipeVersionFindFirstOrThrowArgsSchema:()=>Lmt,RecipeVersionFindManyArgsSchema:()=>rS,RecipeVersionFindUniqueArgsSchema:()=>Qmt,RecipeVersionFindUniqueOrThrowArgsSchema:()=>Ymt,RecipeVersionGroupByArgsSchema:()=>Hmt,RecipeVersionIncludeSchema:()=>_s,RecipeVersionListRelationFilterSchema:()=>wA,RecipeVersionMaxOrderByAggregateInputSchema:()=>Itt,RecipeVersionMinOrderByAggregateInputSchema:()=>gtt,RecipeVersionNullableScalarRelationFilterSchema:()=>zM,RecipeVersionOrderByRelationAggregateInputSchema:()=>gN,RecipeVersionOrderByWithAggregationInputSchema:()=>qL,RecipeVersionOrderByWithRelationInputSchema:()=>Bp,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>sN,RecipeVersionScalarFieldEnumSchema:()=>yg,RecipeVersionScalarWhereInputSchema:()=>qn,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>BC,RecipeVersionSchema:()=>sdt,RecipeVersionSelectSchema:()=>Es,RecipeVersionSumOrderByAggregateInputSchema:()=>Ctt,RecipeVersionUncheckedCreateInputSchema:()=>JY,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>Ai,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ci,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Mu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>xu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>bf,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>Af,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>ry,RecipeVersionUncheckedUpdateInputSchema:()=>XY,RecipeVersionUncheckedUpdateManyInputSchema:()=>t0,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>Xut,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>il,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Kut,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>nl,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>zyt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fa,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>CJ,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>IJ,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>bE,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>AE,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>$J,RecipeVersionUpdateArgsSchema:()=>mTt,RecipeVersionUpdateInputSchema:()=>KY,RecipeVersionUpdateManyAndReturnArgsSchema:()=>bTt,RecipeVersionUpdateManyArgsSchema:()=>hTt,RecipeVersionUpdateManyMutationInputSchema:()=>hT,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>fR,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>ZR,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Uk,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Di,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Fi,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>da,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>Xq,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>iF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Xpt,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>act,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>OR,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>MR,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Wk,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>gJ,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>bJ,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>hE,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>CE,RecipeVersionUpdateWithoutRecipeInputSchema:()=>GJ,RecipeVersionUpsertArgsSchema:()=>yTt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>vR,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>jR,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Pk,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>Kpt,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>oct,RecipeVersionWhereInputSchema:()=>ee,RecipeVersionWhereUniqueInputSchema:()=>w,RecipeWhereInputSchema:()=>v,RecipeWhereUniqueInputSchema:()=>g,RecipeYieldAggregateArgsSchema:()=>Amt,RecipeYieldArgsSchema:()=>dzt,RecipeYieldAvgOrderByAggregateInputSchema:()=>JX,RecipeYieldCountOrderByAggregateInputSchema:()=>$X,RecipeYieldCreateArgsSchema:()=>kSt,RecipeYieldCreateInputSchema:()=>jY,RecipeYieldCreateManyAndReturnArgsSchema:()=>MSt,RecipeYieldCreateManyArgsSchema:()=>jSt,RecipeYieldCreateManyInputSchema:()=>KT,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>LO,RecipeYieldCreateManyRecipeInputSchema:()=>_H,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>Wo,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>Nb,RecipeYieldCreateWithoutRecipeInputSchema:()=>zy,RecipeYieldDeleteArgsSchema:()=>ZSt,RecipeYieldDeleteManyArgsSchema:()=>wSt,RecipeYieldFindFirstArgsSchema:()=>gmt,RecipeYieldFindFirstOrThrowArgsSchema:()=>Cmt,RecipeYieldFindManyArgsSchema:()=>hK,RecipeYieldFindUniqueArgsSchema:()=>Tmt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Pmt,RecipeYieldGroupByArgsSchema:()=>Smt,RecipeYieldIncludeSchema:()=>Os,RecipeYieldListRelationFilterSchema:()=>x2,RecipeYieldMaxOrderByAggregateInputSchema:()=>KX,RecipeYieldMinOrderByAggregateInputSchema:()=>XX,RecipeYieldOrderByRelationAggregateInputSchema:()=>fat,RecipeYieldOrderByWithAggregationInputSchema:()=>fL,RecipeYieldOrderByWithRelationInputSchema:()=>Gm,RecipeYieldScalarFieldEnumSchema:()=>rg,RecipeYieldScalarWhereInputSchema:()=>jp,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>OC,RecipeYieldSchema:()=>pdt,RecipeYieldSelectSchema:()=>fs,RecipeYieldSumOrderByAggregateInputSchema:()=>ttt,RecipeYieldUncheckedCreateInputSchema:()=>MY,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>my,RecipeYieldUncheckedUpdateInputSchema:()=>vY,RecipeYieldUncheckedUpdateManyInputSchema:()=>OY,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Iyt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>qa,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>n7,RecipeYieldUpdateArgsSchema:()=>vSt,RecipeYieldUpdateInputSchema:()=>ZY,RecipeYieldUpdateManyAndReturnArgsSchema:()=>fSt,RecipeYieldUpdateManyArgsSchema:()=>OSt,RecipeYieldUpdateManyMutationInputSchema:()=>TN,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>Bk,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>ba,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Nk,RecipeYieldUpdateWithoutRecipeInputSchema:()=>a7,RecipeYieldUpsertArgsSchema:()=>xSt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>wk,RecipeYieldWhereInputSchema:()=>Ka,RecipeYieldWhereUniqueInputSchema:()=>me,RestaurantAggregateArgsSchema:()=>EIt,RestaurantArgsSchema:()=>to,RestaurantAvgOrderByAggregateInputSchema:()=>iat,RestaurantCountOrderByAggregateInputSchema:()=>nat,RestaurantCountOutputTypeArgsSchema:()=>fQ,RestaurantCountOutputTypeSelectSchema:()=>uX,RestaurantCreateArgsSchema:()=>kRt,RestaurantCreateInputSchema:()=>S$,RestaurantCreateManyAndReturnArgsSchema:()=>MRt,RestaurantCreateManyArgsSchema:()=>jRt,RestaurantCreateManyInputSchema:()=>kP,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>Zv,RestaurantCreateManyOrganizationInputSchema:()=>GV,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>U4,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>f4,RestaurantCreateNestedOneWithoutEquipmentInputSchema:()=>IB,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>hM,RestaurantCreateNestedOneWithoutLeftoverItemInputSchema:()=>hq,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>YF,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>SF,RestaurantCreateNestedOneWithoutProductionPlanInputSchema:()=>kq,RestaurantCreateNestedOneWithoutQualityChecklistInputSchema:()=>OB,RestaurantCreateNestedOneWithoutQustomerFeedbackInputSchema:()=>KB,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>ro,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>K2,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Dn,RestaurantCreateNestedOneWithoutWasteRecordInputSchema:()=>Sq,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>_5,RestaurantCreateOrConnectWithoutEquipmentInputSchema:()=>X6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>f5,RestaurantCreateOrConnectWithoutLeftoverItemInputSchema:()=>m5,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>T3,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>z3,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Fh,RestaurantCreateOrConnectWithoutProductionPlanInputSchema:()=>A5,RestaurantCreateOrConnectWithoutQualityChecklistInputSchema:()=>n5,RestaurantCreateOrConnectWithoutQustomerFeedbackInputSchema:()=>s5,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>E5,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>Q6,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>F5,RestaurantCreateOrConnectWithoutWasteRecordInputSchema:()=>I5,RestaurantCreateWithoutCookbooksInputSchema:()=>RO,RestaurantCreateWithoutEquipmentInputSchema:()=>iZ,RestaurantCreateWithoutInventoryInputSchema:()=>Ov,RestaurantCreateWithoutLeftoverItemInputSchema:()=>LZ,RestaurantCreateWithoutMenusInputSchema:()=>Iw,RestaurantCreateWithoutOrdersInputSchema:()=>Gf,RestaurantCreateWithoutOrganizationInputSchema:()=>Cc,RestaurantCreateWithoutProductionPlanInputSchema:()=>ov,RestaurantCreateWithoutQualityChecklistInputSchema:()=>bZ,RestaurantCreateWithoutQustomerFeedbackInputSchema:()=>NZ,RestaurantCreateWithoutRecipesInputSchema:()=>xO,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>LM,RestaurantCreateWithoutUsersInputSchema:()=>nO,RestaurantCreateWithoutWasteRecordInputSchema:()=>$Z,RestaurantDeleteArgsSchema:()=>ZRt,RestaurantDeleteManyArgsSchema:()=>wRt,RestaurantFindFirstArgsSchema:()=>DIt,RestaurantFindFirstOrThrowArgsSchema:()=>_It,RestaurantFindManyArgsSchema:()=>kK,RestaurantFindUniqueArgsSchema:()=>VIt,RestaurantFindUniqueOrThrowArgsSchema:()=>HIt,RestaurantGroupByArgsSchema:()=>LIt,RestaurantIncludeSchema:()=>Bd,RestaurantListRelationFilterSchema:()=>l2,RestaurantMaxOrderByAggregateInputSchema:()=>lat,RestaurantMinOrderByAggregateInputSchema:()=>rat,RestaurantNullableScalarRelationFilterSchema:()=>cM,RestaurantOrderByRelationAggregateInputSchema:()=>_ot,RestaurantOrderByWithAggregationInputSchema:()=>yV,RestaurantOrderByWithRelationInputSchema:()=>kn,RestaurantScalarFieldEnumSchema:()=>Ng,RestaurantScalarRelationFilterSchema:()=>Qa,RestaurantScalarWhereInputSchema:()=>mp,RestaurantScalarWhereWithAggregatesInputSchema:()=>uA,RestaurantSchema:()=>Bdt,RestaurantSelectSchema:()=>qd,RestaurantSumOrderByAggregateInputSchema:()=>pat,RestaurantUncheckedCreateInputSchema:()=>T$,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>k4,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>kO,RestaurantUncheckedCreateWithoutEquipmentInputSchema:()=>lZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>fv,RestaurantUncheckedCreateWithoutLeftoverItemInputSchema:()=>VZ,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>gw,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>$f,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>Ac,RestaurantUncheckedCreateWithoutProductionPlanInputSchema:()=>av,RestaurantUncheckedCreateWithoutQualityChecklistInputSchema:()=>IZ,RestaurantUncheckedCreateWithoutQustomerFeedbackInputSchema:()=>BZ,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>jO,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>VM,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>iO,RestaurantUncheckedCreateWithoutWasteRecordInputSchema:()=>JZ,RestaurantUncheckedUpdateInputSchema:()=>W$,RestaurantUncheckedUpdateManyInputSchema:()=>U$,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Aut,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>Z4,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>iE,RestaurantUncheckedUpdateWithoutEquipmentInputSchema:()=>MD,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>G_,RestaurantUncheckedUpdateWithoutLeftoverItemInputSchema:()=>c_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>cL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>VE,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>u8,RestaurantUncheckedUpdateWithoutProductionPlanInputSchema:()=>A_,RestaurantUncheckedUpdateWithoutQualityChecklistInputSchema:()=>DD,RestaurantUncheckedUpdateWithoutQustomerFeedbackInputSchema:()=>a_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>rE,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>gD,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>eE,RestaurantUncheckedUpdateWithoutWasteRecordInputSchema:()=>m_,RestaurantUpdateArgsSchema:()=>vRt,RestaurantUpdateInputSchema:()=>P$,RestaurantUpdateManyAndReturnArgsSchema:()=>fRt,RestaurantUpdateManyArgsSchema:()=>ORt,RestaurantUpdateManyMutationInputSchema:()=>fN,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>QW,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>j4,RestaurantUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>TB,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>TM,RestaurantUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>gq,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>XF,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>UF,RestaurantUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Zq,RestaurantUpdateOneRequiredWithoutQualityChecklistNestedInputSchema:()=>qB,RestaurantUpdateOneRequiredWithoutQustomerFeedbackNestedInputSchema:()=>eq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ta,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>t4,RestaurantUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Wq,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>B4,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>Wi,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>Dpt,RestaurantUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>drt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Mpt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>Vrt,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>Vct,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Rct,RestaurantUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>apt,RestaurantUpdateToOneWithWhereWithoutQualityChecklistInputSchema:()=>Trt,RestaurantUpdateToOneWithWhereWithoutQustomerFeedbackInputSchema:()=>qrt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Ept,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>ert,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>Npt,RestaurantUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>Jrt,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>HW,RestaurantUpdateWithoutCookbooksInputSchema:()=>nE,RestaurantUpdateWithoutEquipmentInputSchema:()=>jD,RestaurantUpdateWithoutInventoryInputSchema:()=>Y_,RestaurantUpdateWithoutLeftoverItemInputSchema:()=>p_,RestaurantUpdateWithoutMenusInputSchema:()=>pL,RestaurantUpdateWithoutOrdersInputSchema:()=>LE,RestaurantUpdateWithoutOrganizationInputSchema:()=>c8,RestaurantUpdateWithoutProductionPlanInputSchema:()=>C_,RestaurantUpdateWithoutQualityChecklistInputSchema:()=>FD,RestaurantUpdateWithoutQustomerFeedbackInputSchema:()=>o_,RestaurantUpdateWithoutRecipesInputSchema:()=>lE,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>ID,RestaurantUpdateWithoutUsersInputSchema:()=>tE,RestaurantUpdateWithoutWasteRecordInputSchema:()=>z_,RestaurantUpsertArgsSchema:()=>xRt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>VW,RestaurantUpsertWithoutCookbooksInputSchema:()=>Fpt,RestaurantUpsertWithoutEquipmentInputSchema:()=>srt,RestaurantUpsertWithoutInventoryInputSchema:()=>jpt,RestaurantUpsertWithoutLeftoverItemInputSchema:()=>Lrt,RestaurantUpsertWithoutMenusInputSchema:()=>Lct,RestaurantUpsertWithoutOrdersInputSchema:()=>Uct,RestaurantUpsertWithoutProductionPlanInputSchema:()=>opt,RestaurantUpsertWithoutQualityChecklistInputSchema:()=>Srt,RestaurantUpsertWithoutQustomerFeedbackInputSchema:()=>Brt,RestaurantUpsertWithoutRecipesInputSchema:()=>_pt,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>trt,RestaurantUpsertWithoutUsersInputSchema:()=>wpt,RestaurantUpsertWithoutWasteRecordInputSchema:()=>$rt,RestaurantWhereInputSchema:()=>N,RestaurantWhereUniqueInputSchema:()=>$,SalesTransactionsAggregateArgsSchema:()=>vmt,SalesTransactionsArgsSchema:()=>mzt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>rtt,SalesTransactionsCountOrderByAggregateInputSchema:()=>ltt,SalesTransactionsCreateArgsSchema:()=>HSt,SalesTransactionsCreateInputSchema:()=>FY,SalesTransactionsCreateManyAndReturnArgsSchema:()=>GSt,SalesTransactionsCreateManyArgsSchema:()=>YSt,SalesTransactionsCreateManyInputSchema:()=>tP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>vw,SalesTransactionsCreateManyMenuItemInputSchema:()=>sQ,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>Qv,SalesTransactionsCreateManyRestaurantInputSchema:()=>iH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Lz,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>Ll,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>yI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>$h,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>hs,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Fc,SalesTransactionsDeleteArgsSchema:()=>$St,SalesTransactionsDeleteManyArgsSchema:()=>tTt,SalesTransactionsFindFirstArgsSchema:()=>Mmt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>Zmt,SalesTransactionsFindManyArgsSchema:()=>Lw,SalesTransactionsFindUniqueArgsSchema:()=>fmt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>wmt,SalesTransactionsGroupByArgsSchema:()=>Omt,SalesTransactionsIncludeSchema:()=>Bs,SalesTransactionsListRelationFilterSchema:()=>rM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>ptt,SalesTransactionsMinOrderByAggregateInputSchema:()=>ctt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>h2,SalesTransactionsOrderByWithAggregationInputSchema:()=>NL,SalesTransactionsOrderByWithRelationInputSchema:()=>Jm,SalesTransactionsScalarFieldEnumSchema:()=>cg,SalesTransactionsScalarWhereInputSchema:()=>Cl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>wC,SalesTransactionsSchema:()=>udt,SalesTransactionsSelectSchema:()=>qs,SalesTransactionsSumOrderByAggregateInputSchema:()=>utt,SalesTransactionsUncheckedCreateInputSchema:()=>DY,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Kz,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ar,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>bs,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,SalesTransactionsUncheckedUpdateInputSchema:()=>EY,SalesTransactionsUncheckedUpdateManyInputSchema:()=>LY,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Hyt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>hm,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Mut,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>lK,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>j8,SalesTransactionsUpdateArgsSchema:()=>JSt,SalesTransactionsUpdateInputSchema:()=>_Y,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>XSt,SalesTransactionsUpdateManyArgsSchema:()=>KSt,SalesTransactionsUpdateManyMutationInputSchema:()=>Mj,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>zj,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>TU,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>pm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>br,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>dj,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SU,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>iK,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>x8,SalesTransactionsUpsertArgsSchema:()=>QSt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>sj,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AU,SalesTransactionsWhereInputSchema:()=>tn,SalesTransactionsWhereUniqueInputSchema:()=>st,SchedulingConstraintAggregateArgsSchema:()=>Vbt,SchedulingConstraintArgsSchema:()=>Rzt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>sot,SchedulingConstraintCountOrderByAggregateInputSchema:()=>yot,SchedulingConstraintCreateArgsSchema:()=>uUt,SchedulingConstraintCreateInputSchema:()=>ZG,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>dUt,SchedulingConstraintCreateManyArgsSchema:()=>sUt,SchedulingConstraintCreateManyInputSchema:()=>CP,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>hO,SchedulingConstraintCreateManyUserInputSchema:()=>SH,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>Kn,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>db,SchedulingConstraintCreateWithoutUserInputSchema:()=>Cu,SchedulingConstraintDeleteArgsSchema:()=>zUt,SchedulingConstraintDeleteManyArgsSchema:()=>IUt,SchedulingConstraintFindFirstArgsSchema:()=>Ebt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>Lbt,SchedulingConstraintFindManyArgsSchema:()=>UK,SchedulingConstraintFindUniqueArgsSchema:()=>Qbt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>Ybt,SchedulingConstraintGroupByArgsSchema:()=>Hbt,SchedulingConstraintIncludeSchema:()=>Pd,SchedulingConstraintListRelationFilterSchema:()=>S2,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>dot,SchedulingConstraintMinOrderByAggregateInputSchema:()=>zot,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>dat,SchedulingConstraintOrderByWithAggregationInputSchema:()=>aV,SchedulingConstraintOrderByWithRelationInputSchema:()=>ch,SchedulingConstraintScalarFieldEnumSchema:()=>xg,SchedulingConstraintScalarWhereInputSchema:()=>Pp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>oA,SchedulingConstraintSchema:()=>jdt,SchedulingConstraintSelectSchema:()=>Wd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>mot,SchedulingConstraintUncheckedCreateInputSchema:()=>vG,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>hi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>Au,SchedulingConstraintUncheckedUpdateInputSchema:()=>fG,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>wG,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>Yut,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>tl,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>uJ,SchedulingConstraintUpdateArgsSchema:()=>mUt,SchedulingConstraintUpdateInputSchema:()=>OG,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>bUt,SchedulingConstraintUpdateManyArgsSchema:()=>hUt,SchedulingConstraintUpdateManyMutationInputSchema:()=>vN,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>CR,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>wi,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>gR,SchedulingConstraintUpdateWithoutUserInputSchema:()=>cJ,SchedulingConstraintUpsertArgsSchema:()=>yUt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>IR,SchedulingConstraintWhereInputSchema:()=>dn,SchedulingConstraintWhereUniqueInputSchema:()=>Ae,SessionAggregateArgsSchema:()=>egt,SessionArgsSchema:()=>Mzt,SessionAvgOrderByAggregateInputSchema:()=>Aat,SessionCountOrderByAggregateInputSchema:()=>Cat,SessionCreateArgsSchema:()=>HRt,SessionCreateInputSchema:()=>Z$,SessionCreateManyAndReturnArgsSchema:()=>GRt,SessionCreateManyArgsSchema:()=>YRt,SessionCreateManyInputSchema:()=>jP,SessionCreateManyUserInputEnvelopeSchema:()=>cO,SessionCreateManyUserInputSchema:()=>mH,SessionCreateNestedManyWithoutUserInputSchema:()=>Vn,SessionCreateOrConnectWithoutUserInputSchema:()=>lb,SessionCreateWithoutUserInputSchema:()=>lu,SessionDeleteArgsSchema:()=>$Rt,SessionDeleteManyArgsSchema:()=>tkt,SessionFindFirstArgsSchema:()=>XIt,SessionFindFirstOrThrowArgsSchema:()=>tgt,SessionFindManyArgsSchema:()=>xK,SessionFindUniqueArgsSchema:()=>agt,SessionFindUniqueOrThrowArgsSchema:()=>ngt,SessionGroupByArgsSchema:()=>ogt,SessionIncludeSchema:()=>_d,SessionListRelationFilterSchema:()=>g2,SessionMaxOrderByAggregateInputSchema:()=>Sat,SessionMinOrderByAggregateInputSchema:()=>Tat,SessionOrderByRelationAggregateInputSchema:()=>uat,SessionOrderByWithAggregationInputSchema:()=>dV,SessionOrderByWithRelationInputSchema:()=>zh,SessionScalarFieldEnumSchema:()=>qg,SessionScalarWhereInputSchema:()=>Ap,SessionScalarWhereWithAggregatesInputSchema:()=>sA,SessionSchema:()=>Fdt,SessionSelectSchema:()=>Ed,SessionSumOrderByAggregateInputSchema:()=>Pat,SessionUncheckedCreateInputSchema:()=>v$,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>ci,SessionUncheckedCreateWithoutUserInputSchema:()=>ru,SessionUncheckedUpdateInputSchema:()=>f$,SessionUncheckedUpdateManyInputSchema:()=>w$,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>Dut,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Qi,SessionUncheckedUpdateWithoutUserInputSchema:()=>$8,SessionUpdateArgsSchema:()=>JRt,SessionUpdateInputSchema:()=>O$,SessionUpdateManyAndReturnArgsSchema:()=>XRt,SessionUpdateManyArgsSchema:()=>KRt,SessionUpdateManyMutationInputSchema:()=>wN,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>XU,SessionUpdateManyWithoutUserNestedInputSchema:()=>xi,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>KU,SessionUpdateWithoutUserInputSchema:()=>G8,SessionUpsertArgsSchema:()=>QRt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>JU,SessionWhereInputSchema:()=>bn,SessionWhereUniqueInputSchema:()=>Te,ShiftAggregateArgsSchema:()=>ZCt,ShiftArgsSchema:()=>$Q,ShiftAvgOrderByAggregateInputSchema:()=>Knt,ShiftCountOrderByAggregateInputSchema:()=>Jnt,ShiftCountOutputTypeArgsSchema:()=>JQ,ShiftCountOutputTypeSelectSchema:()=>CX,ShiftCreateArgsSchema:()=>ujt,ShiftCreateInputSchema:()=>G9,ShiftCreateManyAndReturnArgsSchema:()=>djt,ShiftCreateManyArgsSchema:()=>sjt,ShiftCreateManyInputSchema:()=>LP,ShiftCreateManyUserInputEnvelopeSchema:()=>lO,ShiftCreateManyUserInputSchema:()=>sH,ShiftCreateNestedManyWithoutUserInputSchema:()=>_n,ShiftCreateNestedOneWithoutShiftTaskInputSchema:()=>hlt,ShiftCreateOrConnectWithoutShiftTaskInputSchema:()=>U5,ShiftCreateOrConnectWithoutUserInputSchema:()=>ab,ShiftCreateWithoutShiftTaskInputSchema:()=>dv,ShiftCreateWithoutUserInputSchema:()=>tu,ShiftDeleteArgsSchema:()=>zjt,ShiftDeleteManyArgsSchema:()=>Ijt,ShiftFindFirstArgsSchema:()=>jCt,ShiftFindFirstOrThrowArgsSchema:()=>MCt,ShiftFindManyArgsSchema:()=>ZK,ShiftFindUniqueArgsSchema:()=>OCt,ShiftFindUniqueOrThrowArgsSchema:()=>fCt,ShiftGroupByArgsSchema:()=>vCt,ShiftIncludeSchema:()=>hz,ShiftListRelationFilterSchema:()=>I2,ShiftMaxOrderByAggregateInputSchema:()=>Xnt,ShiftMinOrderByAggregateInputSchema:()=>tit,ShiftOrderByRelationAggregateInputSchema:()=>cat,ShiftOrderByWithAggregationInputSchema:()=>RV,ShiftOrderByWithRelationInputSchema:()=>fm,ShiftScalarFieldEnumSchema:()=>Xg,ShiftScalarRelationFilterSchema:()=>o2,ShiftScalarWhereInputSchema:()=>Cp,ShiftScalarWhereWithAggregatesInputSchema:()=>UA,ShiftSchema:()=>tzt,ShiftSelectSchema:()=>bz,ShiftStatusSchema:()=>Et,ShiftSumOrderByAggregateInputSchema:()=>eit,ShiftTaskAggregateArgsSchema:()=>vbt,ShiftTaskArgsSchema:()=>Wzt,ShiftTaskAvgOrderByAggregateInputSchema:()=>tot,ShiftTaskCountOrderByAggregateInputSchema:()=>Xet,ShiftTaskCreateArgsSchema:()=>HWt,ShiftTaskCreateInputSchema:()=>SG,ShiftTaskCreateManyAndReturnArgsSchema:()=>GWt,ShiftTaskCreateManyArgsSchema:()=>YWt,ShiftTaskCreateManyInputSchema:()=>IP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>pw,ShiftTaskCreateManyShiftInputSchema:()=>lQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>G4,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>aI,ShiftTaskCreateWithoutShiftInputSchema:()=>ts,ShiftTaskDeleteArgsSchema:()=>$Wt,ShiftTaskDeleteManyArgsSchema:()=>tUt,ShiftTaskFindFirstArgsSchema:()=>Mbt,ShiftTaskFindFirstOrThrowArgsSchema:()=>Zbt,ShiftTaskFindManyArgsSchema:()=>PK,ShiftTaskFindUniqueArgsSchema:()=>fbt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>wbt,ShiftTaskGroupByArgsSchema:()=>Obt,ShiftTaskIncludeSchema:()=>Cd,ShiftTaskListRelationFilterSchema:()=>V2,ShiftTaskMaxOrderByAggregateInputSchema:()=>eot,ShiftTaskMinOrderByAggregateInputSchema:()=>oot,ShiftTaskOrderByRelationAggregateInputSchema:()=>$nt,ShiftTaskOrderByWithAggregationInputSchema:()=>eV,ShiftTaskOrderByWithRelationInputSchema:()=>rh,ShiftTaskScalarFieldEnumSchema:()=>Rg,ShiftTaskScalarWhereInputSchema:()=>fp,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>tA,ShiftTaskSchema:()=>kdt,ShiftTaskSelectSchema:()=>Ad,ShiftTaskSumOrderByAggregateInputSchema:()=>aot,ShiftTaskUncheckedCreateInputSchema:()=>TG,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>$4,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>es,ShiftTaskUncheckedUpdateInputSchema:()=>WG,ShiftTaskUncheckedUpdateManyInputSchema:()=>UG,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>Byt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>X4,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>L7,ShiftTaskUpdateArgsSchema:()=>JWt,ShiftTaskUpdateInputSchema:()=>PG,ShiftTaskUpdateManyAndReturnArgsSchema:()=>XWt,ShiftTaskUpdateManyArgsSchema:()=>KWt,ShiftTaskUpdateManyMutationInputSchema:()=>MN,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>Lx,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>K4,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>Ex,ShiftTaskUpdateWithoutShiftInputSchema:()=>E7,ShiftTaskUpsertArgsSchema:()=>QWt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>_x,ShiftTaskWhereInputSchema:()=>yn,ShiftTaskWhereUniqueInputSchema:()=>ge,ShiftUncheckedCreateInputSchema:()=>$9,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>li,ShiftUncheckedCreateWithoutShiftTaskInputSchema:()=>zv,ShiftUncheckedCreateWithoutUserInputSchema:()=>eu,ShiftUncheckedUpdateInputSchema:()=>K9,ShiftUncheckedUpdateManyInputSchema:()=>X9,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>But,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Li,ShiftUncheckedUpdateWithoutShiftTaskInputSchema:()=>M_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>L8,ShiftUpdateArgsSchema:()=>mjt,ShiftUpdateInputSchema:()=>J9,ShiftUpdateManyAndReturnArgsSchema:()=>bjt,ShiftUpdateManyArgsSchema:()=>hjt,ShiftUpdateManyMutationInputSchema:()=>qN,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>LU,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Ui,ShiftUpdateOneRequiredWithoutShiftTaskNestedInputSchema:()=>blt,ShiftUpdateToOneWithWhereWithoutShiftTaskInputSchema:()=>dpt,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>EU,ShiftUpdateWithoutShiftTaskInputSchema:()=>j_,ShiftUpdateWithoutUserInputSchema:()=>E8,ShiftUpsertArgsSchema:()=>yjt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>_U,ShiftUpsertWithoutShiftTaskInputSchema:()=>spt,ShiftWhereInputSchema:()=>$e,ShiftWhereUniqueInputSchema:()=>Xt,SkillLevelSchema:()=>W,SortOrderInputSchema:()=>C,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>Ggt,StockCountArgsSchema:()=>LQ,StockCountAvgOrderByAggregateInputSchema:()=>gnt,StockCountCountOrderByAggregateInputSchema:()=>Int,StockCountCountOutputTypeArgsSchema:()=>VQ,StockCountCountOutputTypeSelectSchema:()=>bX,StockCountCreateArgsSchema:()=>uxt,StockCountCreateInputSchema:()=>I9,StockCountCreateManyAndReturnArgsSchema:()=>dxt,StockCountCreateManyArgsSchema:()=>sxt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>TO,StockCountCreateManyCreatedByInputSchema:()=>xH,StockCountCreateManyInputSchema:()=>BP,StockCountCreateManyInventoryInputEnvelopeSchema:()=>Bv,StockCountCreateManyInventoryInputSchema:()=>XV,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>ii,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>gM,StockCountCreateNestedOneWithoutItemsInputSchema:()=>F4,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Cb,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>Lh,StockCountCreateOrConnectWithoutItemsInputSchema:()=>y3,StockCountCreateWithoutCreatedByInputSchema:()=>Ou,StockCountCreateWithoutInventoryInputSchema:()=>kc,StockCountCreateWithoutItemsInputSchema:()=>Ef,StockCountDeleteArgsSchema:()=>zxt,StockCountDeleteManyArgsSchema:()=>Ixt,StockCountFindFirstArgsSchema:()=>Qgt,StockCountFindFirstOrThrowArgsSchema:()=>Ygt,StockCountFindManyArgsSchema:()=>tN,StockCountFindUniqueArgsSchema:()=>Jgt,StockCountFindUniqueOrThrowArgsSchema:()=>Kgt,StockCountGroupByArgsSchema:()=>$gt,StockCountIncludeSchema:()=>nz,StockCountItemAggregateArgsSchema:()=>eCt,StockCountItemArgsSchema:()=>Ozt,StockCountItemAvgOrderByAggregateInputSchema:()=>Wnt,StockCountItemCountOrderByAggregateInputSchema:()=>Pnt,StockCountItemCreateArgsSchema:()=>gxt,StockCountItemCreateInputSchema:()=>T9,StockCountItemCreateManyAndReturnArgsSchema:()=>Sxt,StockCountItemCreateManyArgsSchema:()=>Axt,StockCountItemCreateManyInputSchema:()=>qP,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Mf,StockCountItemCreateManyItemInputSchema:()=>eQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>_f,StockCountItemCreateManyStockCountInputSchema:()=>oQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>xS,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>hF,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>Jb,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>Kb,StockCountItemCreateWithoutItemInputSchema:()=>_y,StockCountItemCreateWithoutStockCountInputSchema:()=>Ly,StockCountItemDeleteArgsSchema:()=>Txt,StockCountItemDeleteManyArgsSchema:()=>Rxt,StockCountItemFindFirstArgsSchema:()=>Xgt,StockCountItemFindFirstOrThrowArgsSchema:()=>tCt,StockCountItemFindManyArgsSchema:()=>eN,StockCountItemFindUniqueArgsSchema:()=>aCt,StockCountItemFindUniqueOrThrowArgsSchema:()=>nCt,StockCountItemGroupByArgsSchema:()=>oCt,StockCountItemIncludeSchema:()=>lz,StockCountItemListRelationFilterSchema:()=>mM,StockCountItemMaxOrderByAggregateInputSchema:()=>Unt,StockCountItemMinOrderByAggregateInputSchema:()=>Rnt,StockCountItemOrderByRelationAggregateInputSchema:()=>_2,StockCountItemOrderByWithAggregationInputSchema:()=>SV,StockCountItemOrderByWithRelationInputSchema:()=>bh,StockCountItemScalarFieldEnumSchema:()=>Yg,StockCountItemScalarWhereInputSchema:()=>Ul,StockCountItemScalarWhereWithAggregatesInputSchema:()=>AA,StockCountItemSchema:()=>Gdt,StockCountItemSelectSchema:()=>rz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>bN,StockCountItemSumOrderByAggregateInputSchema:()=>knt,StockCountItemUncheckedCreateInputSchema:()=>P9,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>ZS,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>bF,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>Ey,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>Vy,StockCountItemUncheckedUpdateInputSchema:()=>U9,StockCountItemUncheckedUpdateManyInputSchema:()=>R9,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>Zyt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>DS,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>vyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>AF,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>Z7,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>O7,StockCountItemUpdateArgsSchema:()=>Pxt,StockCountItemUpdateInputSchema:()=>W9,StockCountItemUpdateManyAndReturnArgsSchema:()=>Uxt,StockCountItemUpdateManyArgsSchema:()=>Wxt,StockCountItemUpdateManyMutationInputSchema:()=>_j,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>Ux,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>xx,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>BS,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>CF,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>Wx,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>kx,StockCountItemUpdateWithoutItemInputSchema:()=>M7,StockCountItemUpdateWithoutStockCountInputSchema:()=>v7,StockCountItemUpsertArgsSchema:()=>Cxt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>Px,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>Rx,StockCountItemWhereInputSchema:()=>Cn,StockCountItemWhereUniqueInputSchema:()=>ht,StockCountListRelationFilterSchema:()=>nM,StockCountMaxOrderByAggregateInputSchema:()=>Cnt,StockCountMinOrderByAggregateInputSchema:()=>Ant,StockCountOrderByRelationAggregateInputSchema:()=>c2,StockCountOrderByWithAggregationInputSchema:()=>AV,StockCountOrderByWithRelationInputSchema:()=>Zm,StockCountScalarFieldEnumSchema:()=>Qg,StockCountScalarRelationFilterSchema:()=>E2,StockCountScalarWhereInputSchema:()=>Il,StockCountScalarWhereWithAggregatesInputSchema:()=>CA,StockCountSchema:()=>Ydt,StockCountSelectSchema:()=>iz,StockCountSumOrderByAggregateInputSchema:()=>Snt,StockCountUncheckedCreateInputSchema:()=>g9,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ti,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>SM,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>fu,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>xc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>Lf,StockCountUncheckedUpdateInputSchema:()=>A9,StockCountUncheckedUpdateManyInputSchema:()=>S9,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>eyt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>rl,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Wut,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>xM,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>PJ,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>I8,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>qE,StockCountUpdateArgsSchema:()=>mxt,StockCountUpdateInputSchema:()=>C9,StockCountUpdateManyAndReturnArgsSchema:()=>bxt,StockCountUpdateManyArgsSchema:()=>hxt,StockCountUpdateManyMutationInputSchema:()=>Dj,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>DR,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>iU,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Ei,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>UM,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>_4,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Act,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>FR,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>nU,StockCountUpdateWithoutCreatedByInputSchema:()=>TJ,StockCountUpdateWithoutInventoryInputSchema:()=>b8,StockCountUpdateWithoutItemsInputSchema:()=>BE,StockCountUpsertArgsSchema:()=>yxt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>qR,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>aU,StockCountUpsertWithoutItemsInputSchema:()=>Cct,StockCountWhereInputSchema:()=>Ye,StockCountWhereUniqueInputSchema:()=>it,StringFieldUpdateOperationsInputSchema:()=>n,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>ul,StringNullableWithAggregatesFilterSchema:()=>Tt,StringWithAggregatesFilterSchema:()=>ut,SupplierPriceHistoryAggregateArgsSchema:()=>qht,SupplierPriceHistoryArgsSchema:()=>gzt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>yet,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>uet,SupplierPriceHistoryCreateArgsSchema:()=>kPt,SupplierPriceHistoryCreateInputSchema:()=>w0,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>MPt,SupplierPriceHistoryCreateManyArgsSchema:()=>jPt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>cf,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>JH,SupplierPriceHistoryCreateManyInputSchema:()=>uP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>iw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>iQ,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>RI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>ZF,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>Qb,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>oI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>Oy,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>Ky,SupplierPriceHistoryDeleteArgsSchema:()=>ZPt,SupplierPriceHistoryDeleteManyArgsSchema:()=>wPt,SupplierPriceHistoryFindFirstArgsSchema:()=>Nht,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>Bht,SupplierPriceHistoryFindManyArgsSchema:()=>Qw,SupplierPriceHistoryFindUniqueArgsSchema:()=>Dht,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>_ht,SupplierPriceHistoryGroupByArgsSchema:()=>Fht,SupplierPriceHistoryIncludeSchema:()=>nd,SupplierPriceHistoryListRelationFilterSchema:()=>dM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>set,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>det,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>D2,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>QL,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>eh,SupplierPriceHistoryScalarFieldEnumSchema:()=>gg,SupplierPriceHistoryScalarWhereInputSchema:()=>Wl,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>HC,SupplierPriceHistorySchema:()=>Cdt,SupplierPriceHistorySelectSchema:()=>id,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>zet,SupplierPriceHistoryUncheckedCreateInputSchema:()=>N0,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>fI,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>fF,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>fy,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>Xy,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>q0,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>F0,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>kyt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>$I,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>Nyt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>DF,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>P7,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>_7,SupplierPriceHistoryUpdateArgsSchema:()=>vPt,SupplierPriceHistoryUpdateInputSchema:()=>B0,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>fPt,SupplierPriceHistoryUpdateManyArgsSchema:()=>OPt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>Oj,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>zx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>Dx,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>_I,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>BF,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>dx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Fx,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>T7,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>D7,SupplierPriceHistoryUpsertArgsSchema:()=>xPt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>sx,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>qx,SupplierPriceHistoryWhereInputSchema:()=>nn,SupplierPriceHistoryWhereUniqueInputSchema:()=>zt,TaskTypeSchema:()=>ie,TransactionIsolationLevelSchema:()=>edt,TransactionTypeSchema:()=>kt,UserAggregateArgsSchema:()=>GIt,UserArgsSchema:()=>Yt,UserAvgOrderByAggregateInputSchema:()=>mat,UserCountOrderByAggregateInputSchema:()=>zat,UserCountOutputTypeArgsSchema:()=>wQ,UserCountOutputTypeSelectSchema:()=>yX,UserCreateArgsSchema:()=>NRt,UserCreateInputSchema:()=>R$,UserCreateManyAndReturnArgsSchema:()=>FRt,UserCreateManyArgsSchema:()=>qRt,UserCreateManyInputSchema:()=>xP,UserCreateManyOrganizationInputEnvelopeSchema:()=>vv,UserCreateManyOrganizationInputSchema:()=>$V,UserCreateManyRestaurantInputEnvelopeSchema:()=>Dv,UserCreateManyRestaurantInputSchema:()=>tH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>R4,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Bl,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>Ilt,UserCreateNestedOneWithoutChecklistCompleteInputSchema:()=>VB,UserCreateNestedOneWithoutCustomerFeedbackInputSchema:()=>tq,UserCreateNestedOneWithoutInventoryTransactionInputSchema:()=>uF,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>US,UserCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>Lq,UserCreateNestedOneWithoutLeftoverItemInputSchema:()=>Iq,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>Zlt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>LF,UserCreateNestedOneWithoutProductionPlanInputSchema:()=>xq,UserCreateNestedOneWithoutProductionPlanItemInputSchema:()=>Bq,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>MT,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>jT,UserCreateNestedOneWithoutSchedulingConstraintInputSchema:()=>Clt,UserCreateNestedOneWithoutSessionsInputSchema:()=>klt,UserCreateNestedOneWithoutShiftsInputSchema:()=>Y4,UserCreateNestedOneWithoutStockCountInputSchema:()=>mF,UserCreateNestedOneWithoutWasteRecordInputSchema:()=>Pq,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>R5,UserCreateOrConnectWithoutChecklistCompleteInputSchema:()=>r5,UserCreateOrConnectWithoutCustomerFeedbackInputSchema:()=>z5,UserCreateOrConnectWithoutInventoryTransactionInputSchema:()=>p3,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>i3,UserCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>M5,UserCreateOrConnectWithoutLeftoverItemInputSchema:()=>b5,UserCreateOrConnectWithoutOrganizationInputSchema:()=>Dh,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>S3,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>A3,UserCreateOrConnectWithoutProductionPlanInputSchema:()=>S5,UserCreateOrConnectWithoutProductionPlanItemInputSchema:()=>W5,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>K6,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>J6,UserCreateOrConnectWithoutRestaurantInputSchema:()=>Vh,UserCreateOrConnectWithoutSchedulingConstraintInputSchema:()=>k5,UserCreateOrConnectWithoutSessionsInputSchema:()=>D5,UserCreateOrConnectWithoutShiftsInputSchema:()=>I3,UserCreateOrConnectWithoutStockCountInputSchema:()=>u3,UserCreateOrConnectWithoutWasteRecordInputSchema:()=>C5,UserCreateWithoutAvailabilityInputSchema:()=>mv,UserCreateWithoutChecklistCompleteInputSchema:()=>UZ,UserCreateWithoutCustomerFeedbackInputSchema:()=>DZ,UserCreateWithoutInventoryTransactionInputSchema:()=>wf,UserCreateWithoutInventoryUpdatesInputSchema:()=>Rf,UserCreateWithoutInventoryWithdrawalInputSchema:()=>Tv,UserCreateWithoutLeftoverItemInputSchema:()=>YZ,UserCreateWithoutOrganizationInputSchema:()=>Sc,UserCreateWithoutPasswordResetsInputSchema:()=>hw,UserCreateWithoutPrepItemsInputSchema:()=>zw,UserCreateWithoutProductionPlanInputSchema:()=>nv,UserCreateWithoutProductionPlanItemInputSchema:()=>yv,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>aZ,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>eZ,UserCreateWithoutRestaurantInputSchema:()=>jc,UserCreateWithoutSchedulingConstraintInputSchema:()=>bv,UserCreateWithoutSessionsInputSchema:()=>PO,UserCreateWithoutShiftsInputSchema:()=>lw,UserCreateWithoutStockCountInputSchema:()=>Ff,UserCreateWithoutWasteRecordInputSchema:()=>tv,UserDeleteArgsSchema:()=>DRt,UserDeleteManyArgsSchema:()=>VRt,UserFindFirstArgsSchema:()=>QIt,UserFindFirstOrThrowArgsSchema:()=>YIt,UserFindManyArgsSchema:()=>Jw,UserFindUniqueArgsSchema:()=>JIt,UserFindUniqueOrThrowArgsSchema:()=>KIt,UserGroupByArgsSchema:()=>$It,UserIncludeSchema:()=>Fd,UserListRelationFilterSchema:()=>aM,UserMaxOrderByAggregateInputSchema:()=>hat,UserMinOrderByAggregateInputSchema:()=>bat,UserNullableScalarRelationFilterSchema:()=>gI,UserOrderByRelationAggregateInputSchema:()=>r2,UserOrderByWithAggregationInputSchema:()=>sV,UserOrderByWithRelationInputSchema:()=>Ke,UserRoleSchema:()=>x,UserScalarFieldEnumSchema:()=>Bg,UserScalarRelationFilterSchema:()=>qe,UserScalarWhereInputSchema:()=>bl,UserScalarWhereWithAggregatesInputSchema:()=>yA,UserSchema:()=>qdt,UserSelectSchema:()=>Dd,UserSumOrderByAggregateInputSchema:()=>Iat,UserUncheckedCreateInputSchema:()=>k$,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>x4,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Jl,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>hv,UserUncheckedCreateWithoutChecklistCompleteInputSchema:()=>RZ,UserUncheckedCreateWithoutCustomerFeedbackInputSchema:()=>_Z,UserUncheckedCreateWithoutInventoryTransactionInputSchema:()=>Nf,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>kf,UserUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>Pv,UserUncheckedCreateWithoutLeftoverItemInputSchema:()=>GZ,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Tc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>bw,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>mw,UserUncheckedCreateWithoutProductionPlanInputSchema:()=>iv,UserUncheckedCreateWithoutProductionPlanItemInputSchema:()=>sv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>nZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>oZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Mc,UserUncheckedCreateWithoutSchedulingConstraintInputSchema:()=>Iv,UserUncheckedCreateWithoutSessionsInputSchema:()=>WO,UserUncheckedCreateWithoutShiftsInputSchema:()=>rw,UserUncheckedCreateWithoutStockCountInputSchema:()=>Df,UserUncheckedCreateWithoutWasteRecordInputSchema:()=>ev,UserUncheckedUpdateInputSchema:()=>j$,UserUncheckedUpdateManyInputSchema:()=>M$,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Sut,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>v4,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Uut,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>v_,UserUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>QD,UserUncheckedUpdateWithoutCustomerFeedbackInputSchema:()=>r_,UserUncheckedUpdateWithoutInventoryTransactionInputSchema:()=>vE,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>RE,UserUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>D_,UserUncheckedUpdateWithoutLeftoverItemInputSchema:()=>d_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>s8,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>rL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>iL,UserUncheckedUpdateWithoutProductionPlanInputSchema:()=>T_,UserUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>x_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>xD,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>RD,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>C8,UserUncheckedUpdateWithoutSchedulingConstraintInputSchema:()=>f_,UserUncheckedUpdateWithoutSessionsInputSchema:()=>aE,UserUncheckedUpdateWithoutShiftsInputSchema:()=>XE,UserUncheckedUpdateWithoutStockCountInputSchema:()=>NE,UserUncheckedUpdateWithoutWasteRecordInputSchema:()=>g_,UserUpdateArgsSchema:()=>_Rt,UserUpdateInputSchema:()=>x$,UserUpdateManyAndReturnArgsSchema:()=>LRt,UserUpdateManyArgsSchema:()=>ERt,UserUpdateManyMutationInputSchema:()=>Bj,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>$W,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>pU,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>M4,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>yr,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>glt,UserUpdateOneRequiredWithoutChecklistCompleteNestedInputSchema:()=>GB,UserUpdateOneRequiredWithoutInventoryTransactionNestedInputSchema:()=>dF,UserUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>Qq,UserUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>Aq,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>vlt,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>QF,UserUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>vq,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>NT,UserUpdateOneRequiredWithoutSchedulingConstraintNestedInputSchema:()=>Alt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>xlt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>J4,UserUpdateOneRequiredWithoutStockCountNestedInputSchema:()=>gF,UserUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Rq,UserUpdateOneWithoutCustomerFeedbackNestedInputSchema:()=>aq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>fS,UserUpdateOneWithoutProductionPlanItemNestedInputSchema:()=>Dq,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>BT,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>mpt,UserUpdateToOneWithWhereWithoutChecklistCompleteInputSchema:()=>xrt,UserUpdateToOneWithWhereWithoutCustomerFeedbackInputSchema:()=>Ert,UserUpdateToOneWithWhereWithoutInventoryTransactionInputSchema:()=>mct,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>cct,UserUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>Tpt,UserUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>Grt,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>Ect,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Dct,UserUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>ipt,UserUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>ypt,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>yrt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>crt,UserUpdateToOneWithWhereWithoutSchedulingConstraintInputSchema:()=>bpt,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>qpt,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>fct,UserUpdateToOneWithWhereWithoutStockCountInputSchema:()=>gct,UserUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>ept,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>GW,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>rU,UserUpdateWithoutAvailabilityInputSchema:()=>Z_,UserUpdateWithoutChecklistCompleteInputSchema:()=>HD,UserUpdateWithoutCustomerFeedbackInputSchema:()=>l_,UserUpdateWithoutInventoryTransactionInputSchema:()=>ZE,UserUpdateWithoutInventoryUpdatesInputSchema:()=>UE,UserUpdateWithoutInventoryWithdrawalInputSchema:()=>F_,UserUpdateWithoutLeftoverItemInputSchema:()=>s_,UserUpdateWithoutOrganizationInputSchema:()=>y8,UserUpdateWithoutPasswordResetsInputSchema:()=>lL,UserUpdateWithoutPrepItemsInputSchema:()=>nL,UserUpdateWithoutProductionPlanInputSchema:()=>S_,UserUpdateWithoutProductionPlanItemInputSchema:()=>k_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>kD,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>UD,UserUpdateWithoutRestaurantInputSchema:()=>g8,UserUpdateWithoutSchedulingConstraintInputSchema:()=>O_,UserUpdateWithoutSessionsInputSchema:()=>oE,UserUpdateWithoutShiftsInputSchema:()=>KE,UserUpdateWithoutStockCountInputSchema:()=>wE,UserUpdateWithoutWasteRecordInputSchema:()=>I_,UserUpsertArgsSchema:()=>BRt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>YW,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>lU,UserUpsertWithoutAvailabilityInputSchema:()=>zpt,UserUpsertWithoutChecklistCompleteInputSchema:()=>krt,UserUpsertWithoutCustomerFeedbackInputSchema:()=>_rt,UserUpsertWithoutInventoryTransactionInputSchema:()=>zct,UserUpsertWithoutInventoryUpdatesInputSchema:()=>pct,UserUpsertWithoutInventoryWithdrawalInputSchema:()=>Spt,UserUpsertWithoutLeftoverItemInputSchema:()=>Yrt,UserUpsertWithoutPasswordResetsInputSchema:()=>_ct,UserUpsertWithoutPrepItemsInputSchema:()=>Fct,UserUpsertWithoutProductionPlanInputSchema:()=>npt,UserUpsertWithoutProductionPlanItemInputSchema:()=>upt,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>urt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>prt,UserUpsertWithoutSchedulingConstraintInputSchema:()=>hpt,UserUpsertWithoutSessionsInputSchema:()=>Bpt,UserUpsertWithoutShiftsInputSchema:()=>Oct,UserUpsertWithoutStockCountInputSchema:()=>Ict,UserUpsertWithoutWasteRecordInputSchema:()=>tpt,UserWhereInputSchema:()=>Z,UserWhereUniqueInputSchema:()=>j,VendorAggregateArgsSchema:()=>UCt,VendorArgsSchema:()=>xj,VendorAvgOrderByAggregateInputSchema:()=>Hnt,VendorCountOrderByAggregateInputSchema:()=>Vnt,VendorCountOutputTypeArgsSchema:()=>GQ,VendorCountOutputTypeSelectSchema:()=>gX,VendorCreateArgsSchema:()=>ejt,VendorCreateInputSchema:()=>L9,VendorCreateManyAndReturnArgsSchema:()=>njt,VendorCreateManyArgsSchema:()=>ajt,VendorCreateManyInputSchema:()=>EP,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>PI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>TF,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>I4,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>Lb,VendorCreateOrConnectWithoutOrdersInputSchema:()=>m3,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>u5,VendorCreateWithoutIngredientsInputSchema:()=>ky,VendorCreateWithoutOrdersInputSchema:()=>Jf,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>vZ,VendorDeleteArgsSchema:()=>ijt,VendorDeleteManyArgsSchema:()=>cjt,VendorFindFirstArgsSchema:()=>PCt,VendorFindFirstOrThrowArgsSchema:()=>WCt,VendorFindManyArgsSchema:()=>MK,VendorFindUniqueArgsSchema:()=>kCt,VendorFindUniqueOrThrowArgsSchema:()=>xCt,VendorGroupByArgsSchema:()=>RCt,VendorIncludeSchema:()=>zz,VendorListRelationFilterSchema:()=>B2,VendorMaxOrderByAggregateInputSchema:()=>Qnt,VendorMinOrderByAggregateInputSchema:()=>Ynt,VendorOrderByRelationAggregateInputSchema:()=>Vat,VendorOrderByWithAggregationInputSchema:()=>UV,VendorOrderByWithRelationInputSchema:()=>_p,VendorScalarFieldEnumSchema:()=>Kg,VendorScalarRelationFilterSchema:()=>Xj,VendorScalarWhereInputSchema:()=>Op,VendorScalarWhereWithAggregatesInputSchema:()=>WA,VendorSchema:()=>Xdt,VendorSelectSchema:()=>mz,VendorSumOrderByAggregateInputSchema:()=>Gnt,VendorUncheckedCreateInputSchema:()=>V9,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>ZI,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>xy,VendorUncheckedCreateWithoutOrdersInputSchema:()=>Kf,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>OZ,VendorUncheckedUpdateInputSchema:()=>Q9,VendorUncheckedUpdateManyInputSchema:()=>Y9,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Wyt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>QI,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>I7,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>QE,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>XD,VendorUpdateArgsSchema:()=>ljt,VendorUpdateInputSchema:()=>H9,VendorUpdateManyAndReturnArgsSchema:()=>pjt,VendorUpdateManyArgsSchema:()=>rjt,VendorUpdateManyMutationInputSchema:()=>BN,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>ix,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>qI,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>RF,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>C4,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>xct,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>frt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>nx,VendorUpdateWithoutIngredientsInputSchema:()=>b7,VendorUpdateWithoutOrdersInputSchema:()=>HE,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>KD,VendorUpsertArgsSchema:()=>ojt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>ax,VendorUpsertWithoutOrdersInputSchema:()=>kct,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>Ort,VendorWhereInputSchema:()=>je,VendorWhereUniqueInputSchema:()=>Ht,WasteRecordAggregateArgsSchema:()=>mbt,WasteRecordArgsSchema:()=>Tzt,WasteRecordAvgOrderByAggregateInputSchema:()=>qet,WasteRecordCountOrderByAggregateInputSchema:()=>Bet,WasteRecordCreateArgsSchema:()=>gWt,WasteRecordCreateInputSchema:()=>rG,WasteRecordCreateManyAndReturnArgsSchema:()=>SWt,WasteRecordCreateManyArgsSchema:()=>AWt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>rf,WasteRecordCreateManyIngredienteInputSchema:()=>GH,WasteRecordCreateManyInputSchema:()=>mP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>sO,WasteRecordCreateManyRecordedByInputSchema:()=>IH,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>Gv,WasteRecordCreateManyRestaurantInputSchema:()=>rH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>WI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>Yn,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Hl,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>Vb,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>cb,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>Kh,WasteRecordCreateWithoutIngredienteInputSchema:()=>jy,WasteRecordCreateWithoutRecordedByInputSchema:()=>su,WasteRecordCreateWithoutRestaurantInputSchema:()=>Lc,WasteRecordDeleteArgsSchema:()=>TWt,WasteRecordDeleteManyArgsSchema:()=>RWt,WasteRecordFindFirstArgsSchema:()=>dbt,WasteRecordFindFirstOrThrowArgsSchema:()=>zbt,WasteRecordFindManyArgsSchema:()=>eT,WasteRecordFindUniqueArgsSchema:()=>bbt,WasteRecordFindUniqueOrThrowArgsSchema:()=>Ibt,WasteRecordGroupByArgsSchema:()=>hbt,WasteRecordIncludeSchema:()=>zd,WasteRecordListRelationFilterSchema:()=>IS,WasteRecordMaxOrderByAggregateInputSchema:()=>Fet,WasteRecordMinOrderByAggregateInputSchema:()=>Det,WasteRecordOrderByRelationAggregateInputSchema:()=>pB,WasteRecordOrderByWithAggregationInputSchema:()=>KL,WasteRecordOrderByWithRelationInputSchema:()=>ih,WasteRecordScalarFieldEnumSchema:()=>Pg,WasteRecordScalarWhereInputSchema:()=>fn,WasteRecordScalarWhereWithAggregatesInputSchema:()=>JC,WasteRecordSchema:()=>Wdt,WasteRecordSelectSchema:()=>md,WasteRecordSumOrderByAggregateInputSchema:()=>_et,WasteRecordUncheckedCreateInputSchema:()=>pG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>vI,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>si,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ir,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>My,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>du,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,WasteRecordUncheckedUpdateInputSchema:()=>uG,WasteRecordUncheckedUpdateManyInputSchema:()=>yG,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Uyt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>YI,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Lut,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>$i,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>vut,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>C7,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>oJ,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>O8,WasteRecordUpdateArgsSchema:()=>PWt,WasteRecordUpdateInputSchema:()=>cG,WasteRecordUpdateManyAndReturnArgsSchema:()=>UWt,WasteRecordUpdateManyArgsSchema:()=>WWt,WasteRecordUpdateManyMutationInputSchema:()=>CT,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>px,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>pR,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>xU,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>FI,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>Zi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>gr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>rx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>rR,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kU,WasteRecordUpdateWithoutIngredienteInputSchema:()=>g7,WasteRecordUpdateWithoutRecordedByInputSchema:()=>eJ,WasteRecordUpdateWithoutRestaurantInputSchema:()=>v8,WasteRecordUpsertArgsSchema:()=>CWt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>lx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>lR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>RU,WasteRecordWhereInputSchema:()=>cn,WasteRecordWhereUniqueInputSchema:()=>D});var ye;(function(c){c.assertEqual=z=>z;function i(z){}c.assertIs=i;function p(z){throw new Error}c.assertNever=p,c.arrayToEnum=z=>{let h={};for(let P of z)h[P]=P;return h},c.getValidEnumValues=z=>{let h=c.objectKeys(z).filter(R=>typeof z[z[R]]!="number"),P={};for(let R of h)P[R]=z[R];return c.objectValues(P)},c.objectValues=z=>c.objectKeys(z).map(function(h){return z[h]}),c.objectKeys=typeof Object.keys=="function"?z=>Object.keys(z):z=>{let h=[];for(let P in z)Object.prototype.hasOwnProperty.call(z,P)&&h.push(P);return h},c.find=(z,h)=>{for(let P of z)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?z=>Number.isInteger(z):z=>typeof z=="number"&&isFinite(z)&&Math.floor(z)===z;function y(z,h=" | "){return z.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=y,c.jsonStringifyReplacer=(z,h)=>typeof h=="bigint"?h.toString():h;})(ye||(ye={}));var UL;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(UL||(UL={}));var K=ye.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),KI=c=>{switch(typeof c){case"undefined":return K.undefined;case"string":return K.string;case"number":return isNaN(c)?K.nan:K.number;case"boolean":return K.boolean;case"function":return K.function;case"bigint":return K.bigint;case"symbol":return K.symbol;case"object":return Array.isArray(c)?K.array:c===null?K.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?K.promise:typeof Map<"u"&&c instanceof Map?K.map:typeof Set<"u"&&c instanceof Set?K.set:typeof Date<"u"&&c instanceof Date?K.date:K.object;default:return K.unknown}},O=ye.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Xyt=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),Er=class c extends Error{constructor(i){super(),this.issues=[],this.addIssue=y=>{this.issues=[...this.issues,y];},this.addIssues=(y=[])=>{this.issues=[...this.issues,...y];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}get errors(){return this.issues}format(i){let p=i||function(h){return h.message},y={_errors:[]},z=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(z);else if(P.code==="invalid_return_type")z(P.returnTypeError);else if(P.code==="invalid_arguments")z(P.argumentsError);else if(P.path.length===0)y._errors.push(p(P));else {let R=y,J=0;for(;J<P.path.length;){let Y=P.path[J];J===P.path.length-1?(R[Y]=R[Y]||{_errors:[]},R[Y]._errors.push(p(P))):R[Y]=R[Y]||{_errors:[]},R=R[Y],J++;}}};return z(this),y}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ye.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},y=[];for(let z of this.issues)z.path.length>0?(p[z.path[0]]=p[z.path[0]]||[],p[z.path[0]].push(i(z))):y.push(i(z));return {formErrors:y,fieldErrors:p}}get formErrors(){return this.flatten()}};Er.create=c=>new Er(c);var uT=(c,i)=>{let p;switch(c.code){case O.invalid_type:c.received===K.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case O.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,ye.jsonStringifyReplacer)}`;break;case O.unrecognized_keys:p=`Unrecognized key(s) in object: ${ye.joinValues(c.keys,", ")}`;break;case O.invalid_union:p="Invalid input";break;case O.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${ye.joinValues(c.options)}`;break;case O.invalid_enum_value:p=`Invalid enum value. Expected ${ye.joinValues(c.options)}, received '${c.received}'`;break;case O.invalid_arguments:p="Invalid function arguments";break;case O.invalid_return_type:p="Invalid function return type";break;case O.invalid_date:p="Invalid date";break;case O.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:ye.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case O.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case O.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case O.custom:p="Invalid input";break;case O.invalid_intersection_types:p="Intersection results could not be merged";break;case O.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case O.not_finite:p="Number must be finite";break;default:p=i.defaultError,ye.assertNever(c);}return {message:p}},DK=uT;function tst(c){DK=c;}function iN(){return DK}var lN=c=>{let{data:i,path:p,errorMaps:y,issueData:z}=c,h=[...p,...z.path||[]],P={...z,path:h};if(z.message!==void 0)return {...z,path:h,message:z.message};let R="",J=y.filter(Y=>!!Y).slice().reverse();for(let Y of J)R=Y(P,{data:i,defaultError:R}).message;return {...z,path:h,message:R}},est=[];function G(c,i){let p=iN(),y=lN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===uT?void 0:uT].filter(z=>!!z)});c.common.issues.push(y);}var yl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let y=[];for(let z of p){if(z.status==="aborted")return Pt;z.status==="dirty"&&i.dirty(),y.push(z.value);}return {status:i.value,value:y}}static async mergeObjectAsync(i,p){let y=[];for(let z of p){let h=await z.key,P=await z.value;y.push({key:h,value:P});}return c.mergeObjectSync(i,y)}static mergeObjectSync(i,p){let y={};for(let z of p){let{key:h,value:P}=z;if(h.status==="aborted"||P.status==="aborted")return Pt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||z.alwaysSet)&&(y[h.value]=P.value);}return {status:i.value,value:y}}},Pt=Object.freeze({status:"aborted"}),cT=c=>({status:"dirty",value:c}),kl=c=>({status:"valid",value:c}),RL=c=>c.status==="aborted",kL=c=>c.status==="dirty",ET=c=>c.status==="valid",LT=c=>typeof Promise<"u"&&c instanceof Promise;function rN(c,i,p,y){if(typeof i=="function"?c!==i||!y:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function _K(c,i,p,y,z){if(typeof i=="function"?c!==i||!z:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var ct;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(ct||(ct={}));var DT,_T,pp=class{constructor(i,p,y,z){this._cachedPath=[],this.parent=i,this.data=p,this._path=y,this._key=z;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},qK=(c,i)=>{if(ET(i))return {success:!0,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:!1,get error(){if(this._error)return this._error;let p=new Er(c.common.issues);return this._error=p,this._error}}};function Nt(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:y,description:z}=c;if(i&&(p||y))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:z}:{errorMap:(P,R)=>{var J,Y;let{message:jt}=c;return P.code==="invalid_enum_value"?{message:jt??R.defaultError}:typeof R.data>"u"?{message:(J=jt??y)!==null&&J!==void 0?J:R.defaultError}:P.code!=="invalid_type"?{message:R.defaultError}:{message:(Y=jt??p)!==null&&Y!==void 0?Y:R.defaultError}},description:z}}var Bt=class{constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this);}get description(){return this._def.description}_getType(i){return KI(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:KI(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new yl,ctx:{common:i.parent.common,data:i.data,parsedType:KI(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(LT(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let y=this.safeParse(i,p);if(y.success)return y.data;throw y.error}safeParse(i,p){var y;let z={common:{issues:[],async:(y=p?.async)!==null&&y!==void 0?y:!1,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:KI(i)},h=this._parseSync({data:i,path:z.path,parent:z});return qK(z,h)}async parseAsync(i,p){let y=await this.safeParseAsync(i,p);if(y.success)return y.data;throw y.error}async safeParseAsync(i,p){let y={common:{issues:[],contextualErrorMap:p?.errorMap,async:!0},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:KI(i)},z=this._parse({data:i,path:y.path,parent:y}),h=await(LT(z)?z:Promise.resolve(z));return qK(y,h)}refine(i,p){let y=z=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(z):p;return this._refinement((z,h)=>{let P=i(z),R=()=>h.addIssue({code:O.custom,...y(z)});return typeof Promise<"u"&&P instanceof Promise?P.then(J=>J?!0:(R(),!1)):P?!0:(R(),!1)})}refinement(i,p){return this._refinement((y,z)=>i(y)?!0:(z.addIssue(typeof p=="function"?p(y,z):p),!1))}_refinement(i){return new Lr({schema:this,typeName:St.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}optional(){return rp.create(this,this._def)}nullable(){return Am.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Vm.create(this,this._def)}promise(){return eg.create(this,this._def)}or(i){return CC.create([this,i],this._def)}and(i){return AC.create(this,i,this._def)}transform(i){return new Lr({...Nt(this._def),schema:this,typeName:St.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new UC({...Nt(this._def),innerType:this,defaultValue:p,typeName:St.ZodDefault})}brand(){return new VT({typeName:St.ZodBranded,type:this,...Nt(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new RC({...Nt(this._def),innerType:this,catchValue:p,typeName:St.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return HT.create(this,i)}readonly(){return kC.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},ost=/^c[^\s-]{8,}$/i,ast=/^[0-9a-z]+$/,nst=/^[0-9A-HJKMNP-TV-Z]{26}$/,ist=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,lst=/^[a-z0-9_-]{21}$/i,rst=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,pst=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,cst="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",WL,ust=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,yst=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,sst=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,EK="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dst=new RegExp(`^${EK}$`);function LK(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function zst(c){return new RegExp(`^${LK(c)}$`)}function VK(c){let i=`${EK}T${LK(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function mst(c,i){return !!((i==="v4"||!i)&&ust.test(c)||(i==="v6"||!i)&&yst.test(c))}var XI=class c extends Bt{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==K.string){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:K.string,received:h.parsedType}),Pt}let y=new yl,z;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(z=this._getOrReturnCtx(i,z),G(z,{code:O.too_small,minimum:h.value,type:"string",inclusive:!0,exact:!1,message:h.message}),y.dirty());else if(h.kind==="max")i.data.length>h.value&&(z=this._getOrReturnCtx(i,z),G(z,{code:O.too_big,maximum:h.value,type:"string",inclusive:!0,exact:!1,message:h.message}),y.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,R=i.data.length<h.value;(P||R)&&(z=this._getOrReturnCtx(i,z),P?G(z,{code:O.too_big,maximum:h.value,type:"string",inclusive:!0,exact:!0,message:h.message}):R&&G(z,{code:O.too_small,minimum:h.value,type:"string",inclusive:!0,exact:!0,message:h.message}),y.dirty());}else if(h.kind==="email")pst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"email",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="emoji")WL||(WL=new RegExp(cst,"u")),WL.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"emoji",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="uuid")ist.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"uuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="nanoid")lst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"nanoid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid")ost.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"cuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid2")ast.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"cuid2",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="ulid")nst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"ulid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{z=this._getOrReturnCtx(i,z),G(z,{validation:"url",code:O.invalid_string,message:h.message}),y.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"regex",code:O.invalid_string,message:h.message}),y.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),y.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:{startsWith:h.value},message:h.message}),y.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:{endsWith:h.value},message:h.message}),y.dirty()):h.kind==="datetime"?VK(h).test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:"datetime",message:h.message}),y.dirty()):h.kind==="date"?dst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:"date",message:h.message}),y.dirty()):h.kind==="time"?zst(h).test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{code:O.invalid_string,validation:"time",message:h.message}),y.dirty()):h.kind==="duration"?rst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"duration",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="ip"?mst(i.data,h.version)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"ip",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="base64"?sst.test(i.data)||(z=this._getOrReturnCtx(i,z),G(z,{validation:"base64",code:O.invalid_string,message:h.message}),y.dirty()):ye.assertNever(h);return {status:y.value,value:i.data}}_regex(i,p,y){return this.refinement(z=>i.test(z),{validation:p,code:O.invalid_string,...ct.errToObj(y)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...ct.errToObj(i)})}url(i){return this._addCheck({kind:"url",...ct.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...ct.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...ct.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...ct.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...ct.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...ct.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...ct.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...ct.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...ct.errToObj(i)})}datetime(i){var p,y;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:!1,local:(y=i?.local)!==null&&y!==void 0?y:!1,...ct.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...ct.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...ct.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...ct.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...ct.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...ct.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...ct.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...ct.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...ct.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...ct.errToObj(p)})}nonempty(i){return this.min(1,ct.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};XI.create=c=>{var i;return new XI({checks:[],typeName:St.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:!1,...Nt(c)})};function hst(c,i){let p=(c.toString().split(".")[1]||"").length,y=(i.toString().split(".")[1]||"").length,z=p>y?p:y,h=parseInt(c.toFixed(z).replace(".","")),P=parseInt(i.toFixed(z).replace(".",""));return h%P/Math.pow(10,z)}var zC=class c extends Bt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==K.number){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:K.number,received:h.parsedType}),Pt}let y,z=new yl;for(let h of this._def.checks)h.kind==="int"?ye.isInteger(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.invalid_type,expected:"integer",received:"float",message:h.message}),z.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:!1,message:h.message}),z.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:!1,message:h.message}),z.dirty()):h.kind==="multipleOf"?hst(i.data,h.value)!==0&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),z.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_finite,message:h.message}),z.dirty()):ye.assertNever(h);return {status:z.value,value:i.data}}gte(i,p){return this.setLimit("min",i,!0,ct.toString(p))}gt(i,p){return this.setLimit("min",i,!1,ct.toString(p))}lte(i,p){return this.setLimit("max",i,!0,ct.toString(p))}lt(i,p){return this.setLimit("max",i,!1,ct.toString(p))}setLimit(i,p,y,z){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:ct.toString(z)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:ct.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:!1,message:ct.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:!1,message:ct.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:!0,message:ct.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:!0,message:ct.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:ct.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:ct.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:ct.toString(i)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:ct.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&ye.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let y of this._def.checks){if(y.kind==="finite"||y.kind==="int"||y.kind==="multipleOf")return !0;y.kind==="min"?(p===null||y.value>p)&&(p=y.value):y.kind==="max"&&(i===null||y.value<i)&&(i=y.value);}return Number.isFinite(p)&&Number.isFinite(i)}};zC.create=c=>new zC({checks:[],typeName:St.ZodNumber,coerce:c?.coerce||!1,...Nt(c)});var mC=class c extends Bt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce&&(i.data=BigInt(i.data)),this._getType(i)!==K.bigint){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:K.bigint,received:h.parsedType}),Pt}let y,z=new yl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),z.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),z.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),z.dirty()):ye.assertNever(h);return {status:z.value,value:i.data}}gte(i,p){return this.setLimit("min",i,!0,ct.toString(p))}gt(i,p){return this.setLimit("min",i,!1,ct.toString(p))}lte(i,p){return this.setLimit("max",i,!0,ct.toString(p))}lt(i,p){return this.setLimit("max",i,!1,ct.toString(p))}setLimit(i,p,y,z){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:ct.toString(z)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:ct.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:ct.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:ct.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:ct.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:ct.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};mC.create=c=>{var i;return new mC({checks:[],typeName:St.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:!1,...Nt(c)})};var hC=class extends Bt{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==K.boolean){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.boolean,received:y.parsedType}),Pt}return kl(i.data)}};hC.create=c=>new hC({typeName:St.ZodBoolean,coerce:c?.coerce||!1,...Nt(c)});var bC=class c extends Bt{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==K.date){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:K.date,received:h.parsedType}),Pt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_date}),Pt}let y=new yl,z;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(z=this._getOrReturnCtx(i,z),G(z,{code:O.too_small,message:h.message,inclusive:!0,exact:!1,minimum:h.value,type:"date"}),y.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(z=this._getOrReturnCtx(i,z),G(z,{code:O.too_big,message:h.message,inclusive:!0,exact:!1,maximum:h.value,type:"date"}),y.dirty()):ye.assertNever(h);return {status:y.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:ct.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:ct.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};bC.create=c=>new bC({checks:[],coerce:c?.coerce||!1,typeName:St.ZodDate,...Nt(c)});var yT=class extends Bt{_parse(i){if(this._getType(i)!==K.symbol){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.symbol,received:y.parsedType}),Pt}return kl(i.data)}};yT.create=c=>new yT({typeName:St.ZodSymbol,...Nt(c)});var IC=class extends Bt{_parse(i){if(this._getType(i)!==K.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.undefined,received:y.parsedType}),Pt}return kl(i.data)}};IC.create=c=>new IC({typeName:St.ZodUndefined,...Nt(c)});var gC=class extends Bt{_parse(i){if(this._getType(i)!==K.null){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.null,received:y.parsedType}),Pt}return kl(i.data)}};gC.create=c=>new gC({typeName:St.ZodNull,...Nt(c)});var tg=class extends Bt{constructor(){super(...arguments),this._any=!0;}_parse(i){return kl(i.data)}};tg.create=c=>new tg({typeName:St.ZodAny,...Nt(c)});var Lm=class extends Bt{constructor(){super(...arguments),this._unknown=!0;}_parse(i){return kl(i.data)}};Lm.create=c=>new Lm({typeName:St.ZodUnknown,...Nt(c)});var sp=class extends Bt{_parse(i){let p=this._getOrReturnCtx(i);return G(p,{code:O.invalid_type,expected:K.never,received:p.parsedType}),Pt}};sp.create=c=>new sp({typeName:St.ZodNever,...Nt(c)});var sT=class extends Bt{_parse(i){if(this._getType(i)!==K.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.void,received:y.parsedType}),Pt}return kl(i.data)}};sT.create=c=>new sT({typeName:St.ZodVoid,...Nt(c)});var Vm=class c extends Bt{_parse(i){let{ctx:p,status:y}=this._processInputParams(i),z=this._def;if(p.parsedType!==K.array)return G(p,{code:O.invalid_type,expected:K.array,received:p.parsedType}),Pt;if(z.exactLength!==null){let P=p.data.length>z.exactLength.value,R=p.data.length<z.exactLength.value;(P||R)&&(G(p,{code:P?O.too_big:O.too_small,minimum:R?z.exactLength.value:void 0,maximum:P?z.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:z.exactLength.message}),y.dirty());}if(z.minLength!==null&&p.data.length<z.minLength.value&&(G(p,{code:O.too_small,minimum:z.minLength.value,type:"array",inclusive:!0,exact:!1,message:z.minLength.message}),y.dirty()),z.maxLength!==null&&p.data.length>z.maxLength.value&&(G(p,{code:O.too_big,maximum:z.maxLength.value,type:"array",inclusive:!0,exact:!1,message:z.maxLength.message}),y.dirty()),p.common.async)return Promise.all([...p.data].map((P,R)=>z.type._parseAsync(new pp(p,P,p.path,R)))).then(P=>yl.mergeArray(y,P));let h=[...p.data].map((P,R)=>z.type._parseSync(new pp(p,P,p.path,R)));return yl.mergeArray(y,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:ct.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:ct.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:ct.toString(p)}})}nonempty(i){return this.min(1,i)}};Vm.create=(c,i)=>new Vm({type:c,minLength:null,maxLength:null,exactLength:null,typeName:St.ZodArray,...Nt(i)});function pT(c){if(c instanceof Nr){let i={};for(let p in c.shape){let y=c.shape[p];i[p]=rp.create(pT(y));}return new Nr({...c._def,shape:()=>i})}else return c instanceof Vm?new Vm({...c._def,type:pT(c.element)}):c instanceof rp?rp.create(pT(c.unwrap())):c instanceof Am?Am.create(pT(c.unwrap())):c instanceof Cm?Cm.create(c.items.map(i=>pT(i))):c}var Nr=class c extends Bt{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=ye.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==K.object){let Y=this._getOrReturnCtx(i);return G(Y,{code:O.invalid_type,expected:K.object,received:Y.parsedType}),Pt}let{status:y,ctx:z}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),R=[];if(!(this._def.catchall instanceof sp&&this._def.unknownKeys==="strip"))for(let Y in z.data)P.includes(Y)||R.push(Y);let J=[];for(let Y of P){let jt=h[Y],lp=z.data[Y];J.push({key:{status:"valid",value:Y},value:jt._parse(new pp(z,lp,z.path,Y)),alwaysSet:Y in z.data});}if(this._def.catchall instanceof sp){let Y=this._def.unknownKeys;if(Y==="passthrough")for(let jt of R)J.push({key:{status:"valid",value:jt},value:{status:"valid",value:z.data[jt]}});else if(Y==="strict")R.length>0&&(G(z,{code:O.unrecognized_keys,keys:R}),y.dirty());else if(Y!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Y=this._def.catchall;for(let jt of R){let lp=z.data[jt];J.push({key:{status:"valid",value:jt},value:Y._parse(new pp(z,lp,z.path,jt)),alwaysSet:jt in z.data});}}return z.common.async?Promise.resolve().then(async()=>{let Y=[];for(let jt of J){let lp=await jt.key,BK=await jt.value;Y.push({key:lp,value:BK,alwaysSet:jt.alwaysSet});}return Y}).then(Y=>yl.mergeObjectSync(y,Y)):yl.mergeObjectSync(y,J)}get shape(){return this._def.shape()}strict(i){return ct.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,y)=>{var z,h,P,R;let J=(P=(h=(z=this._def).errorMap)===null||h===void 0?void 0:h.call(z,p,y).message)!==null&&P!==void 0?P:y.defaultError;return p.code==="unrecognized_keys"?{message:(R=ct.errToObj(i).message)!==null&&R!==void 0?R:J}:{message:J}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:St.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return ye.objectKeys(i).forEach(y=>{i[y]&&this.shape[y]&&(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{i[y]||(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}deepPartial(){return pT(this)}partial(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{let z=this.shape[y];i&&!i[y]?p[y]=z:p[y]=z.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{if(i&&!i[y])p[y]=this.shape[y];else {let h=this.shape[y];for(;h instanceof rp;)h=h._def.innerType;p[y]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return HK(ye.objectKeys(this.shape))}};Nr.create=(c,i)=>new Nr({shape:()=>c,unknownKeys:"strip",catchall:sp.create(),typeName:St.ZodObject,...Nt(i)});Nr.strictCreate=(c,i)=>new Nr({shape:()=>c,unknownKeys:"strict",catchall:sp.create(),typeName:St.ZodObject,...Nt(i)});Nr.lazycreate=(c,i)=>new Nr({shape:c,unknownKeys:"strip",catchall:sp.create(),typeName:St.ZodObject,...Nt(i)});var CC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=this._def.options;function z(h){for(let R of h)if(R.result.status==="valid")return R.result;for(let R of h)if(R.result.status==="dirty")return p.common.issues.push(...R.ctx.common.issues),R.result;let P=h.map(R=>new Er(R.ctx.common.issues));return G(p,{code:O.invalid_union,unionErrors:P}),Pt}if(p.common.async)return Promise.all(y.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(z);{let h,P=[];for(let J of y){let Y={...p,common:{...p.common,issues:[]},parent:null},jt=J._parseSync({data:p.data,path:p.path,parent:Y});if(jt.status==="valid")return jt;jt.status==="dirty"&&!h&&(h={result:jt,ctx:Y}),Y.common.issues.length&&P.push(Y.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let R=P.map(J=>new Er(J));return G(p,{code:O.invalid_union,unionErrors:R}),Pt}}get options(){return this._def.options}};CC.create=(c,i)=>new CC({options:c,typeName:St.ZodUnion,...Nt(i)});var Em=c=>c instanceof SC?Em(c.schema):c instanceof Lr?Em(c.innerType()):c instanceof TC?[c.value]:c instanceof PC?c.options:c instanceof WC?ye.objectValues(c.enum):c instanceof UC?Em(c._def.innerType):c instanceof IC?[void 0]:c instanceof gC?[null]:c instanceof rp?[void 0,...Em(c.unwrap())]:c instanceof Am?[null,...Em(c.unwrap())]:c instanceof VT||c instanceof kC?Em(c.unwrap()):c instanceof RC?Em(c._def.innerType):[],pN=class c extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.object)return G(p,{code:O.invalid_type,expected:K.object,received:p.parsedType}),Pt;let y=this.discriminator,z=p.data[y],h=this.optionsMap.get(z);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):(G(p,{code:O.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[y]}),Pt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,y){let z=new Map;for(let h of p){let P=Em(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let R of P){if(z.has(R))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(R)}`);z.set(R,h);}}return new c({typeName:St.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:z,...Nt(y)})}};function xL(c,i){let p=KI(c),y=KI(i);if(c===i)return {valid:!0,data:c};if(p===K.object&&y===K.object){let z=ye.objectKeys(i),h=ye.objectKeys(c).filter(R=>z.indexOf(R)!==-1),P={...c,...i};for(let R of h){let J=xL(c[R],i[R]);if(!J.valid)return {valid:!1};P[R]=J.data;}return {valid:!0,data:P}}else if(p===K.array&&y===K.array){if(c.length!==i.length)return {valid:!1};let z=[];for(let h=0;h<c.length;h++){let P=c[h],R=i[h],J=xL(P,R);if(!J.valid)return {valid:!1};z.push(J.data);}return {valid:!0,data:z}}else return p===K.date&&y===K.date&&+c==+i?{valid:!0,data:c}:{valid:!1}}var AC=class extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i),z=(h,P)=>{if(RL(h)||RL(P))return Pt;let R=xL(h.value,P.value);return R.valid?((kL(h)||kL(P))&&p.dirty(),{status:p.value,value:R.data}):(G(y,{code:O.invalid_intersection_types}),Pt)};return y.common.async?Promise.all([this._def.left._parseAsync({data:y.data,path:y.path,parent:y}),this._def.right._parseAsync({data:y.data,path:y.path,parent:y})]).then(([h,P])=>z(h,P)):z(this._def.left._parseSync({data:y.data,path:y.path,parent:y}),this._def.right._parseSync({data:y.data,path:y.path,parent:y}))}};AC.create=(c,i,p)=>new AC({left:c,right:i,typeName:St.ZodIntersection,...Nt(p)});var Cm=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.array)return G(y,{code:O.invalid_type,expected:K.array,received:y.parsedType}),Pt;if(y.data.length<this._def.items.length)return G(y,{code:O.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),Pt;!this._def.rest&&y.data.length>this._def.items.length&&(G(y,{code:O.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),p.dirty());let h=[...y.data].map((P,R)=>{let J=this._def.items[R]||this._def.rest;return J?J._parse(new pp(y,P,y.path,R)):null}).filter(P=>!!P);return y.common.async?Promise.all(h).then(P=>yl.mergeArray(p,P)):yl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Cm.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Cm({items:c,typeName:St.ZodTuple,rest:null,...Nt(i)})};var cN=class c extends Bt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.object)return G(y,{code:O.invalid_type,expected:K.object,received:y.parsedType}),Pt;let z=[],h=this._def.keyType,P=this._def.valueType;for(let R in y.data)z.push({key:h._parse(new pp(y,R,y.path,R)),value:P._parse(new pp(y,y.data[R],y.path,R)),alwaysSet:R in y.data});return y.common.async?yl.mergeObjectAsync(p,z):yl.mergeObjectSync(p,z)}get element(){return this._def.valueType}static create(i,p,y){return p instanceof Bt?new c({keyType:i,valueType:p,typeName:St.ZodRecord,...Nt(y)}):new c({keyType:XI.create(),valueType:i,typeName:St.ZodRecord,...Nt(p)})}},dT=class extends Bt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.map)return G(y,{code:O.invalid_type,expected:K.map,received:y.parsedType}),Pt;let z=this._def.keyType,h=this._def.valueType,P=[...y.data.entries()].map(([R,J],Y)=>({key:z._parse(new pp(y,R,y.path,[Y,"key"])),value:h._parse(new pp(y,J,y.path,[Y,"value"]))}));if(y.common.async){let R=new Map;return Promise.resolve().then(async()=>{for(let J of P){let Y=await J.key,jt=await J.value;if(Y.status==="aborted"||jt.status==="aborted")return Pt;(Y.status==="dirty"||jt.status==="dirty")&&p.dirty(),R.set(Y.value,jt.value);}return {status:p.value,value:R}})}else {let R=new Map;for(let J of P){let Y=J.key,jt=J.value;if(Y.status==="aborted"||jt.status==="aborted")return Pt;(Y.status==="dirty"||jt.status==="dirty")&&p.dirty(),R.set(Y.value,jt.value);}return {status:p.value,value:R}}}};dT.create=(c,i,p)=>new dT({valueType:i,keyType:c,typeName:St.ZodMap,...Nt(p)});var zT=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.set)return G(y,{code:O.invalid_type,expected:K.set,received:y.parsedType}),Pt;let z=this._def;z.minSize!==null&&y.data.size<z.minSize.value&&(G(y,{code:O.too_small,minimum:z.minSize.value,type:"set",inclusive:!0,exact:!1,message:z.minSize.message}),p.dirty()),z.maxSize!==null&&y.data.size>z.maxSize.value&&(G(y,{code:O.too_big,maximum:z.maxSize.value,type:"set",inclusive:!0,exact:!1,message:z.maxSize.message}),p.dirty());let h=this._def.valueType;function P(J){let Y=new Set;for(let jt of J){if(jt.status==="aborted")return Pt;jt.status==="dirty"&&p.dirty(),Y.add(jt.value);}return {status:p.value,value:Y}}let R=[...y.data.values()].map((J,Y)=>h._parse(new pp(y,J,y.path,Y)));return y.common.async?Promise.all(R).then(J=>P(J)):P(R)}min(i,p){return new c({...this._def,minSize:{value:i,message:ct.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:ct.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};zT.create=(c,i)=>new zT({valueType:c,minSize:null,maxSize:null,typeName:St.ZodSet,...Nt(i)});var uN=class c extends Bt{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.function)return G(p,{code:O.invalid_type,expected:K.function,received:p.parsedType}),Pt;function y(R,J){return lN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,iN(),uT].filter(Y=>!!Y),issueData:{code:O.invalid_arguments,argumentsError:J}})}function z(R,J){return lN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,iN(),uT].filter(Y=>!!Y),issueData:{code:O.invalid_return_type,returnTypeError:J}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof eg){let R=this;return kl(async function(...J){let Y=new Er([]),jt=await R._def.args.parseAsync(J,h).catch(PL=>{throw Y.addIssue(y(J,PL)),Y}),lp=await Reflect.apply(P,this,jt);return await R._def.returns._def.type.parseAsync(lp,h).catch(PL=>{throw Y.addIssue(z(lp,PL)),Y})})}else {let R=this;return kl(function(...J){let Y=R._def.args.safeParse(J,h);if(!Y.success)throw new Er([y(J,Y.error)]);let jt=Reflect.apply(P,this,Y.data),lp=R._def.returns.safeParse(jt,h);if(!lp.success)throw new Er([z(jt,lp.error)]);return lp.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Cm.create(i).rest(Lm.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,y){return new c({args:i||Cm.create([]).rest(Lm.create()),returns:p||Lm.create(),typeName:St.ZodFunction,...Nt(y)})}},SC=class extends Bt{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};SC.create=(c,i)=>new SC({getter:c,typeName:St.ZodLazy,...Nt(i)});var TC=class extends Bt{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return G(p,{received:p.data,code:O.invalid_literal,expected:this._def.value}),Pt}return {status:"valid",value:i.data}}get value(){return this._def.value}};TC.create=(c,i)=>new TC({value:c,typeName:St.ZodLiteral,...Nt(i)});function HK(c,i){return new PC({values:c,typeName:St.ZodEnum,...Nt(i)})}var PC=class c extends Bt{constructor(){super(...arguments),DT.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{expected:ye.joinValues(y),received:p.parsedType,code:O.invalid_type}),Pt}if(rN(this,DT)||_K(this,DT,new Set(this._def.values)),!rN(this,DT).has(i.data)){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{received:p.data,code:O.invalid_enum_value,options:y}),Pt}return kl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(y=>!i.includes(y)),{...this._def,...p})}};DT=new WeakMap;PC.create=HK;var WC=class extends Bt{constructor(){super(...arguments),_T.set(this,void 0);}_parse(i){let p=ye.getValidEnumValues(this._def.values),y=this._getOrReturnCtx(i);if(y.parsedType!==K.string&&y.parsedType!==K.number){let z=ye.objectValues(p);return G(y,{expected:ye.joinValues(z),received:y.parsedType,code:O.invalid_type}),Pt}if(rN(this,_T)||_K(this,_T,new Set(ye.getValidEnumValues(this._def.values))),!rN(this,_T).has(i.data)){let z=ye.objectValues(p);return G(y,{received:y.data,code:O.invalid_enum_value,options:z}),Pt}return kl(i.data)}get enum(){return this._def.values}};_T=new WeakMap;WC.create=(c,i)=>new WC({values:c,typeName:St.ZodNativeEnum,...Nt(i)});var eg=class extends Bt{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.promise&&p.common.async===!1)return G(p,{code:O.invalid_type,expected:K.promise,received:p.parsedType}),Pt;let y=p.parsedType===K.promise?p.data:Promise.resolve(p.data);return kl(y.then(z=>this._def.type.parseAsync(z,{path:p.path,errorMap:p.common.contextualErrorMap})))}};eg.create=(c,i)=>new eg({type:c,typeName:St.ZodPromise,...Nt(i)});var Lr=class extends Bt{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===St.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:y}=this._processInputParams(i),z=this._def.effect||null,h={addIssue:P=>{G(y,P),P.fatal?p.abort():p.dirty();},get path(){return y.path}};if(h.addIssue=h.addIssue.bind(h),z.type==="preprocess"){let P=z.transform(y.data,h);if(y.common.async)return Promise.resolve(P).then(async R=>{if(p.value==="aborted")return Pt;let J=await this._def.schema._parseAsync({data:R,path:y.path,parent:y});return J.status==="aborted"?Pt:J.status==="dirty"||p.value==="dirty"?cT(J.value):J});{if(p.value==="aborted")return Pt;let R=this._def.schema._parseSync({data:P,path:y.path,parent:y});return R.status==="aborted"?Pt:R.status==="dirty"||p.value==="dirty"?cT(R.value):R}}if(z.type==="refinement"){let P=R=>{let J=z.refinement(R,h);if(y.common.async)return Promise.resolve(J);if(J instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return R};if(y.common.async===!1){let R=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});return R.status==="aborted"?Pt:(R.status==="dirty"&&p.dirty(),P(R.value),{status:p.value,value:R.value})}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(R=>R.status==="aborted"?Pt:(R.status==="dirty"&&p.dirty(),P(R.value).then(()=>({status:p.value,value:R.value}))))}if(z.type==="transform")if(y.common.async===!1){let P=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});if(!ET(P))return P;let R=z.transform(P.value,h);if(R instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:R}}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(P=>ET(P)?Promise.resolve(z.transform(P.value,h)).then(R=>({status:p.value,value:R})):P);ye.assertNever(z);}};Lr.create=(c,i,p)=>new Lr({schema:c,typeName:St.ZodEffects,effect:i,...Nt(p)});Lr.createWithPreprocess=(c,i,p)=>new Lr({schema:i,effect:{type:"preprocess",transform:c},typeName:St.ZodEffects,...Nt(p)});var rp=class extends Bt{_parse(i){return this._getType(i)===K.undefined?kl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};rp.create=(c,i)=>new rp({innerType:c,typeName:St.ZodOptional,...Nt(i)});var Am=class extends Bt{_parse(i){return this._getType(i)===K.null?kl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Am.create=(c,i)=>new Am({innerType:c,typeName:St.ZodNullable,...Nt(i)});var UC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return p.parsedType===K.undefined&&(y=this._def.defaultValue()),this._def.innerType._parse({data:y,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};UC.create=(c,i)=>new UC({innerType:c,typeName:St.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Nt(i)});var RC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y={...p,common:{...p.common,issues:[]}},z=this._def.innerType._parse({data:y.data,path:y.path,parent:{...y}});return LT(z)?z.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new Er(y.common.issues)},input:y.data})})):{status:"valid",value:z.status==="valid"?z.value:this._def.catchValue({get error(){return new Er(y.common.issues)},input:y.data})}}removeCatch(){return this._def.innerType}};RC.create=(c,i)=>new RC({innerType:c,typeName:St.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Nt(i)});var mT=class extends Bt{_parse(i){if(this._getType(i)!==K.nan){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:K.nan,received:y.parsedType}),Pt}return {status:"valid",value:i.data}}};mT.create=c=>new mT({typeName:St.ZodNaN,...Nt(c)});var bst=Symbol("zod_brand"),VT=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return this._def.type._parse({data:y,path:p.path,parent:p})}unwrap(){return this._def.type}},HT=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:y.data,path:y.path,parent:y});return h.status==="aborted"?Pt:h.status==="dirty"?(p.dirty(),cT(h.value)):this._def.out._parseAsync({data:h.value,path:y.path,parent:y})})();{let z=this._def.in._parseSync({data:y.data,path:y.path,parent:y});return z.status==="aborted"?Pt:z.status==="dirty"?(p.dirty(),{status:"dirty",value:z.value}):this._def.out._parseSync({data:z.value,path:y.path,parent:y})}}static create(i,p){return new c({in:i,out:p,typeName:St.ZodPipeline})}},kC=class extends Bt{_parse(i){let p=this._def.innerType._parse(i),y=z=>(ET(z)&&(z.value=Object.freeze(z.value)),z);return LT(p)?p.then(z=>y(z)):y(p)}unwrap(){return this._def.innerType}};kC.create=(c,i)=>new kC({innerType:c,typeName:St.ZodReadonly,...Nt(i)});function QK(c,i={},p){return c?tg.create().superRefine((y,z)=>{var h,P;if(!c(y)){let R=typeof i=="function"?i(y):typeof i=="string"?{message:i}:i,J=(P=(h=R.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:!0,Y=typeof R=="string"?{message:R}:R;z.addIssue({code:"custom",...Y,fatal:J});}}):tg.create()}var Ist={object:Nr.lazycreate},St;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(St||(St={}));var gst=(c,i={message:`Input not instance of ${c.name}`})=>QK(p=>p instanceof c,i),YK=XI.create,GK=zC.create,Cst=mT.create,Ast=mC.create,$K=hC.create,Sst=bC.create,Tst=yT.create,Pst=IC.create,Wst=gC.create,Ust=tg.create,Rst=Lm.create,kst=sp.create,xst=sT.create,jst=Vm.create,Mst=Nr.create,Zst=Nr.strictCreate,vst=CC.create,Ost=pN.create,fst=AC.create,wst=Cm.create,Nst=cN.create,Bst=dT.create,qst=zT.create,Fst=uN.create,Dst=SC.create,_st=TC.create,Est=PC.create,Lst=WC.create,Vst=eg.create,FK=Lr.create,Hst=rp.create,Qst=Am.create,Yst=Lr.createWithPreprocess,Gst=HT.create,$st=()=>YK().optional(),Jst=()=>GK().optional(),Kst=()=>$K().optional(),Xst={string:c=>XI.create({...c,coerce:!0}),number:c=>zC.create({...c,coerce:!0}),boolean:c=>hC.create({...c,coerce:!0}),bigint:c=>mC.create({...c,coerce:!0}),date:c=>bC.create({...c,coerce:!0})},tdt=Pt,t=Object.freeze({__proto__:null,defaultErrorMap:uT,setErrorMap:tst,getErrorMap:iN,makeIssue:lN,EMPTY_PATH:est,addIssueToContext:G,ParseStatus:yl,INVALID:Pt,DIRTY:cT,OK:kl,isAborted:RL,isDirty:kL,isValid:ET,isAsync:LT,get util(){return ye},get objectUtil(){return UL},ZodParsedType:K,getParsedType:KI,ZodType:Bt,datetimeRegex:VK,ZodString:XI,ZodNumber:zC,ZodBigInt:mC,ZodBoolean:hC,ZodDate:bC,ZodSymbol:yT,ZodUndefined:IC,ZodNull:gC,ZodAny:tg,ZodUnknown:Lm,ZodNever:sp,ZodVoid:sT,ZodArray:Vm,ZodObject:Nr,ZodUnion:CC,ZodDiscriminatedUnion:pN,ZodIntersection:AC,ZodTuple:Cm,ZodRecord:cN,ZodMap:dT,ZodSet:zT,ZodFunction:uN,ZodLazy:SC,ZodLiteral:TC,ZodEnum:PC,ZodNativeEnum:WC,ZodPromise:eg,ZodEffects:Lr,ZodTransformer:Lr,ZodOptional:rp,ZodNullable:Am,ZodDefault:UC,ZodCatch:RC,ZodNaN:mT,BRAND:bst,ZodBranded:VT,ZodPipeline:HT,ZodReadonly:kC,custom:QK,Schema:Bt,ZodSchema:Bt,late:Ist,get ZodFirstPartyTypeKind(){return St},coerce:Xst,any:Ust,array:jst,bigint:Ast,boolean:$K,date:Sst,discriminatedUnion:Ost,effect:FK,enum:Est,function:Fst,instanceof:gst,intersection:fst,lazy:Dst,literal:_st,map:Bst,nan:Cst,nativeEnum:Lst,never:kst,null:Wst,nullable:Qst,number:GK,object:Mst,oboolean:Kst,onumber:Jst,optional:Hst,ostring:$st,pipeline:Gst,preprocess:Yst,promise:Vst,record:Nst,set:qst,strictObject:Zst,string:YK,symbol:Tst,transformer:FK,tuple:wst,undefined:Pst,union:vst,unknown:Rst,void:xst,NEVER:tdt,ZodIssueCode:O,quotelessJson:Xyt,ZodError:Er});var edt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),og=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium"]),ag=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),ng=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),ig=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),lg=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),rg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),pg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),cg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),ug=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),yg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),sg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),dg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),zg=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),mg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),hg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),bg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Ig=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),gg=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Cg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Ag=t.enum(["id","name","description","icon","createdAt","updatedAt"]),Sg=t.enum(["id","name","description","createdAt","updatedAt"]),Tg=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),Pg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),Wg=t.enum(["id","restaurantId","date","createdById","createdAt","updatedAt"]),Ug=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),Rg=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),kg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),xg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),jg=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),Mg=t.enum(["id","name","description"]),Zg=t.enum(["id","ingredientId","allergenId"]),vg=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),Og=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),fg=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),wg=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),Ng=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),Bg=t.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),qg=t.enum(["id","userId","code","token","expiresAt","createdAt"]),Fg=t.enum(["id","name","imageUrl","category","restaurantId"]),Dg=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel"]),_g=t.enum(["id","name","category","price","dietaryRestrictionId"]),Eg=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),Lg=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),Vg=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),Hg=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),Qg=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),Yg=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),Gg=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),$g=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),Jg=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),Kg=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),Xg=t.enum(["id","userId","startTime","endTime","status"]),tC=t.enum(["id","name","status","createdAt","updatedAt"]),eC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),oC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),aC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),nC=t.enum(["id","menuItemId","recipeId","joinAt"]),iC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),lC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),rC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),pC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),Pj=t.enum(["default","insensitive"]),JK=t.enum(["first","last"]),_t=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),Ot=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),ne=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),ft=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),qt=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Ut=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),Rt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),odt=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED"]),ie=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),le=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),re=t.enum(["UNAVAILABLE","PREFERRED"]),vt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),kt=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),Mt=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),x=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Zt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Et=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),X=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),W=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),pe=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),adt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}),ndt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),idt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ldt=t.object({type:pe,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),rdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),pdt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),cdt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),udt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ydt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),sdt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ddt=t.object({status:Ot,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),zdt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),mdt=t.object({type:ne,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hdt=t.object({frequency:ft,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),bdt=t.object({type:_t,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Idt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gdt=t.object({status:qt,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Cdt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Adt=t.object({source:Ut,status:Rt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Sdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Tdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Udt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rdt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kdt=t.object({taskType:ie,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xdt=t.object({dayOfWeek:le,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jdt=t.object({constraintsType:re,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mdt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),vdt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),Odt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fdt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wdt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ndt=t.object({type:vt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bdt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),qdt=t.object({role:x,id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),verified:t.boolean(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fdt=t.object({id:t.string().uuid(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),Ddt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),_dt=t.object({skillLevel:W,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),Edt=t.object({id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().nullable()}),Ldt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),Vdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),Hdt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),Qdt=t.object({type:kt,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),Ydt=t.object({status:Mt,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),Gdt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),$dt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),Jdt=t.object({status:Zt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Kdt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),Xdt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),tzt=t.object({status:Et,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),ezt=t.object({status:X,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ozt=t.object({status:X,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),azt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),nzt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),izt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),lzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),rzt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),pzt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),czt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ps=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),mQ=t.object({select:t.lazy(()=>Ws).optional(),include:t.lazy(()=>Ps).optional()}).strict(),Ws=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Us=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),uzt=t.object({select:t.lazy(()=>Rs).optional(),include:t.lazy(()=>Us).optional()}).strict(),Rs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),ks=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),hQ=t.object({select:t.lazy(()=>xs).optional(),include:t.lazy(()=>ks).optional()}).strict(),xs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),js=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),yzt=t.object({select:t.lazy(()=>Ms).optional(),include:t.lazy(()=>js).optional()}).strict(),Ms=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Zs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),szt=t.object({select:t.lazy(()=>vs).optional(),include:t.lazy(()=>Zs).optional()}).strict(),vs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Os=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),dzt=t.object({select:t.lazy(()=>fs).optional(),include:t.lazy(()=>Os).optional()}).strict(),fs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),ws=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),zzt=t.object({select:t.lazy(()=>Ns).optional(),include:t.lazy(()=>ws).optional()}).strict(),Ns=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Bs=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),mzt=t.object({select:t.lazy(()=>qs).optional(),include:t.lazy(()=>Bs).optional()}).strict(),qs=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),Fs=t.object({menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>IQ)]).optional()}).strict(),bQ=t.object({select:t.lazy(()=>Ds).optional(),include:t.lazy(()=>Fs).optional()}).strict(),IQ=t.object({select:t.lazy(()=>KK).nullish()}).strict(),KK=t.object({menuItems:t.boolean().optional()}).strict(),Ds=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>IQ)]).optional()}).strict(),_s=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>gQ)]).optional()}).strict(),Wj=t.object({select:t.lazy(()=>Es).optional(),include:t.lazy(()=>_s).optional()}).strict(),gQ=t.object({select:t.lazy(()=>XK).nullish()}).strict(),XK=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),Es=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>gQ)]).optional()}).strict(),Ls=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CQ)]).optional()}).strict(),Uj=t.object({select:t.lazy(()=>Vs).optional(),include:t.lazy(()=>Ls).optional()}).strict(),CQ=t.object({select:t.lazy(()=>tX).nullish()}).strict(),tX=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),Vs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CQ)]).optional()}).strict(),Hs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),hzt=t.object({select:t.lazy(()=>Qs).optional(),include:t.lazy(()=>Hs).optional()}).strict(),Qs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),Ys=t.object({equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional()}).strict(),bzt=t.object({select:t.lazy(()=>Gs).optional(),include:t.lazy(()=>Ys).optional()}).strict(),Gs=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional()}).strict(),$s=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>AQ)]).optional()}).strict(),Rj=t.object({select:t.lazy(()=>Js).optional(),include:t.lazy(()=>$s).optional()}).strict(),AQ=t.object({select:t.lazy(()=>eX).nullish()}).strict(),eX=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),Js=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>AQ)]).optional()}).strict(),Ks=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),SQ=t.object({select:t.lazy(()=>Xs).optional(),include:t.lazy(()=>Ks).optional()}).strict(),TQ=t.object({select:t.lazy(()=>oX).nullish()}).strict(),oX=t.object({completions:t.boolean().optional()}).strict(),Xs=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),td=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>WQ)]).optional()}).strict(),PQ=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),WQ=t.object({select:t.lazy(()=>aX).nullish()}).strict(),aX=t.object({items:t.boolean().optional()}).strict(),ed=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>WQ)]).optional()}).strict(),od=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>PQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>SQ)]).optional()}).strict(),Izt=t.object({select:t.lazy(()=>ad).optional(),include:t.lazy(()=>od).optional()}).strict(),ad=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>PQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>SQ)]).optional()}).strict(),nd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional()}).strict(),gzt=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>nd).optional()}).strict(),id=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional()}).strict(),ld=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Czt=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),rd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),pd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),UQ=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),RQ=t.object({select:t.lazy(()=>nX).nullish()}).strict(),nX=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),cd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),ud=t.object({recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),Azt=t.object({select:t.lazy(()=>yd).optional(),include:t.lazy(()=>ud).optional()}).strict(),kQ=t.object({select:t.lazy(()=>iX).nullish()}).strict(),iX=t.object({recipes:t.boolean().optional()}).strict(),yd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),sd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Szt=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>sd).optional()}).strict(),dd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Tzt=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),md=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),hd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),xQ=t.object({select:t.lazy(()=>bd).optional(),include:t.lazy(()=>hd).optional()}).strict(),jQ=t.object({select:t.lazy(()=>lX).nullish()}).strict(),lX=t.object({items:t.boolean().optional()}).strict(),bd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),Id=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>xQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Pzt=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),gd=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>xQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Cd=t.object({shift:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),Wzt=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),Ad=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),Sd=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Uzt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Pd=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Rzt=t.object({select:t.lazy(()=>Wd).optional(),include:t.lazy(()=>Pd).optional()}).strict(),Wd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ud=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),kzt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Ud).optional()}).strict(),Rd=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),kd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),MQ=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),ZQ=t.object({select:t.lazy(()=>rX).nullish()}).strict(),rX=t.object({ingredients:t.boolean().optional()}).strict(),xd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),jd=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),xzt=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),Md=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),Zd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),jzt=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),vd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),Bm=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),Od=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),kj=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),vQ=t.object({select:t.lazy(()=>pX).nullish()}).strict(),pX=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),fd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),wd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),mI=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),OQ=t.object({select:t.lazy(()=>cX).nullish()}).strict(),cX=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Nd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),Bd=t.object({organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),to=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),fQ=t.object({select:t.lazy(()=>uX).nullish()}).strict(),uX=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),equipment:t.boolean().optional(),qualityChecklist:t.boolean().optional(),qustomerFeedback:t.boolean().optional()}).strict(),qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),Fd=t.object({organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),Yt=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),wQ=t.object({select:t.lazy(()=>yX).nullish()}).strict(),yX=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),productionPlanItem:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraint:t.boolean().optional(),inventoryWithdrawal:t.boolean().optional(),checklistComplete:t.boolean().optional(),customerFeedback:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransaction:t.boolean().optional(),StockCount:t.boolean().optional()}).strict(),Dd=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),passwordHash:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),verified:t.boolean().optional(),role:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),_d=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Mzt=t.object({select:t.lazy(()=>Ed).optional(),include:t.lazy(()=>_d).optional()}).strict(),Ed=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),code:t.boolean().optional(),token:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ld=t.object({recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),NQ=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),BQ=t.object({select:t.lazy(()=>sX).nullish()}).strict(),sX=t.object({recipes:t.boolean().optional()}).strict(),Vd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),Hd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>NQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>mK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>hK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>bK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>mQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>dK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>hQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>zK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Gt=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),qQ=t.object({select:t.lazy(()=>dX).nullish()}).strict(),dX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipment:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),Qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>NQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>rS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>mK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>hK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>bK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>mQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>dK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>hQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>zK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Yd=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>UQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),Gr=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),FQ=t.object({select:t.lazy(()=>zX).nullish()}).strict(),zX=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecord:t.boolean().optional(),IngredientAllergen:t.boolean().optional(),SupplierPriceHistory:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>UQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),$d=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional()}).strict(),Zzt=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),Jd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional()}).strict(),Kd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),DQ=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),_Q=t.object({select:t.lazy(()=>mX).nullish()}).strict(),mX=t.object({equipment:t.boolean().optional()}).strict(),Xd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>KS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),tz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),pS=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),EQ=t.object({select:t.lazy(()=>hX).nullish()}).strict(),hX=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),oz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),vzt=t.object({select:t.lazy(()=>az).optional(),include:t.lazy(()=>oz).optional()}).strict(),az=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),nz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),LQ=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>nz).optional()}).strict(),VQ=t.object({select:t.lazy(()=>bX).nullish()}).strict(),bX=t.object({items:t.boolean().optional()}).strict(),iz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>mI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),lz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>LQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>pS)]).optional()}).strict(),Ozt=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),rz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>LQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>pS)]).optional()}).strict(),pz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),HQ=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),cz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),uz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),QQ=t.object({select:t.lazy(()=>yz).optional(),include:t.lazy(()=>uz).optional()}).strict(),YQ=t.object({select:t.lazy(()=>IX).nullish()}).strict(),IX=t.object({items:t.boolean().optional()}).strict(),yz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),sz=t.object({order:t.union([t.boolean(),t.lazy(()=>QQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional()}).strict(),fzt=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>sz).optional()}).strict(),dz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>QQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Gr)]).optional()}).strict(),zz=t.object({orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),xj=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),GQ=t.object({select:t.lazy(()=>gX).nullish()}).strict(),gX=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),mz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),hz=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),$Q=t.object({select:t.lazy(()=>bz).optional(),include:t.lazy(()=>hz).optional()}).strict(),JQ=t.object({select:t.lazy(()=>CX).nullish()}).strict(),CX=t.object({ShiftTask:t.boolean().optional()}).strict(),bz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),Iz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),KQ=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),XQ=t.object({select:t.lazy(()=>AX).nullish()}).strict(),AX=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),Cz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>KQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),wzt=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),Az=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>KQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Sz=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Nzt=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),Tz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Pz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>IK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>tY)]).optional()}).strict(),jj=t.object({select:t.lazy(()=>Wz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),tY=t.object({select:t.lazy(()=>SX).nullish()}).strict(),SX=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),Wz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>JI)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>IK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>tY)]).optional()}).strict(),Uz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Bzt=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Uz).optional()}).strict(),Rz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),kz=t.object({menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>bQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>oY)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>eY)]).optional()}).strict(),$r=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),eY=t.object({select:t.lazy(()=>TX).nullish()}).strict(),TX=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),xz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>bQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>ip)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>oY)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>eY)]).optional()}).strict(),jz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),oY=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),Zz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),qzt=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),vz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Oz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Fzt=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Sm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),vl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),jL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),_count:t.lazy(()=>PX).optional(),_avg:t.lazy(()=>WX).optional(),_max:t.lazy(()=>UX).optional(),_min:t.lazy(()=>RX).optional(),_sum:t.lazy(()=>kX).optional()}).strict(),xC=t.object({AND:t.union([t.lazy(()=>xC),t.lazy(()=>xC).array()]).optional(),OR:t.lazy(()=>xC).array().optional(),NOT:t.union([t.lazy(()=>xC),t.lazy(()=>xC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>At),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>ut),t.string()]).optional(),calories:t.union([t.lazy(()=>At),t.number()]).optional(),protein:t.union([t.lazy(()=>At),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>At),t.number()]).optional(),fat:t.union([t.lazy(()=>At),t.number()]).optional(),fiber:t.union([t.lazy(()=>At),t.number()]).optional(),sugar:t.union([t.lazy(()=>At),t.number()]).optional(),sodium:t.union([t.lazy(()=>At),t.number()]).optional()}).strict(),Ga=t.object({AND:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),OR:t.lazy(()=>Ga).array().optional(),NOT:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Hm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),OR:t.lazy(()=>Ga).array().optional(),NOT:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),ML=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>xX).optional(),_avg:t.lazy(()=>jX).optional(),_max:t.lazy(()=>MX).optional(),_min:t.lazy(()=>ZX).optional(),_sum:t.lazy(()=>vX).optional()}).strict(),jC=t.object({AND:t.union([t.lazy(()=>jC),t.lazy(()=>jC).array()]).optional(),OR:t.lazy(()=>jC).array().optional(),NOT:t.union([t.lazy(()=>jC),t.lazy(()=>jC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),threshold:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),we=t.object({AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>u),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Tm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),Ol=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>u),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),ZL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>OX).optional(),_avg:t.lazy(()=>fX).optional(),_max:t.lazy(()=>wX).optional(),_min:t.lazy(()=>NX).optional(),_sum:t.lazy(()=>BX).optional()}).strict(),MC=t.object({AND:t.union([t.lazy(()=>MC),t.lazy(()=>MC).array()]).optional(),OR:t.lazy(()=>MC).array().optional(),NOT:t.union([t.lazy(()=>MC),t.lazy(()=>MC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>ut),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),$a=t.object({AND:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),OR:t.lazy(()=>$a).array().optional(),NOT:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>VN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Qm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),de=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),OR:t.lazy(()=>$a).array().optional(),NOT:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>VN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),vL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qX).optional(),_avg:t.lazy(()=>FX).optional(),_max:t.lazy(()=>DX).optional(),_min:t.lazy(()=>_X).optional(),_sum:t.lazy(()=>EX).optional()}).strict(),ZC=t.object({AND:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),OR:t.lazy(()=>ZC).array().optional(),NOT:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>ut),t.string()]).optional(),type:t.union([t.lazy(()=>LX),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ja=t.object({AND:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),OR:t.lazy(()=>Ja).array().optional(),NOT:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Ym=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),ze=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),OR:t.lazy(()=>Ja).array().optional(),NOT:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),OL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>VX).optional(),_avg:t.lazy(()=>HX).optional(),_max:t.lazy(()=>QX).optional(),_min:t.lazy(()=>YX).optional(),_sum:t.lazy(()=>GX).optional()}).strict(),vC=t.object({AND:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),OR:t.lazy(()=>vC).array().optional(),NOT:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>At),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>At),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ka=t.object({AND:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),OR:t.lazy(()=>Ka).array().optional(),NOT:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Gm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),OR:t.lazy(()=>Ka).array().optional(),NOT:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),fL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>$X).optional(),_avg:t.lazy(()=>JX).optional(),_max:t.lazy(()=>KX).optional(),_min:t.lazy(()=>XX).optional(),_sum:t.lazy(()=>ttt).optional()}).strict(),OC=t.object({AND:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),OR:t.lazy(()=>OC).array().optional(),NOT:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>At),t.number()]).optional(),actualYield:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Xa=t.object({AND:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),OR:t.lazy(()=>Xa).array().optional(),NOT:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),$m=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),OR:t.lazy(()=>Xa).array().optional(),NOT:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),wL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ett).optional(),_avg:t.lazy(()=>ott).optional(),_max:t.lazy(()=>att).optional(),_min:t.lazy(()=>ntt).optional(),_sum:t.lazy(()=>itt).optional()}).strict(),fC=t.object({AND:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),OR:t.lazy(()=>fC).array().optional(),NOT:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>At),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>At),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),tn=t.object({AND:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),OR:t.lazy(()=>tn).array().optional(),NOT:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Ml).optional()}).strict(),st=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),OR:t.lazy(()=>tn).array().optional(),NOT:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional()}).strict()),NL=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ltt).optional(),_avg:t.lazy(()=>rtt).optional(),_max:t.lazy(()=>ptt).optional(),_min:t.lazy(()=>ctt).optional(),_sum:t.lazy(()=>utt).optional()}).strict(),wC=t.object({AND:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),OR:t.lazy(()=>wC).array().optional(),NOT:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),total:t.union([t.lazy(()=>At),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number()]).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),menuItems:t.lazy(()=>II).optional()}).strict(),Pm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>Ep).optional(),menuItems:t.lazy(()=>Qj).optional()}).strict(),$t=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>yN)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>yN)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>yN).optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>u),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),menuItems:t.lazy(()=>II).optional()}).strict()),BL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ytt).optional(),_avg:t.lazy(()=>stt).optional(),_max:t.lazy(()=>dtt).optional(),_min:t.lazy(()=>ztt).optional(),_sum:t.lazy(()=>mtt).optional()}).strict(),NC=t.object({AND:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),OR:t.lazy(()=>NC).array().optional(),NOT:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ee=t.object({AND:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),OR:t.lazy(()=>ee).array().optional(),NOT:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>uS).optional(),instructions:t.lazy(()=>Yj).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict(),Bp=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional(),ingredients:t.lazy(()=>HN).optional(),instructions:t.lazy(()=>H1).optional(),createdBy:t.lazy(()=>Ke).optional(),approvedBy:t.lazy(()=>Ke).optional()}).strict(),w=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>sN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>sN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>sN).optional(),AND:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),OR:t.lazy(()=>ee).array().optional(),NOT:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>uS).optional(),instructions:t.lazy(()=>Yj).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict()),qL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>htt).optional(),_avg:t.lazy(()=>btt).optional(),_max:t.lazy(()=>Itt).optional(),_min:t.lazy(()=>gtt).optional(),_sum:t.lazy(()=>Ctt).optional()}).strict(),BC=t.object({AND:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),OR:t.lazy(()=>BC).array().optional(),NOT:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ke=t.object({AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>QN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>yS).optional(),maintenanceLogs:t.lazy(()=>Q1).optional()}).strict(),qp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),recipes:t.lazy(()=>YN).optional(),maintenanceLogs:t.lazy(()=>Att).optional()}).strict(),Lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>QN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>yS).optional(),maintenanceLogs:t.lazy(()=>Q1).optional()}).strict()),FL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Stt).optional(),_avg:t.lazy(()=>Ttt).optional(),_max:t.lazy(()=>Ptt).optional(),_min:t.lazy(()=>Wtt).optional(),_sum:t.lazy(()=>Utt).optional()}).strict(),qC=t.object({AND:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),OR:t.lazy(()=>qC).array().optional(),NOT:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>Rtt),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),en=t.object({AND:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),OR:t.lazy(()=>en).array().optional(),NOT:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional(),RecipeInstruction:t.union([t.lazy(()=>Y1),t.lazy(()=>Oe)]).optional().nullable()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),equipment:t.lazy(()=>qp).optional(),RecipeInstruction:t.lazy(()=>Mm).optional()}).strict(),B=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>dN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>dN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>dN).optional(),AND:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),OR:t.lazy(()=>en).array().optional(),NOT:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional(),RecipeInstruction:t.union([t.lazy(()=>Y1),t.lazy(()=>Oe)]).optional().nullable()}).strict()),DL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>ktt).optional(),_avg:t.lazy(()=>xtt).optional(),_max:t.lazy(()=>jtt).optional(),_min:t.lazy(()=>Mtt).optional(),_sum:t.lazy(()=>Ztt).optional()}).strict(),FC=t.object({AND:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),OR:t.lazy(()=>FC).array().optional(),NOT:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),on=t.object({AND:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),OR:t.lazy(()=>on).array().optional(),NOT:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>qp).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),OR:t.lazy(()=>on).array().optional(),NOT:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional()}).strict()),_L=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vtt).optional(),_avg:t.lazy(()=>Ott).optional(),_max:t.lazy(()=>ftt).optional(),_min:t.lazy(()=>wtt).optional(),_sum:t.lazy(()=>Ntt).optional()}).strict(),DC=t.object({AND:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),OR:t.lazy(()=>DC).array().optional(),NOT:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>Btt),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),cost:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>ut),t.string()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),xe=t.object({AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>$N),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>G1).optional(),completions:t.lazy(()=>$j).optional()}).strict(),Fp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),items:t.lazy(()=>qtt).optional(),completions:t.lazy(()=>$1).optional()}).strict(),Vt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>$N),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>G1).optional(),completions:t.lazy(()=>$j).optional()}).strict()),EL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ftt).optional(),_avg:t.lazy(()=>Dtt).optional(),_max:t.lazy(()=>_tt).optional(),_min:t.lazy(()=>Ett).optional(),_sum:t.lazy(()=>Ltt).optional()}).strict(),_C=t.object({AND:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),OR:t.lazy(()=>_C).array().optional(),NOT:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Vtt),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Le=t.object({AND:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),OR:t.lazy(()=>Le).array().optional(),NOT:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>JN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completions:t.lazy(()=>Kj).optional()}).strict(),Wm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Fp).optional(),completions:t.lazy(()=>J1).optional()}).strict(),Jt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),OR:t.lazy(()=>Le).array().optional(),NOT:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number().int()]).optional(),type:t.union([t.lazy(()=>JN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completions:t.lazy(()=>Kj).optional()}).strict()),LL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Htt).optional(),_avg:t.lazy(()=>Qtt).optional(),_max:t.lazy(()=>Ytt).optional(),_min:t.lazy(()=>Gtt).optional(),_sum:t.lazy(()=>$tt).optional()}).strict(),EC=t.object({AND:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),OR:t.lazy(()=>EC).array().optional(),NOT:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>Jtt),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ve=t.object({AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),completedById:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>Kj).optional()}).strict(),Um=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Fp).optional(),completedBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>J1).optional()}).strict(),et=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>Kj).optional()}).strict()),VL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ktt).optional(),_avg:t.lazy(()=>Xtt).optional(),_max:t.lazy(()=>tet).optional(),_min:t.lazy(()=>eet).optional(),_sum:t.lazy(()=>oet).optional()}).strict(),LC=t.object({AND:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),OR:t.lazy(()=>LC).array().optional(),NOT:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),an=t.object({AND:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),OR:t.lazy(()=>an).array().optional(),NOT:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>KN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>K1),t.lazy(()=>Ve)]).optional(),checklistItem:t.union([t.lazy(()=>X1),t.lazy(()=>Le)]).optional()}).strict(),th=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>Um).optional(),checklistItem:t.lazy(()=>Wm).optional()}).strict(),dt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),OR:t.lazy(()=>an).array().optional(),NOT:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>KN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>K1),t.lazy(()=>Ve)]).optional(),checklistItem:t.union([t.lazy(()=>X1),t.lazy(()=>Le)]).optional()}).strict()),HL=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>aet).optional(),_avg:t.lazy(()=>net).optional(),_max:t.lazy(()=>iet).optional(),_min:t.lazy(()=>ret).optional(),_sum:t.lazy(()=>pet).optional()}).strict(),VC=t.object({AND:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),OR:t.lazy(()=>VC).array().optional(),NOT:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>cet),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),nn=t.object({AND:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),OR:t.lazy(()=>nn).array().optional(),NOT:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional()}).strict(),eh=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>_p).optional(),ingredient:t.lazy(()=>jl).optional()}).strict(),zt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),OR:t.lazy(()=>nn).array().optional(),NOT:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional()}).strict()),QL=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uet).optional(),_avg:t.lazy(()=>yet).optional(),_max:t.lazy(()=>set).optional(),_min:t.lazy(()=>det).optional(),_sum:t.lazy(()=>zet).optional()}).strict(),HC=t.object({AND:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),OR:t.lazy(()=>HC).array().optional(),NOT:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),startDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ln=t.object({AND:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),OR:t.lazy(()=>ln).array().optional(),NOT:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>XN),t.lazy(()=>Ut)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict(),oh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Ml).optional(),respondedBy:t.lazy(()=>Ke).optional()}).strict(),q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),OR:t.lazy(()=>ln).array().optional(),NOT:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>XN),t.lazy(()=>Ut)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict()),YL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>met).optional(),_avg:t.lazy(()=>het).optional(),_max:t.lazy(()=>bet).optional(),_min:t.lazy(()=>Iet).optional(),_sum:t.lazy(()=>get).optional()}).strict(),QC=t.object({AND:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),OR:t.lazy(()=>QC).array().optional(),NOT:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Cet),t.lazy(()=>Ut)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>Aet),t.lazy(()=>Rt)]).optional(),responseText:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItems:t.lazy(()=>II).optional(),recipes:t.lazy(()=>Xr).optional(),ingredients:t.lazy(()=>eM).optional()}).strict(),Rm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>Qj).optional(),recipes:t.lazy(()=>sS).optional(),ingredients:t.lazy(()=>t2).optional()}).strict(),ot=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItems:t.lazy(()=>II).optional(),recipes:t.lazy(()=>Xr).optional(),ingredients:t.lazy(()=>eM).optional()}).strict()),GL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Tet).optional(),_avg:t.lazy(()=>Pet).optional(),_max:t.lazy(()=>Wet).optional(),_min:t.lazy(()=>Uet).optional(),_sum:t.lazy(()=>Ret).optional()}).strict(),YC=t.object({AND:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),OR:t.lazy(()=>YC).array().optional(),NOT:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),rn=t.object({AND:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),OR:t.lazy(()=>rn).array().optional(),NOT:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>Xr).optional()}).strict(),ah=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>sS).optional()}).strict(),Ie=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),OR:t.lazy(()=>rn).array().optional(),NOT:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>Xr).optional()}).strict()),$L=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ket).optional(),_avg:t.lazy(()=>xet).optional(),_max:t.lazy(()=>jet).optional(),_min:t.lazy(()=>Met).optional(),_sum:t.lazy(()=>Zet).optional()}).strict(),GC=t.object({AND:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),OR:t.lazy(()=>GC).array().optional(),NOT:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),pn=t.object({AND:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),OR:t.lazy(()=>pn).array().optional(),NOT:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),nh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Ml).optional(),recordedBy:t.lazy(()=>Ke).optional()}).strict(),F=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),OR:t.lazy(()=>pn).array().optional(),NOT:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),JL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vet).optional(),_avg:t.lazy(()=>Oet).optional(),_max:t.lazy(()=>fet).optional(),_min:t.lazy(()=>wet).optional(),_sum:t.lazy(()=>Net).optional()}).strict(),$C=t.object({AND:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),OR:t.lazy(()=>$C).array().optional(),NOT:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>ut),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),cn=t.object({AND:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),OR:t.lazy(()=>cn).array().optional(),NOT:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),ih=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),ingrediente:t.lazy(()=>jl).optional(),recordedBy:t.lazy(()=>Ke).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),OR:t.lazy(()=>cn).array().optional(),NOT:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),KL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Bet).optional(),_avg:t.lazy(()=>qet).optional(),_max:t.lazy(()=>Fet).optional(),_min:t.lazy(()=>Det).optional(),_sum:t.lazy(()=>_et).optional()}).strict(),JC=t.object({AND:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),OR:t.lazy(()=>JC).array().optional(),NOT:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),reason:t.union([t.lazy(()=>ut),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),He=t.object({AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>dS).optional()}).strict(),km=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),createdBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>eB).optional()}).strict(),at=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>dS).optional()}).strict()),XL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Eet).optional(),_avg:t.lazy(()=>Let).optional(),_max:t.lazy(()=>Vet).optional(),_min:t.lazy(()=>Het).optional(),_sum:t.lazy(()=>Qet).optional()}).strict(),KC=t.object({AND:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),OR:t.lazy(()=>KC).array().optional(),NOT:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),un=t.object({AND:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),OR:t.lazy(()=>un).array().optional(),NOT:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>e2),t.lazy(()=>He)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict(),lh=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>km).optional(),recipe:t.lazy(()=>Xe).optional(),assignedTo:t.lazy(()=>Ke).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),OR:t.lazy(()=>un).array().optional(),NOT:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>e2),t.lazy(()=>He)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable()}).strict()),tV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yet).optional(),_avg:t.lazy(()=>Get).optional(),_max:t.lazy(()=>$et).optional(),_min:t.lazy(()=>Jet).optional(),_sum:t.lazy(()=>Ket).optional()}).strict(),XC=t.object({AND:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),OR:t.lazy(()=>XC).array().optional(),NOT:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),yn=t.object({AND:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),OR:t.lazy(()=>yn).array().optional(),NOT:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number()]).optional(),taskType:t.union([t.lazy(()=>oB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>o2),t.lazy(()=>$e)]).optional()}).strict(),rh=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>fm).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),OR:t.lazy(()=>yn).array().optional(),NOT:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>oB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>o2),t.lazy(()=>$e)]).optional()}).strict()),eV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xet).optional(),_avg:t.lazy(()=>tot).optional(),_max:t.lazy(()=>eot).optional(),_min:t.lazy(()=>oot).optional(),_sum:t.lazy(()=>aot).optional()}).strict(),tA=t.object({AND:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),OR:t.lazy(()=>tA).array().optional(),NOT:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>not),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),sn=t.object({AND:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),OR:t.lazy(()=>sn).array().optional(),NOT:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>aB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),ph=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),OR:t.lazy(()=>sn).array().optional(),NOT:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>aB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),oV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>iot).optional(),_avg:t.lazy(()=>lot).optional(),_max:t.lazy(()=>rot).optional(),_min:t.lazy(()=>pot).optional(),_sum:t.lazy(()=>cot).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>uot),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),dn=t.object({AND:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),OR:t.lazy(()=>dn).array().optional(),NOT:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>nB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),ch=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),OR:t.lazy(()=>dn).array().optional(),NOT:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>nB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),aV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>yot).optional(),_avg:t.lazy(()=>sot).optional(),_max:t.lazy(()=>dot).optional(),_min:t.lazy(()=>zot).optional(),_sum:t.lazy(()=>mot).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>hot),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),zn=t.object({AND:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),OR:t.lazy(()=>zn).array().optional(),NOT:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional(),recipe:t.union([t.lazy(()=>a2),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),uh=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>cp).optional(),recipe:t.lazy(()=>Xe).optional(),createdBy:t.lazy(()=>Ke).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),OR:t.lazy(()=>zn).array().optional(),NOT:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional(),recipe:t.union([t.lazy(()=>a2),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),nV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>bot).optional(),_avg:t.lazy(()=>Iot).optional(),_max:t.lazy(()=>got).optional(),_min:t.lazy(()=>Cot).optional(),_sum:t.lazy(()=>Aot).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),recipeId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),lo=t.object({AND:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),OR:t.lazy(()=>lo).array().optional(),NOT:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>oM).optional()}).strict(),xm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),ingredients:t.lazy(()=>n2).optional()}).strict(),Jr=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),OR:t.lazy(()=>lo).array().optional(),NOT:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>oM).optional()}).strict()),iV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Sot).optional(),_avg:t.lazy(()=>Tot).optional(),_max:t.lazy(()=>Pot).optional(),_min:t.lazy(()=>Wot).optional(),_sum:t.lazy(()=>Uot).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable()}).strict(),mn=t.object({AND:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),OR:t.lazy(()=>mn).array().optional(),NOT:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),allergen:t.union([t.lazy(()=>i2),t.lazy(()=>lo)]).optional()}).strict(),yh=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>jl).optional(),allergen:t.lazy(()=>xm).optional()}).strict(),mt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),OR:t.lazy(()=>mn).array().optional(),NOT:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),allergen:t.union([t.lazy(()=>i2),t.lazy(()=>lo)]).optional()}).strict()),lV=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>Rot).optional(),_avg:t.lazy(()=>kot).optional(),_max:t.lazy(()=>xot).optional(),_min:t.lazy(()=>jot).optional(),_sum:t.lazy(()=>Mot).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),hn=t.object({AND:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),OR:t.lazy(()=>hn).array().optional(),NOT:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional()}).strict(),sh=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ml).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),OR:t.lazy(()=>hn).array().optional(),NOT:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional()}).strict()),rV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Zot).optional(),_avg:t.lazy(()=>vot).optional(),_max:t.lazy(()=>Oot).optional(),_min:t.lazy(()=>fot).optional(),_sum:t.lazy(()=>wot).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),pl=t.object({AND:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),OR:t.lazy(()=>pl).array().optional(),NOT:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),dh=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qm=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),OR:t.lazy(()=>pl).array().optional(),NOT:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict()),pV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Not).optional(),_avg:t.lazy(()=>Bot).optional(),_max:t.lazy(()=>qot).optional(),_min:t.lazy(()=>Fot).optional(),_sum:t.lazy(()=>Dot).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Re=t.object({AND:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),OR:t.lazy(()=>Re).array().optional(),NOT:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurants:t.lazy(()=>l2).optional(),users:t.lazy(()=>aM).optional()}).strict(),Dp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>_ot).optional(),users:t.lazy(()=>r2).optional()}).strict(),Rl=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),OR:t.lazy(()=>Re).array().optional(),NOT:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurants:t.lazy(()=>l2).optional(),users:t.lazy(()=>aM).optional()}).strict()),cV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Eot).optional(),_avg:t.lazy(()=>Lot).optional(),_max:t.lazy(()=>Vot).optional(),_min:t.lazy(()=>Hot).optional(),_sum:t.lazy(()=>Qot).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),wt=t.object({AND:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),OR:t.lazy(()=>wt).array().optional(),NOT:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>p2),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>mS).optional(),transactions:t.lazy(()=>hS).optional(),stockCounts:t.lazy(()=>nM).optional()}).strict(),Yr=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),items:t.lazy(()=>iB).optional(),transactions:t.lazy(()=>lB).optional(),stockCounts:t.lazy(()=>c2).optional()}).strict(),Ha=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),OR:t.lazy(()=>wt).array().optional(),NOT:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>p2),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>mS).optional(),transactions:t.lazy(()=>hS).optional(),stockCounts:t.lazy(()=>nM).optional()}).strict()),uV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yot).optional(),_avg:t.lazy(()=>Got).optional(),_max:t.lazy(()=>$ot).optional(),_min:t.lazy(()=>Jot).optional(),_sum:t.lazy(()=>Kot).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>Xot),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),N=t.object({AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),users:t.lazy(()=>aM).optional(),cookbooks:t.lazy(()=>u2).optional(),inventory:t.union([t.lazy(()=>y2),t.lazy(()=>wt)]).optional().nullable(),orders:t.lazy(()=>lM).optional(),recipes:t.lazy(()=>Xr).optional(),menus:t.lazy(()=>s2).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItem:t.lazy(()=>bS).optional(),wasteRecord:t.lazy(()=>IS).optional(),productionPlan:t.lazy(()=>pM).optional(),equipment:t.lazy(()=>d2).optional(),qualityChecklist:t.lazy(()=>z2).optional(),qustomerFeedback:t.lazy(()=>gS).optional()}).strict(),kn=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),organization:t.lazy(()=>Dp).optional(),users:t.lazy(()=>r2).optional(),cookbooks:t.lazy(()=>tat).optional(),inventory:t.lazy(()=>Yr).optional(),orders:t.lazy(()=>m2).optional(),recipes:t.lazy(()=>sS).optional(),menus:t.lazy(()=>eat).optional(),salesTransactions:t.lazy(()=>h2).optional(),leftoverItem:t.lazy(()=>rB).optional(),wasteRecord:t.lazy(()=>pB).optional(),productionPlan:t.lazy(()=>b2).optional(),equipment:t.lazy(()=>oat).optional(),qualityChecklist:t.lazy(()=>aat).optional(),qustomerFeedback:t.lazy(()=>cB).optional()}).strict(),$=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),users:t.lazy(()=>aM).optional(),cookbooks:t.lazy(()=>u2).optional(),inventory:t.union([t.lazy(()=>y2),t.lazy(()=>wt)]).optional().nullable(),orders:t.lazy(()=>lM).optional(),recipes:t.lazy(()=>Xr).optional(),menus:t.lazy(()=>s2).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItem:t.lazy(()=>bS).optional(),wasteRecord:t.lazy(()=>IS).optional(),productionPlan:t.lazy(()=>pM).optional(),equipment:t.lazy(()=>d2).optional(),qualityChecklist:t.lazy(()=>z2).optional(),qustomerFeedback:t.lazy(()=>gS).optional()}).strict()),yV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>nat).optional(),_avg:t.lazy(()=>iat).optional(),_max:t.lazy(()=>lat).optional(),_min:t.lazy(()=>rat).optional(),_sum:t.lazy(()=>pat).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>ut),t.string()]).optional(),city:t.union([t.lazy(()=>ut),t.string()]).optional(),zipCode:t.union([t.lazy(()=>ut),t.string()]).optional(),state:t.union([t.lazy(()=>ut),t.string()]).optional(),owner:t.union([t.lazy(()=>ut),t.string()]).optional(),organizationId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable()}).strict(),Z=t.object({AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>uB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>I2).optional(),prepItems:t.lazy(()=>CS).optional(),inventoryUpdates:t.lazy(()=>mS).optional(),sessions:t.lazy(()=>g2).optional(),passwordResets:t.lazy(()=>C2).optional(),leftoverItem:t.lazy(()=>bS).optional(),wasteRecord:t.lazy(()=>IS).optional(),productionPlan:t.lazy(()=>pM).optional(),productionPlanItem:t.lazy(()=>dS).optional(),availability:t.lazy(()=>A2).optional(),schedulingConstraint:t.lazy(()=>S2).optional(),inventoryWithdrawal:t.lazy(()=>AS).optional(),checklistComplete:t.lazy(()=>$j).optional(),customerFeedback:t.lazy(()=>gS).optional(),recipeVersionsCreated:t.lazy(()=>wA).optional(),recipeVersionsApproved:t.lazy(()=>wA).optional(),InventoryTransaction:t.lazy(()=>hS).optional(),StockCount:t.lazy(()=>nM).optional()}).strict(),Ke=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Dp).optional(),restaurant:t.lazy(()=>kn).optional(),shifts:t.lazy(()=>cat).optional(),prepItems:t.lazy(()=>yB).optional(),inventoryUpdates:t.lazy(()=>iB).optional(),sessions:t.lazy(()=>uat).optional(),passwordResets:t.lazy(()=>yat).optional(),leftoverItem:t.lazy(()=>rB).optional(),wasteRecord:t.lazy(()=>pB).optional(),productionPlan:t.lazy(()=>b2).optional(),productionPlanItem:t.lazy(()=>eB).optional(),availability:t.lazy(()=>sat).optional(),schedulingConstraint:t.lazy(()=>dat).optional(),inventoryWithdrawal:t.lazy(()=>sB).optional(),checklistComplete:t.lazy(()=>$1).optional(),customerFeedback:t.lazy(()=>cB).optional(),recipeVersionsCreated:t.lazy(()=>gN).optional(),recipeVersionsApproved:t.lazy(()=>gN).optional(),InventoryTransaction:t.lazy(()=>lB).optional(),StockCount:t.lazy(()=>c2).optional()}).strict(),j=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>uB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>I2).optional(),prepItems:t.lazy(()=>CS).optional(),inventoryUpdates:t.lazy(()=>mS).optional(),sessions:t.lazy(()=>g2).optional(),passwordResets:t.lazy(()=>C2).optional(),leftoverItem:t.lazy(()=>bS).optional(),wasteRecord:t.lazy(()=>IS).optional(),productionPlan:t.lazy(()=>pM).optional(),productionPlanItem:t.lazy(()=>dS).optional(),availability:t.lazy(()=>A2).optional(),schedulingConstraint:t.lazy(()=>S2).optional(),inventoryWithdrawal:t.lazy(()=>AS).optional(),checklistComplete:t.lazy(()=>$j).optional(),customerFeedback:t.lazy(()=>gS).optional(),recipeVersionsCreated:t.lazy(()=>wA).optional(),recipeVersionsApproved:t.lazy(()=>wA).optional(),InventoryTransaction:t.lazy(()=>hS).optional(),StockCount:t.lazy(()=>nM).optional()}).strict()),sV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>zat).optional(),_avg:t.lazy(()=>mat).optional(),_max:t.lazy(()=>hat).optional(),_min:t.lazy(()=>bat).optional(),_sum:t.lazy(()=>Iat).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),sub:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>ut),t.string()]).optional(),firstName:t.union([t.lazy(()=>ut),t.string()]).optional(),lastName:t.union([t.lazy(()=>ut),t.string()]).optional(),profileImage:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),role:t.union([t.lazy(()=>gat),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),bn=t.object({AND:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),OR:t.lazy(()=>bn).array().optional(),NOT:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),zh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Te=t.union([t.object({id:t.string().uuid(),code:t.string(),token:t.string()}),t.object({id:t.string().uuid(),code:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({code:t.string(),token:t.string()}),t.object({code:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),code:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),OR:t.lazy(()=>bn).array().optional(),NOT:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),dV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cat).optional(),_avg:t.lazy(()=>Aat).optional(),_max:t.lazy(()=>Sat).optional(),_min:t.lazy(()=>Tat).optional(),_sum:t.lazy(()=>Pat).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>ut),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),code:t.union([t.lazy(()=>ut),t.string()]).optional(),token:t.union([t.lazy(()=>ut),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipes:t.lazy(()=>Xr).optional(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable()}).strict(),jm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipes:t.lazy(()=>sS).optional(),restaurant:t.lazy(()=>kn).optional()}).strict(),Kt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>Xr).optional(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable()}).strict()),zV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Wat).optional(),_avg:t.lazy(()=>Uat).optional(),_max:t.lazy(()=>Rat).optional(),_min:t.lazy(()=>kat).optional(),_sum:t.lazy(()=>xat).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>ut),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>dB),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>T2),t.lazy(()=>Qe)]).optional(),ingredients:t.lazy(()=>uS).optional(),instructions:t.lazy(()=>Yj).optional(),menuItems:t.lazy(()=>II).optional(),foodCostHistory:t.lazy(()=>P2).optional(),prepHistory:t.lazy(()=>W2).optional(),prepBoards:t.lazy(()=>U2).optional(),prepItems:t.lazy(()=>CS).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),productionPlanItems:t.lazy(()=>dS).optional(),withdrawals:t.lazy(()=>AS).optional(),tags:t.lazy(()=>R2).optional(),versions:t.lazy(()=>wA).optional(),equipment:t.lazy(()=>yS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional(),temperatures:t.lazy(()=>k2).optional(),yields:t.lazy(()=>x2).optional(),laborCosts:t.lazy(()=>j2).optional(),nutritionalInfo:t.union([t.lazy(()=>M2),t.lazy(()=>fe)]).optional().nullable(),criticalPoints:t.lazy(()=>Z2).optional(),storage:t.union([t.lazy(()=>v2),t.lazy(()=>we)]).optional().nullable(),photos:t.lazy(()=>O2).optional(),RecipeStats:t.union([t.lazy(()=>f2),t.lazy(()=>Ne)]).optional().nullable()}).strict(),Xe=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),cookBook:t.lazy(()=>jm).optional(),ingredients:t.lazy(()=>HN).optional(),instructions:t.lazy(()=>H1).optional(),menuItems:t.lazy(()=>Qj).optional(),foodCostHistory:t.lazy(()=>jat).optional(),prepHistory:t.lazy(()=>Mat).optional(),prepBoards:t.lazy(()=>Zat).optional(),prepItems:t.lazy(()=>yB).optional(),menuItemRecipes:t.lazy(()=>w2).optional(),productionPlanItems:t.lazy(()=>eB).optional(),withdrawals:t.lazy(()=>sB).optional(),tags:t.lazy(()=>vat).optional(),versions:t.lazy(()=>gN).optional(),equipment:t.lazy(()=>YN).optional(),dietaryRestrictions:t.lazy(()=>N2).optional(),temperatures:t.lazy(()=>Oat).optional(),yields:t.lazy(()=>fat).optional(),laborCosts:t.lazy(()=>wat).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),criticalPoints:t.lazy(()=>Nat).optional(),storage:t.lazy(()=>Tm).optional(),photos:t.lazy(()=>Bat).optional(),RecipeStats:t.lazy(()=>vm).optional()}).strict(),g=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>dB),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>T2),t.lazy(()=>Qe)]).optional(),ingredients:t.lazy(()=>uS).optional(),instructions:t.lazy(()=>Yj).optional(),menuItems:t.lazy(()=>II).optional(),foodCostHistory:t.lazy(()=>P2).optional(),prepHistory:t.lazy(()=>W2).optional(),prepBoards:t.lazy(()=>U2).optional(),prepItems:t.lazy(()=>CS).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),productionPlanItems:t.lazy(()=>dS).optional(),withdrawals:t.lazy(()=>AS).optional(),tags:t.lazy(()=>R2).optional(),versions:t.lazy(()=>wA).optional(),equipment:t.lazy(()=>yS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional(),temperatures:t.lazy(()=>k2).optional(),yields:t.lazy(()=>x2).optional(),laborCosts:t.lazy(()=>j2).optional(),nutritionalInfo:t.union([t.lazy(()=>M2),t.lazy(()=>fe)]).optional().nullable(),criticalPoints:t.lazy(()=>Z2).optional(),storage:t.union([t.lazy(()=>v2),t.lazy(()=>we)]).optional().nullable(),photos:t.lazy(()=>O2).optional(),RecipeStats:t.union([t.lazy(()=>f2),t.lazy(()=>Ne)]).optional().nullable()}).strict()),mV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),_count:t.lazy(()=>qat).optional(),_avg:t.lazy(()=>Fat).optional(),_max:t.lazy(()=>Dat).optional(),_min:t.lazy(()=>_at).optional(),_sum:t.lazy(()=>Eat).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>ut),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Lat),t.lazy(()=>W)]).optional()}).strict(),Wt=t.object({AND:t.union([t.lazy(()=>Wt),t.lazy(()=>Wt).array()]).optional(),OR:t.lazy(()=>Wt).array().optional(),NOT:t.union([t.lazy(()=>Wt),t.lazy(()=>Wt).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipeIngredients:t.lazy(()=>uS).optional(),inventoryItems:t.lazy(()=>mS).optional(),orderItems:t.lazy(()=>sM).optional(),vendors:t.lazy(()=>B2).optional(),WasteRecord:t.lazy(()=>IS).optional(),IngredientAllergen:t.lazy(()=>oM).optional(),SupplierPriceHistory:t.lazy(()=>dM).optional(),DietaryRestriction:t.union([t.lazy(()=>q2),t.lazy(()=>ve)]).optional().nullable()}).strict(),jl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeIngredients:t.lazy(()=>HN).optional(),inventoryItems:t.lazy(()=>iB).optional(),orderItems:t.lazy(()=>F2).optional(),vendors:t.lazy(()=>Vat).optional(),WasteRecord:t.lazy(()=>pB).optional(),IngredientAllergen:t.lazy(()=>n2).optional(),SupplierPriceHistory:t.lazy(()=>D2).optional(),DietaryRestriction:t.lazy(()=>Rm).optional()}).strict(),Q=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Wt),t.lazy(()=>Wt).array()]).optional(),OR:t.lazy(()=>Wt).array().optional(),NOT:t.union([t.lazy(()=>Wt),t.lazy(()=>Wt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipeIngredients:t.lazy(()=>uS).optional(),inventoryItems:t.lazy(()=>mS).optional(),orderItems:t.lazy(()=>sM).optional(),vendors:t.lazy(()=>B2).optional(),WasteRecord:t.lazy(()=>IS).optional(),IngredientAllergen:t.lazy(()=>oM).optional(),SupplierPriceHistory:t.lazy(()=>dM).optional(),DietaryRestriction:t.union([t.lazy(()=>q2),t.lazy(()=>ve)]).optional().nullable()}).strict()),hV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Hat).optional(),_avg:t.lazy(()=>Qat).optional(),_max:t.lazy(()=>Yat).optional(),_min:t.lazy(()=>Gat).optional(),_sum:t.lazy(()=>$at).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),category:t.union([t.lazy(()=>ut),t.string()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),In=t.object({AND:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),OR:t.lazy(()=>In).array().optional(),NOT:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>CI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),recipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable()}).strict(),mh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),ingredient:t.lazy(()=>jl).optional(),recipeVersion:t.lazy(()=>Bp).optional()}).strict(),L=t.union([t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>zN)}),t.object({id:t.number().int()}),t.object({recipeId_ingredientId:t.lazy(()=>zN)})]).and(t.object({id:t.number().int().optional(),recipeId_ingredientId:t.lazy(()=>zN).optional(),AND:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),OR:t.lazy(()=>In).array().optional(),NOT:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>CI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),recipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable()}).strict()),bV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Jat).optional(),_avg:t.lazy(()=>Kat).optional(),_max:t.lazy(()=>Xat).optional(),_min:t.lazy(()=>tnt).optional(),_sum:t.lazy(()=>ent).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>CI).optional(),isOptional:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable(),equipment:t.lazy(()=>yS).optional()}).strict(),Mm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),RecipeVersion:t.lazy(()=>Bp).optional(),equipment:t.lazy(()=>YN).optional()}).strict(),nt=t.union([t.object({id:t.number().int(),recipeId_stepNumber:t.lazy(()=>mN)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber:t.lazy(()=>mN)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber:t.lazy(()=>mN).optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable(),equipment:t.lazy(()=>yS).optional()}).strict()),IV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>ont).optional(),_avg:t.lazy(()=>ant).optional(),_max:t.lazy(()=>nnt).optional(),_min:t.lazy(()=>int).optional(),_sum:t.lazy(()=>lnt).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable()}).strict(),oe=t.object({AND:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),OR:t.lazy(()=>oe).array().optional(),NOT:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>hS).optional(),withdrawals:t.lazy(()=>AS).optional(),stockCounts:t.lazy(()=>mM).optional()}).strict(),cp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),inventory:t.lazy(()=>Yr).optional(),ingredient:t.lazy(()=>jl).optional(),lastUpdatedBy:t.lazy(()=>Ke).optional(),transactions:t.lazy(()=>lB).optional(),withdrawals:t.lazy(()=>sB).optional(),stockCounts:t.lazy(()=>_2).optional()}).strict(),f=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>hN)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>hN)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>hN).optional(),AND:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),OR:t.lazy(()=>oe).array().optional(),NOT:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>gI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>hS).optional(),withdrawals:t.lazy(()=>AS).optional(),stockCounts:t.lazy(()=>mM).optional()}).strict()),gV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>rnt).optional(),_avg:t.lazy(()=>pnt).optional(),_max:t.lazy(()=>cnt).optional(),_min:t.lazy(()=>unt).optional(),_sum:t.lazy(()=>ynt).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>At),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>At),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>At),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>At),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>At),t.number()]).optional(),averageCost:t.union([t.lazy(()=>At),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>xl),t.number()]).optional().nullable()}).strict(),gn=t.object({AND:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),OR:t.lazy(()=>gn).array().optional(),NOT:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>kt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),item:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),hh=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>Yr).optional(),item:t.lazy(()=>cp).optional(),createdBy:t.lazy(()=>Ke).optional()}).strict(),V=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),OR:t.lazy(()=>gn).array().optional(),NOT:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>kt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),item:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>snt).optional(),_avg:t.lazy(()=>dnt).optional(),_max:t.lazy(()=>znt).optional(),_min:t.lazy(()=>mnt).optional(),_sum:t.lazy(()=>hnt).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>bnt),t.lazy(()=>kt)]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),previousQty:t.union([t.lazy(()=>At),t.number()]).optional(),newQty:t.union([t.lazy(()=>At),t.number()]).optional(),cost:t.union([t.lazy(()=>xl),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>mM).optional()}).strict(),Zm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),inventory:t.lazy(()=>Yr).optional(),createdBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>_2).optional()}).strict(),it=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>SS),t.lazy(()=>wt)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>mM).optional()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Int).optional(),_avg:t.lazy(()=>gnt).optional(),_max:t.lazy(()=>Cnt).optional(),_min:t.lazy(()=>Ant).optional(),_sum:t.lazy(()=>Snt).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Tnt),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable()}).strict(),Cn=t.object({AND:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),OR:t.lazy(()=>Cn).array().optional(),NOT:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>E2),t.lazy(()=>Ye)]).optional(),item:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional()}).strict(),bh=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),stockCount:t.lazy(()=>Zm).optional(),item:t.lazy(()=>cp).optional()}).strict(),ht=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>bN)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>bN)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>bN).optional(),AND:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),OR:t.lazy(()=>Cn).array().optional(),NOT:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>E2),t.lazy(()=>Ye)]).optional(),item:t.union([t.lazy(()=>zS),t.lazy(()=>oe)]).optional()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Pnt).optional(),_avg:t.lazy(()=>Wnt).optional(),_max:t.lazy(()=>Unt).optional(),_min:t.lazy(()=>Rnt).optional(),_sum:t.lazy(()=>knt).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>At),t.number()]).optional(),actualQty:t.union([t.lazy(()=>At),t.number()]).optional(),difference:t.union([t.lazy(()=>At),t.number()]).optional(),notes:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>u),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),vm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),fl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>u),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>xnt).optional(),_avg:t.lazy(()=>jnt).optional(),_max:t.lazy(()=>Mnt).optional(),_min:t.lazy(()=>Znt).optional(),_sum:t.lazy(()=>vnt).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>At),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>At),t.number()]).optional(),averageRating:t.union([t.lazy(()=>At),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Qr),t.coerce.date()]).optional().nullable()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),items:t.lazy(()=>sM).optional()}).strict(),Om=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),vendor:t.lazy(()=>_p).optional(),items:t.lazy(()=>F2).optional()}).strict(),lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),items:t.lazy(()=>sM).optional()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ont).optional(),_avg:t.lazy(()=>fnt).optional(),_max:t.lazy(()=>wnt).optional(),_min:t.lazy(()=>Nnt).optional(),_sum:t.lazy(()=>Bnt).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>qnt),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),An=t.object({AND:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),OR:t.lazy(()=>An).array().optional(),NOT:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),orderId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>L2),t.lazy(()=>Ge)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional()}).strict(),Ih=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>Om).optional(),ingredient:t.lazy(()=>jl).optional()}).strict(),bt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),OR:t.lazy(()=>An).array().optional(),NOT:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),orderId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>L2),t.lazy(()=>Ge)]).optional(),ingredient:t.union([t.lazy(()=>Kr),t.lazy(()=>Wt)]).optional()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fnt).optional(),_avg:t.lazy(()=>Dnt).optional(),_max:t.lazy(()=>_nt).optional(),_min:t.lazy(()=>Ent).optional(),_sum:t.lazy(()=>Lnt).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional()}).strict(),je=t.object({AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),orders:t.lazy(()=>lM).optional(),ingredients:t.lazy(()=>eM).optional(),supplierPriceHistory:t.lazy(()=>dM).optional()}).strict(),_p=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>m2).optional(),ingredients:t.lazy(()=>t2).optional(),supplierPriceHistory:t.lazy(()=>D2).optional()}).strict(),Ht=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),orders:t.lazy(()=>lM).optional(),ingredients:t.lazy(()=>eM).optional(),supplierPriceHistory:t.lazy(()=>dM).optional()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Vnt).optional(),_avg:t.lazy(()=>Hnt).optional(),_max:t.lazy(()=>Qnt).optional(),_min:t.lazy(()=>Ynt).optional(),_sum:t.lazy(()=>Gnt).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),contact:t.union([t.lazy(()=>ut),t.string()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),phone:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Et)]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>V2).optional()}).strict(),fm=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional(),ShiftTask:t.lazy(()=>$nt).optional()}).strict(),Xt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Et)]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>V2).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jnt).optional(),_avg:t.lazy(()=>Knt).optional(),_max:t.lazy(()=>Xnt).optional(),_min:t.lazy(()=>tit).optional(),_sum:t.lazy(()=>eit).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>oit),t.lazy(()=>Et)]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>Xr).optional(),prepItems:t.lazy(()=>CS).optional()}).strict(),wm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>sS).optional(),prepItems:t.lazy(()=>yB).optional()}).strict(),te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>Xr).optional(),prepItems:t.lazy(()=>CS).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ait).optional(),_avg:t.lazy(()=>nit).optional(),_max:t.lazy(()=>iit).optional(),_min:t.lazy(()=>lit).optional(),_sum:t.lazy(()=>rit).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),status:t.union([t.lazy(()=>H2),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Sn=t.object({AND:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),OR:t.lazy(()=>Sn).array().optional(),NOT:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>Q2),t.lazy(()=>Je)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),gh=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>wm).optional(),recipe:t.lazy(()=>Xe).optional(),assignedTo:t.lazy(()=>Ke).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),OR:t.lazy(()=>Sn).array().optional(),NOT:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>Q2),t.lazy(()=>Je)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>pit).optional(),_avg:t.lazy(()=>cit).optional(),_max:t.lazy(()=>uit).optional(),_min:t.lazy(()=>yit).optional(),_sum:t.lazy(()=>sit).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>H2),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Tn=t.object({AND:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),OR:t.lazy(()=>Tn).array().optional(),NOT:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),Ch=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Pe=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),OR:t.lazy(()=>Tn).array().optional(),NOT:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dit).optional(),_avg:t.lazy(()=>zit).optional(),_max:t.lazy(()=>mit).optional(),_min:t.lazy(()=>hit).optional(),_sum:t.lazy(()=>bit).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>ut),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>II).optional(),MenuCategory:t.lazy(()=>Y2).optional()}).strict(),Ep=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItems:t.lazy(()=>Qj).optional(),MenuCategory:t.lazy(()=>Iit).optional()}).strict(),Qt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>II).optional(),MenuCategory:t.lazy(()=>Y2).optional()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>git).optional(),_avg:t.lazy(()=>Cit).optional(),_max:t.lazy(()=>Ait).optional(),_min:t.lazy(()=>Sit).optional(),_sum:t.lazy(()=>Tit).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Pn=t.object({AND:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),OR:t.lazy(()=>Pn).array().optional(),NOT:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Ah=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ml).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),It=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>IN)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>IN)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>IN).optional(),AND:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),OR:t.lazy(()=>Pn).array().optional(),NOT:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>bI),t.lazy(()=>gt)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Pit).optional(),_avg:t.lazy(()=>Wit).optional(),_max:t.lazy(()=>Uit).optional(),_min:t.lazy(()=>Rit).optional(),_sum:t.lazy(()=>kit).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),gt=t.object({AND:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),OR:t.lazy(()=>gt).array().optional(),NOT:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>CI).optional(),recipeServingsAmount:t.lazy(()=>Ph).optional(),recipeServingsCost:t.lazy(()=>Ph).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),category:t.union([t.lazy(()=>G2),t.lazy(()=>Ze)]).optional().nullable(),recipes:t.lazy(()=>Xr).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),nutritionalInfo:t.union([t.lazy(()=>$2),t.lazy(()=>Be)]).optional().nullable(),recommendations:t.lazy(()=>J2).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItems:t.lazy(()=>bS).optional(),feedback:t.lazy(()=>gS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional()}).strict(),Ml=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),menu:t.lazy(()=>Ep).optional(),category:t.lazy(()=>Pm).optional(),recipes:t.lazy(()=>sS).optional(),menuItemRecipes:t.lazy(()=>w2).optional(),nutritionalInfo:t.lazy(()=>Nm).optional(),recommendations:t.lazy(()=>xit).optional(),salesTransactions:t.lazy(()=>h2).optional(),leftoverItems:t.lazy(()=>rB).optional(),feedback:t.lazy(()=>cB).optional(),dietaryRestrictions:t.lazy(()=>N2).optional()}).strict(),k=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),OR:t.lazy(()=>gt).array().optional(),NOT:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>CI).optional(),recipeServingsAmount:t.lazy(()=>Ph).optional(),recipeServingsCost:t.lazy(()=>Ph).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),category:t.union([t.lazy(()=>G2),t.lazy(()=>Ze)]).optional().nullable(),recipes:t.lazy(()=>Xr).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),nutritionalInfo:t.union([t.lazy(()=>$2),t.lazy(()=>Be)]).optional().nullable(),recommendations:t.lazy(()=>J2).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItems:t.lazy(()=>bS).optional(),feedback:t.lazy(()=>gS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>jit).optional(),_avg:t.lazy(()=>Mit).optional(),_max:t.lazy(()=>Zit).optional(),_min:t.lazy(()=>vit).optional(),_sum:t.lazy(()=>Oit).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Tt),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>At),t.number()]).optional(),foodCost:t.union([t.lazy(()=>At),t.number()]).optional(),isActive:t.union([t.lazy(()=>Zl),t.boolean()]).optional(),recipeIds:t.lazy(()=>CI).optional(),recipeServingsAmount:t.lazy(()=>Ph).optional(),recipeServingsCost:t.lazy(()=>Ph).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable()}).strict(),Nm=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ml).optional()}).strict(),wl=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fit).optional(),_avg:t.lazy(()=>wit).optional(),_max:t.lazy(()=>Nit).optional(),_min:t.lazy(()=>Bit).optional(),_sum:t.lazy(()=>qit).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>At),t.number()]).optional(),fat:t.union([t.lazy(()=>At),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>At),t.number()]).optional(),transFat:t.union([t.lazy(()=>At),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>At),t.number()]).optional(),sodium:t.union([t.lazy(()=>At),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>At),t.number()]).optional(),fiber:t.union([t.lazy(()=>At),t.number()]).optional(),sugar:t.union([t.lazy(()=>At),t.number()]).optional(),protein:t.union([t.lazy(()=>At),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Wn=t.object({AND:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),OR:t.lazy(()=>Wn).array().optional(),NOT:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Sh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),We=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),OR:t.lazy(()=>Wn).array().optional(),NOT:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fit).optional(),_avg:t.lazy(()=>Dit).optional(),_max:t.lazy(()=>_it).optional(),_min:t.lazy(()=>Eit).optional(),_sum:t.lazy(()=>Lit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>At),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Un=t.object({AND:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),OR:t.lazy(()=>Un).array().optional(),NOT:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Th=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),Ue=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),OR:t.lazy(()=>Un).array().optional(),NOT:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Vit).optional(),_avg:t.lazy(()=>Hit).optional(),_max:t.lazy(()=>Qit).optional(),_min:t.lazy(()=>Yit).optional(),_sum:t.lazy(()=>Git).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),aY=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),recipe:t.lazy(()=>$it)}).strict(),nY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),iY=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),recipe:t.lazy(()=>Jit).optional()}).strict(),lY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),QT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),rY=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),pY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),cY=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Kit)}).strict(),uY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yY=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Xit).optional()}).strict(),sY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zY=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>tlt)}).strict(),mY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hY=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>elt).optional()}).strict(),bY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IY=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CY=t.object({url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>olt)}).strict(),AY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SY=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>alt).optional()}).strict(),TY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$T=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AN=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WY=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>nlt)}).strict(),UY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RY=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>ilt).optional()}).strict(),kY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jY=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>llt)}).strict(),MY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZY=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>rlt).optional()}).strict(),vY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TN=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fY=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>plt)}).strict(),wY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NY=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>clt).optional()}).strict(),BY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PN=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FY=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>K2),menuItem:t.lazy(()=>X2)}).strict(),DY=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_Y=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>t4).optional(),menuItem:t.lazy(()=>e4).optional()}).strict(),EY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mj=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VY=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>o4),menuItems:t.lazy(()=>a4).optional()}).strict(),HY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>n4).optional()}).strict(),QY=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>i4).optional(),menuItems:t.lazy(()=>l4).optional()}).strict(),YY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>r4).optional()}).strict(),eP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$Y=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RT),ingredients:t.lazy(()=>kT).optional(),instructions:t.lazy(()=>xT).optional(),createdBy:t.lazy(()=>jT),approvedBy:t.lazy(()=>MT).optional()}).strict(),JY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional()}).strict(),KY=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>OT).optional(),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),XY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),oP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hT=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e0=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IB),recipes:t.lazy(()=>gB).optional(),maintenanceLogs:t.lazy(()=>CB).optional()}).strict(),o0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>AB).optional(),maintenanceLogs:t.lazy(()=>SB).optional()}).strict(),a0=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TB).optional(),recipes:t.lazy(()=>PB).optional(),maintenanceLogs:t.lazy(()=>WB).optional()}).strict(),n0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>UB).optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),aP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l0=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>kB),equipment:t.lazy(()=>xB),RecipeInstruction:t.lazy(()=>jB).optional()}).strict(),r0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),p0=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>MB).optional(),equipment:t.lazy(()=>ZB).optional(),RecipeInstruction:t.lazy(()=>vB).optional()}).strict(),c0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),nP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),bT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),u0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),y0=t.object({date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>ult)}).strict(),s0=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d0=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>ylt).optional()}).strict(),z0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h0=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>OB),items:t.lazy(()=>fB).optional(),completions:t.lazy(()=>wB).optional()}).strict(),b0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>NB).optional(),completions:t.lazy(()=>BB).optional()}).strict(),I0=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qB).optional(),items:t.lazy(()=>FB).optional(),completions:t.lazy(()=>DB).optional()}).strict(),g0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>_B).optional(),completions:t.lazy(()=>EB).optional()}).strict(),lP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A0=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>p4),completions:t.lazy(()=>c4).optional()}).strict(),S0=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>u4).optional()}).strict(),T0=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>y4).optional(),completions:t.lazy(()=>s4).optional()}).strict(),P0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>d4).optional()}).strict(),rP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xN=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U0=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>LB),completedBy:t.lazy(()=>VB),items:t.lazy(()=>HB).optional()}).strict(),R0=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QB).optional()}).strict(),k0=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>YB).optional(),completedBy:t.lazy(()=>GB).optional(),items:t.lazy(()=>$B).optional()}).strict(),x0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional()}).strict(),pP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M0=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>z4),checklistItem:t.lazy(()=>m4)}).strict(),Z0=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v0=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>h4).optional(),checklistItem:t.lazy(()=>b4).optional()}).strict(),O0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vj=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w0=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>I4),ingredient:t.lazy(()=>g4)}).strict(),N0=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B0=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>C4).optional(),ingredient:t.lazy(()=>A4).optional()}).strict(),q0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oj=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D0=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>KB),menuItem:t.lazy(()=>XB).optional(),respondedBy:t.lazy(()=>tq).optional()}).strict(),_0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E0=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eq).optional(),menuItem:t.lazy(()=>oq).optional(),respondedBy:t.lazy(()=>aq).optional()}).strict(),L0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IT=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H0=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>nq).optional(),recipes:t.lazy(()=>iq).optional(),ingredients:t.lazy(()=>lq).optional()}).strict(),Q0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>rq).optional(),recipes:t.lazy(()=>pq).optional(),ingredients:t.lazy(()=>cq).optional()}).strict(),Y0=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>uq).optional(),recipes:t.lazy(()=>yq).optional(),ingredients:t.lazy(()=>sq).optional()}).strict(),G0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),sP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fj=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J0=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>slt).optional()}).strict(),K0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>dlt).optional()}).strict(),X0=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>zlt).optional()}).strict(),tG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>mlt).optional()}).strict(),dP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hq),menuItem:t.lazy(()=>bq),recordedBy:t.lazy(()=>Iq)}).strict(),aG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>gq).optional(),menuItem:t.lazy(()=>Cq).optional(),recordedBy:t.lazy(()=>Aq).optional()}).strict(),iG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Sq),ingrediente:t.lazy(()=>Tq),recordedBy:t.lazy(()=>Pq)}).strict(),pG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Wq).optional(),ingrediente:t.lazy(()=>Uq).optional(),recordedBy:t.lazy(()=>Rq).optional()}).strict(),uG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sG=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>kq),createdBy:t.lazy(()=>xq),items:t.lazy(()=>jq).optional()}).strict(),dG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Mq).optional()}).strict(),zG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Zq).optional(),createdBy:t.lazy(()=>vq).optional(),items:t.lazy(()=>Oq).optional()}).strict(),mG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>fq).optional()}).strict(),hP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bG=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>wq),recipe:t.lazy(()=>Nq),assignedTo:t.lazy(()=>Bq).optional()}).strict(),IG=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gG=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>qq).optional(),recipe:t.lazy(()=>Fq).optional(),assignedTo:t.lazy(()=>Dq).optional()}).strict(),CG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SG=t.object({taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>hlt)}).strict(),TG=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PG=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>blt).optional()}).strict(),WG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MN=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RG=t.object({dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Ilt)}).strict(),kG=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xG=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>glt).optional()}).strict(),jG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZN=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZG=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Clt)}).strict(),vG=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Alt).optional()}).strict(),fG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CP=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NG=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>_q),recipe:t.lazy(()=>Eq).optional(),createdBy:t.lazy(()=>Lq)}).strict(),BG=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qG=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Vq).optional(),recipe:t.lazy(()=>Hq).optional(),createdBy:t.lazy(()=>Qq).optional()}).strict(),FG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AP=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ST=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_G=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Slt).optional()}).strict(),EG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Tlt).optional()}).strict(),LG=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Plt).optional()}).strict(),VG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Wlt).optional()}).strict(),SP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),HG=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),QG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),YG=t.object({ingredient:t.lazy(()=>S4),allergen:t.lazy(()=>T4)}).strict(),GG=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),$G=t.object({ingredient:t.lazy(()=>P4).optional(),allergen:t.lazy(()=>W4).optional()}).strict(),JG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),TP=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),Nj=t.object({}).strict(),KG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),XG=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Ult)}).strict(),t$=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),e$=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Rlt).optional()}).strict(),o$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ON=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n$=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i$=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l$=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WP=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),p$=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u$=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>U4).optional(),users:t.lazy(()=>R4).optional()}).strict(),y$=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>k4).optional(),users:t.lazy(()=>x4).optional()}).strict(),s$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>j4).optional(),users:t.lazy(()=>M4).optional()}).strict(),d$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>Z4).optional(),users:t.lazy(()=>v4).optional()}).strict(),UP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h$=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),b$=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),I$=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),g$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),RP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C$=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S$=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),T$=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),P$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),W$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),kP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),fN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),U$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),R$=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),k$=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),x$=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),j$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),xP=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bj=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z$=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>klt)}).strict(),v$=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),O$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>xlt).optional()}).strict(),f$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jP=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),wN=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N$=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>O4).optional(),restaurant:t.lazy(()=>f4).optional()}).strict(),B$=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>w4).optional()}).strict(),q$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>N4).optional(),restaurant:t.lazy(()=>B4).optional()}).strict(),F$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>q4).optional()}).strict(),MP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),NN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional()}).strict(),D$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),_$=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),E$=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),L$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),V$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),hI=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),H$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),Q$=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),Y$=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),G$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),$$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),vP=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable()}).strict(),qj=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),J$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),K$=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Yq),ingredient:t.lazy(()=>Gq),recipeVersion:t.lazy(()=>$q).optional()}).strict(),X$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),t9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Jq).optional(),ingredient:t.lazy(()=>Kq).optional(),recipeVersion:t.lazy(()=>Xq).optional()}).strict(),e9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),OP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),TT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),a9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>tF),RecipeVersion:t.lazy(()=>eF).optional(),equipment:t.lazy(()=>oF).optional()}).strict(),n9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>aF).optional()}).strict(),i9=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>nF).optional(),RecipeVersion:t.lazy(()=>iF).optional(),equipment:t.lazy(()=>lF).optional()}).strict(),l9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>rF).optional()}).strict(),fP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),Fj=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),r9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),p9=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),ingredient:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>US).optional(),transactions:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),c9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),u9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),ingredient:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),y9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),wP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),PT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),s9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),d9=t.object({type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>pF),item:t.lazy(()=>cF),createdBy:t.lazy(()=>uF)}).strict(),z9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),m9=t.object({type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>yF).optional(),item:t.lazy(()=>sF).optional(),createdBy:t.lazy(()=>dF).optional()}).strict(),h9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),WT=t.object({type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I9=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>zF),createdBy:t.lazy(()=>mF),items:t.lazy(()=>hF).optional()}).strict(),g9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>bF).optional()}).strict(),C9=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>IF).optional(),createdBy:t.lazy(()=>gF).optional(),items:t.lazy(()=>CF).optional()}).strict(),A9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>AF).optional()}).strict(),BP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),Dj=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),S9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),T9=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>F4),item:t.lazy(()=>D4)}).strict(),P9=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),W9=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>_4).optional(),item:t.lazy(()=>E4).optional()}).strict(),U9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),qP=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),_j=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),R9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),k9=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>jlt)}).strict(),x9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),j9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Mlt).optional()}).strict(),M9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),FP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),Z9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),v9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),O9=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SF),vendor:t.lazy(()=>TF),items:t.lazy(()=>PF).optional()}).strict(),f9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WF).optional()}).strict(),w9=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>UF).optional(),vendor:t.lazy(()=>RF).optional(),items:t.lazy(()=>kF).optional()}).strict(),N9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>xF).optional()}).strict(),DP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ej=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q9=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>L4),ingredient:t.lazy(()=>V4)}).strict(),F9=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),D9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>H4).optional(),ingredient:t.lazy(()=>Q4).optional()}).strict(),_9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),_P=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Lj=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),L9=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>jF).optional(),ingredients:t.lazy(()=>MF).optional(),supplierPriceHistory:t.lazy(()=>ZF).optional()}).strict(),V9=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>vF).optional(),ingredients:t.lazy(()=>OF).optional(),supplierPriceHistory:t.lazy(()=>fF).optional()}).strict(),H9=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>wF).optional(),ingredients:t.lazy(()=>NF).optional(),supplierPriceHistory:t.lazy(()=>BF).optional()}).strict(),Q9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>qF).optional(),ingredients:t.lazy(()=>FF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),EP=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G9=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),user:t.lazy(()=>Y4),ShiftTask:t.lazy(()=>G4).optional()}).strict(),$9=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>$4).optional()}).strict(),J9=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),user:t.lazy(()=>J4).optional(),ShiftTask:t.lazy(()=>K4).optional()}).strict(),K9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>X4).optional()}).strict(),LP=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),qN=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),X9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),t1=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>t6).optional(),prepItems:t.lazy(()=>e6).optional()}).strict(),e1=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>o6).optional(),prepItems:t.lazy(()=>a6).optional()}).strict(),o1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>n6).optional(),prepItems:t.lazy(()=>i6).optional()}).strict(),a1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>l6).optional(),prepItems:t.lazy(()=>r6).optional()}).strict(),VP=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i1=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>_F),recipe:t.lazy(()=>EF),assignedTo:t.lazy(()=>LF)}).strict(),l1=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),r1=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>VF).optional(),recipe:t.lazy(()=>HF).optional(),assignedTo:t.lazy(()=>QF).optional()}).strict(),p1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),HP=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),UT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),c1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),u1=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Zlt)}).strict(),y1=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),s1=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>vlt).optional()}).strict(),d1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QP=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DN=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m1=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>YF),menuItems:t.lazy(()=>GF).optional(),MenuCategory:t.lazy(()=>$F).optional()}).strict(),h1=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>JF).optional(),MenuCategory:t.lazy(()=>KF).optional()}).strict(),b1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>XF).optional(),menuItems:t.lazy(()=>tD).optional(),MenuCategory:t.lazy(()=>eD).optional()}).strict(),I1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>oD).optional(),MenuCategory:t.lazy(()=>aD).optional()}).strict(),YP=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_N=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C1=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>p6),recipe:t.lazy(()=>c6)}).strict(),A1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),S1=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>u6).optional(),recipe:t.lazy(()=>y6).optional()}).strict(),T1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Vj=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W1=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),U1=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),R1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),k1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),$P=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),cS=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional()}).strict(),x1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),j1=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Olt).optional()}).strict(),M1=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Z1=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>flt).optional()}).strict(),v1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JP=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),O1=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w1=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>wlt)}).strict(),N1=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B1=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Nlt).optional()}).strict(),q1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EN=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D1=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Blt)}).strict(),_1=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E1=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>qlt).optional()}).strict(),L1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LN=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),U=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Vr)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>NA)]).optional()}).strict(),ue=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),PX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),WX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),UX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),RX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),kX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>s6)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Vr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),At=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>d6)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Vr).optional(),_sum:t.lazy(()=>Vr).optional(),_min:t.lazy(()=>Vr).optional(),_max:t.lazy(()=>Vr).optional()}).strict(),ut=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>z6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>NA).optional(),_max:t.lazy(()=>NA).optional()}).strict(),Ft=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Hr)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>BA)]).optional().nullable()}).strict(),s=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>qA)]).optional()}).strict(),C=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>JK).optional()}).strict(),xX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),MX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ZX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),xl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>m6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>Hr).optional(),_min:t.lazy(()=>Hr).optional(),_max:t.lazy(()=>Hr).optional()}).strict(),Tt=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>h6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>BA).optional(),_max:t.lazy(()=>BA).optional()}).strict(),M=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>b6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>qA).optional(),_max:t.lazy(()=>qA).optional()}).strict(),OX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),wX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),NX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),BX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),VN=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>FA)]).optional()}).strict(),tt=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>cl)]).optional().nullable()}).strict(),qX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),FX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),DX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),EX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),LX=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>I6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),Rn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>g6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>cl).optional(),_min:t.lazy(()=>cl).optional(),_max:t.lazy(()=>cl).optional()}).strict(),Dt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>DA)]).optional()}).strict(),VX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),HX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),QX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),YX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),GX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),Zl=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>C6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),$X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),JX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),KX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),XX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Qa=t.object({is:t.lazy(()=>N).optional(),isNot:t.lazy(()=>N).optional()}).strict(),bI=t.object({is:t.lazy(()=>gt).optional(),isNot:t.lazy(()=>gt).optional()}).strict(),ltt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),ptt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ctt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),utt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Hj=t.object({is:t.lazy(()=>Me).optional(),isNot:t.lazy(()=>Me).optional()}).strict(),II=t.object({every:t.lazy(()=>gt).optional(),some:t.lazy(()=>gt).optional(),none:t.lazy(()=>gt).optional()}).strict(),Qj=t.object({_count:t.lazy(()=>e).optional()}).strict(),yN=t.object({menuId:t.number(),name:t.string()}).strict(),ytt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),stt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),dtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ztt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mtt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),ce=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>_A)]).optional().nullable()}).strict(),uS=t.object({every:t.lazy(()=>In).optional(),some:t.lazy(()=>In).optional(),none:t.lazy(()=>In).optional()}).strict(),Yj=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),qe=t.object({is:t.lazy(()=>Z).optional(),isNot:t.lazy(()=>Z).optional()}).strict(),gI=t.object({is:t.lazy(()=>Z).optional().nullable(),isNot:t.lazy(()=>Z).optional().nullable()}).strict(),HN=t.object({_count:t.lazy(()=>e).optional()}).strict(),H1=t.object({_count:t.lazy(()=>e).optional()}).strict(),sN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),htt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ctt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Qr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>A6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),QN=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>EA)]).optional()}).strict(),yS=t.object({every:t.lazy(()=>en).optional(),some:t.lazy(()=>en).optional(),none:t.lazy(()=>en).optional()}).strict(),Q1=t.object({every:t.lazy(()=>on).optional(),some:t.lazy(()=>on).optional(),none:t.lazy(()=>on).optional()}).strict(),YN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Att=t.object({_count:t.lazy(()=>e).optional()}).strict(),Stt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ttt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ptt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Utt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Rtt=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>S6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),Gj=t.object({is:t.lazy(()=>ke).optional(),isNot:t.lazy(()=>ke).optional()}).strict(),Y1=t.object({is:t.lazy(()=>Oe).optional().nullable(),isNot:t.lazy(()=>Oe).optional().nullable()}).strict(),dN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),ktt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),GN=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>LA)]).optional()}).strict(),vtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Btt=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>T6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),$N=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>VA)]).optional()}).strict(),G1=t.object({every:t.lazy(()=>Le).optional(),some:t.lazy(()=>Le).optional(),none:t.lazy(()=>Le).optional()}).strict(),$j=t.object({every:t.lazy(()=>Ve).optional(),some:t.lazy(()=>Ve).optional(),none:t.lazy(()=>Ve).optional()}).strict(),qtt=t.object({_count:t.lazy(()=>e).optional()}).strict(),$1=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ftt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ltt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Vtt=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>P6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),JN=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>HA)]).optional()}).strict(),Jj=t.object({is:t.lazy(()=>xe).optional(),isNot:t.lazy(()=>xe).optional()}).strict(),Kj=t.object({every:t.lazy(()=>an).optional(),some:t.lazy(()=>an).optional(),none:t.lazy(()=>an).optional()}).strict(),J1=t.object({_count:t.lazy(()=>e).optional()}).strict(),Htt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$tt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>W6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),Ktt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),KN=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>QA)]).optional()}).strict(),ul=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),K1=t.object({is:t.lazy(()=>Ve).optional(),isNot:t.lazy(()=>Ve).optional()}).strict(),X1=t.object({is:t.lazy(()=>Le).optional(),isNot:t.lazy(()=>Le).optional()}).strict(),aet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),net=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),cet=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>U6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),Xj=t.object({is:t.lazy(()=>je).optional(),isNot:t.lazy(()=>je).optional()}).strict(),Kr=t.object({is:t.lazy(()=>Wt).optional(),isNot:t.lazy(()=>Wt).optional()}).strict(),uet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),set=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),XN=t.object({equals:t.lazy(()=>Ut).optional(),in:t.lazy(()=>Ut).array().optional(),notIn:t.lazy(()=>Ut).array().optional(),not:t.union([t.lazy(()=>Ut),t.lazy(()=>YA)]).optional()}).strict(),tB=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>GA)]).optional()}).strict(),tM=t.object({is:t.lazy(()=>gt).optional().nullable(),isNot:t.lazy(()=>gt).optional().nullable()}).strict(),met=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Cet=t.object({equals:t.lazy(()=>Ut).optional(),in:t.lazy(()=>Ut).array().optional(),notIn:t.lazy(()=>Ut).array().optional(),not:t.union([t.lazy(()=>Ut),t.lazy(()=>R6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),Aet=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>k6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),Xr=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),eM=t.object({every:t.lazy(()=>Wt).optional(),some:t.lazy(()=>Wt).optional(),none:t.lazy(()=>Wt).optional()}).strict(),sS=t.object({_count:t.lazy(()=>e).optional()}).strict(),t2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Tet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ret=t.object({id:t.lazy(()=>e).optional()}).strict(),ket=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xet=t.object({id:t.lazy(()=>e).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Met=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zet=t.object({id:t.lazy(()=>e).optional()}).strict(),vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Det=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_et=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),dS=t.object({every:t.lazy(()=>un).optional(),some:t.lazy(()=>un).optional(),none:t.lazy(()=>un).optional()}).strict(),eB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Eet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),e2=t.object({is:t.lazy(()=>He).optional(),isNot:t.lazy(()=>He).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Get=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),oB=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>$A)]).optional()}).strict(),o2=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),eot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),not=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>x6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),aB=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>JA)]).optional()}).strict(),iot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),uot=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>j6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),nB=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>KA)]).optional()}).strict(),yot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),dot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),hot=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>M6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),zS=t.object({is:t.lazy(()=>oe).optional(),isNot:t.lazy(()=>oe).optional()}).strict(),a2=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),bot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),oM=t.object({every:t.lazy(()=>mn).optional(),some:t.lazy(()=>mn).optional(),none:t.lazy(()=>mn).optional()}).strict(),n2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Sot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Tot=t.object({id:t.lazy(()=>e).optional()}).strict(),Pot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional()}).strict(),i2=t.object({is:t.lazy(()=>lo).optional(),isNot:t.lazy(()=>lo).optional()}).strict(),Rot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),jot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Not=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional()}).strict(),l2=t.object({every:t.lazy(()=>N).optional(),some:t.lazy(()=>N).optional(),none:t.lazy(()=>N).optional()}).strict(),aM=t.object({every:t.lazy(()=>Z).optional(),some:t.lazy(()=>Z).optional(),none:t.lazy(()=>Z).optional()}).strict(),_ot=t.object({_count:t.lazy(()=>e).optional()}).strict(),r2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional()}).strict(),p2=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>XA)]).optional()}).strict(),mS=t.object({every:t.lazy(()=>oe).optional(),some:t.lazy(()=>oe).optional(),none:t.lazy(()=>oe).optional()}).strict(),hS=t.object({every:t.lazy(()=>gn).optional(),some:t.lazy(()=>gn).optional(),none:t.lazy(()=>gn).optional()}).strict(),nM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),iB=t.object({_count:t.lazy(()=>e).optional()}).strict(),lB=t.object({_count:t.lazy(()=>e).optional()}).strict(),c2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Xot=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>Z6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),iM=t.object({is:t.lazy(()=>Re).optional().nullable(),isNot:t.lazy(()=>Re).optional().nullable()}).strict(),u2=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),y2=t.object({is:t.lazy(()=>wt).optional().nullable(),isNot:t.lazy(()=>wt).optional().nullable()}).strict(),lM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),s2=t.object({every:t.lazy(()=>Me).optional(),some:t.lazy(()=>Me).optional(),none:t.lazy(()=>Me).optional()}).strict(),rM=t.object({every:t.lazy(()=>tn).optional(),some:t.lazy(()=>tn).optional(),none:t.lazy(()=>tn).optional()}).strict(),bS=t.object({every:t.lazy(()=>pn).optional(),some:t.lazy(()=>pn).optional(),none:t.lazy(()=>pn).optional()}).strict(),IS=t.object({every:t.lazy(()=>cn).optional(),some:t.lazy(()=>cn).optional(),none:t.lazy(()=>cn).optional()}).strict(),pM=t.object({every:t.lazy(()=>He).optional(),some:t.lazy(()=>He).optional(),none:t.lazy(()=>He).optional()}).strict(),d2=t.object({every:t.lazy(()=>ke).optional(),some:t.lazy(()=>ke).optional(),none:t.lazy(()=>ke).optional()}).strict(),z2=t.object({every:t.lazy(()=>xe).optional(),some:t.lazy(()=>xe).optional(),none:t.lazy(()=>xe).optional()}).strict(),gS=t.object({every:t.lazy(()=>ln).optional(),some:t.lazy(()=>ln).optional(),none:t.lazy(()=>ln).optional()}).strict(),tat=t.object({_count:t.lazy(()=>e).optional()}).strict(),m2=t.object({_count:t.lazy(()=>e).optional()}).strict(),eat=t.object({_count:t.lazy(()=>e).optional()}).strict(),h2=t.object({_count:t.lazy(()=>e).optional()}).strict(),rB=t.object({_count:t.lazy(()=>e).optional()}).strict(),pB=t.object({_count:t.lazy(()=>e).optional()}).strict(),b2=t.object({_count:t.lazy(()=>e).optional()}).strict(),oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),aat=t.object({_count:t.lazy(()=>e).optional()}).strict(),cB=t.object({_count:t.lazy(()=>e).optional()}).strict(),nat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),uB=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>tS)]).optional()}).strict(),cM=t.object({is:t.lazy(()=>N).optional().nullable(),isNot:t.lazy(()=>N).optional().nullable()}).strict(),I2=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),CS=t.object({every:t.lazy(()=>Sn).optional(),some:t.lazy(()=>Sn).optional(),none:t.lazy(()=>Sn).optional()}).strict(),g2=t.object({every:t.lazy(()=>bn).optional(),some:t.lazy(()=>bn).optional(),none:t.lazy(()=>bn).optional()}).strict(),C2=t.object({every:t.lazy(()=>Tn).optional(),some:t.lazy(()=>Tn).optional(),none:t.lazy(()=>Tn).optional()}).strict(),A2=t.object({every:t.lazy(()=>sn).optional(),some:t.lazy(()=>sn).optional(),none:t.lazy(()=>sn).optional()}).strict(),S2=t.object({every:t.lazy(()=>dn).optional(),some:t.lazy(()=>dn).optional(),none:t.lazy(()=>dn).optional()}).strict(),AS=t.object({every:t.lazy(()=>zn).optional(),some:t.lazy(()=>zn).optional(),none:t.lazy(()=>zn).optional()}).strict(),wA=t.object({every:t.lazy(()=>ee).optional(),some:t.lazy(()=>ee).optional(),none:t.lazy(()=>ee).optional()}).strict(),cat=t.object({_count:t.lazy(()=>e).optional()}).strict(),yB=t.object({_count:t.lazy(()=>e).optional()}).strict(),uat=t.object({_count:t.lazy(()=>e).optional()}).strict(),yat=t.object({_count:t.lazy(()=>e).optional()}).strict(),sat=t.object({_count:t.lazy(()=>e).optional()}).strict(),dat=t.object({_count:t.lazy(()=>e).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),gN=t.object({_count:t.lazy(()=>e).optional()}).strict(),zat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),gat=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>v6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Aat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Pat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Wat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),dB=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>eS)]).optional()}).strict(),T2=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),P2=t.object({every:t.lazy(()=>Wn).optional(),some:t.lazy(()=>Wn).optional(),none:t.lazy(()=>Wn).optional()}).strict(),W2=t.object({every:t.lazy(()=>Un).optional(),some:t.lazy(()=>Un).optional(),none:t.lazy(()=>Un).optional()}).strict(),U2=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),uM=t.object({every:t.lazy(()=>Pn).optional(),some:t.lazy(()=>Pn).optional(),none:t.lazy(()=>Pn).optional()}).strict(),R2=t.object({every:t.lazy(()=>rn).optional(),some:t.lazy(()=>rn).optional(),none:t.lazy(()=>rn).optional()}).strict(),yM=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),k2=t.object({every:t.lazy(()=>Ja).optional(),some:t.lazy(()=>Ja).optional(),none:t.lazy(()=>Ja).optional()}).strict(),x2=t.object({every:t.lazy(()=>Ka).optional(),some:t.lazy(()=>Ka).optional(),none:t.lazy(()=>Ka).optional()}).strict(),j2=t.object({every:t.lazy(()=>Xa).optional(),some:t.lazy(()=>Xa).optional(),none:t.lazy(()=>Xa).optional()}).strict(),M2=t.object({is:t.lazy(()=>fe).optional().nullable(),isNot:t.lazy(()=>fe).optional().nullable()}).strict(),Z2=t.object({every:t.lazy(()=>Ga).optional(),some:t.lazy(()=>Ga).optional(),none:t.lazy(()=>Ga).optional()}).strict(),v2=t.object({is:t.lazy(()=>we).optional().nullable(),isNot:t.lazy(()=>we).optional().nullable()}).strict(),O2=t.object({every:t.lazy(()=>$a).optional(),some:t.lazy(()=>$a).optional(),none:t.lazy(()=>$a).optional()}).strict(),f2=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),jat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Mat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Zat=t.object({_count:t.lazy(()=>e).optional()}).strict(),w2=t.object({_count:t.lazy(()=>e).optional()}).strict(),vat=t.object({_count:t.lazy(()=>e).optional()}).strict(),N2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),fat=t.object({_count:t.lazy(()=>e).optional()}).strict(),wat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bat=t.object({_count:t.lazy(()=>e).optional()}).strict(),qat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Lat=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>O6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),sM=t.object({every:t.lazy(()=>An).optional(),some:t.lazy(()=>An).optional(),none:t.lazy(()=>An).optional()}).strict(),B2=t.object({every:t.lazy(()=>je).optional(),some:t.lazy(()=>je).optional(),none:t.lazy(()=>je).optional()}).strict(),dM=t.object({every:t.lazy(()=>nn).optional(),some:t.lazy(()=>nn).optional(),none:t.lazy(()=>nn).optional()}).strict(),q2=t.object({is:t.lazy(()=>ve).optional().nullable(),isNot:t.lazy(()=>ve).optional().nullable()}).strict(),F2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Vat=t.object({_count:t.lazy(()=>e).optional()}).strict(),D2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Hat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),CI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),zM=t.object({is:t.lazy(()=>ee).optional().nullable(),isNot:t.lazy(()=>ee).optional().nullable()}).strict(),zN=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),mN=t.object({recipeId:t.number(),stepNumber:t.number()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),SS=t.object({is:t.lazy(()=>wt).optional(),isNot:t.lazy(()=>wt).optional()}).strict(),mM=t.object({every:t.lazy(()=>Cn).optional(),some:t.lazy(()=>Cn).optional(),none:t.lazy(()=>Cn).optional()}).strict(),_2=t.object({_count:t.lazy(()=>e).optional()}).strict(),hN=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),rnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),pnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),zB=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>oS)]).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),dnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),bnt=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>f6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),mB=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>aS)]).optional()}).strict(),Int=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),gnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Cnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Ant=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Snt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>w6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),E2=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),bN=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Pnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),jnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Znt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),hB=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>nS)]).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),qnt=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>N6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),L2=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),Fnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Dnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),_nt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Ent=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Vnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional()}).strict(),bB=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>iS)]).optional()}).strict(),V2=t.object({every:t.lazy(()=>yn).optional(),some:t.lazy(()=>yn).optional(),none:t.lazy(()=>yn).optional()}).strict(),$nt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),oit=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>B6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),TS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>lS)]).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rit=t.object({id:t.lazy(()=>e).optional()}).strict(),H2=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>q6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),Q2=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),cit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Y2=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),Iit=t.object({_count:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),IN=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Ph=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),G2=t.object({is:t.lazy(()=>Ze).optional().nullable(),isNot:t.lazy(()=>Ze).optional().nullable()}).strict(),$2=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),J2=t.object({every:t.lazy(()=>hn).optional(),some:t.lazy(()=>hn).optional(),none:t.lazy(()=>hn).optional()}).strict(),xit=t.object({_count:t.lazy(()=>e).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),$it=t.object({create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>g).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),n=t.object({set:t.string().optional()}).strict(),Jit=t.object({create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>Flt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Dlt),t.lazy(()=>nD),t.lazy(()=>iD)]).optional()}).strict(),a=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Kit=t.object({create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>g).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),Xit=t.object({create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>_lt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Elt),t.lazy(()=>lD),t.lazy(()=>rD)]).optional()}).strict(),tlt=t.object({create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>g).optional()}).strict(),elt=t.object({create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>Llt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Vlt),t.lazy(()=>pD),t.lazy(()=>cD)]).optional()}).strict(),olt=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),connect:t.lazy(()=>g).optional()}).strict(),cC=t.object({set:t.lazy(()=>pe).optional()}).strict(),m=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),alt=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),upsert:t.lazy(()=>Hlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Qlt),t.lazy(()=>uD),t.lazy(()=>yD)]).optional()}).strict(),nlt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),connect:t.lazy(()=>g).optional()}).strict(),d=t.object({set:t.boolean().optional()}).strict(),ilt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),upsert:t.lazy(()=>Ylt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Glt),t.lazy(()=>sD),t.lazy(()=>dD)]).optional()}).strict(),llt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>g).optional()}).strict(),rlt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>$lt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Jlt),t.lazy(()=>zD),t.lazy(()=>mD)]).optional()}).strict(),plt=t.object({create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),connect:t.lazy(()=>g).optional()}).strict(),clt=t.object({create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),upsert:t.lazy(()=>Klt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Xlt),t.lazy(()=>hD),t.lazy(()=>bD)]).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),connect:t.lazy(()=>$).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),connect:t.lazy(()=>k).optional()}).strict(),t4=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),upsert:t.lazy(()=>trt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>ert),t.lazy(()=>ID),t.lazy(()=>gD)]).optional()}).strict(),e4=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),upsert:t.lazy(()=>ort).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>art),t.lazy(()=>CD),t.lazy(()=>AD)]).optional()}).strict(),o4=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),a4=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>$M).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),n4=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>$M).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),i4=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),upsert:t.lazy(()=>nrt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>irt),t.lazy(()=>SD),t.lazy(()=>TD)]).optional()}).strict(),l4=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>$M).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),r4=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>$M).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),RT=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),connect:t.lazy(()=>g).optional()}).strict(),kT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),xT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),jT=t.object({create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),connect:t.lazy(()=>j).optional()}).strict(),MT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),connect:t.lazy(()=>j).optional()}).strict(),ZT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),vT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),OT=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),upsert:t.lazy(()=>lrt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>rrt),t.lazy(()=>PD),t.lazy(()=>WD)]).optional()}).strict(),fT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),wT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),NT=t.object({create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),upsert:t.lazy(()=>prt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>crt),t.lazy(()=>UD),t.lazy(()=>RD)]).optional()}).strict(),BT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),upsert:t.lazy(()=>urt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>yrt),t.lazy(()=>kD),t.lazy(()=>xD)]).optional()}).strict(),qT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),FT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),IB=t.object({create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),connect:t.lazy(()=>$).optional()}).strict(),gB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),CB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),AB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),SB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),up=t.object({set:t.lazy(()=>Ot).optional()}).strict(),TB=t.object({create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),upsert:t.lazy(()=>srt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>drt),t.lazy(()=>jD),t.lazy(()=>MD)]).optional()}).strict(),PB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),WB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional()}).strict(),UB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),RB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional()}).strict(),kB=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>t5).optional(),connect:t.lazy(()=>g).optional()}).strict(),xB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>e5).optional(),connect:t.lazy(()=>Lt).optional()}).strict(),jB=t.object({create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]).optional(),connectOrCreate:t.lazy(()=>o5).optional(),connect:t.lazy(()=>nt).optional()}).strict(),MB=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>t5).optional(),upsert:t.lazy(()=>zrt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>mrt),t.lazy(()=>ZD),t.lazy(()=>vD)]).optional()}).strict(),ZB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>e5).optional(),upsert:t.lazy(()=>hrt).optional(),connect:t.lazy(()=>Lt).optional(),update:t.union([t.lazy(()=>brt),t.lazy(()=>OD),t.lazy(()=>fD)]).optional()}).strict(),vB=t.object({create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]).optional(),connectOrCreate:t.lazy(()=>o5).optional(),upsert:t.lazy(()=>Irt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),connect:t.lazy(()=>nt).optional(),update:t.union([t.lazy(()=>grt),t.lazy(()=>wD),t.lazy(()=>ND)]).optional()}).strict(),ult=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>a5).optional(),connect:t.lazy(()=>Lt).optional()}).strict(),uC=t.object({set:t.lazy(()=>ne).optional()}).strict(),ylt=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>a5).optional(),upsert:t.lazy(()=>Crt).optional(),connect:t.lazy(()=>Lt).optional(),update:t.union([t.lazy(()=>Art),t.lazy(()=>BD),t.lazy(()=>qD)]).optional()}).strict(),OB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>n5).optional(),connect:t.lazy(()=>$).optional()}).strict(),fB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),wB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional()}).strict(),NB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),BB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional()}).strict(),yp=t.object({set:t.lazy(()=>ft).optional()}).strict(),qB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>n5).optional(),upsert:t.lazy(()=>Srt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Trt),t.lazy(()=>FD),t.lazy(()=>DD)]).optional()}).strict(),FB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional()}).strict(),DB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),disconnect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),delete:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),_B=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional()}).strict(),EB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),disconnect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),delete:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),p4=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>i5).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),c4=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),u4=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),Fm=t.object({set:t.lazy(()=>_t).optional()}).strict(),y4=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>i5).optional(),upsert:t.lazy(()=>Prt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>Wrt),t.lazy(()=>_D),t.lazy(()=>ED)]).optional()}).strict(),s4=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),d4=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),LB=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>l5).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),VB=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>r5).optional(),connect:t.lazy(()=>j).optional()}).strict(),HB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),QB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),YB=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>l5).optional(),upsert:t.lazy(()=>Urt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>Rrt),t.lazy(()=>LD),t.lazy(()=>VD)]).optional()}).strict(),GB=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>r5).optional(),upsert:t.lazy(()=>krt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>xrt),t.lazy(()=>HD),t.lazy(()=>QD)]).optional()}).strict(),$B=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),JB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Dm=t.object({set:t.string().array()}).strict(),z4=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>p5).optional(),connect:t.lazy(()=>et).optional()}).strict(),m4=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>c5).optional(),connect:t.lazy(()=>Jt).optional()}).strict(),wz=t.object({set:t.lazy(()=>qt).optional()}).strict(),Nz=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),h4=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>p5).optional(),upsert:t.lazy(()=>jrt).optional(),connect:t.lazy(()=>et).optional(),update:t.union([t.lazy(()=>Mrt),t.lazy(()=>YD),t.lazy(()=>GD)]).optional()}).strict(),b4=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>c5).optional(),upsert:t.lazy(()=>Zrt).optional(),connect:t.lazy(()=>Jt).optional(),update:t.union([t.lazy(()=>vrt),t.lazy(()=>$D),t.lazy(()=>JD)]).optional()}).strict(),I4=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>u5).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),g4=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>y5).optional(),connect:t.lazy(()=>Q).optional()}).strict(),C4=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>u5).optional(),upsert:t.lazy(()=>Ort).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>frt),t.lazy(()=>KD),t.lazy(()=>XD)]).optional()}).strict(),A4=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>y5).optional(),upsert:t.lazy(()=>wrt).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>Nrt),t.lazy(()=>t_),t.lazy(()=>e_)]).optional()}).strict(),tp=t.object({set:t.string().array()}).strict(),KB=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>s5).optional(),connect:t.lazy(()=>$).optional()}).strict(),XB=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>d5).optional(),connect:t.lazy(()=>k).optional()}).strict(),tq=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>z5).optional(),connect:t.lazy(()=>j).optional()}).strict(),Br=t.object({set:t.lazy(()=>Ut).optional()}).strict(),qr=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Fr=t.object({set:t.lazy(()=>Rt).optional()}).strict(),eq=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>s5).optional(),upsert:t.lazy(()=>Brt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>qrt),t.lazy(()=>o_),t.lazy(()=>a_)]).optional()}).strict(),oq=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>d5).optional(),upsert:t.lazy(()=>Frt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Drt),t.lazy(()=>n_),t.lazy(()=>i_)]).optional()}).strict(),aq=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>z5).optional(),upsert:t.lazy(()=>_rt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ert),t.lazy(()=>l_),t.lazy(()=>r_)]).optional()}).strict(),nq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),iq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),lq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),rq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),slt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),dlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),zlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),mlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>m5).optional(),connect:t.lazy(()=>$).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>h5).optional(),connect:t.lazy(()=>k).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>b5).optional(),connect:t.lazy(()=>j).optional()}).strict(),gq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>m5).optional(),upsert:t.lazy(()=>Lrt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Vrt),t.lazy(()=>p_),t.lazy(()=>c_)]).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>h5).optional(),upsert:t.lazy(()=>Hrt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Qrt),t.lazy(()=>u_),t.lazy(()=>y_)]).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>b5).optional(),upsert:t.lazy(()=>Yrt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Grt),t.lazy(()=>s_),t.lazy(()=>d_)]).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>I5).optional(),connect:t.lazy(()=>$).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>g5).optional(),connect:t.lazy(()=>Q).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>C5).optional(),connect:t.lazy(()=>j).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>I5).optional(),upsert:t.lazy(()=>$rt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Jrt),t.lazy(()=>z_),t.lazy(()=>m_)]).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>g5).optional(),upsert:t.lazy(()=>Krt).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>Xrt),t.lazy(()=>h_),t.lazy(()=>b_)]).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>C5).optional(),upsert:t.lazy(()=>tpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ept),t.lazy(()=>I_),t.lazy(()=>g_)]).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>A5).optional(),connect:t.lazy(()=>$).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>S5).optional(),connect:t.lazy(()=>j).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>lv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>lv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>A5).optional(),upsert:t.lazy(()=>opt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>apt),t.lazy(()=>C_),t.lazy(()=>A_)]).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>S5).optional(),upsert:t.lazy(()=>npt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ipt),t.lazy(()=>S_),t.lazy(()=>T_)]).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>lv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>lv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>T5).optional(),connect:t.lazy(()=>at).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>P5).optional(),connect:t.lazy(()=>g).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>W5).optional(),connect:t.lazy(()=>j).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>T5).optional(),upsert:t.lazy(()=>lpt).optional(),connect:t.lazy(()=>at).optional(),update:t.union([t.lazy(()=>rpt),t.lazy(()=>P_),t.lazy(()=>W_)]).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>P5).optional(),upsert:t.lazy(()=>ppt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>cpt),t.lazy(()=>U_),t.lazy(()=>R_)]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>W5).optional(),upsert:t.lazy(()=>upt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ypt),t.lazy(()=>k_),t.lazy(()=>x_)]).optional()}).strict(),hlt=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>U5).optional(),connect:t.lazy(()=>Xt).optional()}).strict(),yC=t.object({set:t.lazy(()=>ie).optional()}).strict(),blt=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>U5).optional(),upsert:t.lazy(()=>spt).optional(),connect:t.lazy(()=>Xt).optional(),update:t.union([t.lazy(()=>dpt),t.lazy(()=>j_),t.lazy(()=>M_)]).optional()}).strict(),Ilt=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>R5).optional(),connect:t.lazy(()=>j).optional()}).strict(),sC=t.object({set:t.lazy(()=>le).optional()}).strict(),glt=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>R5).optional(),upsert:t.lazy(()=>zpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>mpt),t.lazy(()=>Z_),t.lazy(()=>v_)]).optional()}).strict(),Clt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>k5).optional(),connect:t.lazy(()=>j).optional()}).strict(),dC=t.object({set:t.lazy(()=>re).optional()}).strict(),Alt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>k5).optional(),upsert:t.lazy(()=>hpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>bpt),t.lazy(()=>O_),t.lazy(()=>f_)]).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>x5).optional(),connect:t.lazy(()=>f).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>j5).optional(),connect:t.lazy(()=>g).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>M5).optional(),connect:t.lazy(()=>j).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>x5).optional(),upsert:t.lazy(()=>Ipt).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>gpt),t.lazy(()=>w_),t.lazy(()=>N_)]).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>j5).optional(),upsert:t.lazy(()=>Cpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Apt),t.lazy(()=>B_),t.lazy(()=>q_)]).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>M5).optional(),upsert:t.lazy(()=>Spt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Tpt),t.lazy(()=>F_),t.lazy(()=>D_)]).optional()}).strict(),Slt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),Tlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),Plt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Wlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),S4=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>Z5).optional(),connect:t.lazy(()=>Q).optional()}).strict(),T4=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>v5).optional(),connect:t.lazy(()=>Jr).optional()}).strict(),P4=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>Z5).optional(),upsert:t.lazy(()=>Ppt).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>Wpt),t.lazy(()=>__),t.lazy(()=>E_)]).optional()}).strict(),W4=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>v5).optional(),upsert:t.lazy(()=>Upt).optional(),connect:t.lazy(()=>Jr).optional(),update:t.union([t.lazy(()=>Rpt),t.lazy(()=>L_),t.lazy(()=>V_)]).optional()}).strict(),Ult=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>O5).optional(),connect:t.lazy(()=>k).optional()}).strict(),Rlt=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>O5).optional(),upsert:t.lazy(()=>kpt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>xpt),t.lazy(()=>H_),t.lazy(()=>Q_)]).optional()}).strict(),U4=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),R4=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>vv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),k4=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),x4=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>vv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),j4=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),M4=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>vv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Z4=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),v4=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>vv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),hM=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>f5).optional(),connect:t.lazy(()=>$).optional()}).strict(),bM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),IM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),gM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),CM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),AM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),SM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),ep=t.object({set:t.lazy(()=>vt).optional()}).strict(),TM=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>f5).optional(),upsert:t.lazy(()=>jpt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Mpt),t.lazy(()=>Y_),t.lazy(()=>G_)]).optional()}).strict(),PM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),WM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),UM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),RM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),kM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),xM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Nl=t.object({create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]).optional(),connectOrCreate:t.lazy(()=>w5).optional(),connect:t.lazy(()=>Rl).optional()}).strict(),Bl=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),ql=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),Fl=t.object({create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),Dl=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),_l=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),El=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),Ll=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Vl=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Hl=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Ql=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]).optional(),connectOrCreate:t.lazy(()=>w5).optional(),upsert:t.lazy(()=>Zpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),connect:t.lazy(()=>Rl).optional(),update:t.union([t.lazy(()=>vpt),t.lazy(()=>$_),t.lazy(()=>J_)]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),upsert:t.lazy(()=>N5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>B5),t.lazy(()=>tO),t.lazy(()=>eO)]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),disconnect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),delete:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),upsert:t.lazy(()=>N5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>B5),t.lazy(()=>tO),t.lazy(()=>eO)]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),disconnect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),delete:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>q5).optional(),connect:t.lazy(()=>Rl).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>F5).optional(),connect:t.lazy(()=>$).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),createMany:t.lazy(()=>pO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),$n=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Jn=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Kn=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Xn=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),createMany:t.lazy(()=>pO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),xt=t.object({set:t.lazy(()=>x).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>q5).optional(),upsert:t.lazy(()=>Opt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),connect:t.lazy(()=>Rl).optional(),update:t.union([t.lazy(()=>fpt),t.lazy(()=>K_),t.lazy(()=>X_)]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>F5).optional(),upsert:t.lazy(()=>wpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Npt),t.lazy(()=>tE),t.lazy(()=>eE)]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>pO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),disconnect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),delete:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>pO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),disconnect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),delete:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),connect:t.union([t.lazy(()=>et),t.lazy(()=>et).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),klt=t.object({create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]).optional(),connectOrCreate:t.lazy(()=>D5).optional(),connect:t.lazy(()=>j).optional()}).strict(),xlt=t.object({create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]).optional(),connectOrCreate:t.lazy(()=>D5).optional(),upsert:t.lazy(()=>Bpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>qpt),t.lazy(()=>oE),t.lazy(()=>aE)]).optional()}).strict(),O4=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),f4=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>_5).optional(),connect:t.lazy(()=>$).optional()}).strict(),w4=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),N4=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),B4=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>_5).optional(),upsert:t.lazy(()=>Fpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Dpt),t.lazy(()=>nE),t.lazy(()=>iE)]).optional()}).strict(),q4=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),Ct=t.object({set:t.string().array()}).strict(),ro=t.object({create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]).optional(),connectOrCreate:t.lazy(()=>E5).optional(),connect:t.lazy(()=>$).optional()}).strict(),po=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>L5).optional(),connect:t.lazy(()=>Kt).optional()}).strict(),co=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),uo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),connect:t.lazy(()=>vl).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),connect:t.lazy(()=>fl).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),connect:t.lazy(()=>vl).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),connect:t.lazy(()=>fl).optional()}).strict(),rt=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),pt=t.object({set:t.lazy(()=>W).optional()}).strict(),ta=t.object({create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]).optional(),connectOrCreate:t.lazy(()=>E5).optional(),upsert:t.lazy(()=>_pt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Ept),t.lazy(()=>lE),t.lazy(()=>rE)]).optional()}).strict(),ea=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>L5).optional(),upsert:t.lazy(()=>Lpt).optional(),connect:t.lazy(()=>Kt).optional(),update:t.union([t.lazy(()=>Vpt),t.lazy(()=>pE),t.lazy(()=>cE)]).optional()}).strict(),oa=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),aa=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),na=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),ia=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),la=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),ra=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),pa=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),ca=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),ua=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),ya=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),sa=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),da=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),za=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),ma=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),ha=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),ba=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Ia=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),ga=t.object({create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),upsert:t.lazy(()=>V5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>vl).optional(),update:t.union([t.lazy(()=>H5),t.lazy(()=>JO),t.lazy(()=>KO)]).optional()}).strict(),Ca=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),disconnect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),delete:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Aa=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),upsert:t.lazy(()=>Q5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>Y5),t.lazy(()=>XO),t.lazy(()=>tf)]).optional()}).strict(),Sa=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Ta=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),upsert:t.lazy(()=>G5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>fl).optional(),update:t.union([t.lazy(()=>$5),t.lazy(()=>ef),t.lazy(()=>of)]).optional()}).strict(),Pa=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),Wa=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),Ua=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),Ra=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),ka=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),xa=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),ja=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),Ma=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Za=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),va=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),Oa=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),fa=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),wa=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),Na=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Ba=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),qa=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Fa=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Da=t.object({create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),upsert:t.lazy(()=>V5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>vl).optional(),update:t.union([t.lazy(()=>H5),t.lazy(()=>JO),t.lazy(()=>KO)]).optional()}).strict(),_a=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),disconnect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),delete:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Ea=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),upsert:t.lazy(()=>Q5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>Y5),t.lazy(()=>XO),t.lazy(()=>tf)]).optional()}).strict(),La=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Va=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),upsert:t.lazy(()=>G5).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>fl).optional(),update:t.union([t.lazy(()=>$5),t.lazy(()=>ef),t.lazy(()=>of)]).optional()}).strict(),AI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),SI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),TI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),PI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),WI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),UI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),RI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),kI=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),connect:t.lazy(()=>ot).optional()}).strict(),xI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),jI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),MI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),ZI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),vI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),OI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),fI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),wI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),NI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),BI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),qI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),FI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),DI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),_I=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),upsert:t.lazy(()=>Hpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),connect:t.lazy(()=>ot).optional(),update:t.union([t.lazy(()=>Qpt),t.lazy(()=>uE),t.lazy(()=>yE)]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),QI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),op=t.object({set:t.number().array()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),connect:t.lazy(()=>g).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),connect:t.lazy(()=>Q).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),connect:t.lazy(()=>w).optional()}).strict(),Dr=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),upsert:t.lazy(()=>Ypt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Gpt),t.lazy(()=>sE),t.lazy(()=>dE)]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),upsert:t.lazy(()=>$pt).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>Jpt),t.lazy(()=>zE),t.lazy(()=>mE)]).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),upsert:t.lazy(()=>Kpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Xpt),t.lazy(()=>hE),t.lazy(()=>bE)]).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),connect:t.lazy(()=>g).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),connect:t.lazy(()=>w).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),upsert:t.lazy(()=>tct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>ect),t.lazy(()=>IE),t.lazy(()=>gE)]).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),upsert:t.lazy(()=>oct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>act),t.lazy(()=>CE),t.lazy(()=>AE)]).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),PS=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),WS=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),connect:t.lazy(()=>Q).optional()}).strict(),US=t.object({create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),connect:t.lazy(()=>j).optional()}).strict(),RS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),kS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),xS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),jS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),MS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ZS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),vS=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),upsert:t.lazy(()=>nct).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>ict),t.lazy(()=>SE),t.lazy(()=>TE)]).optional()}).strict(),OS=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),upsert:t.lazy(()=>lct).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>rct),t.lazy(()=>PE),t.lazy(()=>WE)]).optional()}).strict(),fS=t.object({create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),upsert:t.lazy(()=>pct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>cct),t.lazy(()=>UE),t.lazy(()=>RE)]).optional()}).strict(),wS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),NS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),BS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),qS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),FS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),DS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),connect:t.lazy(()=>f).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>j).optional()}).strict(),_r=t.object({set:t.lazy(()=>kt).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),upsert:t.lazy(()=>uct).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>yct),t.lazy(()=>kE),t.lazy(()=>xE)]).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),upsert:t.lazy(()=>sct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>dct),t.lazy(()=>jE),t.lazy(()=>ME)]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>zct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>mct),t.lazy(()=>ZE),t.lazy(()=>vE)]).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),connect:t.lazy(()=>j).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),ap=t.object({set:t.lazy(()=>Mt).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),upsert:t.lazy(()=>hct).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>bct),t.lazy(()=>OE),t.lazy(()=>fE)]).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),upsert:t.lazy(()=>Ict).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>gct),t.lazy(()=>wE),t.lazy(()=>NE)]).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),F4=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),connect:t.lazy(()=>it).optional()}).strict(),D4=t.object({create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),connect:t.lazy(()=>f).optional()}).strict(),_4=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),upsert:t.lazy(()=>Cct).optional(),connect:t.lazy(()=>it).optional(),update:t.union([t.lazy(()=>Act),t.lazy(()=>BE),t.lazy(()=>qE)]).optional()}).strict(),E4=t.object({create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),upsert:t.lazy(()=>Sct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Tct),t.lazy(()=>FE),t.lazy(()=>DE)]).optional()}).strict(),jlt=t.object({create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),connect:t.lazy(()=>g).optional()}).strict(),Mlt=t.object({create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),upsert:t.lazy(()=>Pct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Wct),t.lazy(()=>_E),t.lazy(()=>EE)]).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),connect:t.lazy(()=>$).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),np=t.object({set:t.lazy(()=>Zt).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),upsert:t.lazy(()=>Uct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Rct),t.lazy(()=>LE),t.lazy(()=>VE)]).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>kct).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>xct),t.lazy(()=>HE),t.lazy(()=>QE)]).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),L4=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>lt).optional()}).strict(),V4=t.object({create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>Q).optional()}).strict(),H4=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>jct).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>Mct),t.lazy(()=>YE),t.lazy(()=>GE)]).optional()}).strict(),Q4=t.object({create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>Zct).optional(),connect:t.lazy(()=>Q).optional(),update:t.union([t.lazy(()=>vct),t.lazy(()=>$E),t.lazy(()=>JE)]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Y4=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>j).optional()}).strict(),G4=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),$4=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),_m=t.object({set:t.lazy(()=>Et).optional()}).strict(),J4=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>Oct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>fct),t.lazy(()=>KE),t.lazy(()=>XE)]).optional()}).strict(),K4=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),X4=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),t6=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),e6=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>cw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),o6=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),a6=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>cw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ya=t.object({set:t.lazy(()=>X).optional()}).strict(),n6=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),i6=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>cw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),l6=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),r6=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>cw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>te).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>g).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>j).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>wct).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>Nct),t.lazy(()=>tL),t.lazy(()=>eL)]).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>Bct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>qct),t.lazy(()=>oL),t.lazy(()=>aL)]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>Fct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Dct),t.lazy(()=>nL),t.lazy(()=>iL)]).optional()}).strict(),Zlt=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>j).optional()}).strict(),vlt=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>_ct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ect),t.lazy(()=>lL),t.lazy(()=>rL)]).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>$).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>Lct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Vct),t.lazy(()=>pL),t.lazy(()=>cL)]).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),p6=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>k).optional()}).strict(),c6=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>g).optional()}).strict(),u6=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Hct).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Qct),t.lazy(()=>uL),t.lazy(()=>yL)]).optional()}).strict(),y6=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Yct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Gct),t.lazy(()=>sL),t.lazy(()=>dL)]).optional()}).strict(),oo=t.object({set:t.number().array()}).strict(),ao=t.object({set:t.number().array()}).strict(),no=t.object({set:t.number().array()}).strict(),io=t.object({set:t.string().array()}).strict(),Bz=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),qz=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>$t).optional()}).strict(),Fz=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),Dz=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>jw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),_z=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),connect:t.lazy(()=>wl).optional()}).strict(),Ez=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Lz=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Vz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Hz=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Qz=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),Yz=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),Gz=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>jw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),$z=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),connect:t.lazy(()=>wl).optional()}).strict(),Jz=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Kz=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Xz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),tm=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),em=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),Fe=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),De=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),_e=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ee=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),om=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>$ct).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Jct),t.lazy(()=>zL),t.lazy(()=>mL)]).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>Kct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ze)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ze)]).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>Xct),t.lazy(()=>hL),t.lazy(()=>bL)]).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>jw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),upsert:t.lazy(()=>k3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>x3),t.lazy(()=>ww),t.lazy(()=>Nw)]).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>jw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),upsert:t.lazy(()=>k3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>x3),t.lazy(()=>ww),t.lazy(()=>Nw)]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Olt=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>k).optional()}).strict(),flt=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>tut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>eut),t.lazy(()=>IL),t.lazy(()=>gL)]).optional()}).strict(),wlt=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>g).optional()}).strict(),Nlt=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>out).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>aut),t.lazy(()=>CL),t.lazy(()=>AL)]).optional()}).strict(),Blt=t.object({create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>g).optional()}).strict(),qlt=t.object({create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>nut).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>iut),t.lazy(()=>SL),t.lazy(()=>TL)]).optional()}).strict(),yt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),Vr=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Vr)]).optional()}).strict(),NA=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>NA)]).optional()}).strict(),s6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>s6)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Vr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),d6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>d6)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Vr).optional(),_sum:t.lazy(()=>Vr).optional(),_min:t.lazy(()=>Vr).optional(),_max:t.lazy(()=>Vr).optional()}).strict(),z6=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>z6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>NA).optional(),_max:t.lazy(()=>NA).optional()}).strict(),Hr=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Hr)]).optional().nullable()}).strict(),BA=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>BA)]).optional().nullable()}).strict(),qA=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>qA)]).optional()}).strict(),m6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>m6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>Hr).optional(),_min:t.lazy(()=>Hr).optional(),_max:t.lazy(()=>Hr).optional()}).strict(),cl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>cl)]).optional().nullable()}).strict(),h6=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>h6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>BA).optional(),_max:t.lazy(()=>BA).optional()}).strict(),b6=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>b6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>qA).optional(),_max:t.lazy(()=>qA).optional()}).strict(),FA=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>FA)]).optional()}).strict(),I6=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>I6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),g6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>g6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>cl).optional(),_min:t.lazy(()=>cl).optional(),_max:t.lazy(()=>cl).optional()}).strict(),DA=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>DA)]).optional()}).strict(),C6=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>C6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),_A=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>_A)]).optional().nullable()}).strict(),A6=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>A6)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),EA=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>EA)]).optional()}).strict(),S6=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>S6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),LA=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>LA)]).optional()}).strict(),T6=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>T6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),VA=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>VA)]).optional()}).strict(),P6=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>P6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),HA=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>HA)]).optional()}).strict(),W6=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>W6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),QA=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>QA)]).optional()}).strict(),U6=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>U6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),YA=t.object({equals:t.lazy(()=>Ut).optional(),in:t.lazy(()=>Ut).array().optional(),notIn:t.lazy(()=>Ut).array().optional(),not:t.union([t.lazy(()=>Ut),t.lazy(()=>YA)]).optional()}).strict(),GA=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>GA)]).optional()}).strict(),R6=t.object({equals:t.lazy(()=>Ut).optional(),in:t.lazy(()=>Ut).array().optional(),notIn:t.lazy(()=>Ut).array().optional(),not:t.union([t.lazy(()=>Ut),t.lazy(()=>R6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),k6=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>k6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),$A=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>$A)]).optional()}).strict(),x6=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>x6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),JA=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>JA)]).optional()}).strict(),j6=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>j6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),KA=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>KA)]).optional()}).strict(),M6=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>M6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XA=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>XA)]).optional()}).strict(),Z6=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>Z6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),tS=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>tS)]).optional()}).strict(),v6=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>v6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),eS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>eS)]).optional()}).strict(),O6=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>O6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),oS=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>oS)]).optional()}).strict(),f6=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>f6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),aS=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>aS)]).optional()}).strict(),w6=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>w6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),nS=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>nS)]).optional()}).strict(),N6=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>N6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),iS=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>iS)]).optional()}).strict(),B6=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>B6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),lS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>lS)]).optional()}).strict(),q6=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>q6)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),jM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),MM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),F6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)])}).strict(),Flt=t.object({update:t.union([t.lazy(()=>nD),t.lazy(()=>iD)]),create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]),where:t.lazy(()=>v).optional()}).strict(),Dlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>nD),t.lazy(()=>iD)])}).strict(),nD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),iD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ZM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),vM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),D6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)])}).strict(),_lt=t.object({update:t.union([t.lazy(()=>lD),t.lazy(()=>rD)]),create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]),where:t.lazy(()=>v).optional()}).strict(),Elt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>lD),t.lazy(()=>rD)])}).strict(),lD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),rD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),OM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),fM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),_6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)])}).strict(),Llt=t.object({update:t.union([t.lazy(()=>pD),t.lazy(()=>cD)]),create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]),where:t.lazy(()=>v).optional()}).strict(),Vlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>pD),t.lazy(()=>cD)])}).strict(),pD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),cD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),wM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),NM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),E6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)])}).strict(),Hlt=t.object({update:t.union([t.lazy(()=>uD),t.lazy(()=>yD)]),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]),where:t.lazy(()=>v).optional()}).strict(),Qlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>uD),t.lazy(()=>yD)])}).strict(),uD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),yD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),BM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),qM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),L6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)])}).strict(),Ylt=t.object({update:t.union([t.lazy(()=>sD),t.lazy(()=>dD)]),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]),where:t.lazy(()=>v).optional()}).strict(),Glt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>sD),t.lazy(()=>dD)])}).strict(),sD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),dD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),FM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),DM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),V6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)])}).strict(),$lt=t.object({update:t.union([t.lazy(()=>zD),t.lazy(()=>mD)]),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]),where:t.lazy(()=>v).optional()}).strict(),Jlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>zD),t.lazy(()=>mD)])}).strict(),zD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),mD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),_M=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),EM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),H6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)])}).strict(),Klt=t.object({update:t.union([t.lazy(()=>hD),t.lazy(()=>bD)]),create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]),where:t.lazy(()=>v).optional()}).strict(),Xlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>hD),t.lazy(()=>bD)])}).strict(),hD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),bD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),LM=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),VM=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),Q6=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)])}).strict(),HM=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),QM=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Y6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)])}).strict(),trt=t.object({update:t.union([t.lazy(()=>ID),t.lazy(()=>gD)]),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]),where:t.lazy(()=>N).optional()}).strict(),ert=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>ID),t.lazy(()=>gD)])}).strict(),ID=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),gD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),ort=t.object({update:t.union([t.lazy(()=>CD),t.lazy(()=>AD)]),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]),where:t.lazy(()=>gt).optional()}).strict(),art=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>CD),t.lazy(()=>AD)])}).strict(),CD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),AD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),YM=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>YF),menuItems:t.lazy(()=>GF).optional()}).strict(),GM=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>JF).optional()}).strict(),G6=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)])}).strict(),Lp=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Vp=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Wh=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Lp),t.lazy(()=>Vp)])}).strict(),$M=t.object({data:t.union([t.lazy(()=>NV),t.lazy(()=>NV).array()]),skipDuplicates:t.boolean().optional()}).strict(),nrt=t.object({update:t.union([t.lazy(()=>SD),t.lazy(()=>TD)]),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]),where:t.lazy(()=>Me).optional()}).strict(),irt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>SD),t.lazy(()=>TD)])}).strict(),SD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>XF).optional(),menuItems:t.lazy(()=>tD).optional()}).strict(),TD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>oD).optional()}).strict(),tW=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>v3),t.lazy(()=>O3)]),create:t.union([t.lazy(()=>Lp),t.lazy(()=>Vp)])}).strict(),eW=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>v3),t.lazy(()=>O3)])}).strict(),oW=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>cS),t.lazy(()=>lut)])}).strict(),eo=t.object({AND:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional(),OR:t.lazy(()=>eo).array().optional(),NOT:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>CI).optional(),recipeServingsAmount:t.lazy(()=>Ph).optional(),recipeServingsCost:t.lazy(()=>Ph).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),JM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),KM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),$6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)])}).strict(),Hp=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Yq),ingredient:t.lazy(()=>Gq)}).strict(),Qp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),Uh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),XM=t.object({data:t.union([t.lazy(()=>BV),t.lazy(()=>BV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yp=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>tF),equipment:t.lazy(()=>oF).optional()}).strict(),Gp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>aF).optional()}).strict(),Rh=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),tZ=t.object({data:t.union([t.lazy(()=>qV),t.lazy(()=>qV).array()]),skipDuplicates:t.boolean().optional()}).strict(),eZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),oZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),J6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)])}).strict(),aZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),nZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),K6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)])}).strict(),lrt=t.object({update:t.union([t.lazy(()=>PD),t.lazy(()=>WD)]),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]),where:t.lazy(()=>v).optional()}).strict(),rrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>PD),t.lazy(()=>WD)])}).strict(),PD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),WD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),aW=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>f3),t.lazy(()=>w3)]),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),nW=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>f3),t.lazy(()=>w3)])}).strict(),iW=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>TT),t.lazy(()=>rut)])}).strict(),xn=t.object({AND:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional(),OR:t.lazy(()=>xn).array().optional(),NOT:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>CI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),lW=t.object({where:t.lazy(()=>nt),update:t.union([t.lazy(()=>N3),t.lazy(()=>B3)]),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),rW=t.object({where:t.lazy(()=>nt),data:t.union([t.lazy(()=>N3),t.lazy(()=>B3)])}).strict(),pW=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>put)])}).strict(),sl=t.object({AND:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),OR:t.lazy(()=>sl).array().optional(),NOT:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),prt=t.object({update:t.union([t.lazy(()=>UD),t.lazy(()=>RD)]),create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]),where:t.lazy(()=>Z).optional()}).strict(),crt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>UD),t.lazy(()=>RD)])}).strict(),UD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),RD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),urt=t.object({update:t.union([t.lazy(()=>kD),t.lazy(()=>xD)]),create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]),where:t.lazy(()=>Z).optional()}).strict(),yrt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>kD),t.lazy(()=>xD)])}).strict(),kD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),xD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),iZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),lZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),X6=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)])}).strict(),$p=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>kB),RecipeInstruction:t.lazy(()=>jB).optional()}).strict(),Jp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),kh=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),rZ=t.object({data:t.union([t.lazy(()=>FV),t.lazy(()=>FV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kp=t.object({date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xp=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xh=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),pZ=t.object({data:t.union([t.lazy(()=>DV),t.lazy(()=>DV).array()]),skipDuplicates:t.boolean().optional()}).strict(),srt=t.object({update:t.union([t.lazy(()=>jD),t.lazy(()=>MD)]),create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]),where:t.lazy(()=>N).optional()}).strict(),drt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>jD),t.lazy(()=>MD)])}).strict(),jD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),MD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),cW=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>q3),t.lazy(()=>F3)]),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),uW=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>q3),t.lazy(()=>F3)])}).strict(),yW=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>bT),t.lazy(()=>cut)])}).strict(),jn=t.object({AND:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional(),OR:t.lazy(()=>jn).array().optional(),NOT:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),sW=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>D3),t.lazy(()=>_3)]),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),dW=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>D3),t.lazy(()=>_3)])}).strict(),zW=t.object({where:t.lazy(()=>dp),data:t.union([t.lazy(()=>RN),t.lazy(()=>uut)])}).strict(),dp=t.object({AND:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional(),OR:t.lazy(()=>dp).array().optional(),NOT:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),cZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),uZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),t5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)])}).strict(),yZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IB),maintenanceLogs:t.lazy(()=>CB).optional()}).strict(),sZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>SB).optional()}).strict(),e5=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)])}).strict(),dZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>tF),RecipeVersion:t.lazy(()=>eF).optional()}).strict(),zZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),o5=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)])}).strict(),zrt=t.object({update:t.union([t.lazy(()=>ZD),t.lazy(()=>vD)]),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]),where:t.lazy(()=>v).optional()}).strict(),mrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ZD),t.lazy(()=>vD)])}).strict(),ZD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),vD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),hrt=t.object({update:t.union([t.lazy(()=>OD),t.lazy(()=>fD)]),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]),where:t.lazy(()=>ke).optional()}).strict(),brt=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>OD),t.lazy(()=>fD)])}).strict(),OD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TB).optional(),maintenanceLogs:t.lazy(()=>WB).optional()}).strict(),fD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),Irt=t.object({update:t.union([t.lazy(()=>wD),t.lazy(()=>ND)]),create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]),where:t.lazy(()=>Oe).optional()}).strict(),grt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>wD),t.lazy(()=>ND)])}).strict(),wD=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>nF).optional(),RecipeVersion:t.lazy(()=>iF).optional()}).strict(),ND=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),mZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IB),recipes:t.lazy(()=>gB).optional()}).strict(),hZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>AB).optional()}).strict(),a5=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)])}).strict(),Crt=t.object({update:t.union([t.lazy(()=>BD),t.lazy(()=>qD)]),create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]),where:t.lazy(()=>ke).optional()}).strict(),Art=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>BD),t.lazy(()=>qD)])}).strict(),BD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TB).optional(),recipes:t.lazy(()=>PB).optional()}).strict(),qD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>UB).optional()}).strict(),bZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),IZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),n5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)])}).strict(),tc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>c4).optional()}).strict(),ec=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>u4).optional()}).strict(),jh=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),gZ=t.object({data:t.union([t.lazy(()=>_V),t.lazy(()=>_V).array()]),skipDuplicates:t.boolean().optional()}).strict(),oc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>VB),items:t.lazy(()=>HB).optional()}).strict(),ac=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QB).optional()}).strict(),Mh=t.object({where:t.lazy(()=>et),create:t.union([t.lazy(()=>oc),t.lazy(()=>ac)])}).strict(),CZ=t.object({data:t.union([t.lazy(()=>EV),t.lazy(()=>EV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Srt=t.object({update:t.union([t.lazy(()=>FD),t.lazy(()=>DD)]),create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]),where:t.lazy(()=>N).optional()}).strict(),Trt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>FD),t.lazy(()=>DD)])}).strict(),FD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),DD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),mW=t.object({where:t.lazy(()=>Jt),update:t.union([t.lazy(()=>E3),t.lazy(()=>L3)]),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),hW=t.object({where:t.lazy(()=>Jt),data:t.union([t.lazy(()=>E3),t.lazy(()=>L3)])}).strict(),bW=t.object({where:t.lazy(()=>zp),data:t.union([t.lazy(()=>xN),t.lazy(()=>yut)])}).strict(),zp=t.object({AND:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional(),OR:t.lazy(()=>zp).array().optional(),NOT:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>JN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),IW=t.object({where:t.lazy(()=>et),update:t.union([t.lazy(()=>V3),t.lazy(()=>H3)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>ac)])}).strict(),gW=t.object({where:t.lazy(()=>et),data:t.union([t.lazy(()=>V3),t.lazy(()=>H3)])}).strict(),CW=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>Zj),t.lazy(()=>sut)])}).strict(),dl=t.object({AND:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),OR:t.lazy(()=>dl).array().optional(),NOT:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),completedById:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>OB),completions:t.lazy(()=>wB).optional()}).strict(),SZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>BB).optional()}).strict(),i5=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)])}).strict(),nc=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>z4)}).strict(),ic=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zh=t.object({where:t.lazy(()=>dt),create:t.union([t.lazy(()=>nc),t.lazy(()=>ic)])}).strict(),TZ=t.object({data:t.union([t.lazy(()=>LV),t.lazy(()=>LV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Prt=t.object({update:t.union([t.lazy(()=>_D),t.lazy(()=>ED)]),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]),where:t.lazy(()=>xe).optional()}).strict(),Wrt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>_D),t.lazy(()=>ED)])}).strict(),_D=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qB).optional(),completions:t.lazy(()=>DB).optional()}).strict(),ED=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>EB).optional()}).strict(),AW=t.object({where:t.lazy(()=>dt),update:t.union([t.lazy(()=>Q3),t.lazy(()=>Y3)]),create:t.union([t.lazy(()=>nc),t.lazy(()=>ic)])}).strict(),SW=t.object({where:t.lazy(()=>dt),data:t.union([t.lazy(()=>Q3),t.lazy(()=>Y3)])}).strict(),TW=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>vj),t.lazy(()=>dut)])}).strict(),zl=t.object({AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>KN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>OB),items:t.lazy(()=>fB).optional()}).strict(),WZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>NB).optional()}).strict(),l5=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)])}).strict(),UZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),RZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),r5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)])}).strict(),lc=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>m4)}).strict(),rc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vh=t.object({where:t.lazy(()=>dt),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),kZ=t.object({data:t.union([t.lazy(()=>VV),t.lazy(()=>VV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Urt=t.object({update:t.union([t.lazy(()=>LD),t.lazy(()=>VD)]),create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]),where:t.lazy(()=>xe).optional()}).strict(),Rrt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>LD),t.lazy(()=>VD)])}).strict(),LD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qB).optional(),items:t.lazy(()=>FB).optional()}).strict(),VD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>_B).optional()}).strict(),krt=t.object({update:t.union([t.lazy(()=>HD),t.lazy(()=>QD)]),create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]),where:t.lazy(()=>Z).optional()}).strict(),xrt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>HD),t.lazy(()=>QD)])}).strict(),HD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),QD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),PW=t.object({where:t.lazy(()=>dt),update:t.union([t.lazy(()=>G3),t.lazy(()=>$3)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),WW=t.object({where:t.lazy(()=>dt),data:t.union([t.lazy(()=>G3),t.lazy(()=>$3)])}).strict(),UW=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>vj),t.lazy(()=>zut)])}).strict(),xZ=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>LB),completedBy:t.lazy(()=>VB)}).strict(),jZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),p5=t.object({where:t.lazy(()=>et),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),MZ=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>p4)}).strict(),ZZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c5=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)])}).strict(),jrt=t.object({update:t.union([t.lazy(()=>YD),t.lazy(()=>GD)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>Ve).optional()}).strict(),Mrt=t.object({where:t.lazy(()=>Ve).optional(),data:t.union([t.lazy(()=>YD),t.lazy(()=>GD)])}).strict(),YD=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>YB).optional(),completedBy:t.lazy(()=>GB).optional()}).strict(),GD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zrt=t.object({update:t.union([t.lazy(()=>$D),t.lazy(()=>JD)]),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]),where:t.lazy(()=>Le).optional()}).strict(),vrt=t.object({where:t.lazy(()=>Le).optional(),data:t.union([t.lazy(()=>$D),t.lazy(()=>JD)])}).strict(),$D=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>y4).optional()}).strict(),JD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vZ=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>jF).optional(),ingredients:t.lazy(()=>MF).optional()}).strict(),OZ=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>vF).optional(),ingredients:t.lazy(()=>OF).optional()}).strict(),u5=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)])}).strict(),fZ=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),wZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional()}).strict(),y5=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)])}).strict(),Ort=t.object({update:t.union([t.lazy(()=>KD),t.lazy(()=>XD)]),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]),where:t.lazy(()=>je).optional()}).strict(),frt=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>KD),t.lazy(()=>XD)])}).strict(),KD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>wF).optional(),ingredients:t.lazy(()=>NF).optional()}).strict(),XD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>qF).optional(),ingredients:t.lazy(()=>FF).optional()}).strict(),wrt=t.object({update:t.union([t.lazy(()=>t_),t.lazy(()=>e_)]),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]),where:t.lazy(()=>Wt).optional()}).strict(),Nrt=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>t_),t.lazy(()=>e_)])}).strict(),t_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),e_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional()}).strict(),NZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional()}).strict(),BZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional()}).strict(),s5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)])}).strict(),qZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),FZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),d5=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)])}).strict(),DZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),_Z=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),z5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)])}).strict(),Brt=t.object({update:t.union([t.lazy(()=>o_),t.lazy(()=>a_)]),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]),where:t.lazy(()=>N).optional()}).strict(),qrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>o_),t.lazy(()=>a_)])}).strict(),o_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional()}).strict(),a_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional()}).strict(),Frt=t.object({update:t.union([t.lazy(()=>n_),t.lazy(()=>i_)]),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]),where:t.lazy(()=>gt).optional()}).strict(),Drt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>n_),t.lazy(()=>i_)])}).strict(),n_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),i_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),_rt=t.object({update:t.union([t.lazy(()=>l_),t.lazy(()=>r_)]),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]),where:t.lazy(()=>Z).optional()}).strict(),Ert=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>l_),t.lazy(()=>r_)])}).strict(),l_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),r_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),pc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional()}).strict(),cc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional()}).strict(),Oh=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),uc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),yc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),fh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),sc=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional()}).strict(),dc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),wh=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),EZ=t.object({data:t.union([t.lazy(()=>HV),t.lazy(()=>HV).array()]),skipDuplicates:t.boolean().optional()}).strict(),RW=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>J3),t.lazy(()=>K3)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),kW=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>J3),t.lazy(()=>K3)])}).strict(),xW=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>cS),t.lazy(()=>mut)])}).strict(),jW=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>X3),t.lazy(()=>t8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),MW=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>X3),t.lazy(()=>t8)])}).strict(),ZW=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>hut)])}).strict(),ae=t.object({AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>dB),t.lazy(()=>W)]).optional()}).strict(),vW=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>e8),t.lazy(()=>o8)]),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),OW=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>e8),t.lazy(()=>o8)])}).strict(),fW=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>qj),t.lazy(()=>but)])}).strict(),ml=t.object({AND:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),OR:t.lazy(()=>ml).array().optional(),NOT:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),zc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),mc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Nh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),wW=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>a8),t.lazy(()=>n8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),NW=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>a8),t.lazy(()=>n8)])}).strict(),BW=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>Iut)])}).strict(),LZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),m5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),HZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),QZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),h5=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)])}).strict(),YZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),GZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),b5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)])}).strict(),Lrt=t.object({update:t.union([t.lazy(()=>p_),t.lazy(()=>c_)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>N).optional()}).strict(),Vrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>p_),t.lazy(()=>c_)])}).strict(),p_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),c_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),Hrt=t.object({update:t.union([t.lazy(()=>u_),t.lazy(()=>y_)]),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]),where:t.lazy(()=>gt).optional()}).strict(),Qrt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>u_),t.lazy(()=>y_)])}).strict(),u_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),y_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Yrt=t.object({update:t.union([t.lazy(()=>s_),t.lazy(()=>d_)]),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]),where:t.lazy(()=>Z).optional()}).strict(),Grt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>s_),t.lazy(()=>d_)])}).strict(),s_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),d_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),$Z=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),JZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),I5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)])}).strict(),KZ=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),XZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),g5=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)])}).strict(),tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),ev=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),C5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)])}).strict(),$rt=t.object({update:t.union([t.lazy(()=>z_),t.lazy(()=>m_)]),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]),where:t.lazy(()=>N).optional()}).strict(),Jrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>z_),t.lazy(()=>m_)])}).strict(),z_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),m_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),Krt=t.object({update:t.union([t.lazy(()=>h_),t.lazy(()=>b_)]),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]),where:t.lazy(()=>Wt).optional()}).strict(),Xrt=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>h_),t.lazy(()=>b_)])}).strict(),h_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),b_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),tpt=t.object({update:t.union([t.lazy(()=>I_),t.lazy(()=>g_)]),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]),where:t.lazy(()=>Z).optional()}).strict(),ept=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>I_),t.lazy(()=>g_)])}).strict(),I_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),g_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),av=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),A5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>ov),t.lazy(()=>av)])}).strict(),nv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),iv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),S5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)])}).strict(),hc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Nq),assignedTo:t.lazy(()=>Bq).optional()}).strict(),bc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>hc),t.lazy(()=>bc)])}).strict(),lv=t.object({data:t.union([t.lazy(()=>QV),t.lazy(()=>QV).array()]),skipDuplicates:t.boolean().optional()}).strict(),opt=t.object({update:t.union([t.lazy(()=>C_),t.lazy(()=>A_)]),create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]),where:t.lazy(()=>N).optional()}).strict(),apt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>C_),t.lazy(()=>A_)])}).strict(),C_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),A_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),npt=t.object({update:t.union([t.lazy(()=>S_),t.lazy(()=>T_)]),create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]),where:t.lazy(()=>Z).optional()}).strict(),ipt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>S_),t.lazy(()=>T_)])}).strict(),S_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),T_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),qW=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>i8),t.lazy(()=>l8)]),create:t.union([t.lazy(()=>hc),t.lazy(()=>bc)])}).strict(),FW=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>i8),t.lazy(()=>l8)])}).strict(),DW=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>AT),t.lazy(()=>gut)])}).strict(),Mn=t.object({AND:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional(),OR:t.lazy(()=>Mn).array().optional(),NOT:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),rv=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>kq),createdBy:t.lazy(()=>xq)}).strict(),pv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T5=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)])}).strict(),cv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),uv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),P5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)])}).strict(),yv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),sv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),W5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)])}).strict(),lpt=t.object({update:t.union([t.lazy(()=>P_),t.lazy(()=>W_)]),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]),where:t.lazy(()=>He).optional()}).strict(),rpt=t.object({where:t.lazy(()=>He).optional(),data:t.union([t.lazy(()=>P_),t.lazy(()=>W_)])}).strict(),P_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Zq).optional(),createdBy:t.lazy(()=>vq).optional()}).strict(),W_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ppt=t.object({update:t.union([t.lazy(()=>U_),t.lazy(()=>R_)]),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]),where:t.lazy(()=>v).optional()}).strict(),cpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>U_),t.lazy(()=>R_)])}).strict(),U_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),R_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),upt=t.object({update:t.union([t.lazy(()=>k_),t.lazy(()=>x_)]),create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]),where:t.lazy(()=>Z).optional()}).strict(),ypt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>k_),t.lazy(()=>x_)])}).strict(),k_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),x_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),dv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),user:t.lazy(()=>Y4)}).strict(),zv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),U5=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)])}).strict(),spt=t.object({update:t.union([t.lazy(()=>j_),t.lazy(()=>M_)]),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]),where:t.lazy(()=>$e).optional()}).strict(),dpt=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>j_),t.lazy(()=>M_)])}).strict(),j_=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),user:t.lazy(()=>J4).optional()}).strict(),M_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),mv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),hv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),R5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)])}).strict(),zpt=t.object({update:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)]),create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]),where:t.lazy(()=>Z).optional()}).strict(),mpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)])}).strict(),Z_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),v_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),bv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Iv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),k5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)])}).strict(),hpt=t.object({update:t.union([t.lazy(()=>O_),t.lazy(()=>f_)]),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]),where:t.lazy(()=>Z).optional()}).strict(),bpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>O_),t.lazy(()=>f_)])}).strict(),O_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),f_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),gv=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),ingredient:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>US).optional(),transactions:t.lazy(()=>RS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),Cv=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),x5=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)])}).strict(),Av=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Sv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),j5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)])}).strict(),Tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),M5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)])}).strict(),Ipt=t.object({update:t.union([t.lazy(()=>w_),t.lazy(()=>N_)]),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]),where:t.lazy(()=>oe).optional()}).strict(),gpt=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>w_),t.lazy(()=>N_)])}).strict(),w_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),ingredient:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>wS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),N_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),Cpt=t.object({update:t.union([t.lazy(()=>B_),t.lazy(()=>q_)]),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]),where:t.lazy(()=>v).optional()}).strict(),Apt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>B_),t.lazy(()=>q_)])}).strict(),B_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),q_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Spt=t.object({update:t.union([t.lazy(()=>F_),t.lazy(()=>D_)]),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]),where:t.lazy(()=>Z).optional()}).strict(),Tpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>F_),t.lazy(()=>D_)])}).strict(),F_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),D_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Ic=t.object({ingredient:t.lazy(()=>S4)}).strict(),gc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),qh=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),Wv=t.object({data:t.union([t.lazy(()=>YV),t.lazy(()=>YV).array()]),skipDuplicates:t.boolean().optional()}).strict(),_W=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>r8),t.lazy(()=>p8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),EW=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>r8),t.lazy(()=>p8)])}).strict(),LW=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>Cut)])}).strict(),hl=t.object({AND:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),OR:t.lazy(()=>hl).array().optional(),NOT:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number()]).optional()}).strict(),Uv=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),Rv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),Z5=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)])}).strict(),kv=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),xv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),v5=t.object({where:t.lazy(()=>Jr),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)])}).strict(),Ppt=t.object({update:t.union([t.lazy(()=>__),t.lazy(()=>E_)]),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]),where:t.lazy(()=>Wt).optional()}).strict(),Wpt=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>__),t.lazy(()=>E_)])}).strict(),__=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),E_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),Upt=t.object({update:t.union([t.lazy(()=>L_),t.lazy(()=>V_)]),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]),where:t.lazy(()=>lo).optional()}).strict(),Rpt=t.object({where:t.lazy(()=>lo).optional(),data:t.union([t.lazy(()=>L_),t.lazy(()=>V_)])}).strict(),L_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),V_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),jv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Mv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),O5=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)])}).strict(),kpt=t.object({update:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)]),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]),where:t.lazy(()=>gt).optional()}).strict(),xpt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)])}).strict(),H_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),Q_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Cc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),Ac=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),Fh=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),Zv=t.object({data:t.union([t.lazy(()=>GV),t.lazy(()=>GV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Sc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Tc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),Dh=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),vv=t.object({data:t.union([t.lazy(()=>$V),t.lazy(()=>$V).array()]),skipDuplicates:t.boolean().optional()}).strict(),VW=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>c8),t.lazy(()=>u8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),HW=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>c8),t.lazy(()=>u8)])}).strict(),QW=t.object({where:t.lazy(()=>mp),data:t.union([t.lazy(()=>fN),t.lazy(()=>Aut)])}).strict(),mp=t.object({AND:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),OR:t.lazy(()=>mp).array().optional(),NOT:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable()}).strict(),YW=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>y8),t.lazy(()=>s8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),GW=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>y8),t.lazy(()=>s8)])}).strict(),$W=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Sut)])}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>uB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),fv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),f5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),Pc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>US).optional(),transactions:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),Wc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),_h=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Wc)])}).strict(),wv=t.object({data:t.union([t.lazy(()=>JV),t.lazy(()=>JV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uc=t.object({type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>cF),createdBy:t.lazy(()=>uF)}).strict(),Rc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Eh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Uc),t.lazy(()=>Rc)])}).strict(),Nv=t.object({data:t.union([t.lazy(()=>KV),t.lazy(()=>KV).array()]),skipDuplicates:t.boolean().optional()}).strict(),kc=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>mF),items:t.lazy(()=>hF).optional()}).strict(),xc=t.object({id:t.number().int().optional(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>bF).optional()}).strict(),Lh=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Bv=t.object({data:t.union([t.lazy(()=>XV),t.lazy(()=>XV).array()]),skipDuplicates:t.boolean().optional()}).strict(),jpt=t.object({update:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>N).optional()}).strict(),Mpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)])}).strict(),Y_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),G_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),JW=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>d8),t.lazy(()=>z8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Wc)])}).strict(),KW=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>d8),t.lazy(()=>z8)])}).strict(),XW=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>PT),t.lazy(()=>Tut)])}).strict(),Zn=t.object({AND:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional(),OR:t.lazy(()=>Zn).array().optional(),NOT:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable()}).strict(),tU=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>m8),t.lazy(()=>h8)]),create:t.union([t.lazy(()=>Uc),t.lazy(()=>Rc)])}).strict(),eU=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>m8),t.lazy(()=>h8)])}).strict(),oU=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>WT),t.lazy(()=>Put)])}).strict(),vn=t.object({AND:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional(),OR:t.lazy(()=>vn).array().optional(),NOT:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>kt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),aU=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>b8),t.lazy(()=>I8)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),nU=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>b8),t.lazy(()=>I8)])}).strict(),iU=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Dj),t.lazy(()=>Wut)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),qv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>R4).optional()}).strict(),Fv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>x4).optional()}).strict(),w5=t.object({where:t.lazy(()=>Rl),create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)])}).strict(),jc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Mc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),Vh=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),Dv=t.object({data:t.union([t.lazy(()=>tH),t.lazy(()=>tH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>O4).optional()}).strict(),vc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>w4).optional()}).strict(),Hh=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),_v=t.object({data:t.union([t.lazy(()=>eH),t.lazy(()=>eH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_S=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),ES=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),Ev=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)])}).strict(),Oc=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>TF),items:t.lazy(()=>PF).optional()}).strict(),fc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WF).optional()}).strict(),Qh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>oH),t.lazy(()=>oH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Yh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),Vv=t.object({data:t.union([t.lazy(()=>aH),t.lazy(()=>aH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bc=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>GF).optional(),MenuCategory:t.lazy(()=>$F).optional()}).strict(),qc=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>JF).optional(),MenuCategory:t.lazy(()=>KF).optional()}).strict(),Gh=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),Hv=t.object({data:t.union([t.lazy(()=>nH),t.lazy(()=>nH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fc=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>X2)}).strict(),Dc=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$h=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),Qv=t.object({data:t.union([t.lazy(()=>iH),t.lazy(()=>iH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_c=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>bq),recordedBy:t.lazy(()=>Iq)}).strict(),Ec=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Jh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),Yv=t.object({data:t.union([t.lazy(()=>lH),t.lazy(()=>lH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>Tq),recordedBy:t.lazy(()=>Pq)}).strict(),Vc=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Kh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),Gv=t.object({data:t.union([t.lazy(()=>rH),t.lazy(()=>rH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hc=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>xq),items:t.lazy(()=>jq).optional()}).strict(),Qc=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Mq).optional()}).strict(),Xh=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),$v=t.object({data:t.union([t.lazy(()=>pH),t.lazy(()=>pH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>gB).optional(),maintenanceLogs:t.lazy(()=>CB).optional()}).strict(),Gc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>AB).optional(),maintenanceLogs:t.lazy(()=>SB).optional()}).strict(),tb=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),Jv=t.object({data:t.union([t.lazy(()=>cH),t.lazy(()=>cH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>fB).optional(),completions:t.lazy(()=>wB).optional()}).strict(),Jc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>NB).optional(),completions:t.lazy(()=>BB).optional()}).strict(),eb=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>uH),t.lazy(()=>uH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>XB).optional(),respondedBy:t.lazy(()=>tq).optional()}).strict(),Xc=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ob=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),Xv=t.object({data:t.union([t.lazy(()=>yH),t.lazy(()=>yH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zpt=t.object({update:t.union([t.lazy(()=>$_),t.lazy(()=>J_)]),create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]),where:t.lazy(()=>Re).optional()}).strict(),vpt=t.object({where:t.lazy(()=>Re).optional(),data:t.union([t.lazy(()=>$_),t.lazy(()=>J_)])}).strict(),$_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>M4).optional()}).strict(),J_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>v4).optional()}).strict(),lU=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>g8),t.lazy(()=>C8)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),rU=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>g8),t.lazy(()=>C8)])}).strict(),pU=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Uut)])}).strict(),cU=t.object({where:t.lazy(()=>Kt),update:t.union([t.lazy(()=>A8),t.lazy(()=>S8)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),uU=t.object({where:t.lazy(()=>Kt),data:t.union([t.lazy(()=>A8),t.lazy(()=>S8)])}).strict(),yU=t.object({where:t.lazy(()=>hp),data:t.union([t.lazy(()=>NN),t.lazy(()=>Rut)])}).strict(),hp=t.object({AND:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),OR:t.lazy(()=>hp).array().optional(),NOT:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),N5=t.object({update:t.union([t.lazy(()=>tO),t.lazy(()=>eO)]),create:t.union([t.lazy(()=>_S),t.lazy(()=>ES)]),where:t.lazy(()=>wt).optional()}).strict(),B5=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>tO),t.lazy(()=>eO)])}).strict(),tO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),eO=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),sU=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>T8),t.lazy(()=>P8)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),dU=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>T8),t.lazy(()=>P8)])}).strict(),zU=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>kut)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),mU=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>W8),t.lazy(()=>U8)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),hU=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>W8),t.lazy(()=>U8)])}).strict(),bU=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>xut)])}).strict(),IU=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>R8),t.lazy(()=>k8)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),gU=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>R8),t.lazy(()=>k8)])}).strict(),CU=t.object({where:t.lazy(()=>bp),data:t.union([t.lazy(()=>_N),t.lazy(()=>jut)])}).strict(),bp=t.object({AND:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),OR:t.lazy(()=>bp).array().optional(),NOT:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AU=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>x8),t.lazy(()=>j8)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),SU=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>x8),t.lazy(()=>j8)])}).strict(),TU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Mj),t.lazy(()=>Mut)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PU=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>M8),t.lazy(()=>Z8)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),WU=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>M8),t.lazy(()=>Z8)])}).strict(),UU=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>gT),t.lazy(()=>Zut)])}).strict(),On=t.object({AND:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional(),OR:t.lazy(()=>On).array().optional(),NOT:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),RU=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>v8),t.lazy(()=>O8)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),kU=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>v8),t.lazy(()=>O8)])}).strict(),xU=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>CT),t.lazy(()=>vut)])}).strict(),fn=t.object({AND:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional(),OR:t.lazy(()=>fn).array().optional(),NOT:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),jU=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>f8),t.lazy(()=>w8)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),MU=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>f8),t.lazy(()=>w8)])}).strict(),ZU=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>wj),t.lazy(()=>Out)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vU=t.object({where:t.lazy(()=>Lt),update:t.union([t.lazy(()=>N8),t.lazy(()=>B8)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),OU=t.object({where:t.lazy(()=>Lt),data:t.union([t.lazy(()=>N8),t.lazy(()=>B8)])}).strict(),fU=t.object({where:t.lazy(()=>Ip),data:t.union([t.lazy(()=>UN),t.lazy(()=>fut)])}).strict(),Ip=t.object({AND:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),OR:t.lazy(()=>Ip).array().optional(),NOT:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>QN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),wU=t.object({where:t.lazy(()=>Vt),update:t.union([t.lazy(()=>q8),t.lazy(()=>F8)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),NU=t.object({where:t.lazy(()=>Vt),data:t.union([t.lazy(()=>q8),t.lazy(()=>F8)])}).strict(),BU=t.object({where:t.lazy(()=>gp),data:t.union([t.lazy(()=>kN),t.lazy(()=>wut)])}).strict(),gp=t.object({AND:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),OR:t.lazy(()=>gp).array().optional(),NOT:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>$N),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),qU=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>D8),t.lazy(()=>_8)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),FU=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>D8),t.lazy(()=>_8)])}).strict(),DU=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>IT),t.lazy(()=>Nut)])}).strict(),wn=t.object({AND:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional(),OR:t.lazy(()=>wn).array().optional(),NOT:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>XN),t.lazy(()=>Ut)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),oO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>U4).optional()}).strict(),aO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>k4).optional()}).strict(),q5=t.object({where:t.lazy(()=>Rl),create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)])}).strict(),nO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),iO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),F5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)])}).strict(),tu=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>G4).optional()}).strict(),eu=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>$4).optional()}).strict(),ab=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),lO=t.object({data:t.union([t.lazy(()=>sH),t.lazy(()=>sH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ou=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>_F),recipe:t.lazy(()=>EF)}).strict(),au=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),nb=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ou),t.lazy(()=>au)])}).strict(),rO=t.object({data:t.union([t.lazy(()=>dH),t.lazy(()=>dH).array()]),skipDuplicates:t.boolean().optional()}).strict(),nu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),ingredient:t.lazy(()=>WS),transactions:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),iu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),ib=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>nu),t.lazy(()=>iu)])}).strict(),pO=t.object({data:t.union([t.lazy(()=>zH),t.lazy(()=>zH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),ru=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),lb=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),cO=t.object({data:t.union([t.lazy(()=>mH),t.lazy(()=>mH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cu=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rb=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),uO=t.object({data:t.union([t.lazy(()=>hH),t.lazy(()=>hH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hq),menuItem:t.lazy(()=>bq)}).strict(),yu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pb=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),yO=t.object({data:t.union([t.lazy(()=>bH),t.lazy(()=>bH).array()]),skipDuplicates:t.boolean().optional()}).strict(),su=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Sq),ingrediente:t.lazy(()=>Tq)}).strict(),du=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cb=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),sO=t.object({data:t.union([t.lazy(()=>IH),t.lazy(()=>IH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>kq),items:t.lazy(()=>jq).optional()}).strict(),mu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Mq).optional()}).strict(),ub=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),dO=t.object({data:t.union([t.lazy(()=>gH),t.lazy(()=>gH).array()]),skipDuplicates:t.boolean().optional()}).strict(),hu=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>wq),recipe:t.lazy(()=>Nq)}).strict(),bu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>hu),t.lazy(()=>bu)])}).strict(),zO=t.object({data:t.union([t.lazy(()=>CH),t.lazy(()=>CH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gu=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sb=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),mO=t.object({data:t.union([t.lazy(()=>AH),t.lazy(()=>AH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Au=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),db=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>SH),t.lazy(()=>SH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>_q),recipe:t.lazy(()=>Eq).optional()}).strict(),Tu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>TH),t.lazy(()=>TH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>LB),items:t.lazy(()=>HB).optional()}).strict(),Wu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QB).optional()}).strict(),mb=t.object({where:t.lazy(()=>et),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Wu)])}).strict(),IO=t.object({data:t.union([t.lazy(()=>PH),t.lazy(()=>PH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>KB),menuItem:t.lazy(()=>XB).optional()}).strict(),Ru=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Uu),t.lazy(()=>Ru)])}).strict(),gO=t.object({data:t.union([t.lazy(()=>WH),t.lazy(()=>WH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RT),ingredients:t.lazy(()=>kT).optional(),instructions:t.lazy(()=>xT).optional(),approvedBy:t.lazy(()=>MT).optional()}).strict(),xu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional()}).strict(),bb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),CO=t.object({data:t.union([t.lazy(()=>UH),t.lazy(()=>UH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RT),ingredients:t.lazy(()=>kT).optional(),instructions:t.lazy(()=>xT).optional(),createdBy:t.lazy(()=>jT)}).strict(),Mu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional()}).strict(),Ib=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),AO=t.object({data:t.union([t.lazy(()=>RH),t.lazy(()=>RH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>pF),item:t.lazy(()=>cF)}).strict(),vu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),gb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),SO=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>zF),items:t.lazy(()=>hF).optional()}).strict(),fu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>bF).optional()}).strict(),Cb=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),TO=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Opt=t.object({update:t.union([t.lazy(()=>K_),t.lazy(()=>X_)]),create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]),where:t.lazy(()=>Re).optional()}).strict(),fpt=t.object({where:t.lazy(()=>Re).optional(),data:t.union([t.lazy(()=>K_),t.lazy(()=>X_)])}).strict(),K_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>j4).optional()}).strict(),X_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>Z4).optional()}).strict(),wpt=t.object({update:t.union([t.lazy(()=>tE),t.lazy(()=>eE)]),create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]),where:t.lazy(()=>N).optional()}).strict(),Npt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>tE),t.lazy(()=>eE)])}).strict(),tE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),eE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),_U=t.object({where:t.lazy(()=>Xt),update:t.union([t.lazy(()=>E8),t.lazy(()=>L8)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),EU=t.object({where:t.lazy(()=>Xt),data:t.union([t.lazy(()=>E8),t.lazy(()=>L8)])}).strict(),LU=t.object({where:t.lazy(()=>Cp),data:t.union([t.lazy(()=>qN),t.lazy(()=>But)])}).strict(),Cp=t.object({AND:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),OR:t.lazy(()=>Cp).array().optional(),NOT:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Et)]).optional()}).strict(),VU=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>V8),t.lazy(()=>H8)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>au)])}).strict(),HU=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>V8),t.lazy(()=>H8)])}).strict(),QU=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>UT),t.lazy(()=>qut)])}).strict(),Nn=t.object({AND:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional(),OR:t.lazy(()=>Nn).array().optional(),NOT:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number()]).optional()}).strict(),YU=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>Q8),t.lazy(()=>Y8)]),create:t.union([t.lazy(()=>nu),t.lazy(()=>iu)])}).strict(),GU=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>Q8),t.lazy(()=>Y8)])}).strict(),$U=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>PT),t.lazy(()=>Fut)])}).strict(),JU=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>G8),t.lazy(()=>$8)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),KU=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>G8),t.lazy(()=>$8)])}).strict(),XU=t.object({where:t.lazy(()=>Ap),data:t.union([t.lazy(()=>wN),t.lazy(()=>Dut)])}).strict(),Ap=t.object({AND:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),OR:t.lazy(()=>Ap).array().optional(),NOT:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),tR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>J8),t.lazy(()=>K8)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),eR=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>J8),t.lazy(()=>K8)])}).strict(),oR=t.object({where:t.lazy(()=>Sp),data:t.union([t.lazy(()=>DN),t.lazy(()=>_ut)])}).strict(),Sp=t.object({AND:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),OR:t.lazy(()=>Sp).array().optional(),NOT:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),aR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>X8),t.lazy(()=>tJ)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),nR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>X8),t.lazy(()=>tJ)])}).strict(),iR=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>gT),t.lazy(()=>Eut)])}).strict(),lR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)]),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),rR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)])}).strict(),pR=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>CT),t.lazy(()=>Lut)])}).strict(),cR=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>aJ),t.lazy(()=>nJ)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),uR=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>aJ),t.lazy(()=>nJ)])}).strict(),yR=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>wj),t.lazy(()=>Vut)])}).strict(),sR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)]),create:t.union([t.lazy(()=>hu),t.lazy(()=>bu)])}).strict(),dR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)])}).strict(),zR=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>AT),t.lazy(()=>Hut)])}).strict(),mR=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),hR=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)])}).strict(),bR=t.object({where:t.lazy(()=>Tp),data:t.union([t.lazy(()=>ZN),t.lazy(()=>Qut)])}).strict(),Tp=t.object({AND:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),OR:t.lazy(()=>Tp).array().optional(),NOT:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>aB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),IR=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),gR=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)])}).strict(),CR=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>vN),t.lazy(()=>Yut)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>nB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>yJ),t.lazy(()=>sJ)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),SR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>yJ),t.lazy(()=>sJ)])}).strict(),TR=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>ST),t.lazy(()=>Gut)])}).strict(),Bn=t.object({AND:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional(),OR:t.lazy(()=>Bn).array().optional(),NOT:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PR=t.object({where:t.lazy(()=>et),update:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Wu)])}).strict(),WR=t.object({where:t.lazy(()=>et),data:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)])}).strict(),UR=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>Zj),t.lazy(()=>$ut)])}).strict(),RR=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>mJ),t.lazy(()=>hJ)]),create:t.union([t.lazy(()=>Uu),t.lazy(()=>Ru)])}).strict(),kR=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>mJ),t.lazy(()=>hJ)])}).strict(),xR=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>IT),t.lazy(()=>Jut)])}).strict(),jR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>bJ),t.lazy(()=>IJ)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),MR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>bJ),t.lazy(()=>IJ)])}).strict(),ZR=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>hT),t.lazy(()=>Kut)])}).strict(),qn=t.object({AND:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional(),OR:t.lazy(()=>qn).array().optional(),NOT:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),OR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)])}).strict(),fR=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>hT),t.lazy(()=>Xut)])}).strict(),wR=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),NR=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)])}).strict(),BR=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>WT),t.lazy(()=>tyt)])}).strict(),qR=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),FR=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)])}).strict(),DR=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Dj),t.lazy(()=>eyt)])}).strict(),PO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),WO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),D5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)])}).strict(),Bpt=t.object({update:t.union([t.lazy(()=>oE),t.lazy(()=>aE)]),create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]),where:t.lazy(()=>Z).optional()}).strict(),qpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>oE),t.lazy(()=>aE)])}).strict(),oE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),aE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),wu=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Nu=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Ab=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),RO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),kO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),_5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)])}).strict(),_R=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>WJ),t.lazy(()=>UJ)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),ER=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>WJ),t.lazy(()=>UJ)])}).strict(),LR=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>oyt)])}).strict(),Fpt=t.object({update:t.union([t.lazy(()=>nE),t.lazy(()=>iE)]),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]),where:t.lazy(()=>N).optional()}).strict(),Dpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>nE),t.lazy(()=>iE)])}).strict(),nE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),iE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),xO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),jO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),E5=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)])}).strict(),MO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>f4).optional()}).strict(),ZO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),L5=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)])}).strict(),Bu=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>Gq),recipeVersion:t.lazy(()=>$q).optional()}).strict(),qu=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Sb=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),vO=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fu=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>eF).optional(),equipment:t.lazy(()=>oF).optional()}).strict(),Du=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>aF).optional()}).strict(),Tb=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),OO=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_u=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Eu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Pb=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),Lu=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Vu=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Wb=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),fO=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hu=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qu=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ub=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yu=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>e6).optional()}).strict(),Gu=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>a6).optional()}).strict(),Rb=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),$u=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>_F),assignedTo:t.lazy(()=>LF)}).strict(),Ju=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),kb=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ku=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>p6)}).strict(),Xu=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),xb=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),BO=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ty=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>wq),assignedTo:t.lazy(()=>Bq).optional()}).strict(),ey=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),oy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>_q),createdBy:t.lazy(()=>Lq)}).strict(),ay=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>oy),t.lazy(()=>ay)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ny=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zb=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>ny),t.lazy(()=>iy)])}).strict(),ly=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>kT).optional(),instructions:t.lazy(()=>xT).optional(),createdBy:t.lazy(()=>jT),approvedBy:t.lazy(()=>MT).optional()}).strict(),ry=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional()}).strict(),vb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),py=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>xB),RecipeInstruction:t.lazy(()=>jB).optional()}).strict(),cy=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Ob=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>nq).optional(),ingredients:t.lazy(()=>lq).optional()}).strict(),yy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>rq).optional(),ingredients:t.lazy(()=>cq).optional()}).strict(),fb=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),sy=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dy=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wb=t.object({where:t.lazy(()=>ze),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),EO=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zy=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),my=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nb=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),hy=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),by=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bb=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>hy),t.lazy(()=>by)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),LS=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),VS=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),HO=t.object({where:t.lazy(()=>vl),create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)])}).strict(),Iy=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gy=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qb=t.object({where:t.lazy(()=>se),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),QO=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),HS=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QS=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YO=t.object({where:t.lazy(()=>Ol),create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)])}).strict(),Cy=t.object({url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ay=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fb=t.object({where:t.lazy(()=>de),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),GO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),YS=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),GS=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),$O=t.object({where:t.lazy(()=>fl),create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)])}).strict(),_pt=t.object({update:t.union([t.lazy(()=>lE),t.lazy(()=>rE)]),create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]),where:t.lazy(()=>N).optional()}).strict(),Ept=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>lE),t.lazy(()=>rE)])}).strict(),lE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),rE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),Lpt=t.object({update:t.union([t.lazy(()=>pE),t.lazy(()=>cE)]),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]),where:t.lazy(()=>Qe).optional()}).strict(),Vpt=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>pE),t.lazy(()=>cE)])}).strict(),pE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurant:t.lazy(()=>B4).optional()}).strict(),cE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),VR=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>RJ),t.lazy(()=>kJ)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),HR=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>RJ),t.lazy(()=>kJ)])}).strict(),QR=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>TT),t.lazy(()=>ayt)])}).strict(),YR=t.object({where:t.lazy(()=>nt),update:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),GR=t.object({where:t.lazy(()=>nt),data:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)])}).strict(),$R=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>nyt)])}).strict(),JR=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),KR=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)])}).strict(),XR=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>cS),t.lazy(()=>iyt)])}).strict(),tk=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),ek=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)])}).strict(),ok=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>EN),t.lazy(()=>lyt)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),ak=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),nk=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)])}).strict(),ik=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>LN),t.lazy(()=>ryt)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),lk=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),rk=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)])}).strict(),pk=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>FN),t.lazy(()=>pyt)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>TS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),ck=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),uk=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)])}).strict(),yk=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>UT),t.lazy(()=>cyt)])}).strict(),sk=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>DJ),t.lazy(()=>_J)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),dk=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>DJ),t.lazy(()=>_J)])}).strict(),zk=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>uyt)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),mk=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>EJ),t.lazy(()=>LJ)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),hk=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>EJ),t.lazy(()=>LJ)])}).strict(),bk=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>AT),t.lazy(()=>yyt)])}).strict(),Ik=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ay)])}).strict(),gk=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)])}).strict(),Ck=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>ST),t.lazy(()=>syt)])}).strict(),Ak=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)]),create:t.union([t.lazy(()=>ny),t.lazy(()=>iy)])}).strict(),Sk=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)])}).strict(),Tk=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>jN),t.lazy(()=>dyt)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Pk=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Wk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)])}).strict(),Uk=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>hT),t.lazy(()=>zyt)])}).strict(),Rk=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),kk=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)])}).strict(),xk=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>bT),t.lazy(()=>myt)])}).strict(),jk=t.object({where:t.lazy(()=>ot),update:t.union([t.lazy(()=>XJ),t.lazy(()=>t7)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),Mk=t.object({where:t.lazy(()=>ot),data:t.union([t.lazy(()=>XJ),t.lazy(()=>t7)])}).strict(),Zk=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>fj),t.lazy(()=>hyt)])}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vk=t.object({where:t.lazy(()=>ze),update:t.union([t.lazy(()=>e7),t.lazy(()=>o7)]),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),Ok=t.object({where:t.lazy(()=>ze),data:t.union([t.lazy(()=>e7),t.lazy(()=>o7)])}).strict(),fk=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>SN),t.lazy(()=>byt)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),wk=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>a7),t.lazy(()=>n7)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Nk=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>a7),t.lazy(()=>n7)])}).strict(),Bk=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>TN),t.lazy(()=>Iyt)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),qk=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>i7),t.lazy(()=>l7)]),create:t.union([t.lazy(()=>hy),t.lazy(()=>by)])}).strict(),Fk=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>i7),t.lazy(()=>l7)])}).strict(),Dk=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>PN),t.lazy(()=>gyt)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),V5=t.object({update:t.union([t.lazy(()=>JO),t.lazy(()=>KO)]),create:t.union([t.lazy(()=>LS),t.lazy(()=>VS)]),where:t.lazy(()=>fe).optional()}).strict(),H5=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>JO),t.lazy(()=>KO)])}).strict(),JO=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),KO=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),_k=t.object({where:t.lazy(()=>se),update:t.union([t.lazy(()=>r7),t.lazy(()=>p7)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Ek=t.object({where:t.lazy(()=>se),data:t.union([t.lazy(()=>r7),t.lazy(()=>p7)])}).strict(),Lk=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>CN),t.lazy(()=>Cyt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Q5=t.object({update:t.union([t.lazy(()=>XO),t.lazy(()=>tf)]),create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]),where:t.lazy(()=>we).optional()}).strict(),Y5=t.object({where:t.lazy(()=>we).optional(),data:t.union([t.lazy(()=>XO),t.lazy(()=>tf)])}).strict(),XO=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tf=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vk=t.object({where:t.lazy(()=>de),update:t.union([t.lazy(()=>c7),t.lazy(()=>u7)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Hk=t.object({where:t.lazy(()=>de),data:t.union([t.lazy(()=>c7),t.lazy(()=>u7)])}).strict(),Qk=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>AN),t.lazy(()=>Ayt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>VN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),G5=t.object({update:t.union([t.lazy(()=>ef),t.lazy(()=>of)]),create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]),where:t.lazy(()=>Ne).optional()}).strict(),$5=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>ef),t.lazy(()=>of)])}).strict(),ef=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),of=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Sy=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Yq),recipeVersion:t.lazy(()=>$q).optional()}).strict(),Ty=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Db=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),af=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Py=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),lastUpdatedBy:t.lazy(()=>US).optional(),transactions:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),Wy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),_b=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Py),t.lazy(()=>Wy)])}).strict(),nf=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>L4)}).strict(),Ry=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Eb=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Uy),t.lazy(()=>Ry)])}).strict(),lf=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ky=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>jF).optional(),supplierPriceHistory:t.lazy(()=>ZF).optional()}).strict(),xy=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>vF).optional(),supplierPriceHistory:t.lazy(()=>fF).optional()}).strict(),Lb=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),jy=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Sq),recordedBy:t.lazy(()=>Pq)}).strict(),My=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Vb=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zy=t.object({allergen:t.lazy(()=>T4)}).strict(),vy=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),Hb=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oy=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>I4)}).strict(),fy=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qb=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uf=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>nq).optional(),recipes:t.lazy(()=>iq).optional()}).strict(),yf=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>rq).optional(),recipes:t.lazy(()=>pq).optional()}).strict(),J5=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)])}).strict(),Yk=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>y7),t.lazy(()=>s7)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Gk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>y7),t.lazy(()=>s7)])}).strict(),$k=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>TT),t.lazy(()=>Syt)])}).strict(),Jk=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>d7),t.lazy(()=>z7)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Wy)])}).strict(),Kk=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>d7),t.lazy(()=>z7)])}).strict(),Xk=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>PT),t.lazy(()=>Tyt)])}).strict(),tx=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>m7),t.lazy(()=>h7)]),create:t.union([t.lazy(()=>Uy),t.lazy(()=>Ry)])}).strict(),ex=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>m7),t.lazy(()=>h7)])}).strict(),ox=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>Pyt)])}).strict(),Pl=t.object({AND:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),OR:t.lazy(()=>Pl).array().optional(),NOT:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),orderId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional()}).strict(),ax=t.object({where:t.lazy(()=>Ht),update:t.union([t.lazy(()=>b7),t.lazy(()=>I7)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),nx=t.object({where:t.lazy(()=>Ht),data:t.union([t.lazy(()=>b7),t.lazy(()=>I7)])}).strict(),ix=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>BN),t.lazy(()=>Wyt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),lx=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>g7),t.lazy(()=>C7)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rx=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>g7),t.lazy(()=>C7)])}).strict(),px=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>CT),t.lazy(()=>Uyt)])}).strict(),cx=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>A7),t.lazy(()=>S7)]),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),ux=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>A7),t.lazy(()=>S7)])}).strict(),yx=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>Ryt)])}).strict(),sx=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>T7),t.lazy(()=>P7)]),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),dx=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>T7),t.lazy(()=>P7)])}).strict(),zx=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>kyt)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Hpt=t.object({update:t.union([t.lazy(()=>uE),t.lazy(()=>yE)]),create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]),where:t.lazy(()=>ve).optional()}).strict(),Qpt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>uE),t.lazy(()=>yE)])}).strict(),uE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>uq).optional(),recipes:t.lazy(()=>yq).optional()}).strict(),yE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional()}).strict(),sf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),df=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),K5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>sf),t.lazy(()=>df)])}).strict(),zf=t.object({name:t.string(),category:t.string(),price:t.number(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),mf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),X5=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)])}).strict(),hf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RT),instructions:t.lazy(()=>xT).optional(),createdBy:t.lazy(()=>jT),approvedBy:t.lazy(()=>MT).optional()}).strict(),bf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>vT).optional()}).strict(),t3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)])}).strict(),Ypt=t.object({update:t.union([t.lazy(()=>sE),t.lazy(()=>dE)]),create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]),where:t.lazy(()=>v).optional()}).strict(),Gpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>sE),t.lazy(()=>dE)])}).strict(),sE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),dE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),$pt=t.object({update:t.union([t.lazy(()=>zE),t.lazy(()=>mE)]),create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]),where:t.lazy(()=>Wt).optional()}).strict(),Jpt=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>zE),t.lazy(()=>mE)])}).strict(),zE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),mE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),Kpt=t.object({update:t.union([t.lazy(()=>hE),t.lazy(()=>bE)]),create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]),where:t.lazy(()=>ee).optional()}).strict(),Xpt=t.object({where:t.lazy(()=>ee).optional(),data:t.union([t.lazy(()=>hE),t.lazy(()=>bE)])}).strict(),hE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>OT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),bE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),If=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),gf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),e3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)])}).strict(),Cf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RT),ingredients:t.lazy(()=>kT).optional(),createdBy:t.lazy(()=>jT),approvedBy:t.lazy(()=>MT).optional()}).strict(),Af=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional()}).strict(),o3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)])}).strict(),wy=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>kB),equipment:t.lazy(()=>xB)}).strict(),Ny=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),Yb=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),Sf=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tct=t.object({update:t.union([t.lazy(()=>IE),t.lazy(()=>gE)]),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]),where:t.lazy(()=>v).optional()}).strict(),ect=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>IE),t.lazy(()=>gE)])}).strict(),IE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),gE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),oct=t.object({update:t.union([t.lazy(()=>CE),t.lazy(()=>AE)]),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]),where:t.lazy(()=>ee).optional()}).strict(),act=t.object({where:t.lazy(()=>ee).optional(),data:t.union([t.lazy(()=>CE),t.lazy(()=>AE)])}).strict(),CE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>OT).optional(),ingredients:t.lazy(()=>fT).optional(),createdBy:t.lazy(()=>NT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),AE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional()}).strict(),mx=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>W7),t.lazy(()=>U7)]),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),hx=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>W7),t.lazy(()=>U7)])}).strict(),bx=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>bT),t.lazy(()=>xyt)])}).strict(),Tf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),Pf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),a3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)])}).strict(),Wf=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),orderItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),Uf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),orderItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),n3=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)])}).strict(),Rf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),kf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),i3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)])}).strict(),By=t.object({type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>pF),createdBy:t.lazy(()=>uF)}).strict(),qy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Gb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),xf=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Eq).optional(),createdBy:t.lazy(()=>Lq)}).strict(),Dy=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$b=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),jf=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_y=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>F4)}).strict(),Ey=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Jb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),Mf=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),nct=t.object({update:t.union([t.lazy(()=>SE),t.lazy(()=>TE)]),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]),where:t.lazy(()=>wt).optional()}).strict(),ict=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>SE),t.lazy(()=>TE)])}).strict(),SE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),TE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),lct=t.object({update:t.union([t.lazy(()=>PE),t.lazy(()=>WE)]),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]),where:t.lazy(()=>Wt).optional()}).strict(),rct=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>PE),t.lazy(()=>WE)])}).strict(),PE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),WE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),pct=t.object({update:t.union([t.lazy(()=>UE),t.lazy(()=>RE)]),create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]),where:t.lazy(()=>Z).optional()}).strict(),cct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>UE),t.lazy(()=>RE)])}).strict(),UE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),RE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Ix=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>R7),t.lazy(()=>k7)]),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),gx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>R7),t.lazy(()=>k7)])}).strict(),Cx=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>WT),t.lazy(()=>jyt)])}).strict(),Ax=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>x7),t.lazy(()=>j7)]),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),Sx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>x7),t.lazy(()=>j7)])}).strict(),Tx=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>ST),t.lazy(()=>Myt)])}).strict(),Px=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)]),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),Wx=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)])}).strict(),Ux=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>_j),t.lazy(()=>Zyt)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Zf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),vf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),l3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)])}).strict(),Of=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),ingredient:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>US).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>xS).optional()}).strict(),ff=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>ZS).optional()}).strict(),r3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)])}).strict(),wf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Nf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),p3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)])}).strict(),uct=t.object({update:t.union([t.lazy(()=>kE),t.lazy(()=>xE)]),create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]),where:t.lazy(()=>wt).optional()}).strict(),yct=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>kE),t.lazy(()=>xE)])}).strict(),kE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),xE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),sct=t.object({update:t.union([t.lazy(()=>jE),t.lazy(()=>ME)]),create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]),where:t.lazy(()=>oe).optional()}).strict(),dct=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>jE),t.lazy(()=>ME)])}).strict(),jE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),ingredient:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),withdrawals:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),ME=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),withdrawals:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),zct=t.object({update:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)]),create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]),where:t.lazy(()=>Z).optional()}).strict(),mct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)])}).strict(),ZE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),vE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Bf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional()}).strict(),qf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional()}).strict(),c3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)])}).strict(),Ff=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional()}).strict(),Df=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional()}).strict(),u3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)])}).strict(),Ly=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>D4)}).strict(),Vy=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Kb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),_f=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),hct=t.object({update:t.union([t.lazy(()=>OE),t.lazy(()=>fE)]),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]),where:t.lazy(()=>wt).optional()}).strict(),bct=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>OE),t.lazy(()=>fE)])}).strict(),OE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional()}).strict(),fE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>ep)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional()}).strict(),Ict=t.object({update:t.union([t.lazy(()=>wE),t.lazy(()=>NE)]),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]),where:t.lazy(()=>Z).optional()}).strict(),gct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>wE),t.lazy(()=>NE)])}).strict(),wE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional()}).strict(),NE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional()}).strict(),Rx=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>v7),t.lazy(()=>O7)]),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),kx=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>v7),t.lazy(()=>O7)])}).strict(),xx=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>_j),t.lazy(()=>vyt)])}).strict(),Ef=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>zF),createdBy:t.lazy(()=>mF)}).strict(),Lf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),y3=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)])}).strict(),Vf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>PS),ingredient:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>US).optional(),transactions:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>kS).optional()}).strict(),Hf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>MS).optional()}).strict(),s3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)])}).strict(),Cct=t.object({update:t.union([t.lazy(()=>BE),t.lazy(()=>qE)]),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]),where:t.lazy(()=>Ye).optional()}).strict(),Act=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>BE),t.lazy(()=>qE)])}).strict(),BE=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>IF).optional(),createdBy:t.lazy(()=>gF).optional()}).strict(),qE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Sct=t.object({update:t.union([t.lazy(()=>FE),t.lazy(()=>DE)]),create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]),where:t.lazy(()=>oe).optional()}).strict(),Tct=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>FE),t.lazy(()=>DE)])}).strict(),FE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),ingredient:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>NS).optional()}).strict(),DE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>FS).optional()}).strict(),Qf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional()}).strict(),Yf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional()}).strict(),d3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)])}).strict(),Pct=t.object({update:t.union([t.lazy(()=>_E),t.lazy(()=>EE)]),create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]),where:t.lazy(()=>v).optional()}).strict(),Wct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>_E),t.lazy(()=>EE)])}).strict(),_E=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional()}).strict(),EE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional()}).strict(),Gf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),recipes:t.lazy(()=>_l).optional(),menus:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),$f=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),recipes:t.lazy(()=>er).optional(),menus:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),z3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)])}).strict(),Jf=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>MF).optional(),supplierPriceHistory:t.lazy(()=>ZF).optional()}).strict(),Kf=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>OF).optional(),supplierPriceHistory:t.lazy(()=>fF).optional()}).strict(),m3=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),Hy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>V4)}).strict(),Qy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Xb=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Xf=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uct=t.object({update:t.union([t.lazy(()=>LE),t.lazy(()=>VE)]),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]),where:t.lazy(()=>N).optional()}).strict(),Rct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>LE),t.lazy(()=>VE)])}).strict(),LE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),VE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),kct=t.object({update:t.union([t.lazy(()=>HE),t.lazy(()=>QE)]),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),where:t.lazy(()=>je).optional()}).strict(),xct=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>HE),t.lazy(()=>QE)])}).strict(),HE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>NF).optional(),supplierPriceHistory:t.lazy(()=>BF).optional()}).strict(),QE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),jx=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>f7),t.lazy(()=>w7)]),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Mx=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>f7),t.lazy(()=>w7)])}).strict(),Zx=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>Oyt)])}).strict(),tw=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SF),vendor:t.lazy(()=>TF)}).strict(),ew=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),h3=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)])}).strict(),ow=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),vendors:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),aw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),vendors:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),b3=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)])}).strict(),jct=t.object({update:t.union([t.lazy(()=>YE),t.lazy(()=>GE)]),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]),where:t.lazy(()=>Ge).optional()}).strict(),Mct=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>YE),t.lazy(()=>GE)])}).strict(),YE=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>UF).optional(),vendor:t.lazy(()=>RF).optional()}).strict(),GE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zct=t.object({update:t.union([t.lazy(()=>$E),t.lazy(()=>JE)]),create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]),where:t.lazy(()=>Wt).optional()}).strict(),vct=t.object({where:t.lazy(()=>Wt).optional(),data:t.union([t.lazy(()=>$E),t.lazy(()=>JE)])}).strict(),$E=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),JE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),Yy=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SF),items:t.lazy(()=>PF).optional()}).strict(),Gy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WF).optional()}).strict(),tI=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),nw=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),$y=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>AI).optional(),inventoryItems:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>TI).optional(),WasteRecord:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>kI).optional()}).strict(),Jy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>xI).optional(),inventoryItems:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>MI).optional(),WasteRecord:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>fI).optional()}).strict(),eI=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Ky=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>g4)}).strict(),Xy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oI=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),iw=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),vx=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>N7),t.lazy(()=>B7)]),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),Ox=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>N7),t.lazy(()=>B7)])}).strict(),fx=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>fyt)])}).strict(),wx=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>q7),t.lazy(()=>F7)]),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Nx=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>q7),t.lazy(()=>F7)])}).strict(),Bx=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>qj),t.lazy(()=>wyt)])}).strict(),qx=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>D7),t.lazy(()=>_7)]),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),Fx=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>D7),t.lazy(()=>_7)])}).strict(),Dx=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>Nyt)])}).strict(),lw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),rw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),I3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)])}).strict(),ts=t.object({taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),es=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aI=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),pw=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oct=t.object({update:t.union([t.lazy(()=>KE),t.lazy(()=>XE)]),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]),where:t.lazy(()=>Z).optional()}).strict(),fct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>KE),t.lazy(()=>XE)])}).strict(),KE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),XE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),_x=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>E7),t.lazy(()=>L7)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),Ex=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>E7),t.lazy(()=>L7)])}).strict(),Lx=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>MN),t.lazy(()=>Byt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number()]).optional(),taskType:t.union([t.lazy(()=>oB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),os=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),as=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),nI=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>os),t.lazy(()=>as)])}).strict(),ns=t.object({quantity:t.number().int(),status:t.lazy(()=>X),recipe:t.lazy(()=>EF),assignedTo:t.lazy(()=>LF)}).strict(),is=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),iI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ns),t.lazy(()=>is)])}).strict(),cw=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vx=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>V7),t.lazy(()=>H7)]),create:t.union([t.lazy(()=>os),t.lazy(()=>as)])}).strict(),Hx=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>V7),t.lazy(()=>H7)])}).strict(),Qx=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>qyt)])}).strict(),Yx=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)]),create:t.union([t.lazy(()=>ns),t.lazy(()=>is)])}).strict(),Gx=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)])}).strict(),$x=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>UT),t.lazy(()=>Fyt)])}).strict(),uw=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>t6).optional()}).strict(),yw=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>o6).optional()}).strict(),g3=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)])}).strict(),sw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),C3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)])}).strict(),zw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),mw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),A3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)])}).strict(),wct=t.object({update:t.union([t.lazy(()=>tL),t.lazy(()=>eL)]),create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]),where:t.lazy(()=>Je).optional()}).strict(),Nct=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>tL),t.lazy(()=>eL)])}).strict(),tL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>n6).optional()}).strict(),eL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>l6).optional()}).strict(),Bct=t.object({update:t.union([t.lazy(()=>oL),t.lazy(()=>aL)]),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]),where:t.lazy(()=>v).optional()}).strict(),qct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>oL),t.lazy(()=>aL)])}).strict(),oL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),aL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Fct=t.object({update:t.union([t.lazy(()=>nL),t.lazy(()=>iL)]),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]),where:t.lazy(()=>Z).optional()}).strict(),Dct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>nL),t.lazy(()=>iL)])}).strict(),nL=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),iL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),hw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),bw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),S3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)])}).strict(),_ct=t.object({update:t.union([t.lazy(()=>lL),t.lazy(()=>rL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]),where:t.lazy(()=>Z).optional()}).strict(),Ect=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>lL),t.lazy(()=>rL)])}).strict(),lL=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),rL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Iw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Nl).optional(),users:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>_l).optional(),salesTransactions:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>$l).optional()}).strict(),gw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>er).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>cr).optional()}).strict(),T3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)])}).strict(),ls=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),rs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),lI=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Cw=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ps=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>a4).optional()}).strict(),cs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>n4).optional()}).strict(),rI=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),Aw=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lct=t.object({update:t.union([t.lazy(()=>pL),t.lazy(()=>cL)]),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]),where:t.lazy(()=>N).optional()}).strict(),Vct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>pL),t.lazy(()=>cL)])}).strict(),pL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>ur).optional(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),cL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),Jx=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>G7),t.lazy(()=>$7)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Kx=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>G7),t.lazy(()=>$7)])}).strict(),Xx=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>cS),t.lazy(()=>Dyt)])}).strict(),tj=t.object({where:t.lazy(()=>$t),update:t.union([t.lazy(()=>J7),t.lazy(()=>K7)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),ej=t.object({where:t.lazy(()=>$t),data:t.union([t.lazy(()=>J7),t.lazy(()=>K7)])}).strict(),oj=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>WN),t.lazy(()=>_yt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number()]).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Sw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Tw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),P3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)])}).strict(),Pw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Ww=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),W3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)])}).strict(),Hct=t.object({update:t.union([t.lazy(()=>uL),t.lazy(()=>yL)]),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]),where:t.lazy(()=>gt).optional()}).strict(),Qct=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>uL),t.lazy(()=>yL)])}).strict(),uL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),yL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Yct=t.object({update:t.union([t.lazy(()=>sL),t.lazy(()=>dL)]),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]),where:t.lazy(()=>v).optional()}).strict(),Gct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>sL),t.lazy(()=>dL)])}).strict(),sL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),dL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Uw=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>YF),MenuCategory:t.lazy(()=>$F).optional()}).strict(),Rw=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>KF).optional()}).strict(),U3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)])}).strict(),kw=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>o4)}).strict(),xw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R3=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)])}).strict(),us=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),ys=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),pI=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),ss=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>c6)}).strict(),ds=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),cI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),jw=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),$S=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JS=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mw=t.object({where:t.lazy(()=>wl),create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)])}).strict(),zs=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ms=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uI=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),Zw=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),hs=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>K2)}).strict(),bs=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yI=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>hs),t.lazy(()=>bs)])}).strict(),vw=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Is=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hq),recordedBy:t.lazy(()=>Iq)}).strict(),gs=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),Ow=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cs=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>KB),respondedBy:t.lazy(()=>tq).optional()}).strict(),As=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),fw=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>iq).optional(),ingredients:t.lazy(()=>lq).optional()}).strict(),Ts=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>pq).optional(),ingredients:t.lazy(()=>cq).optional()}).strict(),zI=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),$ct=t.object({update:t.union([t.lazy(()=>zL),t.lazy(()=>mL)]),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]),where:t.lazy(()=>Me).optional()}).strict(),Jct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>zL),t.lazy(()=>mL)])}).strict(),zL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>XF).optional(),MenuCategory:t.lazy(()=>eD).optional()}).strict(),mL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>aD).optional()}).strict(),Kct=t.object({update:t.union([t.lazy(()=>hL),t.lazy(()=>bL)]),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]),where:t.lazy(()=>Ze).optional()}).strict(),Xct=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>hL),t.lazy(()=>bL)])}).strict(),hL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>i4).optional()}).strict(),bL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aj=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>X7),t.lazy(()=>tK)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),nj=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>X7),t.lazy(()=>tK)])}).strict(),ij=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>hI),t.lazy(()=>Eyt)])}).strict(),lj=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>eK),t.lazy(()=>oK)]),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),rj=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>eK),t.lazy(()=>oK)])}).strict(),pj=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>Lyt)])}).strict(),k3=t.object({update:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]),create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]),where:t.lazy(()=>Be).optional()}).strict(),x3=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)])}).strict(),ww=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nw=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cj=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>aK),t.lazy(()=>nK)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),uj=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>aK),t.lazy(()=>nK)])}).strict(),yj=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>ON),t.lazy(()=>Vyt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),sj=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>iK),t.lazy(()=>lK)]),create:t.union([t.lazy(()=>hs),t.lazy(()=>bs)])}).strict(),dj=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>iK),t.lazy(()=>lK)])}).strict(),zj=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Mj),t.lazy(()=>Hyt)])}).strict(),mj=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>rK),t.lazy(()=>pK)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),hj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>rK),t.lazy(()=>pK)])}).strict(),bj=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>gT),t.lazy(()=>Qyt)])}).strict(),Ij=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>cK),t.lazy(()=>uK)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),gj=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>cK),t.lazy(()=>uK)])}).strict(),Cj=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>IT),t.lazy(()=>Yyt)])}).strict(),Aj=t.object({where:t.lazy(()=>ot),update:t.union([t.lazy(()=>yK),t.lazy(()=>sK)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Sj=t.object({where:t.lazy(()=>ot),data:t.union([t.lazy(()=>yK),t.lazy(()=>sK)])}).strict(),Tj=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>fj),t.lazy(()=>Gyt)])}).strict(),Bw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),qw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),j3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)])}).strict(),tut=t.object({update:t.union([t.lazy(()=>IL),t.lazy(()=>gL)]),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]),where:t.lazy(()=>gt).optional()}).strict(),eut=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>IL),t.lazy(()=>gL)])}).strict(),IL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),gL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Fw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),M3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)])}).strict(),out=t.object({update:t.union([t.lazy(()=>CL),t.lazy(()=>AL)]),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]),where:t.lazy(()=>v).optional()}).strict(),aut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>CL),t.lazy(()=>AL)])}).strict(),CL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),AL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),_w=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Ew=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Z3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)])}).strict(),nut=t.object({update:t.union([t.lazy(()=>SL),t.lazy(()=>TL)]),create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]),where:t.lazy(()=>v).optional()}).strict(),iut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>SL),t.lazy(()=>TL)])}).strict(),SL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),TL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),NV=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int()}).strict(),v3=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),O3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),lut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),BV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),qV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),f3=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Jq).optional(),ingredient:t.lazy(()=>Kq).optional()}).strict(),w3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N3=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>nF).optional(),equipment:t.lazy(()=>lF).optional()}).strict(),B3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>rF).optional()}).strict(),put=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),FV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),DV=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),q3=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>MB).optional(),RecipeInstruction:t.lazy(()=>vB).optional()}).strict(),F3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),cut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),D3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_V=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EV=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E3=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>s4).optional()}).strict(),L3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>d4).optional()}).strict(),yut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>GB).optional(),items:t.lazy(()=>$B).optional()}).strict(),H3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional()}).strict(),sut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LV=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Q3=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>h4).optional()}).strict(),Y3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VV=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G3=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>b4).optional()}).strict(),$3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HV=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number()}).strict(),J3=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional()}).strict(),K3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional()}).strict(),mut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),X3=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),t8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),hut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),e8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional()}).strict(),o8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),but=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),a8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),n8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Iut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),QV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Fq).optional(),assignedTo:t.lazy(()=>Dq).optional()}).strict(),l8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YV=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),r8=t.object({ingredient:t.lazy(()=>P4).optional()}).strict(),p8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),Cut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),GV=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),$V=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Tr).optional()}).strict(),u8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>kr).optional(),menus:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>wr).optional()}).strict(),Aut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),y8=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),s8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Sut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JV=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),KV=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),XV=t.object({id:t.number().int().optional(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),d8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),ingredient:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),z8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),Tut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),m8=t.object({type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>sF).optional(),createdBy:t.lazy(()=>dF).optional()}).strict(),h8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Put=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b8=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>gF).optional(),items:t.lazy(()=>CF).optional()}).strict(),I8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>AF).optional()}).strict(),Wut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),tH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),oH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),nH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lH=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pH=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yH=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),g8=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),C8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Uut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>xt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>N4).optional()}).strict(),S8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>q4).optional()}).strict(),Rut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional()}).strict(),T8=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>RF).optional(),items:t.lazy(()=>kF).optional()}).strict(),P8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>xF).optional()}).strict(),kut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),U8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),xut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),R8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>tD).optional(),MenuCategory:t.lazy(()=>eD).optional()}).strict(),k8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>oD).optional(),MenuCategory:t.lazy(()=>aD).optional()}).strict(),jut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x8=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>e4).optional()}).strict(),j8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Mut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Cq).optional(),recordedBy:t.lazy(()=>Aq).optional()}).strict(),Z8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>Uq).optional(),recordedBy:t.lazy(()=>Rq).optional()}).strict(),O8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>vq).optional(),items:t.lazy(()=>Oq).optional()}).strict(),w8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>fq).optional()}).strict(),Out=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>PB).optional(),maintenanceLogs:t.lazy(()=>WB).optional()}).strict(),B8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>UB).optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),fut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>FB).optional(),completions:t.lazy(()=>DB).optional()}).strict(),F8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>_B).optional(),completions:t.lazy(()=>EB).optional()}).strict(),wut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D8=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>oq).optional(),respondedBy:t.lazy(()=>aq).optional()}).strict(),_8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sH=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),dH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),zH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),mH=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),hH=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AH=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SH=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PH=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),xH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),E8=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>K4).optional()}).strict(),L8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>X4).optional()}).strict(),But=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),V8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>VF).optional(),recipe:t.lazy(()=>HF).optional()}).strict(),H8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),qut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),Q8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),ingredient:t.lazy(()=>OS).optional(),transactions:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),Y8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),Fut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),G8=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$8=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Dut=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J8=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_ut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>gq).optional(),menuItem:t.lazy(()=>Cq).optional()}).strict(),tJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Eut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Wq).optional(),ingrediente:t.lazy(()=>Uq).optional()}).strict(),oJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Zq).optional(),items:t.lazy(()=>Oq).optional()}).strict(),nJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>fq).optional()}).strict(),Vut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>qq).optional(),recipe:t.lazy(()=>Fq).optional()}).strict(),lJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rJ=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Qut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Vq).optional(),recipe:t.lazy(()=>Hq).optional()}).strict(),sJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Gut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>YB).optional(),items:t.lazy(()=>$B).optional()}).strict(),zJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional()}).strict(),$ut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mJ=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eq).optional(),menuItem:t.lazy(()=>oq).optional()}).strict(),hJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>OT).optional(),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),IJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),Kut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>OT).optional(),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT).optional()}).strict(),CJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),Xut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AJ=t.object({type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>yF).optional(),item:t.lazy(()=>sF).optional()}).strict(),SJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TJ=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>IF).optional(),items:t.lazy(()=>CF).optional()}).strict(),PJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>AF).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>ap)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),jH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),WJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),UJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),MH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),ZH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),vH=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OH=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),wH=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),NH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qH=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FH=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),DH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_H=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EH=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VH=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>Kq).optional(),recipeVersion:t.lazy(()=>Xq).optional()}).strict(),kJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),xJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>iF).optional(),equipment:t.lazy(()=>lF).optional()}).strict(),jJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>rF).optional()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),MJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),ZJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),vJ=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>i6).optional()}).strict(),BJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>r6).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>VF).optional(),assignedTo:t.lazy(()=>QF).optional()}).strict(),FJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),DJ=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>u6).optional()}).strict(),_J=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>qq).optional(),assignedTo:t.lazy(()=>Dq).optional()}).strict(),LJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Vq).optional(),createdBy:t.lazy(()=>Qq).optional()}).strict(),HJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),$J=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>ZB).optional(),RecipeInstruction:t.lazy(()=>vB).optional()}).strict(),KJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),myt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),XJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>uq).optional(),ingredients:t.lazy(()=>sq).optional()}).strict(),t7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>dq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a7=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i7=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c7=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),QH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),YH=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),GH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$H=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),JH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),y7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Jq).optional(),recipeVersion:t.lazy(()=>Xq).optional()}).strict(),s7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),Syt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Dr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),d7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>vS).optional(),lastUpdatedBy:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>BS).optional()}).strict(),z7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>DS).optional()}).strict(),Tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),m7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>H4).optional()}).strict(),h7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),b7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>wF).optional(),supplierPriceHistory:t.lazy(()=>BF).optional()}).strict(),I7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>qF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),Wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Wq).optional(),recordedBy:t.lazy(()=>Rq).optional()}).strict(),C7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A7=t.object({allergen:t.lazy(()=>W4).optional()}).strict(),S7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),Ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),T7=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>C4).optional()}).strict(),P7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),W7=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>MB).optional(),equipment:t.lazy(()=>ZB).optional()}).strict(),U7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),XH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>kt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),tQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),R7=t.object({type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>yF).optional(),createdBy:t.lazy(()=>dF).optional()}).strict(),k7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>kt),t.lazy(()=>_r)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Hq).optional(),createdBy:t.lazy(()=>Qq).optional()}).strict(),j7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Myt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M7=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>_4).optional()}).strict(),Z7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),oQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),v7=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>E4).optional()}).strict(),O7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),aQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),f7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>Q4).optional()}).strict(),w7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),nQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),N7=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>UF).optional(),items:t.lazy(()=>kF).optional()}).strict(),B7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>xF).optional()}).strict(),fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>np)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>wI).optional(),inventoryItems:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>BI).optional(),WasteRecord:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>EI).optional()}).strict(),F7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>LI).optional(),inventoryItems:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>HI).optional(),WasteRecord:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>$I).optional()}).strict(),wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),D7=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>A4).optional()}).strict(),_7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E7=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Byt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),V7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),H7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),Q7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),recipe:t.lazy(()=>HF).optional(),assignedTo:t.lazy(()=>QF).optional()}).strict(),Y7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),Fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),pQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),cQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),$7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),J7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>l4).optional()}).strict(),K7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>r4).optional()}).strict(),_yt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),yQ=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Ut),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.lazy(()=>Rt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),X7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),tK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>rt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>pt)]).optional()}).strict(),eK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>y6).optional()}).strict(),oK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aK=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iK=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>t4).optional()}).strict(),lK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>gq).optional(),recordedBy:t.lazy(()=>Aq).optional()}).strict(),pK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cK=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eq).optional(),respondedBy:t.lazy(()=>aq).optional()}).strict(),uK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Ut),t.lazy(()=>Br)]).optional(),tags:t.union([t.lazy(()=>qr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Rt),t.lazy(()=>Fr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yK=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>yq).optional(),ingredients:t.lazy(()=>sq).optional()}).strict(),sK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>zq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),Gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Dzt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),_zt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),Ezt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),Lzt=t.object({where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vzt=t.object({where:fe.optional(),orderBy:t.union([jL.array(),jL]).optional(),by:og.array(),having:xC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hzt=t.object({select:Ws.optional(),include:Ps.optional(),where:vl}).strict(),Qzt=t.object({select:Ws.optional(),include:Ps.optional(),where:vl}).strict(),Yzt=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),Gzt=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),dK=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),$zt=t.object({where:Ga.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jzt=t.object({where:Ga.optional(),orderBy:t.union([ML.array(),ML]).optional(),by:ag.array(),having:jC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kzt=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),Xzt=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),tmt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),emt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),omt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),amt=t.object({where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nmt=t.object({where:we.optional(),orderBy:t.union([ZL.array(),ZL]).optional(),by:ng.array(),having:MC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),imt=t.object({select:xs.optional(),include:ks.optional(),where:Ol}).strict(),lmt=t.object({select:xs.optional(),include:ks.optional(),where:Ol}).strict(),rmt=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),pmt=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),zK=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),cmt=t.object({where:$a.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),umt=t.object({where:$a.optional(),orderBy:t.union([vL.array(),vL]).optional(),by:ig.array(),having:ZC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ymt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),smt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),dmt=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),zmt=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),mK=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),mmt=t.object({where:Ja.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hmt=t.object({where:Ja.optional(),orderBy:t.union([OL.array(),OL]).optional(),by:lg.array(),having:vC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bmt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),Imt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),gmt=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),Cmt=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),hK=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),Amt=t.object({where:Ka.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Smt=t.object({where:Ka.optional(),orderBy:t.union([fL.array(),fL]).optional(),by:rg.array(),having:OC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Pmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Wmt=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Umt=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),bK=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Rmt=t.object({where:Xa.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kmt=t.object({where:Xa.optional(),orderBy:t.union([wL.array(),wL]).optional(),by:pg.array(),having:fC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),jmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),Mmt=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Zmt=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Lw=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),vmt=t.object({where:tn.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Omt=t.object({where:tn.optional(),orderBy:t.union([NL.array(),NL]).optional(),by:cg.array(),having:wC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fmt=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),wmt=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),Nmt=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),Bmt=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),IK=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),qmt=t.object({where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fmt=t.object({where:Ze.optional(),orderBy:t.union([BL.array(),BL]).optional(),by:ug.array(),having:NC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dmt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),_mt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),Emt=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Lmt=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),rS=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Vmt=t.object({where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hmt=t.object({where:ee.optional(),orderBy:t.union([qL.array(),qL]).optional(),by:yg.array(),having:BC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qmt=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),Ymt=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),Gmt=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),$mt=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),gK=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),Jmt=t.object({where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kmt=t.object({where:ke.optional(),orderBy:t.union([FL.array(),FL]).optional(),by:sg.array(),having:qC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xmt=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),tht=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),eht=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),oht=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),KS=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),aht=t.object({where:en.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nht=t.object({where:en.optional(),orderBy:t.union([DL.array(),DL]).optional(),by:dg.array(),having:FC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iht=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),lht=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),rht=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),pht=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),CK=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),cht=t.object({where:on.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uht=t.object({where:on.optional(),orderBy:t.union([_L.array(),_L]).optional(),by:zg.array(),having:DC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yht=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),sht=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),dht=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),zht=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),AK=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),mht=t.object({where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hht=t.object({where:xe.optional(),orderBy:t.union([EL.array(),EL]).optional(),by:mg.array(),having:_C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bht=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),Iht=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),ght=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Cht=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),SK=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Aht=t.object({where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sht=t.object({where:Le.optional(),orderBy:t.union([LL.array(),LL]).optional(),by:hg.array(),having:EC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tht=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),Pht=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),Wht=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:et.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Uht=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:et.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Vw=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:et.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Rht=t.object({where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:et.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kht=t.object({where:Ve.optional(),orderBy:t.union([VL.array(),VL]).optional(),by:bg.array(),having:LC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xht=t.object({select:ed.optional(),include:td.optional(),where:et}).strict(),jht=t.object({select:ed.optional(),include:td.optional(),where:et}).strict(),Mht=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Zht=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Hw=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),vht=t.object({where:an.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Oht=t.object({where:an.optional(),orderBy:t.union([HL.array(),HL]).optional(),by:Ig.array(),having:VC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fht=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),wht=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),Nht=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Bht=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Qw=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),qht=t.object({where:nn.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fht=t.object({where:nn.optional(),orderBy:t.union([QL.array(),QL]).optional(),by:gg.array(),having:HC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dht=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),_ht=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),Eht=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Lht=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),XS=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Vht=t.object({where:ln.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hht=t.object({where:ln.optional(),orderBy:t.union([YL.array(),YL]).optional(),by:Cg.array(),having:QC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qht=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),Yht=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),Ght=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),$ht=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Yw=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Jht=t.object({where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kht=t.object({where:ve.optional(),orderBy:t.union([GL.array(),GL]).optional(),by:Ag.array(),having:YC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xht=t.object({select:cd.optional(),include:pd.optional(),where:ot}).strict(),tbt=t.object({select:cd.optional(),include:pd.optional(),where:ot}).strict(),ebt=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),obt=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),TK=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),abt=t.object({where:rn.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nbt=t.object({where:rn.optional(),orderBy:t.union([$L.array(),$L]).optional(),by:Sg.array(),having:GC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ibt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),lbt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),rbt=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),pbt=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),tT=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),cbt=t.object({where:pn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ubt=t.object({where:pn.optional(),orderBy:t.union([JL.array(),JL]).optional(),by:Tg.array(),having:$C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ybt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),sbt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),dbt=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),zbt=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),eT=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),mbt=t.object({where:cn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hbt=t.object({where:cn.optional(),orderBy:t.union([KL.array(),KL]).optional(),by:Pg.array(),having:JC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bbt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),Ibt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),gbt=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Cbt=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Gw=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Abt=t.object({where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sbt=t.object({where:He.optional(),orderBy:t.union([XL.array(),XL]).optional(),by:Wg.array(),having:KC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tbt=t.object({select:bd.optional(),include:hd.optional(),where:at}).strict(),Pbt=t.object({select:bd.optional(),include:hd.optional(),where:at}).strict(),Wbt=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),Ubt=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),oT=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),Rbt=t.object({where:un.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kbt=t.object({where:un.optional(),orderBy:t.union([tV.array(),tV]).optional(),by:Ug.array(),having:XC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xbt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),jbt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),Mbt=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Zbt=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),PK=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),vbt=t.object({where:yn.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Obt=t.object({where:yn.optional(),orderBy:t.union([eV.array(),eV]).optional(),by:Rg.array(),having:tA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fbt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),wbt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),Nbt=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Bbt=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),WK=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),qbt=t.object({where:sn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fbt=t.object({where:sn.optional(),orderBy:t.union([oV.array(),oV]).optional(),by:kg.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dbt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),_bt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),Ebt=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Lbt=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),UK=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Vbt=t.object({where:dn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hbt=t.object({where:dn.optional(),orderBy:t.union([aV.array(),aV]).optional(),by:xg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qbt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),Ybt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),Gbt=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),$bt=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),aT=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Jbt=t.object({where:zn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kbt=t.object({where:zn.optional(),orderBy:t.union([nV.array(),nV]).optional(),by:jg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xbt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),tIt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),eIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Jr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),oIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Jr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),aIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Jr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),nIt=t.object({where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Jr.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iIt=t.object({where:lo.optional(),orderBy:t.union([iV.array(),iV]).optional(),by:Mg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lIt=t.object({select:xd.optional(),include:kd.optional(),where:Jr}).strict(),rIt=t.object({select:xd.optional(),include:kd.optional(),where:Jr}).strict(),pIt=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),cIt=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),$w=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),uIt=t.object({where:mn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yIt=t.object({where:mn.optional(),orderBy:t.union([lV.array(),lV]).optional(),by:Zg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sIt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),dIt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),zIt=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),mIt=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),RK=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),hIt=t.object({where:hn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bIt=t.object({where:hn.optional(),orderBy:t.union([rV.array(),rV]).optional(),by:vg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),IIt=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),gIt=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),CIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),AIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),SIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),TIt=t.object({where:pl.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PIt=t.object({where:pl.optional(),orderBy:t.union([pV.array(),pV]).optional(),by:Og.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WIt=t.object({select:Bm.optional(),where:qm}).strict(),UIt=t.object({select:Bm.optional(),where:qm}).strict(),RIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),kIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),xIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),jIt=t.object({where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MIt=t.object({where:Re.optional(),orderBy:t.union([cV.array(),cV]).optional(),by:fg.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZIt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),vIt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),OIt=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Yr.array(),Yr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),fIt=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Yr.array(),Yr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),wIt=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Yr.array(),Yr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),NIt=t.object({where:wt.optional(),orderBy:t.union([Yr.array(),Yr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BIt=t.object({where:wt.optional(),orderBy:t.union([uV.array(),uV]).optional(),by:wg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),FIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),DIt=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),_It=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),kK=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),EIt=t.object({where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LIt=t.object({where:N.optional(),orderBy:t.union([yV.array(),yV]).optional(),by:Ng.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({select:qd.optional(),include:Bd.optional(),where:$}).strict(),HIt=t.object({select:qd.optional(),include:Bd.optional(),where:$}).strict(),QIt=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),YIt=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),Jw=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),GIt=t.object({where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$It=t.object({where:Z.optional(),orderBy:t.union([sV.array(),sV]).optional(),by:Bg.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),KIt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),XIt=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),tgt=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),xK=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),egt=t.object({where:bn.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ogt=t.object({where:bn.optional(),orderBy:t.union([dV.array(),dV]).optional(),by:qg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),ngt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),igt=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),lgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),jK=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),rgt=t.object({where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pgt=t.object({where:Qe.optional(),orderBy:t.union([zV.array(),zV]).optional(),by:Fg.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),ugt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),ygt=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),sgt=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),ip=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),dgt=t.object({where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zgt=t.object({where:v.optional(),orderBy:t.union([mV.array(),mV]).optional(),by:Dg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),hgt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),bgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Wt.optional(),orderBy:t.union([jl.array(),jl]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Igt=t.object({select:Gd.optional(),include:Yd.optional(),where:Wt.optional(),orderBy:t.union([jl.array(),jl]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Kw=t.object({select:Gd.optional(),include:Yd.optional(),where:Wt.optional(),orderBy:t.union([jl.array(),jl]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),ggt=t.object({where:Wt.optional(),orderBy:t.union([jl.array(),jl]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Cgt=t.object({where:Wt.optional(),orderBy:t.union([hV.array(),hV]).optional(),by:_g.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({select:Gd.optional(),include:Yd.optional(),where:Q}).strict(),Sgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Q}).strict(),Tgt=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Pgt=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),nT=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Wgt=t.object({where:In.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ugt=t.object({where:In.optional(),orderBy:t.union([bV.array(),bV]).optional(),by:Eg.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rgt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),kgt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),xgt=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),jgt=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Xw=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Mgt=t.object({where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Zgt=t.object({where:Oe.optional(),orderBy:t.union([IV.array(),IV]).optional(),by:Lg.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vgt=t.object({select:Xd.optional(),include:Kd.optional(),where:nt}).strict(),Ogt=t.object({select:Xd.optional(),include:Kd.optional(),where:nt}).strict(),fgt=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),wgt=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),iT=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Ngt=t.object({where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Bgt=t.object({where:oe.optional(),orderBy:t.union([gV.array(),gV]).optional(),by:Vg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qgt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),Fgt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),Dgt=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),_gt=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),lT=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Egt=t.object({where:gn.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Lgt=t.object({where:gn.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Hg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vgt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),Hgt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),Qgt=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),Ygt=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),tN=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),Ggt=t.object({where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$gt=t.object({where:Ye.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:Qg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jgt=t.object({select:iz.optional(),include:nz.optional(),where:it}).strict(),Kgt=t.object({select:iz.optional(),include:nz.optional(),where:it}).strict(),Xgt=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),tCt=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),eN=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),eCt=t.object({where:Cn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oCt=t.object({where:Cn.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:Yg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aCt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),nCt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),iCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),lCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),rCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),pCt=t.object({where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cCt=t.object({where:Ne.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:Gg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uCt=t.object({select:cz.optional(),include:pz.optional(),where:fl}).strict(),yCt=t.object({select:cz.optional(),include:pz.optional(),where:fl}).strict(),sCt=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),dCt=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),oN=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),zCt=t.object({where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mCt=t.object({where:Ge.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:$g.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hCt=t.object({select:yz.optional(),include:uz.optional(),where:lt}).strict(),bCt=t.object({select:yz.optional(),include:uz.optional(),where:lt}).strict(),ICt=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),gCt=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),aN=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),CCt=t.object({where:An.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ACt=t.object({where:An.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:Jg.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SCt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),TCt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),PCt=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),WCt=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),MK=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),UCt=t.object({where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RCt=t.object({where:je.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:Kg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kCt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),xCt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),jCt=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),MCt=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),ZK=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),ZCt=t.object({where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vCt=t.object({where:$e.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:Xg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OCt=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),fCt=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),wCt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),NCt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),vK=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),BCt=t.object({where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qCt=t.object({where:Je.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:tC.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FCt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),DCt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),_Ct=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),ECt=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),rT=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),LCt=t.object({where:Sn.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VCt=t.object({where:Sn.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:eC.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HCt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),QCt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),YCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),GCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),OK=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),$Ct=t.object({where:Tn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JCt=t.object({where:Tn.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:oC.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),XCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),tAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),eAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),fK=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),oAt=t.object({where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aAt=t.object({where:Me.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:aC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),iAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),lAt=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),rAt=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),nN=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),pAt=t.object({where:Pn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cAt=t.object({where:Pn.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:nC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uAt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),yAt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),sAt=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),dAt=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),JI=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),zAt=t.object({where:gt.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mAt=t.object({where:gt.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:iC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hAt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),bAt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),IAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),gAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),CAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),AAt=t.object({where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SAt=t.object({where:Be.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:lC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TAt=t.object({select:Mz.optional(),include:jz.optional(),where:wl}).strict(),PAt=t.object({select:Mz.optional(),include:jz.optional(),where:wl}).strict(),WAt=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),UAt=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),wK=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),RAt=t.object({where:Wn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kAt=t.object({where:Wn.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:rC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xAt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),jAt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),MAt=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),ZAt=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),NK=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),vAt=t.object({where:Un.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OAt=t.object({where:Un.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:pC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fAt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),wAt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),NAt=t.object({select:Ws.optional(),include:Ps.optional(),data:t.union([aY,nY])}).strict(),BAt=t.object({select:Ws.optional(),include:Ps.optional(),where:vl,create:t.union([aY,nY]),update:t.union([iY,lY])}).strict(),qAt=t.object({data:t.union([QT,QT.array()]),skipDuplicates:t.boolean().optional()}).strict(),FAt=t.object({data:t.union([QT,QT.array()]),skipDuplicates:t.boolean().optional()}).strict(),DAt=t.object({select:Ws.optional(),include:Ps.optional(),where:vl}).strict(),_At=t.object({select:Ws.optional(),include:Ps.optional(),data:t.union([iY,lY]),where:vl}).strict(),EAt=t.object({data:t.union([rY,pY]),where:fe.optional(),limit:t.number().optional()}).strict(),LAt=t.object({data:t.union([rY,pY]),where:fe.optional(),limit:t.number().optional()}).strict(),VAt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),HAt=t.object({select:Rs.optional(),include:Us.optional(),data:t.union([cY,uY])}).strict(),QAt=t.object({select:Rs.optional(),include:Us.optional(),where:se,create:t.union([cY,uY]),update:t.union([yY,sY])}).strict(),YAt=t.object({data:t.union([YT,YT.array()]),skipDuplicates:t.boolean().optional()}).strict(),GAt=t.object({data:t.union([YT,YT.array()]),skipDuplicates:t.boolean().optional()}).strict(),$At=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),JAt=t.object({select:Rs.optional(),include:Us.optional(),data:t.union([yY,sY]),where:se}).strict(),KAt=t.object({data:t.union([CN,dY]),where:Ga.optional(),limit:t.number().optional()}).strict(),XAt=t.object({data:t.union([CN,dY]),where:Ga.optional(),limit:t.number().optional()}).strict(),tSt=t.object({where:Ga.optional(),limit:t.number().optional()}).strict(),eSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([zY,mY])}).strict(),oSt=t.object({select:xs.optional(),include:ks.optional(),where:Ol,create:t.union([zY,mY]),update:t.union([hY,bY])}).strict(),aSt=t.object({data:t.union([GT,GT.array()]),skipDuplicates:t.boolean().optional()}).strict(),nSt=t.object({data:t.union([GT,GT.array()]),skipDuplicates:t.boolean().optional()}).strict(),iSt=t.object({select:xs.optional(),include:ks.optional(),where:Ol}).strict(),lSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([hY,bY]),where:Ol}).strict(),rSt=t.object({data:t.union([IY,gY]),where:we.optional(),limit:t.number().optional()}).strict(),pSt=t.object({data:t.union([IY,gY]),where:we.optional(),limit:t.number().optional()}).strict(),cSt=t.object({where:we.optional(),limit:t.number().optional()}).strict(),uSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([CY,AY])}).strict(),ySt=t.object({select:Ms.optional(),include:js.optional(),where:de,create:t.union([CY,AY]),update:t.union([SY,TY])}).strict(),sSt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),dSt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),zSt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),mSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([SY,TY]),where:de}).strict(),hSt=t.object({data:t.union([AN,PY]),where:$a.optional(),limit:t.number().optional()}).strict(),bSt=t.object({data:t.union([AN,PY]),where:$a.optional(),limit:t.number().optional()}).strict(),ISt=t.object({where:$a.optional(),limit:t.number().optional()}).strict(),gSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([WY,UY])}).strict(),CSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze,create:t.union([WY,UY]),update:t.union([RY,kY])}).strict(),ASt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),SSt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),TSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),PSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([RY,kY]),where:ze}).strict(),WSt=t.object({data:t.union([SN,xY]),where:Ja.optional(),limit:t.number().optional()}).strict(),USt=t.object({data:t.union([SN,xY]),where:Ja.optional(),limit:t.number().optional()}).strict(),RSt=t.object({where:Ja.optional(),limit:t.number().optional()}).strict(),kSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([jY,MY])}).strict(),xSt=t.object({select:fs.optional(),include:Os.optional(),where:me,create:t.union([jY,MY]),update:t.union([ZY,vY])}).strict(),jSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),MSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZSt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),vSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([ZY,vY]),where:me}).strict(),OSt=t.object({data:t.union([TN,OY]),where:Ka.optional(),limit:t.number().optional()}).strict(),fSt=t.object({data:t.union([TN,OY]),where:Ka.optional(),limit:t.number().optional()}).strict(),wSt=t.object({where:Ka.optional(),limit:t.number().optional()}).strict(),NSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([fY,wY])}).strict(),BSt=t.object({select:Ns.optional(),include:ws.optional(),where:he,create:t.union([fY,wY]),update:t.union([NY,BY])}).strict(),qSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),FSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),DSt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),_St=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([NY,BY]),where:he}).strict(),ESt=t.object({data:t.union([PN,qY]),where:Xa.optional(),limit:t.number().optional()}).strict(),LSt=t.object({data:t.union([PN,qY]),where:Xa.optional(),limit:t.number().optional()}).strict(),VSt=t.object({where:Xa.optional(),limit:t.number().optional()}).strict(),HSt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([FY,DY])}).strict(),QSt=t.object({select:qs.optional(),include:Bs.optional(),where:st,create:t.union([FY,DY]),update:t.union([_Y,EY])}).strict(),YSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$St=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),JSt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([_Y,EY]),where:st}).strict(),KSt=t.object({data:t.union([Mj,LY]),where:tn.optional(),limit:t.number().optional()}).strict(),XSt=t.object({data:t.union([Mj,LY]),where:tn.optional(),limit:t.number().optional()}).strict(),tTt=t.object({where:tn.optional(),limit:t.number().optional()}).strict(),eTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([VY,HY])}).strict(),oTt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t,create:t.union([VY,HY]),update:t.union([QY,YY])}).strict(),aTt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nTt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iTt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),lTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([QY,YY]),where:$t}).strict(),rTt=t.object({data:t.union([WN,GY]),where:Ze.optional(),limit:t.number().optional()}).strict(),pTt=t.object({data:t.union([WN,GY]),where:Ze.optional(),limit:t.number().optional()}).strict(),cTt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),uTt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([$Y,JY])}).strict(),yTt=t.object({select:Es.optional(),include:_s.optional(),where:w,create:t.union([$Y,JY]),update:t.union([KY,XY])}).strict(),sTt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dTt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zTt=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),mTt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([KY,XY]),where:w}).strict(),hTt=t.object({data:t.union([hT,t0]),where:ee.optional(),limit:t.number().optional()}).strict(),bTt=t.object({data:t.union([hT,t0]),where:ee.optional(),limit:t.number().optional()}).strict(),ITt=t.object({where:ee.optional(),limit:t.number().optional()}).strict(),gTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([e0,o0])}).strict(),CTt=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt,create:t.union([e0,o0]),update:t.union([a0,n0])}).strict(),ATt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),STt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TTt=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),PTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([a0,n0]),where:Lt}).strict(),WTt=t.object({data:t.union([UN,i0]),where:ke.optional(),limit:t.number().optional()}).strict(),UTt=t.object({data:t.union([UN,i0]),where:ke.optional(),limit:t.number().optional()}).strict(),RTt=t.object({where:ke.optional(),limit:t.number().optional()}).strict(),kTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([l0,r0])}).strict(),xTt=t.object({select:Qs.optional(),include:Hs.optional(),where:B,create:t.union([l0,r0]),update:t.union([p0,c0])}).strict(),jTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZTt=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),vTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([p0,c0]),where:B}).strict(),OTt=t.object({data:t.union([bT,u0]),where:en.optional(),limit:t.number().optional()}).strict(),fTt=t.object({data:t.union([bT,u0]),where:en.optional(),limit:t.number().optional()}).strict(),wTt=t.object({where:en.optional(),limit:t.number().optional()}).strict(),NTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([y0,s0])}).strict(),BTt=t.object({select:Gs.optional(),include:Ys.optional(),where:be,create:t.union([y0,s0]),update:t.union([d0,z0])}).strict(),qTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DTt=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),_Tt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([d0,z0]),where:be}).strict(),ETt=t.object({data:t.union([RN,m0]),where:on.optional(),limit:t.number().optional()}).strict(),LTt=t.object({data:t.union([RN,m0]),where:on.optional(),limit:t.number().optional()}).strict(),VTt=t.object({where:on.optional(),limit:t.number().optional()}).strict(),HTt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([h0,b0])}).strict(),QTt=t.object({select:Js.optional(),include:$s.optional(),where:Vt,create:t.union([h0,b0]),update:t.union([I0,g0])}).strict(),YTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Tt=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),JTt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([I0,g0]),where:Vt}).strict(),KTt=t.object({data:t.union([kN,C0]),where:xe.optional(),limit:t.number().optional()}).strict(),XTt=t.object({data:t.union([kN,C0]),where:xe.optional(),limit:t.number().optional()}).strict(),tPt=t.object({where:xe.optional(),limit:t.number().optional()}).strict(),ePt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([A0,S0])}).strict(),oPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt,create:t.union([A0,S0]),update:t.union([T0,P0])}).strict(),aPt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nPt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),lPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([T0,P0]),where:Jt}).strict(),rPt=t.object({data:t.union([xN,W0]),where:Le.optional(),limit:t.number().optional()}).strict(),pPt=t.object({data:t.union([xN,W0]),where:Le.optional(),limit:t.number().optional()}).strict(),cPt=t.object({where:Le.optional(),limit:t.number().optional()}).strict(),uPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([U0,R0])}).strict(),yPt=t.object({select:ed.optional(),include:td.optional(),where:et,create:t.union([U0,R0]),update:t.union([k0,x0])}).strict(),sPt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dPt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zPt=t.object({select:ed.optional(),include:td.optional(),where:et}).strict(),mPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([k0,x0]),where:et}).strict(),hPt=t.object({data:t.union([Zj,j0]),where:Ve.optional(),limit:t.number().optional()}).strict(),bPt=t.object({data:t.union([Zj,j0]),where:Ve.optional(),limit:t.number().optional()}).strict(),IPt=t.object({where:Ve.optional(),limit:t.number().optional()}).strict(),gPt=t.object({select:ad.optional(),include:od.optional(),data:t.union([M0,Z0])}).strict(),CPt=t.object({select:ad.optional(),include:od.optional(),where:dt,create:t.union([M0,Z0]),update:t.union([v0,O0])}).strict(),APt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SPt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TPt=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),PPt=t.object({select:ad.optional(),include:od.optional(),data:t.union([v0,O0]),where:dt}).strict(),WPt=t.object({data:t.union([vj,f0]),where:an.optional(),limit:t.number().optional()}).strict(),UPt=t.object({data:t.union([vj,f0]),where:an.optional(),limit:t.number().optional()}).strict(),RPt=t.object({where:an.optional(),limit:t.number().optional()}).strict(),kPt=t.object({select:id.optional(),include:nd.optional(),data:t.union([w0,N0])}).strict(),xPt=t.object({select:id.optional(),include:nd.optional(),where:zt,create:t.union([w0,N0]),update:t.union([B0,q0])}).strict(),jPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZPt=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),vPt=t.object({select:id.optional(),include:nd.optional(),data:t.union([B0,q0]),where:zt}).strict(),OPt=t.object({data:t.union([Oj,F0]),where:nn.optional(),limit:t.number().optional()}).strict(),fPt=t.object({data:t.union([Oj,F0]),where:nn.optional(),limit:t.number().optional()}).strict(),wPt=t.object({where:nn.optional(),limit:t.number().optional()}).strict(),NPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([D0,_0])}).strict(),BPt=t.object({select:rd.optional(),include:ld.optional(),where:q,create:t.union([D0,_0]),update:t.union([E0,L0])}).strict(),qPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DPt=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),_Pt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([E0,L0]),where:q}).strict(),EPt=t.object({data:t.union([IT,V0]),where:ln.optional(),limit:t.number().optional()}).strict(),LPt=t.object({data:t.union([IT,V0]),where:ln.optional(),limit:t.number().optional()}).strict(),VPt=t.object({where:ln.optional(),limit:t.number().optional()}).strict(),HPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([H0,Q0])}).strict(),QPt=t.object({select:cd.optional(),include:pd.optional(),where:ot,create:t.union([H0,Q0]),update:t.union([Y0,G0])}).strict(),YPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Pt=t.object({select:cd.optional(),include:pd.optional(),where:ot}).strict(),JPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([Y0,G0]),where:ot}).strict(),KPt=t.object({data:t.union([fj,$0]),where:ve.optional(),limit:t.number().optional()}).strict(),XPt=t.object({data:t.union([fj,$0]),where:ve.optional(),limit:t.number().optional()}).strict(),tWt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),eWt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([J0,K0])}).strict(),oWt=t.object({select:yd.optional(),include:ud.optional(),where:Ie,create:t.union([J0,K0]),update:t.union([X0,tG])}).strict(),aWt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nWt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iWt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),lWt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([X0,tG]),where:Ie}).strict(),rWt=t.object({data:t.union([jN,eG]),where:rn.optional(),limit:t.number().optional()}).strict(),pWt=t.object({data:t.union([jN,eG]),where:rn.optional(),limit:t.number().optional()}).strict(),cWt=t.object({where:rn.optional(),limit:t.number().optional()}).strict(),uWt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([oG,aG])}).strict(),yWt=t.object({select:dd.optional(),include:sd.optional(),where:F,create:t.union([oG,aG]),update:t.union([nG,iG])}).strict(),sWt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dWt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zWt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),mWt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([nG,iG]),where:F}).strict(),hWt=t.object({data:t.union([gT,lG]),where:pn.optional(),limit:t.number().optional()}).strict(),bWt=t.object({data:t.union([gT,lG]),where:pn.optional(),limit:t.number().optional()}).strict(),IWt=t.object({where:pn.optional(),limit:t.number().optional()}).strict(),gWt=t.object({select:md.optional(),include:zd.optional(),data:t.union([rG,pG])}).strict(),CWt=t.object({select:md.optional(),include:zd.optional(),where:D,create:t.union([rG,pG]),update:t.union([cG,uG])}).strict(),AWt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SWt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TWt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),PWt=t.object({select:md.optional(),include:zd.optional(),data:t.union([cG,uG]),where:D}).strict(),WWt=t.object({data:t.union([CT,yG]),where:cn.optional(),limit:t.number().optional()}).strict(),UWt=t.object({data:t.union([CT,yG]),where:cn.optional(),limit:t.number().optional()}).strict(),RWt=t.object({where:cn.optional(),limit:t.number().optional()}).strict(),kWt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([sG,dG])}).strict(),xWt=t.object({select:bd.optional(),include:hd.optional(),where:at,create:t.union([sG,dG]),update:t.union([zG,mG])}).strict(),jWt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MWt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZWt=t.object({select:bd.optional(),include:hd.optional(),where:at}).strict(),vWt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([zG,mG]),where:at}).strict(),OWt=t.object({data:t.union([wj,hG]),where:He.optional(),limit:t.number().optional()}).strict(),fWt=t.object({data:t.union([wj,hG]),where:He.optional(),limit:t.number().optional()}).strict(),wWt=t.object({where:He.optional(),limit:t.number().optional()}).strict(),NWt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([bG,IG])}).strict(),BWt=t.object({select:gd.optional(),include:Id.optional(),where:_,create:t.union([bG,IG]),update:t.union([gG,CG])}).strict(),qWt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FWt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DWt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),_Wt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([gG,CG]),where:_}).strict(),EWt=t.object({data:t.union([AT,AG]),where:un.optional(),limit:t.number().optional()}).strict(),LWt=t.object({data:t.union([AT,AG]),where:un.optional(),limit:t.number().optional()}).strict(),VWt=t.object({where:un.optional(),limit:t.number().optional()}).strict(),HWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([SG,TG])}).strict(),QWt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge,create:t.union([SG,TG]),update:t.union([PG,WG])}).strict(),YWt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GWt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Wt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),JWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([PG,WG]),where:ge}).strict(),KWt=t.object({data:t.union([MN,UG]),where:yn.optional(),limit:t.number().optional()}).strict(),XWt=t.object({data:t.union([MN,UG]),where:yn.optional(),limit:t.number().optional()}).strict(),tUt=t.object({where:yn.optional(),limit:t.number().optional()}).strict(),eUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([RG,kG])}).strict(),oUt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce,create:t.union([RG,kG]),update:t.union([xG,jG])}).strict(),aUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iUt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),lUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([xG,jG]),where:Ce}).strict(),rUt=t.object({data:t.union([ZN,MG]),where:sn.optional(),limit:t.number().optional()}).strict(),pUt=t.object({data:t.union([ZN,MG]),where:sn.optional(),limit:t.number().optional()}).strict(),cUt=t.object({where:sn.optional(),limit:t.number().optional()}).strict(),uUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([ZG,vG])}).strict(),yUt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae,create:t.union([ZG,vG]),update:t.union([OG,fG])}).strict(),sUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zUt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),mUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([OG,fG]),where:Ae}).strict(),hUt=t.object({data:t.union([vN,wG]),where:dn.optional(),limit:t.number().optional()}).strict(),bUt=t.object({data:t.union([vN,wG]),where:dn.optional(),limit:t.number().optional()}).strict(),IUt=t.object({where:dn.optional(),limit:t.number().optional()}).strict(),gUt=t.object({select:Rd.optional(),include:Ud.optional(),data:t.union([NG,BG])}).strict(),CUt=t.object({select:Rd.optional(),include:Ud.optional(),where:E,create:t.union([NG,BG]),update:t.union([qG,FG])}).strict(),AUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TUt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),PUt=t.object({select:Rd.optional(),include:Ud.optional(),data:t.union([qG,FG]),where:E}).strict(),WUt=t.object({data:t.union([ST,DG]),where:zn.optional(),limit:t.number().optional()}).strict(),UUt=t.object({data:t.union([ST,DG]),where:zn.optional(),limit:t.number().optional()}).strict(),RUt=t.object({where:zn.optional(),limit:t.number().optional()}).strict(),kUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([_G,EG])}).strict(),xUt=t.object({select:xd.optional(),include:kd.optional(),where:Jr,create:t.union([_G,EG]),update:t.union([LG,VG])}).strict(),jUt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MUt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZUt=t.object({select:xd.optional(),include:kd.optional(),where:Jr}).strict(),vUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([LG,VG]),where:Jr}).strict(),OUt=t.object({data:t.union([HG,QG]),where:lo.optional(),limit:t.number().optional()}).strict(),fUt=t.object({data:t.union([HG,QG]),where:lo.optional(),limit:t.number().optional()}).strict(),wUt=t.object({where:lo.optional(),limit:t.number().optional()}).strict(),NUt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([YG,GG])}).strict(),BUt=t.object({select:Md.optional(),include:jd.optional(),where:mt,create:t.union([YG,GG]),update:t.union([$G,JG])}).strict(),qUt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FUt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DUt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),_Ut=t.object({select:Md.optional(),include:jd.optional(),data:t.union([$G,JG]),where:mt}).strict(),EUt=t.object({data:t.union([Nj,KG]),where:mn.optional(),limit:t.number().optional()}).strict(),LUt=t.object({data:t.union([Nj,KG]),where:mn.optional(),limit:t.number().optional()}).strict(),VUt=t.object({where:mn.optional(),limit:t.number().optional()}).strict(),HUt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([XG,t$])}).strict(),QUt=t.object({select:vd.optional(),include:Zd.optional(),where:Se,create:t.union([XG,t$]),update:t.union([e$,o$])}).strict(),YUt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GUt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Ut=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),JUt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([e$,o$]),where:Se}).strict(),KUt=t.object({data:t.union([ON,a$]),where:hn.optional(),limit:t.number().optional()}).strict(),XUt=t.object({data:t.union([ON,a$]),where:hn.optional(),limit:t.number().optional()}).strict(),tRt=t.object({where:hn.optional(),limit:t.number().optional()}).strict(),eRt=t.object({select:Bm.optional(),data:t.union([n$,i$])}).strict(),oRt=t.object({select:Bm.optional(),where:qm,create:t.union([n$,i$]),update:t.union([l$,r$])}).strict(),aRt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nRt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iRt=t.object({select:Bm.optional(),where:qm}).strict(),lRt=t.object({select:Bm.optional(),data:t.union([l$,r$]),where:qm}).strict(),rRt=t.object({data:t.union([p$,c$]),where:pl.optional(),limit:t.number().optional()}).strict(),pRt=t.object({data:t.union([p$,c$]),where:pl.optional(),limit:t.number().optional()}).strict(),cRt=t.object({where:pl.optional(),limit:t.number().optional()}).strict(),uRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([u$,y$])}).strict(),yRt=t.object({select:fd.optional(),include:Od.optional(),where:Rl,create:t.union([u$,y$]),update:t.union([s$,d$])}).strict(),sRt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dRt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zRt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),mRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([s$,d$]),where:Rl}).strict(),hRt=t.object({data:t.union([z$,m$]),where:Re.optional(),limit:t.number().optional()}).strict(),bRt=t.object({data:t.union([z$,m$]),where:Re.optional(),limit:t.number().optional()}).strict(),IRt=t.object({where:Re.optional(),limit:t.number().optional()}).strict(),gRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([h$,b$])}).strict(),CRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha,create:t.union([h$,b$]),update:t.union([I$,g$])}).strict(),ARt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SRt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),PRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([I$,g$]),where:Ha}).strict(),WRt=t.object({data:t.union([C$,A$]),where:wt.optional(),limit:t.number().optional()}).strict(),URt=t.object({data:t.union([C$,A$]),where:wt.optional(),limit:t.number().optional()}).strict(),RRt=t.object({where:wt.optional(),limit:t.number().optional()}).strict(),kRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([S$,T$])}).strict(),xRt=t.object({select:qd.optional(),include:Bd.optional(),where:$,create:t.union([S$,T$]),update:t.union([P$,W$])}).strict(),jRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZRt=t.object({select:qd.optional(),include:Bd.optional(),where:$}).strict(),vRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([P$,W$]),where:$}).strict(),ORt=t.object({data:t.union([fN,U$]),where:N.optional(),limit:t.number().optional()}).strict(),fRt=t.object({data:t.union([fN,U$]),where:N.optional(),limit:t.number().optional()}).strict(),wRt=t.object({where:N.optional(),limit:t.number().optional()}).strict(),NRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([R$,k$])}).strict(),BRt=t.object({select:Dd.optional(),include:Fd.optional(),where:j,create:t.union([R$,k$]),update:t.union([x$,j$])}).strict(),qRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DRt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),_Rt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([x$,j$]),where:j}).strict(),ERt=t.object({data:t.union([Bj,M$]),where:Z.optional(),limit:t.number().optional()}).strict(),LRt=t.object({data:t.union([Bj,M$]),where:Z.optional(),limit:t.number().optional()}).strict(),VRt=t.object({where:Z.optional(),limit:t.number().optional()}).strict(),HRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([Z$,v$])}).strict(),QRt=t.object({select:Ed.optional(),include:_d.optional(),where:Te,create:t.union([Z$,v$]),update:t.union([O$,f$])}).strict(),YRt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GRt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Rt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),JRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([O$,f$]),where:Te}).strict(),KRt=t.object({data:t.union([wN,w$]),where:bn.optional(),limit:t.number().optional()}).strict(),XRt=t.object({data:t.union([wN,w$]),where:bn.optional(),limit:t.number().optional()}).strict(),tkt=t.object({where:bn.optional(),limit:t.number().optional()}).strict(),ekt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([N$,B$])}).strict(),okt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt,create:t.union([N$,B$]),update:t.union([q$,F$])}).strict(),akt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nkt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ikt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),lkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([q$,F$]),where:Kt}).strict(),rkt=t.object({data:t.union([NN,D$]),where:Qe.optional(),limit:t.number().optional()}).strict(),pkt=t.object({data:t.union([NN,D$]),where:Qe.optional(),limit:t.number().optional()}).strict(),ckt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),ukt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([_$,E$])}).strict(),ykt=t.object({select:Qd.optional(),include:Hd.optional(),where:g,create:t.union([_$,E$]),update:t.union([L$,V$])}).strict(),skt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dkt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zkt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),mkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([L$,V$]),where:g}).strict(),hkt=t.object({data:t.union([hI,H$]),where:v.optional(),limit:t.number().optional()}).strict(),bkt=t.object({data:t.union([hI,H$]),where:v.optional(),limit:t.number().optional()}).strict(),Ikt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),gkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([Q$,Y$])}).strict(),Ckt=t.object({select:Gd.optional(),include:Yd.optional(),where:Q,create:t.union([Q$,Y$]),update:t.union([G$,$$])}).strict(),Akt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Skt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tkt=t.object({select:Gd.optional(),include:Yd.optional(),where:Q}).strict(),Pkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([G$,$$]),where:Q}).strict(),Wkt=t.object({data:t.union([qj,J$]),where:Wt.optional(),limit:t.number().optional()}).strict(),Ukt=t.object({data:t.union([qj,J$]),where:Wt.optional(),limit:t.number().optional()}).strict(),Rkt=t.object({where:Wt.optional(),limit:t.number().optional()}).strict(),kkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([K$,X$])}).strict(),xkt=t.object({select:Jd.optional(),include:$d.optional(),where:L,create:t.union([K$,X$]),update:t.union([t9,e9])}).strict(),jkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zkt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),vkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([t9,e9]),where:L}).strict(),Okt=t.object({data:t.union([TT,o9]),where:In.optional(),limit:t.number().optional()}).strict(),fkt=t.object({data:t.union([TT,o9]),where:In.optional(),limit:t.number().optional()}).strict(),wkt=t.object({where:In.optional(),limit:t.number().optional()}).strict(),Nkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([a9,n9])}).strict(),Bkt=t.object({select:Xd.optional(),include:Kd.optional(),where:nt,create:t.union([a9,n9]),update:t.union([i9,l9])}).strict(),qkt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fkt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dkt=t.object({select:Xd.optional(),include:Kd.optional(),where:nt}).strict(),_kt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([i9,l9]),where:nt}).strict(),Ekt=t.object({data:t.union([Fj,r9]),where:Oe.optional(),limit:t.number().optional()}).strict(),Lkt=t.object({data:t.union([Fj,r9]),where:Oe.optional(),limit:t.number().optional()}).strict(),Vkt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),Hkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([p9,c9])}).strict(),Qkt=t.object({select:ez.optional(),include:tz.optional(),where:f,create:t.union([p9,c9]),update:t.union([u9,y9])}).strict(),Ykt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gkt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$kt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),Jkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([u9,y9]),where:f}).strict(),Kkt=t.object({data:t.union([PT,s9]),where:oe.optional(),limit:t.number().optional()}).strict(),Xkt=t.object({data:t.union([PT,s9]),where:oe.optional(),limit:t.number().optional()}).strict(),txt=t.object({where:oe.optional(),limit:t.number().optional()}).strict(),ext=t.object({select:az.optional(),include:oz.optional(),data:t.union([d9,z9])}).strict(),oxt=t.object({select:az.optional(),include:oz.optional(),where:V,create:t.union([d9,z9]),update:t.union([m9,h9])}).strict(),axt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nxt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ixt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),lxt=t.object({select:az.optional(),include:oz.optional(),data:t.union([m9,h9]),where:V}).strict(),rxt=t.object({data:t.union([WT,b9]),where:gn.optional(),limit:t.number().optional()}).strict(),pxt=t.object({data:t.union([WT,b9]),where:gn.optional(),limit:t.number().optional()}).strict(),cxt=t.object({where:gn.optional(),limit:t.number().optional()}).strict(),uxt=t.object({select:iz.optional(),include:nz.optional(),data:t.union([I9,g9])}).strict(),yxt=t.object({select:iz.optional(),include:nz.optional(),where:it,create:t.union([I9,g9]),update:t.union([C9,A9])}).strict(),sxt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dxt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zxt=t.object({select:iz.optional(),include:nz.optional(),where:it}).strict(),mxt=t.object({select:iz.optional(),include:nz.optional(),data:t.union([C9,A9]),where:it}).strict(),hxt=t.object({data:t.union([Dj,S9]),where:Ye.optional(),limit:t.number().optional()}).strict(),bxt=t.object({data:t.union([Dj,S9]),where:Ye.optional(),limit:t.number().optional()}).strict(),Ixt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),gxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([T9,P9])}).strict(),Cxt=t.object({select:rz.optional(),include:lz.optional(),where:ht,create:t.union([T9,P9]),update:t.union([W9,U9])}).strict(),Axt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sxt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Txt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),Pxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([W9,U9]),where:ht}).strict(),Wxt=t.object({data:t.union([_j,R9]),where:Cn.optional(),limit:t.number().optional()}).strict(),Uxt=t.object({data:t.union([_j,R9]),where:Cn.optional(),limit:t.number().optional()}).strict(),Rxt=t.object({where:Cn.optional(),limit:t.number().optional()}).strict(),kxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([k9,x9])}).strict(),xxt=t.object({select:cz.optional(),include:pz.optional(),where:fl,create:t.union([k9,x9]),update:t.union([j9,M9])}).strict(),jxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zxt=t.object({select:cz.optional(),include:pz.optional(),where:fl}).strict(),vxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([j9,M9]),where:fl}).strict(),Oxt=t.object({data:t.union([Z9,v9]),where:Ne.optional(),limit:t.number().optional()}).strict(),fxt=t.object({data:t.union([Z9,v9]),where:Ne.optional(),limit:t.number().optional()}).strict(),wxt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),Nxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([O9,f9])}).strict(),Bxt=t.object({select:yz.optional(),include:uz.optional(),where:lt,create:t.union([O9,f9]),update:t.union([w9,N9])}).strict(),qxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dxt=t.object({select:yz.optional(),include:uz.optional(),where:lt}).strict(),_xt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([w9,N9]),where:lt}).strict(),Ext=t.object({data:t.union([Ej,B9]),where:Ge.optional(),limit:t.number().optional()}).strict(),Lxt=t.object({data:t.union([Ej,B9]),where:Ge.optional(),limit:t.number().optional()}).strict(),Vxt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),Hxt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([q9,F9])}).strict(),Qxt=t.object({select:dz.optional(),include:sz.optional(),where:bt,create:t.union([q9,F9]),update:t.union([D9,_9])}).strict(),Yxt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gxt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),$xt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),Jxt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([D9,_9]),where:bt}).strict(),Kxt=t.object({data:t.union([Lj,E9]),where:An.optional(),limit:t.number().optional()}).strict(),Xxt=t.object({data:t.union([Lj,E9]),where:An.optional(),limit:t.number().optional()}).strict(),tjt=t.object({where:An.optional(),limit:t.number().optional()}).strict(),ejt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([L9,V9])}).strict(),ojt=t.object({select:mz.optional(),include:zz.optional(),where:Ht,create:t.union([L9,V9]),update:t.union([H9,Q9])}).strict(),ajt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),njt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ijt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),ljt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([H9,Q9]),where:Ht}).strict(),rjt=t.object({data:t.union([BN,Y9]),where:je.optional(),limit:t.number().optional()}).strict(),pjt=t.object({data:t.union([BN,Y9]),where:je.optional(),limit:t.number().optional()}).strict(),cjt=t.object({where:je.optional(),limit:t.number().optional()}).strict(),ujt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([G9,$9])}).strict(),yjt=t.object({select:bz.optional(),include:hz.optional(),where:Xt,create:t.union([G9,$9]),update:t.union([J9,K9])}).strict(),sjt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),djt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zjt=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),mjt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([J9,K9]),where:Xt}).strict(),hjt=t.object({data:t.union([qN,X9]),where:$e.optional(),limit:t.number().optional()}).strict(),bjt=t.object({data:t.union([qN,X9]),where:$e.optional(),limit:t.number().optional()}).strict(),Ijt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),gjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([t1,e1])}).strict(),Cjt=t.object({select:gz.optional(),include:Iz.optional(),where:te,create:t.union([t1,e1]),update:t.union([o1,a1])}).strict(),Ajt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sjt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tjt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),Pjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([o1,a1]),where:te}).strict(),Wjt=t.object({data:t.union([FN,n1]),where:Je.optional(),limit:t.number().optional()}).strict(),Ujt=t.object({data:t.union([FN,n1]),where:Je.optional(),limit:t.number().optional()}).strict(),Rjt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),kjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([i1,l1])}).strict(),xjt=t.object({select:Az.optional(),include:Cz.optional(),where:H,create:t.union([i1,l1]),update:t.union([r1,p1])}).strict(),jjt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mjt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zjt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),vjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([r1,p1]),where:H}).strict(),Ojt=t.object({data:t.union([UT,c1]),where:Sn.optional(),limit:t.number().optional()}).strict(),fjt=t.object({data:t.union([UT,c1]),where:Sn.optional(),limit:t.number().optional()}).strict(),wjt=t.object({where:Sn.optional(),limit:t.number().optional()}).strict(),Njt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([u1,y1])}).strict(),Bjt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe,create:t.union([u1,y1]),update:t.union([s1,d1])}).strict(),qjt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fjt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Djt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),_jt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([s1,d1]),where:Pe}).strict(),Ejt=t.object({data:t.union([DN,z1]),where:Tn.optional(),limit:t.number().optional()}).strict(),Ljt=t.object({data:t.union([DN,z1]),where:Tn.optional(),limit:t.number().optional()}).strict(),Vjt=t.object({where:Tn.optional(),limit:t.number().optional()}).strict(),Hjt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([m1,h1])}).strict(),Qjt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt,create:t.union([m1,h1]),update:t.union([b1,I1])}).strict(),Yjt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gjt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$jt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),Jjt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([b1,I1]),where:Qt}).strict(),Kjt=t.object({data:t.union([_N,g1]),where:Me.optional(),limit:t.number().optional()}).strict(),Xjt=t.object({data:t.union([_N,g1]),where:Me.optional(),limit:t.number().optional()}).strict(),tMt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),eMt=t.object({select:Rz.optional(),include:Uz.optional(),data:t.union([C1,A1])}).strict(),oMt=t.object({select:Rz.optional(),include:Uz.optional(),where:It,create:t.union([C1,A1]),update:t.union([S1,T1])}).strict(),aMt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nMt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iMt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),lMt=t.object({select:Rz.optional(),include:Uz.optional(),data:t.union([S1,T1]),where:It}).strict(),rMt=t.object({data:t.union([Vj,P1]),where:Pn.optional(),limit:t.number().optional()}).strict(),pMt=t.object({data:t.union([Vj,P1]),where:Pn.optional(),limit:t.number().optional()}).strict(),cMt=t.object({where:Pn.optional(),limit:t.number().optional()}).strict(),uMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([W1,U1])}).strict(),yMt=t.object({select:xz.optional(),include:kz.optional(),where:k,create:t.union([W1,U1]),update:t.union([R1,k1])}).strict(),sMt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),dMt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),zMt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),mMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([R1,k1]),where:k}).strict(),hMt=t.object({data:t.union([cS,x1]),where:gt.optional(),limit:t.number().optional()}).strict(),bMt=t.object({data:t.union([cS,x1]),where:gt.optional(),limit:t.number().optional()}).strict(),IMt=t.object({where:gt.optional(),limit:t.number().optional()}).strict(),gMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([j1,M1])}).strict(),CMt=t.object({select:Mz.optional(),include:jz.optional(),where:wl,create:t.union([j1,M1]),update:t.union([Z1,v1])}).strict(),AMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TMt=t.object({select:Mz.optional(),include:jz.optional(),where:wl}).strict(),PMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([Z1,v1]),where:wl}).strict(),WMt=t.object({data:t.union([O1,f1]),where:Be.optional(),limit:t.number().optional()}).strict(),UMt=t.object({data:t.union([O1,f1]),where:Be.optional(),limit:t.number().optional()}).strict(),RMt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),kMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([w1,N1])}).strict(),xMt=t.object({select:vz.optional(),include:Zz.optional(),where:We,create:t.union([w1,N1]),update:t.union([B1,q1])}).strict(),jMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZMt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),vMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([B1,q1]),where:We}).strict(),OMt=t.object({data:t.union([EN,F1]),where:Wn.optional(),limit:t.number().optional()}).strict(),fMt=t.object({data:t.union([EN,F1]),where:Wn.optional(),limit:t.number().optional()}).strict(),wMt=t.object({where:Wn.optional(),limit:t.number().optional()}).strict(),NMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([D1,_1])}).strict(),BMt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue,create:t.union([D1,_1]),update:t.union([E1,L1])}).strict(),qMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DMt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),_Mt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([E1,L1]),where:Ue}).strict(),EMt=t.object({data:t.union([LN,V1]),where:Un.optional(),limit:t.number().optional()}).strict(),LMt=t.object({data:t.union([LN,V1]),where:Un.optional(),limit:t.number().optional()}).strict(),VMt=t.object({where:Un.optional(),limit:t.number().optional()}).strict();export{$yt as zodSchemas};