'use strict';var client=require('@prisma/client');var Kyt=Object.defineProperty;var Xyt=(c,i)=>{for(var p in i)Kyt(c,p,{get:i[p],enumerable:true});};var Jyt={};Xyt(Jyt,{AllergenAggregateArgsSchema:()=>yIt,AllergenArgsSchema:()=>ZQ,AllergenAvgOrderByAggregateInputSchema:()=>Pot,AllergenCountOrderByAggregateInputSchema:()=>Tot,AllergenCountOutputTypeArgsSchema:()=>vQ,AllergenCountOutputTypeSelectSchema:()=>pX,AllergenCreateArgsSchema:()=>fUt,AllergenCreateInputSchema:()=>EG,AllergenCreateManyAndReturnArgsSchema:()=>BUt,AllergenCreateManyArgsSchema:()=>NUt,AllergenCreateManyInputSchema:()=>SP,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>P2,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>O6,AllergenCreateWithoutIngredientsInputSchema:()=>kv,AllergenDeleteArgsSchema:()=>qUt,AllergenDeleteManyArgsSchema:()=>EUt,AllergenFindFirstArgsSchema:()=>pIt,AllergenFindFirstOrThrowArgsSchema:()=>cIt,AllergenFindManyArgsSchema:()=>uIt,AllergenFindUniqueArgsSchema:()=>dIt,AllergenFindUniqueOrThrowArgsSchema:()=>zIt,AllergenGroupByArgsSchema:()=>sIt,AllergenIncludeSchema:()=>kd,AllergenMaxOrderByAggregateInputSchema:()=>Wot,AllergenMinOrderByAggregateInputSchema:()=>Uot,AllergenOrderByWithAggregationInputSchema:()=>lV,AllergenOrderByWithRelationInputSchema:()=>xm,AllergenScalarFieldEnumSchema:()=>Mg,AllergenScalarRelationFilterSchema:()=>l4,AllergenScalarWhereWithAggregatesInputSchema:()=>iA,AllergenSchema:()=>qdt,AllergenSelectSchema:()=>xd,AllergenSumOrderByAggregateInputSchema:()=>Rot,AllergenUncheckedCreateInputSchema:()=>LG,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>xv,AllergenUncheckedUpdateInputSchema:()=>HG,AllergenUncheckedUpdateManyInputSchema:()=>YG,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>H_,AllergenUpdateArgsSchema:()=>FUt,AllergenUpdateInputSchema:()=>VG,AllergenUpdateManyAndReturnArgsSchema:()=>_Ut,AllergenUpdateManyArgsSchema:()=>DUt,AllergenUpdateManyMutationInputSchema:()=>QG,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>U2,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>kpt,AllergenUpdateWithoutIngredientsInputSchema:()=>V_,AllergenUpsertArgsSchema:()=>wUt,AllergenUpsertWithoutIngredientsInputSchema:()=>Rpt,AllergenWhereInputSchema:()=>lo,AllergenWhereUniqueInputSchema:()=>Kr,AvailabilityAggregateArgsSchema:()=>Hbt,AvailabilityArgsSchema:()=>vzt,AvailabilityAvgOrderByAggregateInputSchema:()=>rot,AvailabilityCountOrderByAggregateInputSchema:()=>lot,AvailabilityCreateArgsSchema:()=>pUt,AvailabilityCreateInputSchema:()=>kG,AvailabilityCreateManyAndReturnArgsSchema:()=>yUt,AvailabilityCreateManyArgsSchema:()=>uUt,AvailabilityCreateManyInputSchema:()=>gP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>mO,AvailabilityCreateManyUserInputSchema:()=>SH,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>Jn,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>db,AvailabilityCreateWithoutUserInputSchema:()=>Iu,AvailabilityDeleteArgsSchema:()=>sUt,AvailabilityDeleteManyArgsSchema:()=>hUt,AvailabilityFindFirstArgsSchema:()=>Lbt,AvailabilityFindFirstOrThrowArgsSchema:()=>Vbt,AvailabilityFindManyArgsSchema:()=>UK,AvailabilityFindUniqueArgsSchema:()=>Ybt,AvailabilityFindUniqueOrThrowArgsSchema:()=>Gbt,AvailabilityGroupByArgsSchema:()=>Qbt,AvailabilityIncludeSchema:()=>Sd,AvailabilityListRelationFilterSchema:()=>S4,AvailabilityMaxOrderByAggregateInputSchema:()=>pot,AvailabilityMinOrderByAggregateInputSchema:()=>cot,AvailabilityOrderByRelationAggregateInputSchema:()=>dat,AvailabilityOrderByWithAggregationInputSchema:()=>aV,AvailabilityOrderByWithRelationInputSchema:()=>ch,AvailabilityScalarFieldEnumSchema:()=>kg,AvailabilityScalarWhereInputSchema:()=>Tp,AvailabilityScalarWhereWithAggregatesInputSchema:()=>oA,AvailabilitySchema:()=>wdt,AvailabilitySelectSchema:()=>Td,AvailabilitySumOrderByAggregateInputSchema:()=>uot,AvailabilityUncheckedCreateInputSchema:()=>xG,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>mi,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>gu,AvailabilityUncheckedUpdateInputSchema:()=>MG,AvailabilityUncheckedUpdateManyInputSchema:()=>ZG,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>Yut,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Xi,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>c7,AvailabilityUpdateArgsSchema:()=>dUt,AvailabilityUpdateInputSchema:()=>jG,AvailabilityUpdateManyAndReturnArgsSchema:()=>mUt,AvailabilityUpdateManyArgsSchema:()=>zUt,AvailabilityUpdateManyMutationInputSchema:()=>vN,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>bR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>fi,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>hR,AvailabilityUpdateWithoutUserInputSchema:()=>p7,AvailabilityUpsertArgsSchema:()=>cUt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>mR,AvailabilityWhereInputSchema:()=>sn,AvailabilityWhereUniqueInputSchema:()=>Ce,BoolFieldUpdateOperationsInputSchema:()=>d,BoolFilterSchema:()=>Dt,BoolWithAggregatesFilterSchema:()=>vl,ChecklistCompleteAggregateArgsSchema:()=>Oht,ChecklistCompleteArgsSchema:()=>WQ,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>tet,ChecklistCompleteCountOrderByAggregateInputSchema:()=>Xtt,ChecklistCompleteCountOutputTypeArgsSchema:()=>UQ,ChecklistCompleteCountOutputTypeSelectSchema:()=>nX,ChecklistCompleteCreateArgsSchema:()=>bPt,ChecklistCompleteCreateInputSchema:()=>RY,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>CPt,ChecklistCompleteCreateManyArgsSchema:()=>gPt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>CZ,ChecklistCompleteCreateManyChecklistInputSchema:()=>LV,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>IO,ChecklistCompleteCreateManyCompletedByInputSchema:()=>WH,ChecklistCompleteCreateManyInputSchema:()=>pP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>NB,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>ti,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>m2,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Zh,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>hb,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>c6,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>oc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>Pu,ChecklistCompleteCreateWithoutItemsInputSchema:()=>xZ,ChecklistCompleteDeleteArgsSchema:()=>APt,ChecklistCompleteDeleteManyArgsSchema:()=>WPt,ChecklistCompleteFindFirstArgsSchema:()=>Zht,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>vht,ChecklistCompleteFindManyArgsSchema:()=>Vw,ChecklistCompleteFindUniqueArgsSchema:()=>wht,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>Nht,ChecklistCompleteGroupByArgsSchema:()=>fht,ChecklistCompleteIncludeSchema:()=>td,ChecklistCompleteListRelationFilterSchema:()=>$j,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>eet,ChecklistCompleteMinOrderByAggregateInputSchema:()=>oet,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>J$,ChecklistCompleteOrderByWithAggregationInputSchema:()=>HL,ChecklistCompleteOrderByWithRelationInputSchema:()=>Um,ChecklistCompleteScalarFieldEnumSchema:()=>bg,ChecklistCompleteScalarRelationFilterSchema:()=>X$,ChecklistCompleteScalarWhereInputSchema:()=>dl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>VC,ChecklistCompleteSchema:()=>Wdt,ChecklistCompleteSelectSchema:()=>ed,ChecklistCompleteSumOrderByAggregateInputSchema:()=>aet,ChecklistCompleteUncheckedCreateInputSchema:()=>kY,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>qB,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Ii,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>ac,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Wu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>jZ,ChecklistCompleteUncheckedUpdateInputSchema:()=>jY,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>MY,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>dut,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>LB,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>Jut,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>ol,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>Q3,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>m7,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>$D,ChecklistCompleteUpdateArgsSchema:()=>SPt,ChecklistCompleteUpdateInputSchema:()=>xY,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>PPt,ChecklistCompleteUpdateManyArgsSchema:()=>TPt,ChecklistCompleteUpdateManyMutationInputSchema:()=>Zj,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>CW,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>UR,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>_B,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Bi,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>b2,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Zrt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>gW,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>WR,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>H3,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>z7,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>GD,ChecklistCompleteUpsertArgsSchema:()=>IPt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>IW,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>PR,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>Mrt,ChecklistCompleteWhereInputSchema:()=>Ve,ChecklistCompleteWhereUniqueInputSchema:()=>ot,ChecklistFrequencySchema:()=>ft,ChecklistItemAggregateArgsSchema:()=>kht,ChecklistItemArgsSchema:()=>TQ,ChecklistItemAvgOrderByAggregateInputSchema:()=>Ytt,ChecklistItemCompleteAggregateArgsSchema:()=>Fht,ChecklistItemCompleteArgsSchema:()=>Wzt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>iet,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>net,ChecklistItemCompleteCreateArgsSchema:()=>UPt,ChecklistItemCompleteCreateInputSchema:()=>ZY,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>xPt,ChecklistItemCompleteCreateManyArgsSchema:()=>kPt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>kZ,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>HV,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>TZ,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>VV,ChecklistItemCompleteCreateManyInputSchema:()=>cP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>QB,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>u2,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>Oh,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>vh,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>lc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>nc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Dm,ChecklistItemCompleteDeleteArgsSchema:()=>jPt,ChecklistItemCompleteDeleteManyArgsSchema:()=>OPt,ChecklistItemCompleteFindFirstArgsSchema:()=>Bht,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>qht,ChecklistItemCompleteFindManyArgsSchema:()=>Hw,ChecklistItemCompleteFindUniqueArgsSchema:()=>_ht,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>Eht,ChecklistItemCompleteGroupByArgsSchema:()=>Dht,ChecklistItemCompleteIncludeSchema:()=>od,ChecklistItemCompleteListRelationFilterSchema:()=>Kj,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>ret,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>pet,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>K$,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>QL,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>eh,ChecklistItemCompleteScalarFieldEnumSchema:()=>Ig,ChecklistItemCompleteScalarWhereInputSchema:()=>zl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>HC,ChecklistItemCompleteSchema:()=>Udt,ChecklistItemCompleteSelectSchema:()=>ad,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>cet,ChecklistItemCompleteUncheckedCreateInputSchema:()=>vY,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>YB,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>y2,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>rc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>ic,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>fY,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>wY,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>mut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>KB,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>zut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>z2,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>J3,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>G3,ChecklistItemCompleteUpdateArgsSchema:()=>MPt,ChecklistItemCompleteUpdateInputSchema:()=>OY,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>vPt,ChecklistItemCompleteUpdateManyArgsSchema:()=>ZPt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>vj,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>UW,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>TW,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>JB,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>d2,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>WW,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>SW,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>$3,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>Y3,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>Nz,ChecklistItemCompleteUpsertArgsSchema:()=>RPt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>PW,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>AW,ChecklistItemCompleteWhereInputSchema:()=>an,ChecklistItemCompleteWhereUniqueInputSchema:()=>dt,ChecklistItemCountOrderByAggregateInputSchema:()=>Qtt,ChecklistItemCountOutputTypeArgsSchema:()=>PQ,ChecklistItemCountOutputTypeSelectSchema:()=>aX,ChecklistItemCreateArgsSchema:()=>pPt,ChecklistItemCreateInputSchema:()=>SY,ChecklistItemCreateManyAndReturnArgsSchema:()=>yPt,ChecklistItemCreateManyArgsSchema:()=>uPt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>gZ,ChecklistItemCreateManyChecklistInputSchema:()=>EV,ChecklistItemCreateManyInputSchema:()=>rP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>wB,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>h2,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>Mh,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>u6,ChecklistItemCreateWithoutChecklistInputSchema:()=>tc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>MZ,ChecklistItemDeleteArgsSchema:()=>sPt,ChecklistItemDeleteManyArgsSchema:()=>hPt,ChecklistItemFindFirstArgsSchema:()=>Uht,ChecklistItemFindFirstOrThrowArgsSchema:()=>Rht,ChecklistItemFindManyArgsSchema:()=>TK,ChecklistItemFindUniqueArgsSchema:()=>jht,ChecklistItemFindUniqueOrThrowArgsSchema:()=>Mht,ChecklistItemGroupByArgsSchema:()=>xht,ChecklistItemIncludeSchema:()=>Ks,ChecklistItemListRelationFilterSchema:()=>$$,ChecklistItemMaxOrderByAggregateInputSchema:()=>Gtt,ChecklistItemMinOrderByAggregateInputSchema:()=>$tt,ChecklistItemOrderByRelationAggregateInputSchema:()=>Ftt,ChecklistItemOrderByWithAggregationInputSchema:()=>VL,ChecklistItemOrderByWithRelationInputSchema:()=>Wm,ChecklistItemScalarFieldEnumSchema:()=>hg,ChecklistItemScalarRelationFilterSchema:()=>t4,ChecklistItemScalarWhereInputSchema:()=>zp,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>LC,ChecklistItemSchema:()=>Pdt,ChecklistItemSelectSchema:()=>Xs,ChecklistItemSumOrderByAggregateInputSchema:()=>Jtt,ChecklistItemTypeSchema:()=>_t,ChecklistItemUncheckedCreateInputSchema:()=>TY,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>BB,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>ec,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>ZZ,ChecklistItemUncheckedUpdateInputSchema:()=>WY,ChecklistItemUncheckedUpdateManyInputSchema:()=>UY,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>sut,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>EB,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>V3,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>KD,ChecklistItemUpdateArgsSchema:()=>dPt,ChecklistItemUpdateInputSchema:()=>PY,ChecklistItemUpdateManyAndReturnArgsSchema:()=>mPt,ChecklistItemUpdateManyArgsSchema:()=>zPt,ChecklistItemUpdateManyMutationInputSchema:()=>jN,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>bW,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>DB,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>I2,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Ort,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>hW,ChecklistItemUpdateWithoutChecklistInputSchema:()=>L3,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>JD,ChecklistItemUpsertArgsSchema:()=>cPt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>mW,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>vrt,ChecklistItemWhereInputSchema:()=>Le,ChecklistItemWhereUniqueInputSchema:()=>Jt,ChecklistStatusSchema:()=>qt,ConstraintTypeSchema:()=>re,CookBookAggregateArgsSchema:()=>zgt,CookBookArgsSchema:()=>BQ,CookBookAvgOrderByAggregateInputSchema:()=>Rat,CookBookCountOrderByAggregateInputSchema:()=>Uat,CookBookCountOutputTypeArgsSchema:()=>qQ,CookBookCountOutputTypeSelectSchema:()=>dX,CookBookCreateArgsSchema:()=>pkt,CookBookCreateInputSchema:()=>B1,CookBookCreateManyAndReturnArgsSchema:()=>ykt,CookBookCreateManyArgsSchema:()=>ukt,CookBookCreateManyInputSchema:()=>MP,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>_v,CookBookCreateManyRestaurantInputSchema:()=>oH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>Fl,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>po,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>V6,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>Qh,CookBookCreateWithoutRecipesInputSchema:()=>MO,CookBookCreateWithoutRestaurantInputSchema:()=>Zc,CookBookDeleteArgsSchema:()=>skt,CookBookDeleteManyArgsSchema:()=>hkt,CookBookFindFirstArgsSchema:()=>sgt,CookBookFindFirstOrThrowArgsSchema:()=>dgt,CookBookFindManyArgsSchema:()=>MK,CookBookFindUniqueArgsSchema:()=>hgt,CookBookFindUniqueOrThrowArgsSchema:()=>bgt,CookBookGroupByArgsSchema:()=>mgt,CookBookIncludeSchema:()=>Ld,CookBookListRelationFilterSchema:()=>y4,CookBookMaxOrderByAggregateInputSchema:()=>kat,CookBookMinOrderByAggregateInputSchema:()=>xat,CookBookOrderByRelationAggregateInputSchema:()=>eat,CookBookOrderByWithAggregationInputSchema:()=>mV,CookBookOrderByWithRelationInputSchema:()=>jm,CookBookScalarFieldEnumSchema:()=>Fg,CookBookScalarRelationFilterSchema:()=>P4,CookBookScalarWhereInputSchema:()=>hp,CookBookScalarWhereWithAggregatesInputSchema:()=>zA,CookBookSchema:()=>Ydt,CookBookSelectSchema:()=>Vd,CookBookSumOrderByAggregateInputSchema:()=>jat,CookBookUncheckedCreateInputSchema:()=>q1,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>ZO,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>vc,CookBookUncheckedUpdateInputSchema:()=>D1,CookBookUncheckedUpdateManyInputSchema:()=>_1,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>kut,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>uE,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>T8,CookBookUpdateArgsSchema:()=>dkt,CookBookUpdateInputSchema:()=>F1,CookBookUpdateManyAndReturnArgsSchema:()=>mkt,CookBookUpdateManyArgsSchema:()=>zkt,CookBookUpdateManyMutationInputSchema:()=>BN,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>yU,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>dr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ea,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Hpt,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>uU,CookBookUpdateWithoutRecipesInputSchema:()=>cE,CookBookUpdateWithoutRestaurantInputSchema:()=>S8,CookBookUpsertArgsSchema:()=>ckt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>cU,CookBookUpsertWithoutRecipesInputSchema:()=>Vpt,CookBookWhereInputSchema:()=>Qe,CookBookWhereUniqueInputSchema:()=>Kt,CountStatusSchema:()=>Mt,CustomerFeedbackAggregateArgsSchema:()=>Kht,CustomerFeedbackArgsSchema:()=>Rzt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>bet,CustomerFeedbackCountOrderByAggregateInputSchema:()=>het,CustomerFeedbackCreateArgsSchema:()=>LPt,CustomerFeedbackCreateInputSchema:()=>_Y,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>QPt,CustomerFeedbackCreateManyArgsSchema:()=>HPt,CustomerFeedbackCreateManyInputSchema:()=>yP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>fw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>mQ,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>gO,CustomerFeedbackCreateManyRespondedByInputSchema:()=>UH,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>Xv,CustomerFeedbackCreateManyRestaurantInputSchema:()=>sH,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>Hz,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ei,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>Jl,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>zI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>bb,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>ab,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>Cs,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Uu,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>Kc,CustomerFeedbackCreatetagsInputSchema:()=>ep,CustomerFeedbackDeleteArgsSchema:()=>YPt,CustomerFeedbackDeleteManyArgsSchema:()=>KPt,CustomerFeedbackFindFirstArgsSchema:()=>$ht,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>Jht,CustomerFeedbackFindManyArgsSchema:()=>tT,CustomerFeedbackFindUniqueArgsSchema:()=>tbt,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>ebt,CustomerFeedbackGroupByArgsSchema:()=>Xht,CustomerFeedbackIncludeSchema:()=>ld,CustomerFeedbackListRelationFilterSchema:()=>CS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>Iet,CustomerFeedbackMinOrderByAggregateInputSchema:()=>get,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>uB,CustomerFeedbackOrderByWithAggregationInputSchema:()=>GL,CustomerFeedbackOrderByWithRelationInputSchema:()=>ah,CustomerFeedbackScalarFieldEnumSchema:()=>Cg,CustomerFeedbackScalarWhereInputSchema:()=>wn,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>YC,CustomerFeedbackSchema:()=>kdt,CustomerFeedbackSelectSchema:()=>rd,CustomerFeedbackSumOrderByAggregateInputSchema:()=>Cet,CustomerFeedbackUncheckedCreateInputSchema:()=>EY,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>tm,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>gi,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ur,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>As,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>Ru,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,CustomerFeedbackUncheckedUpdateInputSchema:()=>VY,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>HY,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Gyt,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Im,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>Kut,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>al,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>But,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>yK,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>b7,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>E8,CustomerFeedbackUpdateArgsSchema:()=>GPt,CustomerFeedbackUpdateInputSchema:()=>LY,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>JPt,CustomerFeedbackUpdateManyArgsSchema:()=>$Pt,CustomerFeedbackUpdateManyMutationInputSchema:()=>gT,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Cj,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>xR,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>DU,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>um,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>qi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>gj,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>kR,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>FU,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>uK,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>h7,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>_8,CustomerFeedbackUpdatetagsInputSchema:()=>Fr,CustomerFeedbackUpsertArgsSchema:()=>VPt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ij,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>RR,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>qU,CustomerFeedbackWhereInputSchema:()=>ln,CustomerFeedbackWhereUniqueInputSchema:()=>q,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>s,DateTimeNullableFilterSchema:()=>ce,DateTimeNullableWithAggregatesFilterSchema:()=>Yr,DateTimeWithAggregatesFilterSchema:()=>M,DayOfWeekSchema:()=>le,DietaryRestrictionAggregateArgsSchema:()=>nbt,DietaryRestrictionArgsSchema:()=>RQ,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>Wet,DietaryRestrictionCountOrderByAggregateInputSchema:()=>Pet,DietaryRestrictionCountOutputTypeArgsSchema:()=>kQ,DietaryRestrictionCountOutputTypeSelectSchema:()=>iX,DietaryRestrictionCreateArgsSchema:()=>XPt,DietaryRestrictionCreateInputSchema:()=>QY,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>oWt,DietaryRestrictionCreateManyArgsSchema:()=>eWt,DietaryRestrictionCreateManyInputSchema:()=>sP,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>Qz,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>To,DietaryRestrictionCreateNestedOneWithoutIngredientsInputSchema:()=>xI,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>K6,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>mI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>wb,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>uf,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Ss,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>uy,DietaryRestrictionDeleteArgsSchema:()=>aWt,DietaryRestrictionDeleteManyArgsSchema:()=>rWt,DietaryRestrictionFindFirstArgsSchema:()=>obt,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>abt,DietaryRestrictionFindManyArgsSchema:()=>Yw,DietaryRestrictionFindUniqueArgsSchema:()=>lbt,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>rbt,DietaryRestrictionGroupByArgsSchema:()=>ibt,DietaryRestrictionIncludeSchema:()=>pd,DietaryRestrictionListRelationFilterSchema:()=>yM,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Uet,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Ret,DietaryRestrictionNullableScalarRelationFilterSchema:()=>F4,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>B4,DietaryRestrictionOrderByWithAggregationInputSchema:()=>$L,DietaryRestrictionOrderByWithRelationInputSchema:()=>Rm,DietaryRestrictionScalarFieldEnumSchema:()=>Ag,DietaryRestrictionScalarWhereInputSchema:()=>Tl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>GC,DietaryRestrictionSchema:()=>xdt,DietaryRestrictionSelectSchema:()=>cd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>ket,DietaryRestrictionUncheckedCreateInputSchema:()=>YY,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>em,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Vo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>yf,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Ts,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>yy,DietaryRestrictionUncheckedUpdateInputSchema:()=>$Y,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>JY,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>$yt,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>gm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>byt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Na,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>sE,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>dK,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>eJ,DietaryRestrictionUpdateArgsSchema:()=>nWt,DietaryRestrictionUpdateInputSchema:()=>GY,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>lWt,DietaryRestrictionUpdateManyArgsSchema:()=>iWt,DietaryRestrictionUpdateManyMutationInputSchema:()=>fj,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Tj,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>Zk,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>ym,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>ma,DietaryRestrictionUpdateOneWithoutIngredientsNestedInputSchema:()=>LI,DietaryRestrictionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Ypt,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Sj,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Mk,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>yE,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>sK,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>tJ,DietaryRestrictionUpsertArgsSchema:()=>tWt,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Aj,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>jk,DietaryRestrictionUpsertWithoutIngredientsInputSchema:()=>Qpt,DietaryRestrictionWhereInputSchema:()=>ve,DietaryRestrictionWhereUniqueInputSchema:()=>at,EarlyAccessAggregateArgsSchema:()=>jIt,EarlyAccessAvgOrderByAggregateInputSchema:()=>qot,EarlyAccessCountOrderByAggregateInputSchema:()=>Bot,EarlyAccessCreateArgsSchema:()=>pRt,EarlyAccessCreateInputSchema:()=>i1,EarlyAccessCreateManyAndReturnArgsSchema:()=>yRt,EarlyAccessCreateManyArgsSchema:()=>uRt,EarlyAccessCreateManyInputSchema:()=>WP,EarlyAccessDeleteArgsSchema:()=>sRt,EarlyAccessDeleteManyArgsSchema:()=>hRt,EarlyAccessFindFirstArgsSchema:()=>RIt,EarlyAccessFindFirstOrThrowArgsSchema:()=>kIt,EarlyAccessFindManyArgsSchema:()=>xIt,EarlyAccessFindUniqueArgsSchema:()=>ZIt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>vIt,EarlyAccessGroupByArgsSchema:()=>MIt,EarlyAccessMaxOrderByAggregateInputSchema:()=>Fot,EarlyAccessMinOrderByAggregateInputSchema:()=>Dot,EarlyAccessOrderByWithAggregationInputSchema:()=>cV,EarlyAccessOrderByWithRelationInputSchema:()=>zh,EarlyAccessScalarFieldEnumSchema:()=>Og,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>pA,EarlyAccessSchema:()=>_dt,EarlyAccessSelectSchema:()=>Bm,EarlyAccessSumOrderByAggregateInputSchema:()=>_ot,EarlyAccessUncheckedCreateInputSchema:()=>l1,EarlyAccessUncheckedUpdateInputSchema:()=>p1,EarlyAccessUncheckedUpdateManyInputSchema:()=>u1,EarlyAccessUpdateArgsSchema:()=>dRt,EarlyAccessUpdateInputSchema:()=>r1,EarlyAccessUpdateManyAndReturnArgsSchema:()=>mRt,EarlyAccessUpdateManyArgsSchema:()=>zRt,EarlyAccessUpdateManyMutationInputSchema:()=>c1,EarlyAccessUpsertArgsSchema:()=>cRt,EarlyAccessWhereInputSchema:()=>pl,EarlyAccessWhereUniqueInputSchema:()=>qm,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>yp,EnumChecklistFrequencyFilterSchema:()=>JN,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>Htt,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>Fm,EnumChecklistItemTypeFilterSchema:()=>KN,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>Ktt,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>wz,EnumChecklistStatusFilterSchema:()=>XN,EnumChecklistStatusWithAggregatesFilterSchema:()=>uet,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>dC,EnumConstraintTypeFilterSchema:()=>iB,EnumConstraintTypeWithAggregatesFilterSchema:()=>bot,EnumCountStatusFieldUpdateOperationsInputSchema:()=>np,EnumCountStatusFilterSchema:()=>hB,EnumCountStatusWithAggregatesFilterSchema:()=>Pnt,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>sC,EnumDayOfWeekFilterSchema:()=>nB,EnumDayOfWeekWithAggregatesFilterSchema:()=>yot,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>up,EnumEquipmentStatusFilterSchema:()=>YN,EnumEquipmentStatusWithAggregatesFilterSchema:()=>ktt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>qr,EnumFeedbackSourceFilterSchema:()=>tB,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Aet,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Dr,EnumFeedbackStatusFilterSchema:()=>eB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>Tet,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>op,EnumInventoryTypeFilterSchema:()=>c4,EnumInventoryTypeWithAggregatesFilterSchema:()=>tat,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>uC,EnumMaintenanceTypeFilterSchema:()=>$N,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>qtt,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>ip,EnumOrderStatusFilterSchema:()=>bB,EnumOrderStatusWithAggregatesFilterSchema:()=>Fnt,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>cC,EnumPhotoTypeFilterSchema:()=>HN,EnumPhotoTypeWithAggregatesFilterSchema:()=>VX,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>Ya,EnumPrepStatusFilterSchema:()=>PS,EnumPrepStatusWithAggregatesFilterSchema:()=>Q4,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>_m,EnumShiftStatusFilterSchema:()=>IB,EnumShiftStatusWithAggregatesFilterSchema:()=>ait,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>ct,EnumSkillLevelFilterSchema:()=>zB,EnumSkillLevelWithAggregatesFilterSchema:()=>Vat,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>yC,EnumTaskTypeFilterSchema:()=>aB,EnumTaskTypeWithAggregatesFilterSchema:()=>iot,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>Er,EnumTransactionTypeFilterSchema:()=>mB,EnumTransactionTypeWithAggregatesFilterSchema:()=>Int,EnumUserRoleFieldUpdateOperationsInputSchema:()=>jt,EnumUserRoleFilterSchema:()=>yB,EnumUserRoleWithAggregatesFilterSchema:()=>Cat,EquipmentAggregateArgsSchema:()=>nht,EquipmentArgsSchema:()=>Uj,EquipmentAvgOrderByAggregateInputSchema:()=>Ptt,EquipmentCountOrderByAggregateInputSchema:()=>Ttt,EquipmentCountOutputTypeArgsSchema:()=>AQ,EquipmentCountOutputTypeSelectSchema:()=>eX,EquipmentCreateArgsSchema:()=>UTt,EquipmentCreateInputSchema:()=>oY,EquipmentCreateManyAndReturnArgsSchema:()=>xTt,EquipmentCreateManyArgsSchema:()=>kTt,EquipmentCreateManyInputSchema:()=>aP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>Jv,EquipmentCreateManyRestaurantInputSchema:()=>uH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>ylt,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>jB,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>n6,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>o6,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>eb,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>mZ,EquipmentCreateWithoutRecipesInputSchema:()=>yZ,EquipmentCreateWithoutRestaurantInputSchema:()=>Yc,EquipmentDeleteArgsSchema:()=>jTt,EquipmentDeleteManyArgsSchema:()=>OTt,EquipmentFindFirstArgsSchema:()=>oht,EquipmentFindFirstOrThrowArgsSchema:()=>aht,EquipmentFindManyArgsSchema:()=>CK,EquipmentFindUniqueArgsSchema:()=>lht,EquipmentFindUniqueOrThrowArgsSchema:()=>rht,EquipmentGroupByArgsSchema:()=>iht,EquipmentIncludeSchema:()=>Ls,EquipmentListRelationFilterSchema:()=>z4,EquipmentMaxOrderByAggregateInputSchema:()=>Wtt,EquipmentMinOrderByAggregateInputSchema:()=>Utt,EquipmentOrderByRelationAggregateInputSchema:()=>aat,EquipmentOrderByWithAggregationInputSchema:()=>DL,EquipmentOrderByWithRelationInputSchema:()=>qp,EquipmentScalarFieldEnumSchema:()=>sg,EquipmentScalarRelationFilterSchema:()=>Gj,EquipmentScalarWhereInputSchema:()=>Ip,EquipmentScalarWhereWithAggregatesInputSchema:()=>FC,EquipmentSchema:()=>Cdt,EquipmentSelectSchema:()=>Vs,EquipmentStatusSchema:()=>Ot,EquipmentSumOrderByAggregateInputSchema:()=>Rtt,EquipmentUncheckedCreateInputSchema:()=>aY,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>hZ,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>sZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,EquipmentUncheckedUpdateInputSchema:()=>iY,EquipmentUncheckedUpdateManyInputSchema:()=>lY,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>wut,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>FD,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>wD,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>q8,EquipmentUpdateArgsSchema:()=>MTt,EquipmentUpdateInputSchema:()=>nY,EquipmentUpdateManyAndReturnArgsSchema:()=>vTt,EquipmentUpdateManyArgsSchema:()=>ZTt,EquipmentUpdateManyMutationInputSchema:()=>RN,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>fU,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>slt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>vB,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Srt,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Irt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>OU,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>qD,EquipmentUpdateWithoutRecipesInputSchema:()=>fD,EquipmentUpdateWithoutRestaurantInputSchema:()=>B8,EquipmentUpsertArgsSchema:()=>RTt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>vU,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>Art,EquipmentUpsertWithoutRecipesInputSchema:()=>brt,EquipmentWhereInputSchema:()=>ke,EquipmentWhereUniqueInputSchema:()=>Lt,FeedbackSourceSchema:()=>Rt,FeedbackStatusSchema:()=>kt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>U,FloatNullableFilterSchema:()=>Ft,FloatNullableListFilterSchema:()=>Wh,FloatNullableWithAggregatesFilterSchema:()=>jl,FloatWithAggregatesFilterSchema:()=>At,FoodCostHistoryAggregateArgsSchema:()=>OAt,FoodCostHistoryArgsSchema:()=>Hzt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>_it,FoodCostHistoryCountOrderByAggregateInputSchema:()=>Dit,FoodCostHistoryCreateArgsSchema:()=>fMt,FoodCostHistoryCreateInputSchema:()=>N$,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>BMt,FoodCostHistoryCreateManyArgsSchema:()=>NMt,FoodCostHistoryCreateManyInputSchema:()=>KP,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>fO,FoodCostHistoryCreateManyRecipeInputSchema:()=>OH,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>so,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Ub,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>Lu,FoodCostHistoryDeleteArgsSchema:()=>qMt,FoodCostHistoryDeleteManyArgsSchema:()=>EMt,FoodCostHistoryFindFirstArgsSchema:()=>ZAt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>vAt,FoodCostHistoryFindManyArgsSchema:()=>NK,FoodCostHistoryFindUniqueArgsSchema:()=>wAt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>NAt,FoodCostHistoryGroupByArgsSchema:()=>fAt,FoodCostHistoryIncludeSchema:()=>Zz,FoodCostHistoryListRelationFilterSchema:()=>W4,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>Eit,FoodCostHistoryMinOrderByAggregateInputSchema:()=>Lit,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>Mat,FoodCostHistoryOrderByWithAggregationInputSchema:()=>wV,FoodCostHistoryOrderByWithRelationInputSchema:()=>Th,FoodCostHistoryScalarFieldEnumSchema:()=>rC,FoodCostHistoryScalarWhereInputSchema:()=>Wp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>fA,FoodCostHistorySchema:()=>mzt,FoodCostHistorySelectSchema:()=>vz,FoodCostHistorySumOrderByAggregateInputSchema:()=>Vit,FoodCostHistoryUncheckedCreateInputSchema:()=>B$,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>fo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Vu,FoodCostHistoryUncheckedUpdateInputSchema:()=>F$,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>D$,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>ryt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ra,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>f7,FoodCostHistoryUpdateArgsSchema:()=>FMt,FoodCostHistoryUpdateInputSchema:()=>q$,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>_Mt,FoodCostHistoryUpdateManyArgsSchema:()=>DMt,FoodCostHistoryUpdateManyMutationInputSchema:()=>LN,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>ok,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>ia,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ek,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>O7,FoodCostHistoryUpsertArgsSchema:()=>wMt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>tk,FoodCostHistoryWhereInputSchema:()=>Wn,FoodCostHistoryWhereUniqueInputSchema:()=>We,IngredientAggregateArgsSchema:()=>Ugt,IngredientAllergenAggregateArgsSchema:()=>bIt,IngredientAllergenArgsSchema:()=>wzt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>xot,IngredientAllergenCountOrderByAggregateInputSchema:()=>kot,IngredientAllergenCreateArgsSchema:()=>LUt,IngredientAllergenCreateInputSchema:()=>GG,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>Wv,IngredientAllergenCreateManyAllergenInputSchema:()=>GV,IngredientAllergenCreateManyAndReturnArgsSchema:()=>QUt,IngredientAllergenCreateManyArgsSchema:()=>HUt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>pf,IngredientAllergenCreateManyIngredientInputSchema:()=>JH,IngredientAllergenCreateManyInputSchema:()=>TP,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>Tlt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>RI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>Fh,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>Qb,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Ic,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Zy,IngredientAllergenDeleteArgsSchema:()=>YUt,IngredientAllergenDeleteManyArgsSchema:()=>KUt,IngredientAllergenFindFirstArgsSchema:()=>mIt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>hIt,IngredientAllergenFindManyArgsSchema:()=>$w,IngredientAllergenFindUniqueArgsSchema:()=>gIt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>CIt,IngredientAllergenGroupByArgsSchema:()=>IIt,IngredientAllergenIncludeSchema:()=>jd,IngredientAllergenListRelationFilterSchema:()=>oM,IngredientAllergenMaxOrderByAggregateInputSchema:()=>jot,IngredientAllergenMinOrderByAggregateInputSchema:()=>Mot,IngredientAllergenOrderByRelationAggregateInputSchema:()=>i4,IngredientAllergenOrderByWithAggregationInputSchema:()=>rV,IngredientAllergenOrderByWithRelationInputSchema:()=>sh,IngredientAllergenScalarFieldEnumSchema:()=>Zg,IngredientAllergenScalarWhereInputSchema:()=>hl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>lA,IngredientAllergenSchema:()=>Fdt,IngredientAllergenSelectSchema:()=>Md,IngredientAllergenSumOrderByAggregateInputSchema:()=>Zot,IngredientAllergenUncheckedCreateInputSchema:()=>$G,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>Plt,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>fI,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>gc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>vy,IngredientAllergenUncheckedUpdateInputSchema:()=>KG,IngredientAllergenUncheckedUpdateManyInputSchema:()=>XG,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>Aut,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Ult,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>kyt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>$I,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>c8,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>TJ,IngredientAllergenUpdateArgsSchema:()=>GUt,IngredientAllergenUpdateInputSchema:()=>JG,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>JUt,IngredientAllergenUpdateManyArgsSchema:()=>$Ut,IngredientAllergenUpdateManyMutationInputSchema:()=>Nj,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>LW,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>yx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Wlt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>_I,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>EW,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ux,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>p8,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>SJ,IngredientAllergenUpsertArgsSchema:()=>VUt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>_W,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>cx,IngredientAllergenWhereInputSchema:()=>mn,IngredientAllergenWhereUniqueInputSchema:()=>mt,IngredientArgsSchema:()=>$r,IngredientAvgOrderByAggregateInputSchema:()=>Yat,IngredientCountOrderByAggregateInputSchema:()=>Qat,IngredientCountOutputTypeArgsSchema:()=>DQ,IngredientCountOutputTypeSelectSchema:()=>mX,IngredientCreateArgsSchema:()=>Ukt,IngredientCreateInputSchema:()=>Y1,IngredientCreateManyAndReturnArgsSchema:()=>xkt,IngredientCreateManyArgsSchema:()=>kkt,IngredientCreateManyDietaryRestrictionInputEnvelopeSchema:()=>EZ,IngredientCreateManyDietaryRestrictionInputSchema:()=>QV,IngredientCreateManyInputSchema:()=>vP,IngredientCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>rq,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>ZF,IngredientCreateNestedOneWithoutIngredientAllergenInputSchema:()=>T2,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>US,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>H2,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>$q,IngredientCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>C2,IngredientCreateNestedOneWithoutWasteRecordInputSchema:()=>Pq,IngredientCreateOrConnectWithoutDietaryRestrictionInputSchema:()=>Nh,IngredientCreateOrConnectWithoutIngredientAllergenInputSchema:()=>v6,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>i3,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>I3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>t3,IngredientCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>s6,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>oI,IngredientCreateOrConnectWithoutWasteRecordInputSchema:()=>C6,IngredientCreateWithoutDietaryRestrictionInputSchema:()=>sc,IngredientCreateWithoutIngredientAllergenInputSchema:()=>Uv,IngredientCreateWithoutInventoryItemsInputSchema:()=>Wf,IngredientCreateWithoutOrderItemsInputSchema:()=>ow,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>zf,IngredientCreateWithoutSupplierPriceHistoryInputSchema:()=>fZ,IngredientCreateWithoutVendorsInputSchema:()=>$y,IngredientCreateWithoutWasteRecordInputSchema:()=>KZ,IngredientDeleteArgsSchema:()=>jkt,IngredientDeleteManyArgsSchema:()=>Okt,IngredientFindFirstArgsSchema:()=>Pgt,IngredientFindFirstOrThrowArgsSchema:()=>Wgt,IngredientFindManyArgsSchema:()=>Kw,IngredientFindUniqueArgsSchema:()=>kgt,IngredientFindUniqueOrThrowArgsSchema:()=>xgt,IngredientGroupByArgsSchema:()=>Rgt,IngredientIncludeSchema:()=>Yd,IngredientListRelationFilterSchema:()=>eM,IngredientMaxOrderByAggregateInputSchema:()=>Gat,IngredientMinOrderByAggregateInputSchema:()=>$at,IngredientOrderByRelationAggregateInputSchema:()=>e4,IngredientOrderByWithAggregationInputSchema:()=>bV,IngredientOrderByWithRelationInputSchema:()=>Ml,IngredientScalarFieldEnumSchema:()=>_g,IngredientScalarRelationFilterSchema:()=>Xr,IngredientScalarWhereInputSchema:()=>ml,IngredientScalarWhereWithAggregatesInputSchema:()=>hA,IngredientSchema:()=>$dt,IngredientSelectSchema:()=>Gd,IngredientSumOrderByAggregateInputSchema:()=>Jat,IngredientUncheckedCreateInputSchema:()=>G1,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>uq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>fF,IngredientUncheckedCreateWithoutDietaryRestrictionInputSchema:()=>dc,IngredientUncheckedCreateWithoutIngredientAllergenInputSchema:()=>Rv,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>Uf,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>aw,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>mf,IngredientUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>wZ,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>Jy,IngredientUncheckedCreateWithoutWasteRecordInputSchema:()=>XZ,IngredientUncheckedUpdateInputSchema:()=>J1,IngredientUncheckedUpdateManyInputSchema:()=>K1,IngredientUncheckedUpdateManyWithoutDietaryRestrictionInputSchema:()=>Iut,IngredientUncheckedUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>hq,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>Nyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>DF,IngredientUncheckedUpdateWithoutDietaryRestrictionInputSchema:()=>a8,IngredientUncheckedUpdateWithoutIngredientAllergenInputSchema:()=>L_,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>UE,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>KE,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>hE,IngredientUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>o_,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>DJ,IngredientUncheckedUpdateWithoutWasteRecordInputSchema:()=>I_,IngredientUpdateArgsSchema:()=>Mkt,IngredientUpdateInputSchema:()=>$1,IngredientUpdateManyAndReturnArgsSchema:()=>vkt,IngredientUpdateManyArgsSchema:()=>Zkt,IngredientUpdateManyMutationInputSchema:()=>qj,IngredientUpdateManyWithWhereWithoutDietaryRestrictionInputSchema:()=>fW,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Bx,IngredientUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>dq,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>BF,IngredientUpdateOneRequiredWithoutIngredientAllergenNestedInputSchema:()=>W2,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>fS,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>Y2,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>Xq,IngredientUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>S2,IngredientUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Rq,IngredientUpdateToOneWithWhereWithoutIngredientAllergenInputSchema:()=>Upt,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>pct,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Oct,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>Kpt,IngredientUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>Brt,IngredientUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>tpt,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>OW,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>Nx,IngredientUpdateWithoutDietaryRestrictionInputSchema:()=>o8,IngredientUpdateWithoutIngredientAllergenInputSchema:()=>E_,IngredientUpdateWithoutInventoryItemsInputSchema:()=>WE,IngredientUpdateWithoutOrderItemsInputSchema:()=>JE,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>mE,IngredientUpdateWithoutSupplierPriceHistoryInputSchema:()=>e_,IngredientUpdateWithoutVendorsInputSchema:()=>FJ,IngredientUpdateWithoutWasteRecordInputSchema:()=>b_,IngredientUpsertArgsSchema:()=>Rkt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>vW,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>wx,IngredientUpsertWithoutIngredientAllergenInputSchema:()=>Wpt,IngredientUpsertWithoutInventoryItemsInputSchema:()=>rct,IngredientUpsertWithoutOrderItemsInputSchema:()=>vct,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>Jpt,IngredientUpsertWithoutSupplierPriceHistoryInputSchema:()=>Nrt,IngredientUpsertWithoutWasteRecordInputSchema:()=>Xrt,IngredientWhereInputSchema:()=>Ut,IngredientWhereUniqueInputSchema:()=>G,IntFieldUpdateOperationsInputSchema:()=>a,IntFilterSchema:()=>u,IntNullableFilterSchema:()=>tt,IntNullableListFilterSchema:()=>AI,IntNullableWithAggregatesFilterSchema:()=>Rn,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>LIt,InventoryArgsSchema:()=>hI,InventoryAvgOrderByAggregateInputSchema:()=>$ot,InventoryCountOrderByAggregateInputSchema:()=>Got,InventoryCountOutputTypeArgsSchema:()=>fQ,InventoryCountOutputTypeSelectSchema:()=>uX,InventoryCreateArgsSchema:()=>URt,InventoryCreateInputSchema:()=>b1,InventoryCreateManyAndReturnArgsSchema:()=>xRt,InventoryCreateManyArgsSchema:()=>kRt,InventoryCreateManyInputSchema:()=>RP,InventoryCreateNestedOneWithoutItemsInputSchema:()=>WS,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Dl,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>mF,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>cF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>n3,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>Ev,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>u3,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>r3,InventoryCreateWithoutItemsInputSchema:()=>Tf,InventoryCreateWithoutRestaurantInputSchema:()=>ES,InventoryCreateWithoutStockCountsInputSchema:()=>Bf,InventoryCreateWithoutTransactionsInputSchema:()=>Zf,InventoryDeleteArgsSchema:()=>jRt,InventoryDeleteManyArgsSchema:()=>ORt,InventoryFindFirstArgsSchema:()=>DIt,InventoryFindFirstOrThrowArgsSchema:()=>_It,InventoryFindManyArgsSchema:()=>EIt,InventoryFindUniqueArgsSchema:()=>HIt,InventoryFindUniqueOrThrowArgsSchema:()=>QIt,InventoryGroupByArgsSchema:()=>VIt,InventoryIncludeSchema:()=>wd,InventoryItemAggregateArgsSchema:()=>Lgt,InventoryItemArgsSchema:()=>cS,InventoryItemAvgOrderByAggregateInputSchema:()=>cnt,InventoryItemCountOrderByAggregateInputSchema:()=>pnt,InventoryItemCountOutputTypeArgsSchema:()=>LQ,InventoryItemCountOutputTypeSelectSchema:()=>bX,InventoryItemCreateArgsSchema:()=>Xkt,InventoryItemCreateInputSchema:()=>c9,InventoryItemCreateManyAndReturnArgsSchema:()=>oxt,InventoryItemCreateManyArgsSchema:()=>ext,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>nf,InventoryItemCreateManyIngredientInputSchema:()=>YH,InventoryItemCreateManyInputSchema:()=>wP,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>wv,InventoryItemCreateManyInventoryInputSchema:()=>KV,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>pO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>mH,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>TI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>bM,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Ln,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>_2,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>uF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>Eq,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>Eb,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>Eh,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>lb,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>d3,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>p3,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>j6,InventoryItemCreateWithoutIngredientInputSchema:()=>Py,InventoryItemCreateWithoutInventoryInputSchema:()=>Pc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>nu,InventoryItemCreateWithoutStockCountsInputSchema:()=>Vf,InventoryItemCreateWithoutTransactionsInputSchema:()=>Of,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>gv,InventoryItemDeleteArgsSchema:()=>axt,InventoryItemDeleteManyArgsSchema:()=>rxt,InventoryItemFindFirstArgsSchema:()=>_gt,InventoryItemFindFirstOrThrowArgsSchema:()=>Egt,InventoryItemFindManyArgsSchema:()=>lT,InventoryItemFindUniqueArgsSchema:()=>Hgt,InventoryItemFindUniqueOrThrowArgsSchema:()=>Qgt,InventoryItemGroupByArgsSchema:()=>Vgt,InventoryItemIncludeSchema:()=>tz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>bN,InventoryItemListRelationFilterSchema:()=>hS,InventoryItemMaxOrderByAggregateInputSchema:()=>unt,InventoryItemMinOrderByAggregateInputSchema:()=>ynt,InventoryItemOrderByRelationAggregateInputSchema:()=>lB,InventoryItemOrderByWithAggregationInputSchema:()=>CV,InventoryItemOrderByWithRelationInputSchema:()=>cp,InventoryItemScalarFieldEnumSchema:()=>Vg,InventoryItemScalarRelationFilterSchema:()=>mS,InventoryItemScalarWhereInputSchema:()=>Zn,InventoryItemScalarWhereWithAggregatesInputSchema:()=>gA,InventoryItemSchema:()=>Xdt,InventoryItemSelectSchema:()=>ez,InventoryItemSumOrderByAggregateInputSchema:()=>snt,InventoryItemUncheckedCreateInputSchema:()=>u9,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>MI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>CM,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>pi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>Wy,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Wc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>iu,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>Hf,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>ff,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>Cv,InventoryItemUncheckedUpdateInputSchema:()=>s9,InventoryItemUncheckedUpdateManyInputSchema:()=>d9,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Pyt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>HI,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>Put,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>RM,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Dut,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Hi,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>mJ,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>m8,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>G8,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>_E,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>ZE,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>B_,InventoryItemUpdateArgsSchema:()=>nxt,InventoryItemUpdateInputSchema:()=>y9,InventoryItemUpdateManyAndReturnArgsSchema:()=>lxt,InventoryItemUpdateManyArgsSchema:()=>ixt,InventoryItemUpdateManyMutationInputSchema:()=>WT,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Xk,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>XW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>$U,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>BI,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>PM,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>ki,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>L2,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>dF,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>Hq,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Pct,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>zct,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Cpt,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Kk,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>KW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>GU,InventoryItemUpdateWithoutIngredientInputSchema:()=>zJ,InventoryItemUpdateWithoutInventoryInputSchema:()=>z8,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>Y8,InventoryItemUpdateWithoutStockCountsInputSchema:()=>DE,InventoryItemUpdateWithoutTransactionsInputSchema:()=>ME,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>N_,InventoryItemUpsertArgsSchema:()=>txt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Jk,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>JW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>YU,InventoryItemUpsertWithoutStockCountsInputSchema:()=>Tct,InventoryItemUpsertWithoutTransactionsInputSchema:()=>dct,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>gpt,InventoryItemWhereInputSchema:()=>oe,InventoryItemWhereUniqueInputSchema:()=>f,InventoryMaxOrderByAggregateInputSchema:()=>Jot,InventoryMinOrderByAggregateInputSchema:()=>Kot,InventoryNullableScalarRelationFilterSchema:()=>s4,InventoryOrderByWithAggregationInputSchema:()=>yV,InventoryOrderByWithRelationInputSchema:()=>Gr,InventoryScalarFieldEnumSchema:()=>wg,InventoryScalarRelationFilterSchema:()=>TS,InventoryScalarWhereWithAggregatesInputSchema:()=>uA,InventorySchema:()=>Ldt,InventorySelectSchema:()=>Nd,InventorySumOrderByAggregateInputSchema:()=>Xot,InventoryTransactionAggregateArgsSchema:()=>$gt,InventoryTransactionArgsSchema:()=>Fzt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>znt,InventoryTransactionCountOrderByAggregateInputSchema:()=>dnt,InventoryTransactionCreateArgsSchema:()=>pxt,InventoryTransactionCreateInputSchema:()=>z9,InventoryTransactionCreateManyAndReturnArgsSchema:()=>yxt,InventoryTransactionCreateManyArgsSchema:()=>uxt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>SO,InventoryTransactionCreateManyCreatedByInputSchema:()=>xH,InventoryTransactionCreateManyInputSchema:()=>NP,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>Nv,InventoryTransactionCreateManyInventoryInputSchema:()=>XV,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>xf,InventoryTransactionCreateManyItemInputSchema:()=>tQ,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ni,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>IM,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>kS,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>Cb,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>Lh,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>$b,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Zu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>Uc,InventoryTransactionCreateWithoutItemInputSchema:()=>By,InventoryTransactionDeleteArgsSchema:()=>sxt,InventoryTransactionDeleteManyArgsSchema:()=>hxt,InventoryTransactionFindFirstArgsSchema:()=>Ygt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>Ggt,InventoryTransactionFindManyArgsSchema:()=>rT,InventoryTransactionFindUniqueArgsSchema:()=>Kgt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>Xgt,InventoryTransactionGroupByArgsSchema:()=>Jgt,InventoryTransactionIncludeSchema:()=>oz,InventoryTransactionListRelationFilterSchema:()=>bS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>mnt,InventoryTransactionMinOrderByAggregateInputSchema:()=>hnt,InventoryTransactionOrderByRelationAggregateInputSchema:()=>rB,InventoryTransactionOrderByWithAggregationInputSchema:()=>AV,InventoryTransactionOrderByWithRelationInputSchema:()=>bh,InventoryTransactionScalarFieldEnumSchema:()=>Hg,InventoryTransactionScalarWhereInputSchema:()=>vn,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>CA,InventoryTransactionSchema:()=>tzt,InventoryTransactionSelectSchema:()=>az,InventoryTransactionSumOrderByAggregateInputSchema:()=>bnt,InventoryTransactionUncheckedCreateInputSchema:()=>m9,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Si,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>AM,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>MS,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>vu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>Rc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>qy,InventoryTransactionUncheckedUpdateInputSchema:()=>b9,InventoryTransactionUncheckedUpdateManyInputSchema:()=>I9,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>eyt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ll,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Wut,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>kM,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>Myt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>FS,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>T7,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>b8,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>xJ,InventoryTransactionUpdateArgsSchema:()=>dxt,InventoryTransactionUpdateInputSchema:()=>h9,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>mxt,InventoryTransactionUpdateManyArgsSchema:()=>zxt,InventoryTransactionUpdateManyMutationInputSchema:()=>UT,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>BR,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>oU,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>Cx,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>_i,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>WM,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>NS,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>NR,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>eU,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>gx,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>S7,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>h8,InventoryTransactionUpdateWithoutItemInputSchema:()=>kJ,InventoryTransactionUpsertArgsSchema:()=>cxt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>wR,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>tU,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>Ix,InventoryTransactionWhereInputSchema:()=>gn,InventoryTransactionWhereUniqueInputSchema:()=>V,InventoryTypeSchema:()=>vt,InventoryUncheckedCreateInputSchema:()=>I1,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>tr,InventoryUncheckedCreateWithoutItemsInputSchema:()=>Pf,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>LS,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>qf,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>vf,InventoryUncheckedUpdateInputSchema:()=>C1,InventoryUncheckedUpdateManyInputSchema:()=>S1,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Rr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>PE,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>eO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>wE,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>jE,InventoryUpdateArgsSchema:()=>MRt,InventoryUpdateInputSchema:()=>g1,InventoryUpdateManyAndReturnArgsSchema:()=>vRt,InventoryUpdateManyArgsSchema:()=>ZRt,InventoryUpdateManyMutationInputSchema:()=>A1,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>OS,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>gF,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>sF,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>zr,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>lct,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>q6,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Ict,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>sct,InventoryUpdateWithoutItemsInputSchema:()=>TE,InventoryUpdateWithoutRestaurantInputSchema:()=>tO,InventoryUpdateWithoutStockCountsInputSchema:()=>fE,InventoryUpdateWithoutTransactionsInputSchema:()=>xE,InventoryUpsertArgsSchema:()=>RRt,InventoryUpsertWithoutItemsInputSchema:()=>ict,InventoryUpsertWithoutRestaurantInputSchema:()=>B6,InventoryUpsertWithoutStockCountsInputSchema:()=>bct,InventoryUpsertWithoutTransactionsInputSchema:()=>yct,InventoryWhereInputSchema:()=>wt,InventoryWhereUniqueInputSchema:()=>Ha,InventoryWithdrawalAggregateArgsSchema:()=>nIt,InventoryWithdrawalArgsSchema:()=>fzt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>got,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>Iot,InventoryWithdrawalCreateArgsSchema:()=>UUt,InventoryWithdrawalCreateInputSchema:()=>BG,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>xUt,InventoryWithdrawalCreateManyArgsSchema:()=>kUt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>bO,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>PH,InventoryWithdrawalCreateManyInputSchema:()=>AP,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>jf,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>eQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>FO,InventoryWithdrawalCreateManyRecipeInputSchema:()=>qH,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>Xn,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>xS,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>go,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>mb,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>Jb,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Zb,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Su,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>Fy,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>oy,InventoryWithdrawalDeleteArgsSchema:()=>jUt,InventoryWithdrawalDeleteManyArgsSchema:()=>OUt,InventoryWithdrawalFindFirstArgsSchema:()=>oIt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>aIt,InventoryWithdrawalFindManyArgsSchema:()=>nT,InventoryWithdrawalFindUniqueArgsSchema:()=>lIt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>rIt,InventoryWithdrawalGroupByArgsSchema:()=>iIt,InventoryWithdrawalIncludeSchema:()=>Ud,InventoryWithdrawalListRelationFilterSchema:()=>SS,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>Cot,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Aot,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>dB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>iV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>yh,InventoryWithdrawalScalarFieldEnumSchema:()=>jg,InventoryWithdrawalScalarWhereInputSchema:()=>Bn,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>nA,InventoryWithdrawalSchema:()=>Bdt,InventoryWithdrawalSelectSchema:()=>Rd,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Sot,InventoryWithdrawalUncheckedCreateInputSchema:()=>qG,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>bi,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>ZS,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>Tu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>Dy,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>ay,InventoryWithdrawalUncheckedUpdateInputSchema:()=>DG,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>_G,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>$ut,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>el,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Zyt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>DS,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>dyt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>va,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>d7,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>MJ,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>Q7,InventoryWithdrawalUpdateArgsSchema:()=>MUt,InventoryWithdrawalUpdateInputSchema:()=>FG,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>vUt,InventoryWithdrawalUpdateManyArgsSchema:()=>ZUt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>TT,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>TR,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>Tx,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ck,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Ni,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>BS,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>ya,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>SR,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>Sx,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>gk,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>s7,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>jJ,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>H7,InventoryWithdrawalUpsertArgsSchema:()=>RUt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>AR,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>Ax,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ik,InventoryWithdrawalWhereInputSchema:()=>zn,InventoryWithdrawalWhereUniqueInputSchema:()=>E,LeftoverItemAggregateArgsSchema:()=>hbt,LeftoverItemArgsSchema:()=>xzt,LeftoverItemAvgOrderByAggregateInputSchema:()=>fet,LeftoverItemCountOrderByAggregateInputSchema:()=>Oet,LeftoverItemCreateArgsSchema:()=>bWt,LeftoverItemCreateInputSchema:()=>aG,LeftoverItemCreateManyAndReturnArgsSchema:()=>CWt,LeftoverItemCreateManyArgsSchema:()=>gWt,LeftoverItemCreateManyInputSchema:()=>zP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>Ow,LeftoverItemCreateManyMenuItemInputSchema:()=>zQ,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>yO,LeftoverItemCreateManyRecordedByInputSchema:()=>IH,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>Yv,LeftoverItemCreateManyRestaurantInputSchema:()=>rH,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Vz,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>Qn,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>Hl,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>dI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>cb,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>Kh,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Is,LeftoverItemCreateWithoutRecordedByInputSchema:()=>uu,LeftoverItemCreateWithoutRestaurantInputSchema:()=>_c,LeftoverItemDeleteArgsSchema:()=>AWt,LeftoverItemDeleteManyArgsSchema:()=>WWt,LeftoverItemFindFirstArgsSchema:()=>zbt,LeftoverItemFindFirstOrThrowArgsSchema:()=>mbt,LeftoverItemFindManyArgsSchema:()=>eT,LeftoverItemFindUniqueArgsSchema:()=>Ibt,LeftoverItemFindUniqueOrThrowArgsSchema:()=>gbt,LeftoverItemGroupByArgsSchema:()=>bbt,LeftoverItemIncludeSchema:()=>sd,LeftoverItemListRelationFilterSchema:()=>IS,LeftoverItemMaxOrderByAggregateInputSchema:()=>wet,LeftoverItemMinOrderByAggregateInputSchema:()=>Net,LeftoverItemOrderByRelationAggregateInputSchema:()=>pB,LeftoverItemOrderByWithAggregationInputSchema:()=>KL,LeftoverItemOrderByWithRelationInputSchema:()=>ih,LeftoverItemScalarFieldEnumSchema:()=>Tg,LeftoverItemScalarWhereInputSchema:()=>On,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>JC,LeftoverItemSchema:()=>Mdt,LeftoverItemSelectSchema:()=>dd,LeftoverItemSumOrderByAggregateInputSchema:()=>Bet,LeftoverItemUncheckedCreateInputSchema:()=>nG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Xz,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>yi,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ir,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>gs,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>yu,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>Ec,LeftoverItemUncheckedUpdateInputSchema:()=>lG,LeftoverItemUncheckedUpdateManyInputSchema:()=>rG,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Yyt,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>bm,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Lut,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Gi,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>vut,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>cK,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>e7,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>v8,LeftoverItemUpdateArgsSchema:()=>SWt,LeftoverItemUpdateInputSchema:()=>iG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>PWt,LeftoverItemUpdateManyArgsSchema:()=>TWt,LeftoverItemUpdateManyMutationInputSchema:()=>CT,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>bj,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>iR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>UU,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>cm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>Mi,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>gr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>hj,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>nR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>WU,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>pK,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>t7,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>Z8,LeftoverItemUpsertArgsSchema:()=>IWt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>mj,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>aR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>PU,LeftoverItemWhereInputSchema:()=>pn,LeftoverItemWhereUniqueInputSchema:()=>F,MaintenanceLogAggregateArgsSchema:()=>hht,MaintenanceLogArgsSchema:()=>Pzt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>ftt,MaintenanceLogCountOrderByAggregateInputSchema:()=>Ott,MaintenanceLogCreateArgsSchema:()=>LTt,MaintenanceLogCreateInputSchema:()=>sY,MaintenanceLogCreateManyAndReturnArgsSchema:()=>QTt,MaintenanceLogCreateManyArgsSchema:()=>HTt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>pZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>_V,MaintenanceLogCreateManyInputSchema:()=>iP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>AB,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>jh,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>Kp,MaintenanceLogDeleteArgsSchema:()=>YTt,MaintenanceLogDeleteManyArgsSchema:()=>KTt,MaintenanceLogFindFirstArgsSchema:()=>zht,MaintenanceLogFindFirstOrThrowArgsSchema:()=>mht,MaintenanceLogFindManyArgsSchema:()=>AK,MaintenanceLogFindUniqueArgsSchema:()=>Iht,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>ght,MaintenanceLogGroupByArgsSchema:()=>bht,MaintenanceLogIncludeSchema:()=>Ys,MaintenanceLogListRelationFilterSchema:()=>Y$,MaintenanceLogMaxOrderByAggregateInputSchema:()=>wtt,MaintenanceLogMinOrderByAggregateInputSchema:()=>Ntt,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Stt,MaintenanceLogOrderByWithAggregationInputSchema:()=>EL,MaintenanceLogOrderByWithRelationInputSchema:()=>th,MaintenanceLogScalarFieldEnumSchema:()=>zg,MaintenanceLogScalarWhereInputSchema:()=>dp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>_C,MaintenanceLogSchema:()=>Sdt,MaintenanceLogSelectSchema:()=>Gs,MaintenanceLogSumOrderByAggregateInputSchema:()=>Btt,MaintenanceLogUncheckedCreateInputSchema:()=>dY,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>TB,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>Xp,MaintenanceLogUncheckedUpdateInputSchema:()=>mY,MaintenanceLogUncheckedUpdateManyInputSchema:()=>hY,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>yut,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>kB,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>E3,MaintenanceLogUpdateArgsSchema:()=>GTt,MaintenanceLogUpdateInputSchema:()=>zY,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>JTt,MaintenanceLogUpdateManyArgsSchema:()=>$Tt,MaintenanceLogUpdateManyMutationInputSchema:()=>kN,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>zW,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>UB,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>dW,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>_3,MaintenanceLogUpsertArgsSchema:()=>VTt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>sW,MaintenanceLogWhereInputSchema:()=>on,MaintenanceLogWhereUniqueInputSchema:()=>be,MaintenanceTypeSchema:()=>ne,MenuAggregateArgsSchema:()=>cAt,MenuArgsSchema:()=>jj,MenuAvgOrderByAggregateInputSchema:()=>Ait,MenuCategoryAggregateArgsSchema:()=>Hmt,MenuCategoryArgsSchema:()=>IQ,MenuCategoryAvgOrderByAggregateInputSchema:()=>dtt,MenuCategoryCountOrderByAggregateInputSchema:()=>stt,MenuCategoryCountOutputTypeArgsSchema:()=>gQ,MenuCategoryCountOutputTypeSelectSchema:()=>XK,MenuCategoryCreateArgsSchema:()=>pTt,MenuCategoryCreateInputSchema:()=>H0,MenuCategoryCreateManyAndReturnArgsSchema:()=>yTt,MenuCategoryCreateManyArgsSchema:()=>uTt,MenuCategoryCreateManyInputSchema:()=>eP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>Aw,MenuCategoryCreateManyMenuInputSchema:()=>uQ,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>JF,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>qz,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>pI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>k3,MenuCategoryCreateWithoutMenuInputSchema:()=>ps,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>kw,MenuCategoryDeleteArgsSchema:()=>sTt,MenuCategoryDeleteManyArgsSchema:()=>hTt,MenuCategoryFindFirstArgsSchema:()=>Lmt,MenuCategoryFindFirstOrThrowArgsSchema:()=>Vmt,MenuCategoryFindManyArgsSchema:()=>gK,MenuCategoryFindUniqueArgsSchema:()=>Ymt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>Gmt,MenuCategoryGroupByArgsSchema:()=>Qmt,MenuCategoryIncludeSchema:()=>Fs,MenuCategoryListRelationFilterSchema:()=>G4,MenuCategoryMaxOrderByAggregateInputSchema:()=>ztt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>sN,MenuCategoryMinOrderByAggregateInputSchema:()=>mtt,MenuCategoryNullableScalarRelationFilterSchema:()=>$4,MenuCategoryOrderByRelationAggregateInputSchema:()=>git,MenuCategoryOrderByWithAggregationInputSchema:()=>qL,MenuCategoryOrderByWithRelationInputSchema:()=>Pm,MenuCategoryScalarFieldEnumSchema:()=>ug,MenuCategoryScalarWhereInputSchema:()=>wp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>BC,MenuCategorySchema:()=>Idt,MenuCategorySelectSchema:()=>Ds,MenuCategorySumOrderByAggregateInputSchema:()=>htt,MenuCategoryUncheckedCreateInputSchema:()=>Q0,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>XF,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>cs,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>xw,MenuCategoryUncheckedUpdateInputSchema:()=>G0,MenuCategoryUncheckedUpdateManyInputSchema:()=>$0,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>Eyt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>nD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>XJ,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>IL,MenuCategoryUpdateArgsSchema:()=>dTt,MenuCategoryUpdateInputSchema:()=>Y0,MenuCategoryUpdateManyAndReturnArgsSchema:()=>mTt,MenuCategoryUpdateManyArgsSchema:()=>zTt,MenuCategoryUpdateManyMutationInputSchema:()=>UN,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>oj,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>oD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>am,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>tut,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>ej,MenuCategoryUpdateWithoutMenuInputSchema:()=>KJ,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>bL,MenuCategoryUpsertArgsSchema:()=>cTt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>tj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>Xct,MenuCategoryWhereInputSchema:()=>Ze,MenuCategoryWhereUniqueInputSchema:()=>$t,MenuCountOrderByAggregateInputSchema:()=>Cit,MenuCountOutputTypeArgsSchema:()=>e0,MenuCountOutputTypeSelectSchema:()=>TX,MenuCreateArgsSchema:()=>Xjt,MenuCreateInputSchema:()=>h$,MenuCreateManyAndReturnArgsSchema:()=>oMt,MenuCreateManyArgsSchema:()=>eMt,MenuCreateManyInputSchema:()=>YP,MenuCreateManyRestaurantInputEnvelopeSchema:()=>Hv,MenuCreateManyRestaurantInputSchema:()=>iH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>Ll,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>a2,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>Bz,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>$5,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>R3,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>$h,MenuCreateWithoutMenuCategoryInputSchema:()=>YM,MenuCreateWithoutMenuItemsInputSchema:()=>Uw,MenuCreateWithoutRestaurantInputSchema:()=>Bc,MenuDeleteArgsSchema:()=>aMt,MenuDeleteManyArgsSchema:()=>rMt,MenuFindFirstArgsSchema:()=>rAt,MenuFindFirstOrThrowArgsSchema:()=>pAt,MenuFindManyArgsSchema:()=>wK,MenuFindUniqueArgsSchema:()=>yAt,MenuFindUniqueOrThrowArgsSchema:()=>sAt,MenuGroupByArgsSchema:()=>uAt,MenuIncludeSchema:()=>Pz,MenuItemAggregateArgsSchema:()=>AAt,MenuItemArgsSchema:()=>Jr,MenuItemAvgOrderByAggregateInputSchema:()=>Zit,MenuItemCountOrderByAggregateInputSchema:()=>Mit,MenuItemCountOutputTypeArgsSchema:()=>o0,MenuItemCountOutputTypeSelectSchema:()=>PX,MenuItemCreateArgsSchema:()=>bMt,MenuItemCreateInputSchema:()=>U$,MenuItemCreateManyAndReturnArgsSchema:()=>CMt,MenuItemCreateManyArgsSchema:()=>gMt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>$M,MenuItemCreateManyCategoryInputSchema:()=>BV,MenuItemCreateManyInputSchema:()=>$P,MenuItemCreateManyMenuInputEnvelopeSchema:()=>Cw,MenuItemCreateManyMenuInputSchema:()=>cQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>n2,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>iq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>$F,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>yo,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>tq,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>Iq,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>c5,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>flt,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>Rlt,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>t2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>Uh,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>fh,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>z6,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>b6,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>rI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>W3,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>M3,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Wb,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>f6,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>G5,MenuItemCreateWithoutCategoryInputSchema:()=>Lp,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>pc,MenuItemCreateWithoutFeedbackInputSchema:()=>qZ,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>HZ,MenuItemCreateWithoutMenuInputSchema:()=>ls,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>Sw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>Bw,MenuItemCreateWithoutRecipesInputSchema:()=>_u,MenuItemCreateWithoutRecommendationsInputSchema:()=>jv,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>HM,MenuItemCreateallergensInputSchema:()=>io,MenuItemCreaterecipeIdsInputSchema:()=>oo,MenuItemCreaterecipeServingsAmountInputSchema:()=>ao,MenuItemCreaterecipeServingsCostInputSchema:()=>no,MenuItemDeleteArgsSchema:()=>AMt,MenuItemDeleteManyArgsSchema:()=>WMt,MenuItemFindFirstArgsSchema:()=>gAt,MenuItemFindFirstOrThrowArgsSchema:()=>CAt,MenuItemFindManyArgsSchema:()=>KI,MenuItemFindUniqueArgsSchema:()=>TAt,MenuItemFindUniqueOrThrowArgsSchema:()=>PAt,MenuItemGroupByArgsSchema:()=>SAt,MenuItemIncludeSchema:()=>kz,MenuItemListRelationFilterSchema:()=>gI,MenuItemMaxOrderByAggregateInputSchema:()=>vit,MenuItemMinOrderByAggregateInputSchema:()=>Oit,MenuItemNullableScalarRelationFilterSchema:()=>tM,MenuItemOrderByRelationAggregateInputSchema:()=>Qj,MenuItemOrderByWithAggregationInputSchema:()=>OV,MenuItemOrderByWithRelationInputSchema:()=>Zl,MenuItemRecipeAggregateArgsSchema:()=>mAt,MenuItemRecipeArgsSchema:()=>Vzt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Uit,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Wit,MenuItemRecipeCreateArgsSchema:()=>pMt,MenuItemRecipeCreateInputSchema:()=>A$,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>yMt,MenuItemRecipeCreateManyArgsSchema:()=>uMt,MenuItemRecipeCreateManyInputSchema:()=>GP,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>jw,MenuItemRecipeCreateManyMenuItemInputSchema:()=>yQ,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>BO,MenuItemRecipeCreateManyRecipeInputSchema:()=>NH,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Dz,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>bo,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>uI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>jb,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>ss,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>Ku,MenuItemRecipeDeleteArgsSchema:()=>sMt,MenuItemRecipeDeleteManyArgsSchema:()=>hMt,MenuItemRecipeFindFirstArgsSchema:()=>dAt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>zAt,MenuItemRecipeFindManyArgsSchema:()=>nN,MenuItemRecipeFindUniqueArgsSchema:()=>bAt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>IAt,MenuItemRecipeGroupByArgsSchema:()=>hAt,MenuItemRecipeIncludeSchema:()=>Uz,MenuItemRecipeListRelationFilterSchema:()=>uM,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>Rit,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>gN,MenuItemRecipeMinOrderByAggregateInputSchema:()=>kit,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>N4,MenuItemRecipeOrderByWithAggregationInputSchema:()=>vV,MenuItemRecipeOrderByWithRelationInputSchema:()=>Sh,MenuItemRecipeScalarFieldEnumSchema:()=>nC,MenuItemRecipeScalarWhereInputSchema:()=>Sl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>ZA,MenuItemRecipeSchema:()=>szt,MenuItemRecipeSelectSchema:()=>Rz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>xit,MenuItemRecipeUncheckedCreateInputSchema:()=>S$,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Gz,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>ds,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>Xu,MenuItemRecipeUncheckedUpdateInputSchema:()=>P$,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>W$,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Vyt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>dm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>yyt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ma,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>aK,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>E7,MenuItemRecipeUpdateArgsSchema:()=>dMt,MenuItemRecipeUpdateInputSchema:()=>T$,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>mMt,MenuItemRecipeUpdateManyArgsSchema:()=>zMt,MenuItemRecipeUpdateManyMutationInputSchema:()=>Vj,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>pj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>zk,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>im,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>ca,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>rj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>dk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>oK,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>_7,MenuItemRecipeUpsertArgsSchema:()=>cMt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>lj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>sk,MenuItemRecipeWhereInputSchema:()=>Pn,MenuItemRecipeWhereUniqueInputSchema:()=>It,MenuItemScalarFieldEnumSchema:()=>iC,MenuItemScalarRelationFilterSchema:()=>II,MenuItemScalarWhereInputSchema:()=>eo,MenuItemScalarWhereWithAggregatesInputSchema:()=>vA,MenuItemSchema:()=>dzt,MenuItemSelectSchema:()=>xz,MenuItemSumOrderByAggregateInputSchema:()=>fit,MenuItemUncheckedCreateInputSchema:()=>R$,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>i2,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>pq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>KF,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Oo,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Vp,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>cc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>FZ,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>QZ,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>rs,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Tw,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>qw,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Eu,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>Mv,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>QM,MenuItemUncheckedUpdateInputSchema:()=>x$,MenuItemUncheckedUpdateManyInputSchema:()=>j$,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>rut,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>p2,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>hut,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>zq,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>_yt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>aD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>lyt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Ua,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>f3,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>X3,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>l_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>s_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>JJ,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>sL,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>CL,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>v7,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>Y_,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>SD,MenuItemUpdateArgsSchema:()=>SMt,MenuItemUpdateInputSchema:()=>k$,MenuItemUpdateManyAndReturnArgsSchema:()=>PMt,MenuItemUpdateManyArgsSchema:()=>TMt,MenuItemUpdateManyMutationInputSchema:()=>uS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>oW,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>xW,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>Xx,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>XR,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>r2,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>yq,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>eD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>na,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>Aq,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>y5,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>klt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>o2,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>aq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>wlt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>_rt,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>Yrt,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>Yct,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>out,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>jpt,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>nrt,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>eW,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>kW,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Kx,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>KR,MenuItemUpdateWithoutCategoryInputSchema:()=>O3,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>K3,MenuItemUpdateWithoutFeedbackInputSchema:()=>i_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>y_,MenuItemUpdateWithoutMenuInputSchema:()=>$J,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>yL,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>gL,MenuItemUpdateWithoutRecipesInputSchema:()=>Z7,MenuItemUpdateWithoutRecommendationsInputSchema:()=>Q_,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>AD,MenuItemUpdateallergensInputSchema:()=>Ee,MenuItemUpdaterecipeIdsInputSchema:()=>Fe,MenuItemUpdaterecipeServingsAmountInputSchema:()=>De,MenuItemUpdaterecipeServingsCostInputSchema:()=>_e,MenuItemUpsertArgsSchema:()=>IMt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>tW,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>RW,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Jx,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>JR,MenuItemUpsertWithoutFeedbackInputSchema:()=>Drt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>Qrt,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>Qct,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>eut,MenuItemUpsertWithoutRecommendationsInputSchema:()=>xpt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>art,MenuItemWhereInputSchema:()=>gt,MenuItemWhereUniqueInputSchema:()=>k,MenuListRelationFilterSchema:()=>d4,MenuMaxOrderByAggregateInputSchema:()=>Sit,MenuMinOrderByAggregateInputSchema:()=>Tit,MenuOrderByRelationAggregateInputSchema:()=>oat,MenuOrderByWithAggregationInputSchema:()=>ZV,MenuOrderByWithRelationInputSchema:()=>Ep,MenuScalarFieldEnumSchema:()=>aC,MenuScalarRelationFilterSchema:()=>Hj,MenuScalarWhereInputSchema:()=>bp,MenuScalarWhereWithAggregatesInputSchema:()=>MA,MenuSchema:()=>yzt,MenuSelectSchema:()=>Wz,MenuSumOrderByAggregateInputSchema:()=>Pit,MenuUncheckedCreateInputSchema:()=>b$,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ar,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>GM,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>Rw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>qc,MenuUncheckedUpdateInputSchema:()=>g$,MenuUncheckedUpdateManyInputSchema:()=>C$,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Mut,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>PD,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>hL,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>x8,MenuUpdateArgsSchema:()=>nMt,MenuUpdateInputSchema:()=>I$,MenuUpdateManyAndReturnArgsSchema:()=>lMt,MenuUpdateManyArgsSchema:()=>iMt,MenuUpdateManyMutationInputSchema:()=>EN,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>CU,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>br,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>l2,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>om,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>lrt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>Kct,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>gU,MenuUpdateWithoutMenuCategoryInputSchema:()=>TD,MenuUpdateWithoutMenuItemsInputSchema:()=>mL,MenuUpdateWithoutRestaurantInputSchema:()=>k8,MenuUpsertArgsSchema:()=>tMt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>IU,MenuUpsertWithoutMenuCategoryInputSchema:()=>irt,MenuUpsertWithoutMenuItemsInputSchema:()=>Jct,MenuWhereInputSchema:()=>Me,MenuWhereUniqueInputSchema:()=>Qt,NestedBoolFilterSchema:()=>_A,NestedBoolWithAggregatesFilterSchema:()=>A5,NestedDateTimeFilterSchema:()=>FA,NestedDateTimeNullableFilterSchema:()=>EA,NestedDateTimeNullableWithAggregatesFilterSchema:()=>S5,NestedDateTimeWithAggregatesFilterSchema:()=>I5,NestedEnumChecklistFrequencyFilterSchema:()=>HA,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>W5,NestedEnumChecklistItemTypeFilterSchema:()=>QA,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>U5,NestedEnumChecklistStatusFilterSchema:()=>YA,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>R5,NestedEnumConstraintTypeFilterSchema:()=>XA,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>Z5,NestedEnumCountStatusFilterSchema:()=>nS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>N5,NestedEnumDayOfWeekFilterSchema:()=>KA,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>M5,NestedEnumEquipmentStatusFilterSchema:()=>LA,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>T5,NestedEnumFeedbackSourceFilterSchema:()=>GA,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>k5,NestedEnumFeedbackStatusFilterSchema:()=>$A,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>x5,NestedEnumInventoryTypeFilterSchema:()=>tS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>v5,NestedEnumMaintenanceTypeFilterSchema:()=>VA,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>P5,NestedEnumOrderStatusFilterSchema:()=>iS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>B5,NestedEnumPhotoTypeFilterSchema:()=>DA,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>g5,NestedEnumPrepStatusFilterSchema:()=>rS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>F5,NestedEnumShiftStatusFilterSchema:()=>lS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>q5,NestedEnumSkillLevelFilterSchema:()=>oS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>f5,NestedEnumTaskTypeFilterSchema:()=>JA,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>j5,NestedEnumTransactionTypeFilterSchema:()=>aS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>w5,NestedEnumUserRoleFilterSchema:()=>eS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>O5,NestedFloatFilterSchema:()=>Hr,NestedFloatNullableFilterSchema:()=>Qr,NestedFloatNullableWithAggregatesFilterSchema:()=>h5,NestedFloatWithAggregatesFilterSchema:()=>z5,NestedIntFilterSchema:()=>yt,NestedIntNullableFilterSchema:()=>cl,NestedIntNullableWithAggregatesFilterSchema:()=>C5,NestedIntWithAggregatesFilterSchema:()=>d5,NestedStringFilterSchema:()=>BA,NestedStringNullableFilterSchema:()=>qA,NestedStringNullableWithAggregatesFilterSchema:()=>b5,NestedStringWithAggregatesFilterSchema:()=>m5,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableFloatFieldUpdateOperationsInputSchema:()=>b,NullableIntFieldUpdateOperationsInputSchema:()=>m,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>KK,NutritionalInfoAggregateArgsSchema:()=>kAt,NutritionalInfoArgsSchema:()=>a0,NutritionalInfoAvgOrderByAggregateInputSchema:()=>Nit,NutritionalInfoCountOrderByAggregateInputSchema:()=>wit,NutritionalInfoCreateArgsSchema:()=>UMt,NutritionalInfoCreateInputSchema:()=>M$,NutritionalInfoCreateManyAndReturnArgsSchema:()=>xMt,NutritionalInfoCreateManyArgsSchema:()=>kMt,NutritionalInfoCreateManyInputSchema:()=>JP,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>_z,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>Mw,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>JS,NutritionalInfoDeleteArgsSchema:()=>jMt,NutritionalInfoDeleteManyArgsSchema:()=>OMt,NutritionalInfoFindFirstArgsSchema:()=>WAt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>UAt,NutritionalInfoFindManyArgsSchema:()=>RAt,NutritionalInfoFindUniqueArgsSchema:()=>jAt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>MAt,NutritionalInfoGroupByArgsSchema:()=>xAt,NutritionalInfoIncludeSchema:()=>jz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>Bit,NutritionalInfoMinOrderByAggregateInputSchema:()=>qit,NutritionalInfoNullableScalarRelationFilterSchema:()=>J4,NutritionalInfoOrderByWithAggregationInputSchema:()=>fV,NutritionalInfoOrderByWithRelationInputSchema:()=>Nm,NutritionalInfoScalarFieldEnumSchema:()=>lC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>OA,NutritionalInfoSchema:()=>zzt,NutritionalInfoSelectSchema:()=>Mz,NutritionalInfoSumOrderByAggregateInputSchema:()=>Fit,NutritionalInfoUncheckedCreateInputSchema:()=>Z$,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>$z,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>KS,NutritionalInfoUncheckedUpdateInputSchema:()=>O$,NutritionalInfoUncheckedUpdateManyInputSchema:()=>w$,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>zm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>Nw,NutritionalInfoUpdateArgsSchema:()=>MMt,NutritionalInfoUpdateInputSchema:()=>v$,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>vMt,NutritionalInfoUpdateManyArgsSchema:()=>ZMt,NutritionalInfoUpdateManyMutationInputSchema:()=>f$,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>lm,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>j3,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>ww,NutritionalInfoUpsertArgsSchema:()=>RMt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>x3,NutritionalInfoWhereInputSchema:()=>Be,NutritionalInfoWhereUniqueInputSchema:()=>Nl,NutritionalRecommendationAggregateArgsSchema:()=>TIt,NutritionalRecommendationArgsSchema:()=>Nzt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>Oot,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>vot,NutritionalRecommendationCreateArgsSchema:()=>XUt,NutritionalRecommendationCreateInputSchema:()=>t1,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>oRt,NutritionalRecommendationCreateManyArgsSchema:()=>eRt,NutritionalRecommendationCreateManyInputSchema:()=>PP,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>Zw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>sQ,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Ez,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>yI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>zs,NutritionalRecommendationDeleteArgsSchema:()=>aRt,NutritionalRecommendationDeleteManyArgsSchema:()=>rRt,NutritionalRecommendationFindFirstArgsSchema:()=>AIt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>SIt,NutritionalRecommendationFindManyArgsSchema:()=>kK,NutritionalRecommendationFindUniqueArgsSchema:()=>WIt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>UIt,NutritionalRecommendationGroupByArgsSchema:()=>PIt,NutritionalRecommendationIncludeSchema:()=>Zd,NutritionalRecommendationListRelationFilterSchema:()=>K4,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>fot,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>wot,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>jit,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>pV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>dh,NutritionalRecommendationScalarFieldEnumSchema:()=>vg,NutritionalRecommendationScalarWhereInputSchema:()=>Np,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>rA,NutritionalRecommendationSchema:()=>Ddt,NutritionalRecommendationSelectSchema:()=>vd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>Not,NutritionalRecommendationUncheckedCreateInputSchema:()=>e1,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Jz,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>ms,NutritionalRecommendationUncheckedUpdateInputSchema:()=>a1,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>n1,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Hyt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>mm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>iK,NutritionalRecommendationUpdateArgsSchema:()=>nRt,NutritionalRecommendationUpdateInputSchema:()=>o1,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>lRt,NutritionalRecommendationUpdateManyArgsSchema:()=>iRt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>fN,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>yj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>rm,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>uj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>nK,NutritionalRecommendationUpsertArgsSchema:()=>tRt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>cj,NutritionalRecommendationWhereInputSchema:()=>hn,NutritionalRecommendationWhereUniqueInputSchema:()=>Se,OrderAggregateArgsSchema:()=>ACt,OrderArgsSchema:()=>YQ,OrderAvgOrderByAggregateInputSchema:()=>wnt,OrderCountOrderByAggregateInputSchema:()=>fnt,OrderCountOutputTypeArgsSchema:()=>GQ,OrderCountOutputTypeSelectSchema:()=>gX,OrderCreateArgsSchema:()=>Lxt,OrderCreateInputSchema:()=>f9,OrderCreateManyAndReturnArgsSchema:()=>Qxt,OrderCreateManyArgsSchema:()=>Hxt,OrderCreateManyInputSchema:()=>DP,OrderCreateManyRestaurantInputEnvelopeSchema:()=>Lv,OrderCreateManyRestaurantInputSchema:()=>aH,OrderCreateManyVendorInputEnvelopeSchema:()=>nw,OrderCreateManyVendorInputSchema:()=>iQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>_l,OrderCreateNestedManyWithoutVendorInputSchema:()=>MF,OrderCreateNestedOneWithoutItemsInputSchema:()=>V2,OrderCreateOrConnectWithoutItemsInputSchema:()=>b3,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>Yh,OrderCreateOrConnectWithoutVendorInputSchema:()=>eI,OrderCreateWithoutItemsInputSchema:()=>tw,OrderCreateWithoutRestaurantInputSchema:()=>Oc,OrderCreateWithoutVendorInputSchema:()=>Yy,OrderDeleteArgsSchema:()=>Yxt,OrderDeleteManyArgsSchema:()=>Kxt,OrderFindFirstArgsSchema:()=>gCt,OrderFindFirstOrThrowArgsSchema:()=>CCt,OrderFindManyArgsSchema:()=>oN,OrderFindUniqueArgsSchema:()=>TCt,OrderFindUniqueOrThrowArgsSchema:()=>PCt,OrderGroupByArgsSchema:()=>SCt,OrderIncludeSchema:()=>uz,OrderItemAggregateArgsSchema:()=>RCt,OrderItemArgsSchema:()=>_zt,OrderItemAvgOrderByAggregateInputSchema:()=>_nt,OrderItemCountOrderByAggregateInputSchema:()=>Dnt,OrderItemCreateArgsSchema:()=>Xxt,OrderItemCreateInputSchema:()=>F9,OrderItemCreateManyAndReturnArgsSchema:()=>ojt,OrderItemCreateManyArgsSchema:()=>ejt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>lf,OrderItemCreateManyIngredientInputSchema:()=>GH,OrderItemCreateManyInputSchema:()=>_P,OrderItemCreateManyOrderInputEnvelopeSchema:()=>Xf,OrderItemCreateManyOrderInputSchema:()=>nQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>PI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>WF,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>Lb,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>tI,OrderItemCreateWithoutIngredientInputSchema:()=>Uy,OrderItemCreateWithoutOrderInputSchema:()=>Hy,OrderItemDeleteArgsSchema:()=>ajt,OrderItemDeleteManyArgsSchema:()=>rjt,OrderItemFindFirstArgsSchema:()=>WCt,OrderItemFindFirstOrThrowArgsSchema:()=>UCt,OrderItemFindManyArgsSchema:()=>aN,OrderItemFindUniqueArgsSchema:()=>xCt,OrderItemFindUniqueOrThrowArgsSchema:()=>jCt,OrderItemGroupByArgsSchema:()=>kCt,OrderItemIncludeSchema:()=>sz,OrderItemListRelationFilterSchema:()=>sM,OrderItemMaxOrderByAggregateInputSchema:()=>Ent,OrderItemMinOrderByAggregateInputSchema:()=>Lnt,OrderItemOrderByRelationAggregateInputSchema:()=>D4,OrderItemOrderByWithAggregationInputSchema:()=>UV,OrderItemOrderByWithRelationInputSchema:()=>gh,OrderItemScalarFieldEnumSchema:()=>Jg,OrderItemScalarWhereInputSchema:()=>Pl,OrderItemScalarWhereWithAggregatesInputSchema:()=>WA,OrderItemSchema:()=>izt,OrderItemSelectSchema:()=>dz,OrderItemSumOrderByAggregateInputSchema:()=>Vnt,OrderItemUncheckedCreateInputSchema:()=>D9,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>ZI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>UF,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>Ry,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>Qy,OrderItemUncheckedUpdateInputSchema:()=>E9,OrderItemUncheckedUpdateManyInputSchema:()=>L9,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Wyt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>QI,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>fyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>jF,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>bJ,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>NJ,OrderItemUpdateArgsSchema:()=>njt,OrderItemUpdateInputSchema:()=>_9,OrderItemUpdateManyAndReturnArgsSchema:()=>ljt,OrderItemUpdateManyArgsSchema:()=>ijt,OrderItemUpdateManyMutationInputSchema:()=>Lj,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>ox,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>Zx,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>qI,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>xF,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ex,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Mx,OrderItemUpdateWithoutIngredientInputSchema:()=>hJ,OrderItemUpdateWithoutOrderInputSchema:()=>wJ,OrderItemUpsertArgsSchema:()=>tjt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>tx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>jx,OrderItemWhereInputSchema:()=>An,OrderItemWhereUniqueInputSchema:()=>bt,OrderListRelationFilterSchema:()=>lM,OrderMaxOrderByAggregateInputSchema:()=>Nnt,OrderMinOrderByAggregateInputSchema:()=>Bnt,OrderOrderByRelationAggregateInputSchema:()=>h4,OrderOrderByWithAggregationInputSchema:()=>WV,OrderOrderByWithRelationInputSchema:()=>Om,OrderScalarFieldEnumSchema:()=>$g,OrderScalarRelationFilterSchema:()=>V4,OrderScalarWhereInputSchema:()=>gl,OrderScalarWhereWithAggregatesInputSchema:()=>PA,OrderSchema:()=>nzt,OrderSelectSchema:()=>yz,OrderStatusSchema:()=>Zt,OrderSumOrderByAggregateInputSchema:()=>qnt,OrderUncheckedCreateInputSchema:()=>w9,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>er,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>OF,OrderUncheckedCreateWithoutItemsInputSchema:()=>ew,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>fc,OrderUncheckedCreateWithoutVendorInputSchema:()=>Gy,OrderUncheckedUpdateInputSchema:()=>B9,OrderUncheckedUpdateManyInputSchema:()=>q9,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>xut,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>wyt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>FF,OrderUncheckedUpdateWithoutItemsInputSchema:()=>$E,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>W8,OrderUncheckedUpdateWithoutVendorInputSchema:()=>qJ,OrderUpdateArgsSchema:()=>Gxt,OrderUpdateInputSchema:()=>N9,OrderUpdateManyAndReturnArgsSchema:()=>Jxt,OrderUpdateManyArgsSchema:()=>$xt,OrderUpdateManyMutationInputSchema:()=>Ej,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zU,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>fx,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>mr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>NF,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>Q2,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Zct,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>dU,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Ox,OrderUpdateWithoutItemsInputSchema:()=>GE,OrderUpdateWithoutRestaurantInputSchema:()=>P8,OrderUpdateWithoutVendorInputSchema:()=>BJ,OrderUpsertArgsSchema:()=>Vxt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>sU,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>vx,OrderUpsertWithoutItemsInputSchema:()=>Mct,OrderWhereInputSchema:()=>Ge,OrderWhereUniqueInputSchema:()=>rt,OrganizationAggregateArgsSchema:()=>NIt,OrganizationArgsSchema:()=>kj,OrganizationAvgOrderByAggregateInputSchema:()=>Vot,OrganizationCountOrderByAggregateInputSchema:()=>Lot,OrganizationCountOutputTypeArgsSchema:()=>OQ,OrganizationCountOutputTypeSelectSchema:()=>cX,OrganizationCreateArgsSchema:()=>bRt,OrganizationCreateInputSchema:()=>y1,OrganizationCreateManyAndReturnArgsSchema:()=>CRt,OrganizationCreateManyArgsSchema:()=>gRt,OrganizationCreateManyInputSchema:()=>UP,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Bl,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Fn,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>N6,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>F6,OrganizationCreateWithoutRestaurantsInputSchema:()=>qv,OrganizationCreateWithoutUsersInputSchema:()=>oO,OrganizationDeleteArgsSchema:()=>ARt,OrganizationDeleteManyArgsSchema:()=>WRt,OrganizationFindFirstArgsSchema:()=>OIt,OrganizationFindFirstOrThrowArgsSchema:()=>fIt,OrganizationFindManyArgsSchema:()=>wIt,OrganizationFindUniqueArgsSchema:()=>qIt,OrganizationFindUniqueOrThrowArgsSchema:()=>FIt,OrganizationGroupByArgsSchema:()=>BIt,OrganizationIncludeSchema:()=>Od,OrganizationMaxOrderByAggregateInputSchema:()=>Hot,OrganizationMinOrderByAggregateInputSchema:()=>Qot,OrganizationNullableScalarRelationFilterSchema:()=>iM,OrganizationOrderByWithAggregationInputSchema:()=>uV,OrganizationOrderByWithRelationInputSchema:()=>Dp,OrganizationScalarFieldEnumSchema:()=>fg,OrganizationScalarWhereWithAggregatesInputSchema:()=>cA,OrganizationSchema:()=>Edt,OrganizationSelectSchema:()=>fd,OrganizationSumOrderByAggregateInputSchema:()=>Yot,OrganizationUncheckedCreateInputSchema:()=>s1,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>Fv,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>aO,OrganizationUncheckedUpdateInputSchema:()=>z1,OrganizationUncheckedUpdateManyInputSchema:()=>h1,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>K_,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>tE,OrganizationUpdateArgsSchema:()=>SRt,OrganizationUpdateInputSchema:()=>d1,OrganizationUpdateManyAndReturnArgsSchema:()=>PRt,OrganizationUpdateManyArgsSchema:()=>TRt,OrganizationUpdateManyMutationInputSchema:()=>m1,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>yr,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Pi,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>Opt,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>wpt,OrganizationUpdateWithoutRestaurantsInputSchema:()=>J_,OrganizationUpdateWithoutUsersInputSchema:()=>X_,OrganizationUpsertArgsSchema:()=>IRt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>vpt,OrganizationUpsertWithoutUsersInputSchema:()=>fpt,OrganizationWhereInputSchema:()=>Re,OrganizationWhereUniqueInputSchema:()=>Rl,PasswordResetAggregateArgsSchema:()=>aAt,PasswordResetArgsSchema:()=>Lzt,PasswordResetAvgOrderByAggregateInputSchema:()=>mit,PasswordResetCountOrderByAggregateInputSchema:()=>zit,PasswordResetCreateArgsSchema:()=>Ljt,PasswordResetCreateInputSchema:()=>y$,PasswordResetCreateManyAndReturnArgsSchema:()=>Qjt,PasswordResetCreateManyArgsSchema:()=>Hjt,PasswordResetCreateManyInputSchema:()=>QP,PasswordResetCreateManyUserInputEnvelopeSchema:()=>uO,PasswordResetCreateManyUserInputSchema:()=>bH,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Hn,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>pb,PasswordResetCreateWithoutUserInputSchema:()=>pu,PasswordResetDeleteArgsSchema:()=>Yjt,PasswordResetDeleteManyArgsSchema:()=>Kjt,PasswordResetFindFirstArgsSchema:()=>eAt,PasswordResetFindFirstOrThrowArgsSchema:()=>oAt,PasswordResetFindManyArgsSchema:()=>fK,PasswordResetFindUniqueArgsSchema:()=>iAt,PasswordResetFindUniqueOrThrowArgsSchema:()=>lAt,PasswordResetGroupByArgsSchema:()=>nAt,PasswordResetIncludeSchema:()=>Sz,PasswordResetListRelationFilterSchema:()=>A4,PasswordResetMaxOrderByAggregateInputSchema:()=>hit,PasswordResetMinOrderByAggregateInputSchema:()=>bit,PasswordResetOrderByRelationAggregateInputSchema:()=>sat,PasswordResetOrderByWithAggregationInputSchema:()=>MV,PasswordResetOrderByWithRelationInputSchema:()=>Ah,PasswordResetScalarFieldEnumSchema:()=>oC,PasswordResetScalarWhereInputSchema:()=>Sp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>jA,PasswordResetSchema:()=>uzt,PasswordResetSelectSchema:()=>Tz,PasswordResetSumOrderByAggregateInputSchema:()=>Iit,PasswordResetUncheckedCreateInputSchema:()=>s$,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>ui,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>cu,PasswordResetUncheckedUpdateInputSchema:()=>z$,PasswordResetUncheckedUpdateManyInputSchema:()=>m$,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>Eut,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Yi,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>X8,PasswordResetUpdateArgsSchema:()=>Gjt,PasswordResetUpdateInputSchema:()=>d$,PasswordResetUpdateManyAndReturnArgsSchema:()=>Jjt,PasswordResetUpdateManyArgsSchema:()=>$jt,PasswordResetUpdateManyMutationInputSchema:()=>_N,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>oR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>ji,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>eR,PasswordResetUpdateWithoutUserInputSchema:()=>K8,PasswordResetUpsertArgsSchema:()=>Vjt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>tR,PasswordResetWhereInputSchema:()=>Tn,PasswordResetWhereUniqueInputSchema:()=>Pe,PhotoTypeSchema:()=>pe,PrepBoardAggregateArgsSchema:()=>VCt,PrepBoardArgsSchema:()=>XQ,PrepBoardAvgOrderByAggregateInputSchema:()=>iit,PrepBoardCountOrderByAggregateInputSchema:()=>nit,PrepBoardCountOutputTypeArgsSchema:()=>t0,PrepBoardCountOutputTypeSelectSchema:()=>SX,PrepBoardCreateArgsSchema:()=>Ujt,PrepBoardCreateInputSchema:()=>e$,PrepBoardCreateManyAndReturnArgsSchema:()=>xjt,PrepBoardCreateManyArgsSchema:()=>kjt,PrepBoardCreateManyInputSchema:()=>VP,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>mo,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>EF,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>C3,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>kb,PrepBoardCreateWithoutPrepItemsInputSchema:()=>uw,PrepBoardCreateWithoutRecipesInputSchema:()=>Yu,PrepBoardDeleteArgsSchema:()=>jjt,PrepBoardDeleteManyArgsSchema:()=>Ojt,PrepBoardFindFirstArgsSchema:()=>ECt,PrepBoardFindFirstOrThrowArgsSchema:()=>LCt,PrepBoardFindManyArgsSchema:()=>OK,PrepBoardFindUniqueArgsSchema:()=>QCt,PrepBoardFindUniqueOrThrowArgsSchema:()=>YCt,PrepBoardGroupByArgsSchema:()=>HCt,PrepBoardIncludeSchema:()=>Iz,PrepBoardListRelationFilterSchema:()=>R4,PrepBoardMaxOrderByAggregateInputSchema:()=>lit,PrepBoardMinOrderByAggregateInputSchema:()=>rit,PrepBoardOrderByRelationAggregateInputSchema:()=>vat,PrepBoardOrderByWithAggregationInputSchema:()=>xV,PrepBoardOrderByWithRelationInputSchema:()=>wm,PrepBoardScalarFieldEnumSchema:()=>tC,PrepBoardScalarRelationFilterSchema:()=>Y4,PrepBoardScalarWhereInputSchema:()=>Rp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>kA,PrepBoardSchema:()=>pzt,PrepBoardSelectSchema:()=>gz,PrepBoardSumOrderByAggregateInputSchema:()=>pit,PrepBoardUncheckedCreateInputSchema:()=>o$,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>No,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>yw,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>Gu,PrepBoardUncheckedUpdateInputSchema:()=>n$,PrepBoardUncheckedUpdateManyInputSchema:()=>i$,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>cyt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>xa,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>oL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>q7,PrepBoardUpdateArgsSchema:()=>Mjt,PrepBoardUpdateInputSchema:()=>a$,PrepBoardUpdateManyAndReturnArgsSchema:()=>vjt,PrepBoardUpdateManyArgsSchema:()=>Zjt,PrepBoardUpdateManyMutationInputSchema:()=>DN,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>pk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>ra,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>HF,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Bct,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>rk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>eL,PrepBoardUpdateWithoutRecipesInputSchema:()=>B7,PrepBoardUpsertArgsSchema:()=>Rjt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>lk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>Nct,PrepBoardWhereInputSchema:()=>Je,PrepBoardWhereUniqueInputSchema:()=>te,PrepHistoryAggregateArgsSchema:()=>FAt,PrepHistoryArgsSchema:()=>Qzt,PrepHistoryAvgOrderByAggregateInputSchema:()=>Qit,PrepHistoryCountOrderByAggregateInputSchema:()=>Hit,PrepHistoryCreateArgsSchema:()=>LMt,PrepHistoryCreateInputSchema:()=>_$,PrepHistoryCreateManyAndReturnArgsSchema:()=>QMt,PrepHistoryCreateManyArgsSchema:()=>HMt,PrepHistoryCreateManyInputSchema:()=>XP,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>wO,PrepHistoryCreateManyRecipeInputSchema:()=>fH,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>zo,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Rb,PrepHistoryCreateWithoutRecipeInputSchema:()=>Hu,PrepHistoryDeleteArgsSchema:()=>YMt,PrepHistoryDeleteManyArgsSchema:()=>KMt,PrepHistoryFindFirstArgsSchema:()=>BAt,PrepHistoryFindFirstOrThrowArgsSchema:()=>qAt,PrepHistoryFindManyArgsSchema:()=>BK,PrepHistoryFindUniqueArgsSchema:()=>_At,PrepHistoryFindUniqueOrThrowArgsSchema:()=>EAt,PrepHistoryGroupByArgsSchema:()=>DAt,PrepHistoryIncludeSchema:()=>Oz,PrepHistoryListRelationFilterSchema:()=>U4,PrepHistoryMaxOrderByAggregateInputSchema:()=>Yit,PrepHistoryMinOrderByAggregateInputSchema:()=>Git,PrepHistoryOrderByRelationAggregateInputSchema:()=>Zat,PrepHistoryOrderByWithAggregationInputSchema:()=>NV,PrepHistoryOrderByWithRelationInputSchema:()=>Ph,PrepHistoryScalarFieldEnumSchema:()=>pC,PrepHistoryScalarWhereInputSchema:()=>Up,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>wA,PrepHistorySchema:()=>hzt,PrepHistorySelectSchema:()=>fz,PrepHistorySumOrderByAggregateInputSchema:()=>$it,PrepHistoryUncheckedCreateInputSchema:()=>E$,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Qu,PrepHistoryUncheckedUpdateInputSchema:()=>V$,PrepHistoryUncheckedUpdateManyInputSchema:()=>H$,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>pyt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>ka,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>N7,PrepHistoryUpdateArgsSchema:()=>GMt,PrepHistoryUpdateInputSchema:()=>L$,PrepHistoryUpdateManyAndReturnArgsSchema:()=>JMt,PrepHistoryUpdateManyArgsSchema:()=>$Mt,PrepHistoryUpdateManyMutationInputSchema:()=>VN,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>ik,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>la,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>nk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>w7,PrepHistoryUpsertArgsSchema:()=>VMt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ak,PrepHistoryWhereInputSchema:()=>Un,PrepHistoryWhereUniqueInputSchema:()=>Ue,PrepItemAggregateArgsSchema:()=>JCt,PrepItemArgsSchema:()=>Ezt,PrepItemAvgOrderByAggregateInputSchema:()=>uit,PrepItemCountOrderByAggregateInputSchema:()=>cit,PrepItemCreateArgsSchema:()=>fjt,PrepItemCreateInputSchema:()=>l$,PrepItemCreateManyAndReturnArgsSchema:()=>Bjt,PrepItemCreateManyArgsSchema:()=>Njt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>rO,PrepItemCreateManyAssignedToInputSchema:()=>zH,PrepItemCreateManyInputSchema:()=>HP,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>cw,PrepItemCreateManyPrepBoardInputSchema:()=>pQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>NO,PrepItemCreateManyRecipeInputSchema:()=>wH,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>En,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>o5,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>ib,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>lI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>xb,PrepItemCreateWithoutAssignedToInputSchema:()=>ou,PrepItemCreateWithoutPrepBoardInputSchema:()=>ns,PrepItemCreateWithoutRecipeInputSchema:()=>$u,PrepItemDeleteArgsSchema:()=>qjt,PrepItemDeleteManyArgsSchema:()=>Ejt,PrepItemFindFirstArgsSchema:()=>GCt,PrepItemFindFirstOrThrowArgsSchema:()=>$Ct,PrepItemFindManyArgsSchema:()=>pT,PrepItemFindUniqueArgsSchema:()=>XCt,PrepItemFindUniqueOrThrowArgsSchema:()=>tAt,PrepItemGroupByArgsSchema:()=>KCt,PrepItemIncludeSchema:()=>Cz,PrepItemListRelationFilterSchema:()=>AS,PrepItemMaxOrderByAggregateInputSchema:()=>yit,PrepItemMinOrderByAggregateInputSchema:()=>sit,PrepItemOrderByRelationAggregateInputSchema:()=>sB,PrepItemOrderByWithAggregationInputSchema:()=>jV,PrepItemOrderByWithRelationInputSchema:()=>Ch,PrepItemScalarFieldEnumSchema:()=>eC,PrepItemScalarWhereInputSchema:()=>Nn,PrepItemScalarWhereWithAggregatesInputSchema:()=>xA,PrepItemSchema:()=>czt,PrepItemSelectSchema:()=>Az,PrepItemSumOrderByAggregateInputSchema:()=>dit,PrepItemUncheckedCreateInputSchema:()=>r$,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>ri,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>n5,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>au,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>is,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>Ju,PrepItemUncheckedUpdateInputSchema:()=>c$,PrepItemUncheckedUpdateManyInputSchema:()=>u$,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Fut,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Vi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>Dyt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>p5,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>uyt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>ja,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>Q8,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>GJ,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>D7,PrepItemUpdateArgsSchema:()=>Fjt,PrepItemUpdateInputSchema:()=>p$,PrepItemUpdateManyAndReturnArgsSchema:()=>_jt,PrepItemUpdateManyArgsSchema:()=>Djt,PrepItemUpdateManyMutationInputSchema:()=>RT,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>QU,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>$x,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>yk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Ri,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>l5,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>pa,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>HU,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>Gx,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>uk,PrepItemUpdateWithoutAssignedToInputSchema:()=>H8,PrepItemUpdateWithoutPrepBoardInputSchema:()=>YJ,PrepItemUpdateWithoutRecipeInputSchema:()=>F7,PrepItemUpsertArgsSchema:()=>wjt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>VU,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>Yx,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ck,PrepItemWhereInputSchema:()=>Sn,PrepItemWhereUniqueInputSchema:()=>H,PrepStatusSchema:()=>X,ProductionPlanAggregateArgsSchema:()=>kbt,ProductionPlanArgsSchema:()=>jQ,ProductionPlanAvgOrderByAggregateInputSchema:()=>Vet,ProductionPlanCountOrderByAggregateInputSchema:()=>Let,ProductionPlanCountOutputTypeArgsSchema:()=>MQ,ProductionPlanCountOutputTypeSelectSchema:()=>rX,ProductionPlanCreateArgsSchema:()=>fWt,ProductionPlanCreateInputSchema:()=>dG,ProductionPlanCreateManyAndReturnArgsSchema:()=>BWt,ProductionPlanCreateManyArgsSchema:()=>NWt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>dO,ProductionPlanCreateManyCreatedByInputSchema:()=>CH,ProductionPlanCreateManyInputSchema:()=>hP,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>$v,ProductionPlanCreateManyRestaurantInputSchema:()=>cH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>Gn,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>Yl,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>Nq,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>yb,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>P6,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>tb,ProductionPlanCreateWithoutCreatedByInputSchema:()=>zu,ProductionPlanCreateWithoutItemsInputSchema:()=>rv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>Hc,ProductionPlanDeleteArgsSchema:()=>qWt,ProductionPlanDeleteManyArgsSchema:()=>EWt,ProductionPlanFindFirstArgsSchema:()=>Ubt,ProductionPlanFindFirstOrThrowArgsSchema:()=>Rbt,ProductionPlanFindManyArgsSchema:()=>Gw,ProductionPlanFindUniqueArgsSchema:()=>jbt,ProductionPlanFindUniqueOrThrowArgsSchema:()=>Mbt,ProductionPlanGroupByArgsSchema:()=>xbt,ProductionPlanIncludeSchema:()=>hd,ProductionPlanItemAggregateArgsSchema:()=>Obt,ProductionPlanItemArgsSchema:()=>Mzt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>$et,ProductionPlanItemCountOrderByAggregateInputSchema:()=>Get,ProductionPlanItemCreateArgsSchema:()=>LWt,ProductionPlanItemCreateInputSchema:()=>IG,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>QWt,ProductionPlanItemCreateManyArgsSchema:()=>HWt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>zO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>AH,ProductionPlanItemCreateManyInputSchema:()=>bP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>lv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>YV,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>qO,ProductionPlanItemCreateManyRecipeInputSchema:()=>BH,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>$n,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>Mq,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>Io,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>sb,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>qh,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>Mb,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>hu,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>hc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>ty,ProductionPlanItemDeleteArgsSchema:()=>YWt,ProductionPlanItemDeleteManyArgsSchema:()=>KWt,ProductionPlanItemFindFirstArgsSchema:()=>Zbt,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>vbt,ProductionPlanItemFindManyArgsSchema:()=>aT,ProductionPlanItemFindUniqueArgsSchema:()=>wbt,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>Nbt,ProductionPlanItemGroupByArgsSchema:()=>fbt,ProductionPlanItemIncludeSchema:()=>Id,ProductionPlanItemListRelationFilterSchema:()=>zS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>Jet,ProductionPlanItemMinOrderByAggregateInputSchema:()=>Ket,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>oB,ProductionPlanItemOrderByWithAggregationInputSchema:()=>eV,ProductionPlanItemOrderByWithRelationInputSchema:()=>rh,ProductionPlanItemScalarFieldEnumSchema:()=>Ug,ProductionPlanItemScalarWhereInputSchema:()=>Mn,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>tA,ProductionPlanItemSchema:()=>Odt,ProductionPlanItemSelectSchema:()=>gd,ProductionPlanItemSumOrderByAggregateInputSchema:()=>Xet,ProductionPlanItemUncheckedCreateInputSchema:()=>gG,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>zi,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>Zq,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Fo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>bu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>bc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>ey,ProductionPlanItemUncheckedUpdateInputSchema:()=>AG,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>SG,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Qut,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Ki,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Cut,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>wq,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>syt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Za,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>r7,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>r8,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>V7,ProductionPlanItemUpdateArgsSchema:()=>GWt,ProductionPlanItemUpdateInputSchema:()=>CG,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>JWt,ProductionPlanItemUpdateManyArgsSchema:()=>$Wt,ProductionPlanItemUpdateManyMutationInputSchema:()=>ST,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>zR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>DW,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>bk,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Oi,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>fq,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>ua,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>dR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>FW,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>hk,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>l7,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>l8,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>L7,ProductionPlanItemUpsertArgsSchema:()=>VWt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>sR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>qW,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>mk,ProductionPlanItemWhereInputSchema:()=>un,ProductionPlanItemWhereUniqueInputSchema:()=>_,ProductionPlanListRelationFilterSchema:()=>pM,ProductionPlanMaxOrderByAggregateInputSchema:()=>Het,ProductionPlanMinOrderByAggregateInputSchema:()=>Qet,ProductionPlanOrderByRelationAggregateInputSchema:()=>I4,ProductionPlanOrderByWithAggregationInputSchema:()=>tV,ProductionPlanOrderByWithRelationInputSchema:()=>km,ProductionPlanScalarFieldEnumSchema:()=>Wg,ProductionPlanScalarRelationFilterSchema:()=>o4,ProductionPlanScalarWhereInputSchema:()=>Al,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>XC,ProductionPlanSchema:()=>vdt,ProductionPlanSelectSchema:()=>bd,ProductionPlanSumOrderByAggregateInputSchema:()=>Yet,ProductionPlanUncheckedCreateInputSchema:()=>zG,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>di,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>mu,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>pv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,ProductionPlanUncheckedUpdateInputSchema:()=>hG,ProductionPlanUncheckedUpdateManyInputSchema:()=>bG,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Hut,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>Ji,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>fut,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>i7,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>U_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>N8,ProductionPlanUpdateArgsSchema:()=>FWt,ProductionPlanUpdateInputSchema:()=>mG,ProductionPlanUpdateManyAndReturnArgsSchema:()=>_Wt,ProductionPlanUpdateManyArgsSchema:()=>DWt,ProductionPlanUpdateManyMutationInputSchema:()=>wj,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>yR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>ZU,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>vi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>Fq,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>ppt,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>uR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>MU,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>n7,ProductionPlanUpdateWithoutItemsInputSchema:()=>W_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>w8,ProductionPlanUpsertArgsSchema:()=>wWt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>cR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>jU,ProductionPlanUpsertWithoutItemsInputSchema:()=>rpt,ProductionPlanWhereInputSchema:()=>He,ProductionPlanWhereUniqueInputSchema:()=>nt,ProductionStatusSchema:()=>cdt,QualityChecklistAggregateArgsSchema:()=>Sht,QualityChecklistArgsSchema:()=>Rj,QualityChecklistAvgOrderByAggregateInputSchema:()=>_tt,QualityChecklistCountOrderByAggregateInputSchema:()=>Dtt,QualityChecklistCountOutputTypeArgsSchema:()=>SQ,QualityChecklistCountOutputTypeSelectSchema:()=>oX,QualityChecklistCreateArgsSchema:()=>XTt,QualityChecklistCreateInputSchema:()=>bY,QualityChecklistCreateManyAndReturnArgsSchema:()=>oPt,QualityChecklistCreateManyArgsSchema:()=>ePt,QualityChecklistCreateManyInputSchema:()=>lP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>Kv,QualityChecklistCreateManyRestaurantInputSchema:()=>yH,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>$l,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>VB,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>c2,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>r6,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>l6,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>ob,QualityChecklistCreateWithoutCompletionsInputSchema:()=>PZ,QualityChecklistCreateWithoutItemsInputSchema:()=>AZ,QualityChecklistCreateWithoutRestaurantInputSchema:()=>$c,QualityChecklistDeleteArgsSchema:()=>aPt,QualityChecklistDeleteManyArgsSchema:()=>rPt,QualityChecklistFindFirstArgsSchema:()=>Cht,QualityChecklistFindFirstOrThrowArgsSchema:()=>Aht,QualityChecklistFindManyArgsSchema:()=>SK,QualityChecklistFindUniqueArgsSchema:()=>Pht,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Wht,QualityChecklistGroupByArgsSchema:()=>Tht,QualityChecklistIncludeSchema:()=>$s,QualityChecklistListRelationFilterSchema:()=>m4,QualityChecklistMaxOrderByAggregateInputSchema:()=>Ett,QualityChecklistMinOrderByAggregateInputSchema:()=>Ltt,QualityChecklistOrderByRelationAggregateInputSchema:()=>nat,QualityChecklistOrderByWithAggregationInputSchema:()=>LL,QualityChecklistOrderByWithRelationInputSchema:()=>Fp,QualityChecklistScalarFieldEnumSchema:()=>mg,QualityChecklistScalarRelationFilterSchema:()=>Jj,QualityChecklistScalarWhereInputSchema:()=>gp,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>EC,QualityChecklistSchema:()=>Tdt,QualityChecklistSelectSchema:()=>Js,QualityChecklistSumOrderByAggregateInputSchema:()=>Vtt,QualityChecklistUncheckedCreateInputSchema:()=>IY,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>WZ,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>SZ,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,QualityChecklistUncheckedUpdateInputSchema:()=>CY,QualityChecklistUncheckedUpdateManyInputSchema:()=>AY,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Nut,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>HD,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>LD,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>D8,QualityChecklistUpdateArgsSchema:()=>nPt,QualityChecklistUpdateInputSchema:()=>gY,QualityChecklistUpdateManyAndReturnArgsSchema:()=>lPt,QualityChecklistUpdateManyArgsSchema:()=>iPt,QualityChecklistUpdateManyMutationInputSchema:()=>xN,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>BU,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>GB,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>s2,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>krt,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Urt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>NU,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>VD,QualityChecklistUpdateWithoutItemsInputSchema:()=>ED,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>F8,QualityChecklistUpsertArgsSchema:()=>tPt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>wU,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>Rrt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Wrt,QualityChecklistWhereInputSchema:()=>xe,QualityChecklistWhereUniqueInputSchema:()=>Vt,QueryModeSchema:()=>Pj,RecipeAggregateArgsSchema:()=>Cgt,RecipeArgsSchema:()=>Gt,RecipeAvgOrderByAggregateInputSchema:()=>Dat,RecipeCountOrderByAggregateInputSchema:()=>Fat,RecipeCountOutputTypeArgsSchema:()=>FQ,RecipeCountOutputTypeSelectSchema:()=>zX,RecipeCreateArgsSchema:()=>bkt,RecipeCreateInputSchema:()=>E1,RecipeCreateManyAndReturnArgsSchema:()=>Ckt,RecipeCreateManyArgsSchema:()=>gkt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>UO,RecipeCreateManyCookBookInputSchema:()=>MH,RecipeCreateManyInputSchema:()=>ZP,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>Vv,RecipeCreateManyRestaurantInputSchema:()=>nH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>f2,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>lq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>Fz,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>e5,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>El,RecipeCreateNestedManyWithoutTagsInputSchema:()=>dlt,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>Xit,RecipeCreateNestedOneWithoutEquipmentInputSchema:()=>xB,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>Nlt,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>Gq,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>eF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>clt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>u5,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Jit,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>alt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>qlt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>LF,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>Bq,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>Mlt,RecipeCreateNestedOneWithoutStorageInputSchema:()=>elt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>ilt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>kT,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>Lq,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>rlt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Sb,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>_5,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>wh,RecipeCreateOrConnectWithoutEquipmentInputSchema:()=>e6,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>Z3,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>X6,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>o3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>Q5,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>U3,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>cI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>D5,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>L5,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>iI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>v3,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>A3,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>W6,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>z3,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Gh,RecipeCreateOrConnectWithoutStorageInputSchema:()=>E5,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Bh,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>V5,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>J5,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>M6,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>H5,RecipeCreateWithoutCookBookInputSchema:()=>wu,RecipeCreateWithoutCriticalPointsInputSchema:()=>ZM,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>uc,RecipeCreateWithoutEquipmentInputSchema:()=>cZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>Fw,RecipeCreateWithoutIngredientsInputSchema:()=>sf,RecipeCreateWithoutInstructionsInputSchema:()=>If,RecipeCreateWithoutLaborCostsInputSchema:()=>_M,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>Pw,RecipeCreateWithoutMenuItemsInputSchema:()=>us,RecipeCreateWithoutNutritionalInfoInputSchema:()=>jM,RecipeCreateWithoutPhotosInputSchema:()=>wM,RecipeCreateWithoutPrepBoardsInputSchema:()=>os,RecipeCreateWithoutPrepHistoryInputSchema:()=>_w,RecipeCreateWithoutPrepItemsInputSchema:()=>sw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>cv,RecipeCreateWithoutRecipeStatsInputSchema:()=>Qf,RecipeCreateWithoutRestaurantInputSchema:()=>wc,RecipeCreateWithoutStorageInputSchema:()=>OM,RecipeCreateWithoutTagsInputSchema:()=>zc,RecipeCreateWithoutTemperaturesInputSchema:()=>BM,RecipeCreateWithoutVersionsInputSchema:()=>JM,RecipeCreateWithoutWithdrawalsInputSchema:()=>Av,RecipeCreateWithoutYieldsInputSchema:()=>FM,RecipeCreateimageUrlsInputSchema:()=>Ct,RecipeCriticalPointAggregateArgsSchema:()=>amt,RecipeCriticalPointArgsSchema:()=>bzt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>MX,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>jX,RecipeCriticalPointCreateArgsSchema:()=>XAt,RecipeCriticalPointCreateInputSchema:()=>u0,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>oSt,RecipeCriticalPointCreateManyArgsSchema:()=>eSt,RecipeCriticalPointCreateManyInputSchema:()=>YT,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>QO,RecipeCriticalPointCreateManyRecipeInputSchema:()=>VH,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>Fb,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Iy,RecipeCriticalPointDeleteArgsSchema:()=>aSt,RecipeCriticalPointDeleteManyArgsSchema:()=>rSt,RecipeCriticalPointFindFirstArgsSchema:()=>emt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>omt,RecipeCriticalPointFindManyArgsSchema:()=>zK,RecipeCriticalPointFindUniqueArgsSchema:()=>imt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>lmt,RecipeCriticalPointGroupByArgsSchema:()=>nmt,RecipeCriticalPointIncludeSchema:()=>Us,RecipeCriticalPointListRelationFilterSchema:()=>v4,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>ZX,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>vX,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>Bat,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>ZL,RecipeCriticalPointOrderByWithRelationInputSchema:()=>Qm,RecipeCriticalPointScalarFieldEnumSchema:()=>ag,RecipeCriticalPointScalarWhereInputSchema:()=>Zp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>MC,RecipeCriticalPointSchema:()=>ydt,RecipeCriticalPointSelectSchema:()=>Rs,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>OX,RecipeCriticalPointUncheckedCreateInputSchema:()=>y0,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>gy,RecipeCriticalPointUncheckedUpdateInputSchema:()=>d0,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>z0,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ayt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_a,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>cJ,RecipeCriticalPointUpdateArgsSchema:()=>nSt,RecipeCriticalPointUpdateInputSchema:()=>s0,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>lSt,RecipeCriticalPointUpdateManyArgsSchema:()=>iSt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>AN,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>Lk,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Ca,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ek,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>pJ,RecipeCriticalPointUpsertArgsSchema:()=>tSt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>_k,RecipeCriticalPointWhereInputSchema:()=>Ga,RecipeCriticalPointWhereUniqueInputSchema:()=>se,RecipeDeleteArgsSchema:()=>Akt,RecipeDeleteManyArgsSchema:()=>Wkt,RecipeEquipmentAggregateArgsSchema:()=>uht,RecipeEquipmentArgsSchema:()=>Tzt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>jtt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>xtt,RecipeEquipmentCreateArgsSchema:()=>fTt,RecipeEquipmentCreateInputSchema:()=>rY,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>BTt,RecipeEquipmentCreateManyArgsSchema:()=>NTt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>rZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>DV,RecipeEquipmentCreateManyInputSchema:()=>nP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>_O,RecipeEquipmentCreateManyRecipeInputSchema:()=>DH,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>Sf,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>XH,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>CB,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>So,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>aF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>xh,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>fb,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>Gb,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>$p,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>py,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>wy,RecipeEquipmentDeleteArgsSchema:()=>qTt,RecipeEquipmentDeleteManyArgsSchema:()=>ETt,RecipeEquipmentFindFirstArgsSchema:()=>pht,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>cht,RecipeEquipmentFindManyArgsSchema:()=>XS,RecipeEquipmentFindUniqueArgsSchema:()=>sht,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>dht,RecipeEquipmentGroupByArgsSchema:()=>yht,RecipeEquipmentIncludeSchema:()=>Hs,RecipeEquipmentListRelationFilterSchema:()=>sS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>Mtt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>Ztt,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>GN,RecipeEquipmentOrderByWithAggregationInputSchema:()=>_L,RecipeEquipmentOrderByWithRelationInputSchema:()=>Xm,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>zN,RecipeEquipmentScalarFieldEnumSchema:()=>dg,RecipeEquipmentScalarWhereInputSchema:()=>jn,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>DC,RecipeEquipmentSchema:()=>Adt,RecipeEquipmentSelectSchema:()=>Qs,RecipeEquipmentSumOrderByAggregateInputSchema:()=>vtt,RecipeEquipmentUncheckedCreateInputSchema:()=>pY,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>SB,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>nF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>Jp,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>cy,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>Ny,RecipeEquipmentUncheckedUpdateInputSchema:()=>uY,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>yY,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>uut,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>RB,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>hyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>jyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>pF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wa,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>D3,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>X7,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>RJ,RecipeEquipmentUpdateArgsSchema:()=>FTt,RecipeEquipmentUpdateInputSchema:()=>cY,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>_Tt,RecipeEquipmentUpdateManyArgsSchema:()=>DTt,RecipeEquipmentUpdateManyMutationInputSchema:()=>IT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>yW,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>xk,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>bx,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>WB,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>rF,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>za,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>uW,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>kk,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>hx,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>F3,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>K7,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>UJ,RecipeEquipmentUpsertArgsSchema:()=>wTt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>cW,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Rk,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>mx,RecipeEquipmentWhereInputSchema:()=>en,RecipeEquipmentWhereUniqueInputSchema:()=>B,RecipeFindFirstArgsSchema:()=>Igt,RecipeFindFirstOrThrowArgsSchema:()=>ggt,RecipeFindManyArgsSchema:()=>lp,RecipeFindUniqueArgsSchema:()=>Sgt,RecipeFindUniqueOrThrowArgsSchema:()=>Tgt,RecipeGroupByArgsSchema:()=>Agt,RecipeIncludeSchema:()=>Hd,RecipeIngredientAggregateArgsSchema:()=>Zgt,RecipeIngredientArgsSchema:()=>qzt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>Xat,RecipeIngredientCountOrderByAggregateInputSchema:()=>Kat,RecipeIngredientCreateArgsSchema:()=>fkt,RecipeIngredientCreateInputSchema:()=>X1,RecipeIngredientCreateManyAndReturnArgsSchema:()=>Bkt,RecipeIngredientCreateManyArgsSchema:()=>Nkt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>af,RecipeIngredientCreateManyIngredientInputSchema:()=>QH,RecipeIngredientCreateManyInputSchema:()=>OP,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>vO,RecipeIngredientCreateManyRecipeInputSchema:()=>ZH,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>XM,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>qV,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>SI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>co,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>xT,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>_b,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Tb,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>Rh,RecipeIngredientCreateWithoutIngredientInputSchema:()=>Sy,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Bu,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>Hp,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>ap,RecipeIngredientDeleteArgsSchema:()=>qkt,RecipeIngredientDeleteManyArgsSchema:()=>Ekt,RecipeIngredientFindFirstArgsSchema:()=>jgt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>Mgt,RecipeIngredientFindManyArgsSchema:()=>iT,RecipeIngredientFindUniqueArgsSchema:()=>Ogt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>fgt,RecipeIngredientGroupByArgsSchema:()=>vgt,RecipeIngredientIncludeSchema:()=>$d,RecipeIngredientListRelationFilterSchema:()=>yS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>tnt,RecipeIngredientMinOrderByAggregateInputSchema:()=>ent,RecipeIngredientOrderByRelationAggregateInputSchema:()=>QN,RecipeIngredientOrderByWithAggregationInputSchema:()=>IV,RecipeIngredientOrderByWithRelationInputSchema:()=>hh,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>mN,RecipeIngredientScalarFieldEnumSchema:()=>Eg,RecipeIngredientScalarWhereInputSchema:()=>xn,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>bA,RecipeIngredientSchema:()=>Jdt,RecipeIngredientSelectSchema:()=>Jd,RecipeIngredientSumOrderByAggregateInputSchema:()=>ont,RecipeIngredientUncheckedCreateInputSchema:()=>t9,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>jI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Zo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>vT,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Ty,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>qu,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>Qp,RecipeIngredientUncheckedUpdateInputSchema:()=>o9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>a9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>Tyt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>VI,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>nyt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Pa,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>put,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>FT,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>dJ,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>x7,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>N3,RecipeIngredientUpdateArgsSchema:()=>Fkt,RecipeIngredientUpdateInputSchema:()=>e9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>_kt,RecipeIngredientUpdateManyArgsSchema:()=>Dkt,RecipeIngredientUpdateManyMutationInputSchema:()=>PT,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>$k,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>QR,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>iW,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>NI,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>oa,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>wT,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Gk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>HR,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>nW,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>sJ,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>k7,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>w3,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>_r,RecipeIngredientUpsertArgsSchema:()=>wkt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Yk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>VR,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>aW,RecipeIngredientWhereInputSchema:()=>In,RecipeIngredientWhereUniqueInputSchema:()=>L,RecipeInstructionAggregateArgsSchema:()=>Bgt,RecipeInstructionArgsSchema:()=>_Q,RecipeInstructionAvgOrderByAggregateInputSchema:()=>nnt,RecipeInstructionCountOrderByAggregateInputSchema:()=>ant,RecipeInstructionCountOutputTypeArgsSchema:()=>EQ,RecipeInstructionCountOutputTypeSelectSchema:()=>hX,RecipeInstructionCreateArgsSchema:()=>Lkt,RecipeInstructionCreateInputSchema:()=>n9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>Qkt,RecipeInstructionCreateManyArgsSchema:()=>Hkt,RecipeInstructionCreateManyInputSchema:()=>fP,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>OO,RecipeInstructionCreateManyRecipeInputSchema:()=>vH,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>tZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>FV,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>uo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>jT,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>MB,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>a6,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Pb,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>kh,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>dZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>Fu,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>Yp,RecipeInstructionDeleteArgsSchema:()=>Ykt,RecipeInstructionDeleteManyArgsSchema:()=>Kkt,RecipeInstructionFindFirstArgsSchema:()=>wgt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>Ngt,RecipeInstructionFindManyArgsSchema:()=>Xw,RecipeInstructionFindUniqueArgsSchema:()=>Fgt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>Dgt,RecipeInstructionGroupByArgsSchema:()=>qgt,RecipeInstructionIncludeSchema:()=>Kd,RecipeInstructionListRelationFilterSchema:()=>Yj,RecipeInstructionMaxOrderByAggregateInputSchema:()=>int,RecipeInstructionMinOrderByAggregateInputSchema:()=>lnt,RecipeInstructionNullableScalarRelationFilterSchema:()=>G$,RecipeInstructionOrderByRelationAggregateInputSchema:()=>Q$,RecipeInstructionOrderByWithAggregationInputSchema:()=>gV,RecipeInstructionOrderByWithRelationInputSchema:()=>Mm,RecipeInstructionRecipeIdStepNumberCompoundUniqueInputSchema:()=>hN,RecipeInstructionScalarFieldEnumSchema:()=>Lg,RecipeInstructionScalarWhereInputSchema:()=>sl,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>IA,RecipeInstructionSchema:()=>Kdt,RecipeInstructionSelectSchema:()=>Xd,RecipeInstructionSumOrderByAggregateInputSchema:()=>rnt,RecipeInstructionUncheckedCreateInputSchema:()=>i9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>OT,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>zZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Du,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>Gp,RecipeInstructionUncheckedUpdateInputSchema:()=>r9,RecipeInstructionUncheckedUpdateManyInputSchema:()=>p9,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>iyt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Wa,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>cut,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>DT,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>BD,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>M7,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>q3,RecipeInstructionUpdateArgsSchema:()=>Gkt,RecipeInstructionUpdateInputSchema:()=>l9,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>Jkt,RecipeInstructionUpdateManyArgsSchema:()=>$kt,RecipeInstructionUpdateManyMutationInputSchema:()=>Fj,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>$R,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>pW,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>aa,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>NT,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>OB,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Crt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>GR,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>rW,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>ND,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>j7,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>B3,RecipeInstructionUpsertArgsSchema:()=>Vkt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>YR,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>lW,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>grt,RecipeInstructionWhereInputSchema:()=>Oe,RecipeInstructionWhereUniqueInputSchema:()=>it,RecipeLaborCostAggregateArgsSchema:()=>Omt,RecipeLaborCostArgsSchema:()=>Azt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>att,RecipeLaborCostCountOrderByAggregateInputSchema:()=>ott,RecipeLaborCostCreateArgsSchema:()=>LSt,RecipeLaborCostCreateInputSchema:()=>w0,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>QSt,RecipeLaborCostCreateManyArgsSchema:()=>HSt,RecipeLaborCostCreateManyInputSchema:()=>XT,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>VO,RecipeLaborCostCreateManyRecipeInputSchema:()=>LH,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>qb,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>hy,RecipeLaborCostDeleteArgsSchema:()=>YSt,RecipeLaborCostDeleteManyArgsSchema:()=>KSt,RecipeLaborCostFindFirstArgsSchema:()=>Zmt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>vmt,RecipeLaborCostFindManyArgsSchema:()=>IK,RecipeLaborCostFindUniqueArgsSchema:()=>wmt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>Nmt,RecipeLaborCostGroupByArgsSchema:()=>fmt,RecipeLaborCostIncludeSchema:()=>ws,RecipeLaborCostListRelationFilterSchema:()=>M4,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>ntt,RecipeLaborCostMinOrderByAggregateInputSchema:()=>itt,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>Nat,RecipeLaborCostOrderByWithAggregationInputSchema:()=>NL,RecipeLaborCostOrderByWithRelationInputSchema:()=>Jm,RecipeLaborCostScalarFieldEnumSchema:()=>pg,RecipeLaborCostScalarWhereInputSchema:()=>Mp,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>wC,RecipeLaborCostSchema:()=>hdt,RecipeLaborCostSelectSchema:()=>Ns,RecipeLaborCostSumOrderByAggregateInputSchema:()=>ltt,RecipeLaborCostUncheckedCreateInputSchema:()=>N0,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Yo,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>by,RecipeLaborCostUncheckedUpdateInputSchema:()=>q0,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>F0,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>Cyt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fa,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>rJ,RecipeLaborCostUpdateArgsSchema:()=>GSt,RecipeLaborCostUpdateInputSchema:()=>B0,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>JSt,RecipeLaborCostUpdateManyArgsSchema:()=>$St,RecipeLaborCostUpdateManyMutationInputSchema:()=>WN,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Dk,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Ia,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Fk,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>lJ,RecipeLaborCostUpsertArgsSchema:()=>VSt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>qk,RecipeLaborCostWhereInputSchema:()=>Xa,RecipeLaborCostWhereUniqueInputSchema:()=>he,RecipeListRelationFilterSchema:()=>tp,RecipeMaxOrderByAggregateInputSchema:()=>_at,RecipeMinOrderByAggregateInputSchema:()=>Eat,RecipeNullableScalarRelationFilterSchema:()=>n4,RecipeNutritionAggregateArgsSchema:()=>Jzt,RecipeNutritionArgsSchema:()=>hQ,RecipeNutritionAvgOrderByAggregateInputSchema:()=>UX,RecipeNutritionCountOrderByAggregateInputSchema:()=>WX,RecipeNutritionCreateArgsSchema:()=>LAt,RecipeNutritionCreateInputSchema:()=>n0,RecipeNutritionCreateManyAndReturnArgsSchema:()=>QAt,RecipeNutritionCreateManyArgsSchema:()=>HAt,RecipeNutritionCreateManyInputSchema:()=>QT,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>Ro,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>HO,RecipeNutritionCreateWithoutRecipeInputSchema:()=>VS,RecipeNutritionDeleteArgsSchema:()=>YAt,RecipeNutritionDeleteManyArgsSchema:()=>KAt,RecipeNutritionFindFirstArgsSchema:()=>Yzt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>Gzt,RecipeNutritionFindManyArgsSchema:()=>$zt,RecipeNutritionFindUniqueArgsSchema:()=>Xzt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>tmt,RecipeNutritionGroupByArgsSchema:()=>Kzt,RecipeNutritionIncludeSchema:()=>Ps,RecipeNutritionMaxOrderByAggregateInputSchema:()=>RX,RecipeNutritionMinOrderByAggregateInputSchema:()=>kX,RecipeNutritionNullableScalarRelationFilterSchema:()=>Z4,RecipeNutritionOrderByWithAggregationInputSchema:()=>ML,RecipeNutritionOrderByWithRelationInputSchema:()=>Sm,RecipeNutritionScalarFieldEnumSchema:()=>og,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>jC,RecipeNutritionSchema:()=>udt,RecipeNutritionSelectSchema:()=>Ws,RecipeNutritionSumOrderByAggregateInputSchema:()=>xX,RecipeNutritionUncheckedCreateInputSchema:()=>i0,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Go,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>HS,RecipeNutritionUncheckedUpdateInputSchema:()=>r0,RecipeNutritionUncheckedUpdateManyInputSchema:()=>c0,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Da,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>KO,RecipeNutritionUpdateArgsSchema:()=>GAt,RecipeNutritionUpdateInputSchema:()=>l0,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>JAt,RecipeNutritionUpdateManyArgsSchema:()=>$At,RecipeNutritionUpdateManyMutationInputSchema:()=>p0,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>ga,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>Q6,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>JO,RecipeNutritionUpsertArgsSchema:()=>VAt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>H6,RecipeNutritionWhereInputSchema:()=>fe,RecipeNutritionWhereUniqueInputSchema:()=>Ol,RecipeOrderByRelationAggregateInputSchema:()=>dS,RecipeOrderByWithAggregationInputSchema:()=>hV,RecipeOrderByWithRelationInputSchema:()=>Xe,RecipePhotoAggregateArgsSchema:()=>hmt,RecipePhotoArgsSchema:()=>Izt,RecipePhotoAvgOrderByAggregateInputSchema:()=>DX,RecipePhotoCountOrderByAggregateInputSchema:()=>FX,RecipePhotoCreateArgsSchema:()=>bSt,RecipePhotoCreateInputSchema:()=>A0,RecipePhotoCreateManyAndReturnArgsSchema:()=>CSt,RecipePhotoCreateManyArgsSchema:()=>gSt,RecipePhotoCreateManyInputSchema:()=>$T,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>GO,RecipePhotoCreateManyRecipeInputSchema:()=>HH,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>jo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>Db,RecipePhotoCreateWithoutRecipeInputSchema:()=>Cy,RecipePhotoDeleteArgsSchema:()=>ASt,RecipePhotoDeleteManyArgsSchema:()=>WSt,RecipePhotoFindFirstArgsSchema:()=>zmt,RecipePhotoFindFirstOrThrowArgsSchema:()=>mmt,RecipePhotoFindManyArgsSchema:()=>mK,RecipePhotoFindUniqueArgsSchema:()=>Imt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>gmt,RecipePhotoGroupByArgsSchema:()=>bmt,RecipePhotoIncludeSchema:()=>js,RecipePhotoListRelationFilterSchema:()=>f4,RecipePhotoMaxOrderByAggregateInputSchema:()=>_X,RecipePhotoMinOrderByAggregateInputSchema:()=>EX,RecipePhotoOrderByRelationAggregateInputSchema:()=>qat,RecipePhotoOrderByWithAggregationInputSchema:()=>OL,RecipePhotoOrderByWithRelationInputSchema:()=>Ym,RecipePhotoScalarFieldEnumSchema:()=>ig,RecipePhotoScalarWhereInputSchema:()=>vp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>vC,RecipePhotoSchema:()=>ddt,RecipePhotoSelectSchema:()=>Ms,RecipePhotoSumOrderByAggregateInputSchema:()=>LX,RecipePhotoUncheckedCreateInputSchema:()=>S0,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ko,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Ay,RecipePhotoUncheckedUpdateInputSchema:()=>P0,RecipePhotoUncheckedUpdateManyInputSchema:()=>W0,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>Syt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>La,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>yJ,RecipePhotoUpdateArgsSchema:()=>SSt,RecipePhotoUpdateInputSchema:()=>T0,RecipePhotoUpdateManyAndReturnArgsSchema:()=>PSt,RecipePhotoUpdateManyArgsSchema:()=>TSt,RecipePhotoUpdateManyMutationInputSchema:()=>SN,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>Qk,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Sa,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,RecipePhotoUpdateWithoutRecipeInputSchema:()=>uJ,RecipePhotoUpsertArgsSchema:()=>ISt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Vk,RecipePhotoWhereInputSchema:()=>$a,RecipePhotoWhereUniqueInputSchema:()=>de,RecipeScalarFieldEnumSchema:()=>Dg,RecipeScalarRelationFilterSchema:()=>ue,RecipeScalarWhereInputSchema:()=>ae,RecipeScalarWhereWithAggregatesInputSchema:()=>mA,RecipeSchema:()=>Gdt,RecipeSelectSchema:()=>Qd,RecipeStatsAggregateArgsSchema:()=>mCt,RecipeStatsArgsSchema:()=>QQ,RecipeStatsAvgOrderByAggregateInputSchema:()=>Mnt,RecipeStatsCountOrderByAggregateInputSchema:()=>jnt,RecipeStatsCreateArgsSchema:()=>fxt,RecipeStatsCreateInputSchema:()=>x9,RecipeStatsCreateManyAndReturnArgsSchema:()=>Bxt,RecipeStatsCreateManyArgsSchema:()=>Nxt,RecipeStatsCreateManyInputSchema:()=>FP,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Mo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>$O,RecipeStatsCreateWithoutRecipeInputSchema:()=>GS,RecipeStatsDeleteArgsSchema:()=>qxt,RecipeStatsDeleteManyArgsSchema:()=>Ext,RecipeStatsFindFirstArgsSchema:()=>sCt,RecipeStatsFindFirstOrThrowArgsSchema:()=>dCt,RecipeStatsFindManyArgsSchema:()=>zCt,RecipeStatsFindUniqueArgsSchema:()=>bCt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>ICt,RecipeStatsGroupByArgsSchema:()=>hCt,RecipeStatsIncludeSchema:()=>pz,RecipeStatsMaxOrderByAggregateInputSchema:()=>Znt,RecipeStatsMinOrderByAggregateInputSchema:()=>vnt,RecipeStatsNullableScalarRelationFilterSchema:()=>w4,RecipeStatsOrderByWithAggregationInputSchema:()=>PV,RecipeStatsOrderByWithRelationInputSchema:()=>vm,RecipeStatsScalarFieldEnumSchema:()=>Gg,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>TA,RecipeStatsSchema:()=>azt,RecipeStatsSelectSchema:()=>cz,RecipeStatsSumOrderByAggregateInputSchema:()=>Ont,RecipeStatsUncheckedCreateInputSchema:()=>j9,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Xo,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>$S,RecipeStatsUncheckedUpdateInputSchema:()=>Z9,RecipeStatsUncheckedUpdateManyInputSchema:()=>O9,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Va,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>of,RecipeStatsUpdateArgsSchema:()=>Fxt,RecipeStatsUpdateInputSchema:()=>M9,RecipeStatsUpdateManyAndReturnArgsSchema:()=>_xt,RecipeStatsUpdateManyArgsSchema:()=>Dxt,RecipeStatsUpdateManyMutationInputSchema:()=>v9,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Ta,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>J6,RecipeStatsUpdateWithoutRecipeInputSchema:()=>ef,RecipeStatsUpsertArgsSchema:()=>wxt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>$6,RecipeStatsWhereInputSchema:()=>Ne,RecipeStatsWhereUniqueInputSchema:()=>wl,RecipeStorageAggregateArgsSchema:()=>umt,RecipeStorageArgsSchema:()=>bQ,RecipeStorageAvgOrderByAggregateInputSchema:()=>wX,RecipeStorageCountOrderByAggregateInputSchema:()=>fX,RecipeStorageCreateArgsSchema:()=>pSt,RecipeStorageCreateInputSchema:()=>m0,RecipeStorageCreateManyAndReturnArgsSchema:()=>ySt,RecipeStorageCreateManyArgsSchema:()=>uSt,RecipeStorageCreateManyInputSchema:()=>GT,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>xo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>YO,RecipeStorageCreateWithoutRecipeInputSchema:()=>QS,RecipeStorageDeleteArgsSchema:()=>sSt,RecipeStorageDeleteManyArgsSchema:()=>hSt,RecipeStorageFindFirstArgsSchema:()=>rmt,RecipeStorageFindFirstOrThrowArgsSchema:()=>pmt,RecipeStorageFindManyArgsSchema:()=>cmt,RecipeStorageFindUniqueArgsSchema:()=>smt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>dmt,RecipeStorageGroupByArgsSchema:()=>ymt,RecipeStorageIncludeSchema:()=>ks,RecipeStorageMaxOrderByAggregateInputSchema:()=>NX,RecipeStorageMinOrderByAggregateInputSchema:()=>BX,RecipeStorageNullableScalarRelationFilterSchema:()=>O4,RecipeStorageOrderByWithAggregationInputSchema:()=>vL,RecipeStorageOrderByWithRelationInputSchema:()=>Tm,RecipeStorageScalarFieldEnumSchema:()=>ng,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>ZC,RecipeStorageSchema:()=>sdt,RecipeStorageSelectSchema:()=>xs,RecipeStorageSumOrderByAggregateInputSchema:()=>qX,RecipeStorageUncheckedCreateInputSchema:()=>h0,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Jo,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>YS,RecipeStorageUncheckedUpdateInputSchema:()=>I0,RecipeStorageUncheckedUpdateManyInputSchema:()=>C0,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Ea,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>tf,RecipeStorageUpdateArgsSchema:()=>dSt,RecipeStorageUpdateInputSchema:()=>b0,RecipeStorageUpdateManyAndReturnArgsSchema:()=>mSt,RecipeStorageUpdateManyArgsSchema:()=>zSt,RecipeStorageUpdateManyMutationInputSchema:()=>g0,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Aa,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>G6,RecipeStorageUpdateWithoutRecipeInputSchema:()=>XO,RecipeStorageUpsertArgsSchema:()=>cSt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>Y6,RecipeStorageWhereInputSchema:()=>we,RecipeStorageWhereUniqueInputSchema:()=>fl,RecipeSumOrderByAggregateInputSchema:()=>Lat,RecipeTagAggregateArgsSchema:()=>ubt,RecipeTagArgsSchema:()=>kzt,RecipeTagAvgOrderByAggregateInputSchema:()=>jet,RecipeTagCountOrderByAggregateInputSchema:()=>xet,RecipeTagCountOutputTypeArgsSchema:()=>xQ,RecipeTagCountOutputTypeSelectSchema:()=>lX,RecipeTagCreateArgsSchema:()=>pWt,RecipeTagCreateInputSchema:()=>KY,RecipeTagCreateManyAndReturnArgsSchema:()=>yWt,RecipeTagCreateManyArgsSchema:()=>uWt,RecipeTagCreateManyInputSchema:()=>dP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>Co,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>vb,RecipeTagCreateWithoutRecipesInputSchema:()=>ny,RecipeTagDeleteArgsSchema:()=>sWt,RecipeTagDeleteManyArgsSchema:()=>hWt,RecipeTagFindFirstArgsSchema:()=>pbt,RecipeTagFindFirstOrThrowArgsSchema:()=>cbt,RecipeTagFindManyArgsSchema:()=>PK,RecipeTagFindUniqueArgsSchema:()=>sbt,RecipeTagFindUniqueOrThrowArgsSchema:()=>dbt,RecipeTagGroupByArgsSchema:()=>ybt,RecipeTagIncludeSchema:()=>ud,RecipeTagListRelationFilterSchema:()=>k4,RecipeTagMaxOrderByAggregateInputSchema:()=>Met,RecipeTagMinOrderByAggregateInputSchema:()=>Zet,RecipeTagOrderByRelationAggregateInputSchema:()=>Oat,RecipeTagOrderByWithAggregationInputSchema:()=>JL,RecipeTagOrderByWithRelationInputSchema:()=>nh,RecipeTagScalarFieldEnumSchema:()=>Sg,RecipeTagScalarWhereInputSchema:()=>kp,RecipeTagScalarWhereWithAggregatesInputSchema:()=>$C,RecipeTagSchema:()=>jdt,RecipeTagSelectSchema:()=>yd,RecipeTagSumOrderByAggregateInputSchema:()=>vet,RecipeTagUncheckedCreateInputSchema:()=>XY,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>_o,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>iy,RecipeTagUncheckedUpdateInputSchema:()=>eG,RecipeTagUncheckedUpdateManyInputSchema:()=>oG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>zyt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Oa,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>G7,RecipeTagUpdateArgsSchema:()=>dWt,RecipeTagUpdateInputSchema:()=>tG,RecipeTagUpdateManyAndReturnArgsSchema:()=>mWt,RecipeTagUpdateManyArgsSchema:()=>zWt,RecipeTagUpdateManyMutationInputSchema:()=>MN,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>Tk,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>sa,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Sk,RecipeTagUpdateWithoutRecipesInputSchema:()=>Y7,RecipeTagUpsertArgsSchema:()=>cWt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Ak,RecipeTagWhereInputSchema:()=>rn,RecipeTagWhereUniqueInputSchema:()=>Ie,RecipeTemperatureAggregateArgsSchema:()=>Smt,RecipeTemperatureArgsSchema:()=>gzt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>QX,RecipeTemperatureCountOrderByAggregateInputSchema:()=>HX,RecipeTemperatureCreateArgsSchema:()=>USt,RecipeTemperatureCreateInputSchema:()=>U0,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>xSt,RecipeTemperatureCreateManyArgsSchema:()=>kSt,RecipeTemperatureCreateManyInputSchema:()=>JT,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>EO,RecipeTemperatureCreateManyRecipeInputSchema:()=>_H,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Po,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>Nb,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>sy,RecipeTemperatureDeleteArgsSchema:()=>jSt,RecipeTemperatureDeleteManyArgsSchema:()=>OSt,RecipeTemperatureFindFirstArgsSchema:()=>Cmt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>Amt,RecipeTemperatureFindManyArgsSchema:()=>hK,RecipeTemperatureFindUniqueArgsSchema:()=>Pmt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Wmt,RecipeTemperatureGroupByArgsSchema:()=>Tmt,RecipeTemperatureIncludeSchema:()=>Zs,RecipeTemperatureListRelationFilterSchema:()=>x4,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>YX,RecipeTemperatureMinOrderByAggregateInputSchema:()=>GX,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>fat,RecipeTemperatureOrderByWithAggregationInputSchema:()=>fL,RecipeTemperatureOrderByWithRelationInputSchema:()=>Gm,RecipeTemperatureScalarFieldEnumSchema:()=>lg,RecipeTemperatureScalarWhereInputSchema:()=>xp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>OC,RecipeTemperatureSchema:()=>zdt,RecipeTemperatureSelectSchema:()=>vs,RecipeTemperatureSumOrderByAggregateInputSchema:()=>$X,RecipeTemperatureUncheckedCreateInputSchema:()=>R0,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>dy,RecipeTemperatureUncheckedUpdateInputSchema:()=>x0,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>j0,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>Iyt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ba,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>aJ,RecipeTemperatureUpdateArgsSchema:()=>MSt,RecipeTemperatureUpdateInputSchema:()=>k0,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>vSt,RecipeTemperatureUpdateManyArgsSchema:()=>ZSt,RecipeTemperatureUpdateManyMutationInputSchema:()=>TN,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>fk,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>ha,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ok,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>oJ,RecipeTemperatureUpsertArgsSchema:()=>RSt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>vk,RecipeTemperatureWhereInputSchema:()=>Ja,RecipeTemperatureWhereUniqueInputSchema:()=>ze,RecipeUncheckedCreateInputSchema:()=>L1,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>N2,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>cq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>Yz,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>a5,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>or,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>zlt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Nu,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>vM,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>yc,RecipeUncheckedCreateWithoutEquipmentInputSchema:()=>uZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>Dw,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>df,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>gf,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>EM,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Ww,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>ys,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>MM,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>NM,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>as,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>Ew,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>dw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>uv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>Yf,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>fM,RecipeUncheckedCreateWithoutTagsInputSchema:()=>mc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>qM,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>KM,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>Sv,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>DM,RecipeUncheckedUpdateInputSchema:()=>H1,RecipeUncheckedUpdateManyInputSchema:()=>Q1,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>ayt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>F2,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>but,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>mq,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>Lyt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>sm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>Fyt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>r5,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>jut,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>gut,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>hlt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>R7,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>pD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>e8,RecipeUncheckedUpdateWithoutEquipmentInputSchema:()=>OD,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>SL,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>zE,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>CE,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>ID,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>zL,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>eK,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>lD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>sD,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>QJ,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>PL,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>nL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>k_,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>LE,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>R8,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>uD,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>i8,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>zD,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>UD,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>F_,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>hD,RecipeUpdateArgsSchema:()=>Skt,RecipeUpdateInputSchema:()=>V1,RecipeUpdateManyAndReturnArgsSchema:()=>Pkt,RecipeUpdateManyArgsSchema:()=>Tkt,RecipeUpdateManyMutationInputSchema:()=>bI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>LR,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>ZW,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>ij,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>Qx,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>bU,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>BW,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>B2,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>sq,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>nm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>i5,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>hr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>mlt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>tlt,RecipeUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>ZB,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>Blt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>Kq,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>iF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>ult,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>s5,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>Kit,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>nlt,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>Flt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>QF,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>Dq,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Zlt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>olt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>llt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>fT,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>plt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>Qq,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>Llt,RecipeUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>hrt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>nut,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>$pt,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>oct,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>trt,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>$ct,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>_lt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>Ylt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>lut,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Fct,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>upt,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Uct,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>Hlt,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>$lt,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>prt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Spt,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>Klt,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>ER,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>MW,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>nj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Hx,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>hU,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>NW,RecipeUpdateWithoutCookBookInputSchema:()=>U7,RecipeUpdateWithoutCriticalPointsInputSchema:()=>rD,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>t8,RecipeUpdateWithoutEquipmentInputSchema:()=>vD,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>AL,RecipeUpdateWithoutIngredientsInputSchema:()=>dE,RecipeUpdateWithoutInstructionsInputSchema:()=>gE,RecipeUpdateWithoutLaborCostsInputSchema:()=>bD,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>dL,RecipeUpdateWithoutMenuItemsInputSchema:()=>tK,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>iD,RecipeUpdateWithoutPhotosInputSchema:()=>yD,RecipeUpdateWithoutPrepBoardsInputSchema:()=>HJ,RecipeUpdateWithoutPrepHistoryInputSchema:()=>TL,RecipeUpdateWithoutPrepItemsInputSchema:()=>aL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>R_,RecipeUpdateWithoutRecipeStatsInputSchema:()=>EE,RecipeUpdateWithoutRestaurantInputSchema:()=>U8,RecipeUpdateWithoutStorageInputSchema:()=>cD,RecipeUpdateWithoutTagsInputSchema:()=>n8,RecipeUpdateWithoutTemperaturesInputSchema:()=>dD,RecipeUpdateWithoutVersionsInputSchema:()=>WD,RecipeUpdateWithoutWithdrawalsInputSchema:()=>q_,RecipeUpdateWithoutYieldsInputSchema:()=>mD,RecipeUpdateimageUrlsInputSchema:()=>pt,RecipeUpsertArgsSchema:()=>Ikt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>_R,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>jW,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>aj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Vx,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>mU,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>wW,RecipeUpsertWithoutCriticalPointsInputSchema:()=>Elt,RecipeUpsertWithoutEquipmentInputSchema:()=>mrt,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>aut,RecipeUpsertWithoutIngredientsInputSchema:()=>Gpt,RecipeUpsertWithoutInstructionsInputSchema:()=>ect,RecipeUpsertWithoutLaborCostsInputSchema:()=>Xlt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>Gct,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>Dlt,RecipeUpsertWithoutPhotosInputSchema:()=>Qlt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>iut,RecipeUpsertWithoutPrepItemsInputSchema:()=>qct,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>cpt,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Wct,RecipeUpsertWithoutStorageInputSchema:()=>Vlt,RecipeUpsertWithoutTemperaturesInputSchema:()=>Glt,RecipeUpsertWithoutVersionsInputSchema:()=>rrt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>Apt,RecipeUpsertWithoutYieldsInputSchema:()=>Jlt,RecipeVersionAggregateArgsSchema:()=>Kmt,RecipeVersionArgsSchema:()=>Wj,RecipeVersionAvgOrderByAggregateInputSchema:()=>Itt,RecipeVersionCountOrderByAggregateInputSchema:()=>btt,RecipeVersionCountOutputTypeArgsSchema:()=>CQ,RecipeVersionCountOutputTypeSelectSchema:()=>tX,RecipeVersionCreateArgsSchema:()=>bTt,RecipeVersionCreateInputSchema:()=>J0,RecipeVersionCreateManyAndReturnArgsSchema:()=>CTt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>AO,RecipeVersionCreateManyApprovedByInputSchema:()=>kH,RecipeVersionCreateManyArgsSchema:()=>gTt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>CO,RecipeVersionCreateManyCreatedByInputSchema:()=>RH,RecipeVersionCreateManyInputSchema:()=>oP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>DO,RecipeVersionCreateManyRecipeInputSchema:()=>FH,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>ai,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>oi,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Ao,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>Jq,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>oF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>gb,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Ib,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>e3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>a3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>Ob,RecipeVersionCreateWithoutApprovedByInputSchema:()=>ju,RecipeVersionCreateWithoutCreatedByInputSchema:()=>ku,RecipeVersionCreateWithoutIngredientsInputSchema:()=>hf,RecipeVersionCreateWithoutInstructionsInputSchema:()=>Cf,RecipeVersionCreateWithoutRecipeInputSchema:()=>ly,RecipeVersionDeleteArgsSchema:()=>ATt,RecipeVersionDeleteManyArgsSchema:()=>WTt,RecipeVersionFindFirstArgsSchema:()=>$mt,RecipeVersionFindFirstOrThrowArgsSchema:()=>Jmt,RecipeVersionFindManyArgsSchema:()=>pS,RecipeVersionFindUniqueArgsSchema:()=>tht,RecipeVersionFindUniqueOrThrowArgsSchema:()=>eht,RecipeVersionGroupByArgsSchema:()=>Xmt,RecipeVersionIncludeSchema:()=>_s,RecipeVersionListRelationFilterSchema:()=>NA,RecipeVersionMaxOrderByAggregateInputSchema:()=>gtt,RecipeVersionMinOrderByAggregateInputSchema:()=>Ctt,RecipeVersionNullableScalarRelationFilterSchema:()=>zM,RecipeVersionOrderByRelationAggregateInputSchema:()=>CN,RecipeVersionOrderByWithAggregationInputSchema:()=>FL,RecipeVersionOrderByWithRelationInputSchema:()=>Bp,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>dN,RecipeVersionScalarFieldEnumSchema:()=>yg,RecipeVersionScalarWhereInputSchema:()=>qn,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>qC,RecipeVersionSchema:()=>gdt,RecipeVersionSelectSchema:()=>Es,RecipeVersionSumOrderByAggregateInputSchema:()=>Att,RecipeVersionUncheckedCreateInputSchema:()=>K0,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>Ai,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ci,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Mu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>xu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>bf,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>Af,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>ry,RecipeVersionUncheckedUpdateInputSchema:()=>tY,RecipeVersionUncheckedUpdateManyInputSchema:()=>eY,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>tyt,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>il,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Xut,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>nl,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>myt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fa,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>A7,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>g7,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>IE,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>SE,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>J7,RecipeVersionUpdateArgsSchema:()=>STt,RecipeVersionUpdateInputSchema:()=>X0,RecipeVersionUpdateManyAndReturnArgsSchema:()=>PTt,RecipeVersionUpdateManyArgsSchema:()=>TTt,RecipeVersionUpdateManyMutationInputSchema:()=>bT,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>fR,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>ZR,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Uk,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Di,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Fi,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>da,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>tF,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>lF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>tct,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>nct,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>OR,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>MR,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Wk,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>C7,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>I7,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>bE,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>AE,RecipeVersionUpdateWithoutRecipeInputSchema:()=>$7,RecipeVersionUpsertArgsSchema:()=>ITt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>vR,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>jR,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Pk,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>Xpt,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>act,RecipeVersionWhereInputSchema:()=>ee,RecipeVersionWhereUniqueInputSchema:()=>w,RecipeWhereInputSchema:()=>v,RecipeWhereUniqueInputSchema:()=>g,RecipeYieldAggregateArgsSchema:()=>kmt,RecipeYieldArgsSchema:()=>Czt,RecipeYieldAvgOrderByAggregateInputSchema:()=>KX,RecipeYieldCountOrderByAggregateInputSchema:()=>JX,RecipeYieldCreateArgsSchema:()=>fSt,RecipeYieldCreateInputSchema:()=>M0,RecipeYieldCreateManyAndReturnArgsSchema:()=>BSt,RecipeYieldCreateManyArgsSchema:()=>NSt,RecipeYieldCreateManyInputSchema:()=>KT,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>LO,RecipeYieldCreateManyRecipeInputSchema:()=>EH,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>Wo,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>Bb,RecipeYieldCreateWithoutRecipeInputSchema:()=>zy,RecipeYieldDeleteArgsSchema:()=>qSt,RecipeYieldDeleteManyArgsSchema:()=>ESt,RecipeYieldFindFirstArgsSchema:()=>Umt,RecipeYieldFindFirstOrThrowArgsSchema:()=>Rmt,RecipeYieldFindManyArgsSchema:()=>bK,RecipeYieldFindUniqueArgsSchema:()=>jmt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Mmt,RecipeYieldGroupByArgsSchema:()=>xmt,RecipeYieldIncludeSchema:()=>Os,RecipeYieldListRelationFilterSchema:()=>j4,RecipeYieldMaxOrderByAggregateInputSchema:()=>XX,RecipeYieldMinOrderByAggregateInputSchema:()=>ttt,RecipeYieldOrderByRelationAggregateInputSchema:()=>wat,RecipeYieldOrderByWithAggregationInputSchema:()=>wL,RecipeYieldOrderByWithRelationInputSchema:()=>$m,RecipeYieldScalarFieldEnumSchema:()=>rg,RecipeYieldScalarWhereInputSchema:()=>jp,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>fC,RecipeYieldSchema:()=>mdt,RecipeYieldSelectSchema:()=>fs,RecipeYieldSumOrderByAggregateInputSchema:()=>ett,RecipeYieldUncheckedCreateInputSchema:()=>Z0,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>my,RecipeYieldUncheckedUpdateInputSchema:()=>O0,RecipeYieldUncheckedUpdateManyInputSchema:()=>f0,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>gyt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>qa,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>iJ,RecipeYieldUpdateArgsSchema:()=>FSt,RecipeYieldUpdateInputSchema:()=>v0,RecipeYieldUpdateManyAndReturnArgsSchema:()=>_St,RecipeYieldUpdateManyArgsSchema:()=>DSt,RecipeYieldUpdateManyMutationInputSchema:()=>PN,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>Bk,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>ba,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Nk,RecipeYieldUpdateWithoutRecipeInputSchema:()=>nJ,RecipeYieldUpsertArgsSchema:()=>wSt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>wk,RecipeYieldWhereInputSchema:()=>Ka,RecipeYieldWhereUniqueInputSchema:()=>me,RestaurantAggregateArgsSchema:()=>$It,RestaurantArgsSchema:()=>to,RestaurantAvgOrderByAggregateInputSchema:()=>lat,RestaurantCountOrderByAggregateInputSchema:()=>iat,RestaurantCountOutputTypeArgsSchema:()=>wQ,RestaurantCountOutputTypeSelectSchema:()=>yX,RestaurantCreateArgsSchema:()=>fRt,RestaurantCreateInputSchema:()=>T1,RestaurantCreateManyAndReturnArgsSchema:()=>BRt,RestaurantCreateManyArgsSchema:()=>NRt,RestaurantCreateManyInputSchema:()=>kP,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>Zv,RestaurantCreateManyOrganizationInputSchema:()=>$V,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>R2,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>w2,RestaurantCreateNestedOneWithoutEquipmentInputSchema:()=>gB,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>hM,RestaurantCreateNestedOneWithoutLeftoverItemInputSchema:()=>bq,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>GF,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>TF,RestaurantCreateNestedOneWithoutProductionPlanInputSchema:()=>xq,RestaurantCreateNestedOneWithoutQualityChecklistInputSchema:()=>fB,RestaurantCreateNestedOneWithoutQustomerFeedbackInputSchema:()=>XB,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>ro,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>X4,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Dn,RestaurantCreateNestedOneWithoutWasteRecordInputSchema:()=>Tq,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>E6,RestaurantCreateOrConnectWithoutEquipmentInputSchema:()=>t6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>w6,RestaurantCreateOrConnectWithoutLeftoverItemInputSchema:()=>h6,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>P3,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>m3,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Dh,RestaurantCreateOrConnectWithoutProductionPlanInputSchema:()=>S6,RestaurantCreateOrConnectWithoutQualityChecklistInputSchema:()=>i6,RestaurantCreateOrConnectWithoutQustomerFeedbackInputSchema:()=>d6,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>L6,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>Y5,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>D6,RestaurantCreateOrConnectWithoutWasteRecordInputSchema:()=>g6,RestaurantCreateWithoutCookbooksInputSchema:()=>RO,RestaurantCreateWithoutEquipmentInputSchema:()=>iZ,RestaurantCreateWithoutInventoryInputSchema:()=>Ov,RestaurantCreateWithoutLeftoverItemInputSchema:()=>LZ,RestaurantCreateWithoutMenusInputSchema:()=>Iw,RestaurantCreateWithoutOrdersInputSchema:()=>Gf,RestaurantCreateWithoutOrganizationInputSchema:()=>Cc,RestaurantCreateWithoutProductionPlanInputSchema:()=>ov,RestaurantCreateWithoutQualityChecklistInputSchema:()=>bZ,RestaurantCreateWithoutQustomerFeedbackInputSchema:()=>NZ,RestaurantCreateWithoutRecipesInputSchema:()=>xO,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>LM,RestaurantCreateWithoutUsersInputSchema:()=>nO,RestaurantCreateWithoutWasteRecordInputSchema:()=>$Z,RestaurantDeleteArgsSchema:()=>qRt,RestaurantDeleteManyArgsSchema:()=>ERt,RestaurantFindFirstArgsSchema:()=>YIt,RestaurantFindFirstOrThrowArgsSchema:()=>GIt,RestaurantFindManyArgsSchema:()=>xK,RestaurantFindUniqueArgsSchema:()=>KIt,RestaurantFindUniqueOrThrowArgsSchema:()=>XIt,RestaurantGroupByArgsSchema:()=>JIt,RestaurantIncludeSchema:()=>Bd,RestaurantListRelationFilterSchema:()=>r4,RestaurantMaxOrderByAggregateInputSchema:()=>rat,RestaurantMinOrderByAggregateInputSchema:()=>pat,RestaurantNullableScalarRelationFilterSchema:()=>cM,RestaurantOrderByRelationAggregateInputSchema:()=>Eot,RestaurantOrderByWithAggregationInputSchema:()=>sV,RestaurantOrderByWithRelationInputSchema:()=>kn,RestaurantScalarFieldEnumSchema:()=>Ng,RestaurantScalarRelationFilterSchema:()=>Qa,RestaurantScalarWhereInputSchema:()=>mp,RestaurantScalarWhereWithAggregatesInputSchema:()=>yA,RestaurantSchema:()=>Vdt,RestaurantSelectSchema:()=>qd,RestaurantSumOrderByAggregateInputSchema:()=>cat,RestaurantUncheckedCreateInputSchema:()=>P1,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>x2,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>kO,RestaurantUncheckedCreateWithoutEquipmentInputSchema:()=>lZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>fv,RestaurantUncheckedCreateWithoutLeftoverItemInputSchema:()=>VZ,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>gw,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>$f,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>Ac,RestaurantUncheckedCreateWithoutProductionPlanInputSchema:()=>av,RestaurantUncheckedCreateWithoutQualityChecklistInputSchema:()=>IZ,RestaurantUncheckedCreateWithoutQustomerFeedbackInputSchema:()=>BZ,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>jO,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>VM,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>iO,RestaurantUncheckedCreateWithoutWasteRecordInputSchema:()=>JZ,RestaurantUncheckedUpdateInputSchema:()=>U1,RestaurantUncheckedUpdateManyInputSchema:()=>R1,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Sut,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>v2,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>lE,RestaurantUncheckedUpdateWithoutEquipmentInputSchema:()=>ZD,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>$_,RestaurantUncheckedUpdateWithoutLeftoverItemInputSchema:()=>u_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>uL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>HE,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>y8,RestaurantUncheckedUpdateWithoutProductionPlanInputSchema:()=>S_,RestaurantUncheckedUpdateWithoutQualityChecklistInputSchema:()=>_D,RestaurantUncheckedUpdateWithoutQustomerFeedbackInputSchema:()=>n_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>pE,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>CD,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>oE,RestaurantUncheckedUpdateWithoutWasteRecordInputSchema:()=>h_,RestaurantUpdateArgsSchema:()=>FRt,RestaurantUpdateInputSchema:()=>W1,RestaurantUpdateManyAndReturnArgsSchema:()=>_Rt,RestaurantUpdateManyArgsSchema:()=>DRt,RestaurantUpdateManyMutationInputSchema:()=>wN,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>QW,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>M2,RestaurantUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>PB,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>TM,RestaurantUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>Cq,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>tD,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>RF,RestaurantUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>vq,RestaurantUpdateOneRequiredWithoutQualityChecklistNestedInputSchema:()=>FB,RestaurantUpdateOneRequiredWithoutQustomerFeedbackNestedInputSchema:()=>oq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ta,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>e2,RestaurantUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Uq,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>q2,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>Wi,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>_pt,RestaurantUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>zrt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Zpt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>Hrt,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>Hct,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>kct,RestaurantUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>npt,RestaurantUpdateToOneWithWhereWithoutQualityChecklistInputSchema:()=>Prt,RestaurantUpdateToOneWithWhereWithoutQustomerFeedbackInputSchema:()=>Frt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Lpt,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>ort,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>Bpt,RestaurantUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>Krt,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>HW,RestaurantUpdateWithoutCookbooksInputSchema:()=>iE,RestaurantUpdateWithoutEquipmentInputSchema:()=>MD,RestaurantUpdateWithoutInventoryInputSchema:()=>G_,RestaurantUpdateWithoutLeftoverItemInputSchema:()=>c_,RestaurantUpdateWithoutMenusInputSchema:()=>cL,RestaurantUpdateWithoutOrdersInputSchema:()=>VE,RestaurantUpdateWithoutOrganizationInputSchema:()=>u8,RestaurantUpdateWithoutProductionPlanInputSchema:()=>A_,RestaurantUpdateWithoutQualityChecklistInputSchema:()=>DD,RestaurantUpdateWithoutQustomerFeedbackInputSchema:()=>a_,RestaurantUpdateWithoutRecipesInputSchema:()=>rE,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>gD,RestaurantUpdateWithoutUsersInputSchema:()=>eE,RestaurantUpdateWithoutWasteRecordInputSchema:()=>m_,RestaurantUpsertArgsSchema:()=>wRt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>VW,RestaurantUpsertWithoutCookbooksInputSchema:()=>Dpt,RestaurantUpsertWithoutEquipmentInputSchema:()=>drt,RestaurantUpsertWithoutInventoryInputSchema:()=>Mpt,RestaurantUpsertWithoutLeftoverItemInputSchema:()=>Vrt,RestaurantUpsertWithoutMenusInputSchema:()=>Vct,RestaurantUpsertWithoutOrdersInputSchema:()=>Rct,RestaurantUpsertWithoutProductionPlanInputSchema:()=>apt,RestaurantUpsertWithoutQualityChecklistInputSchema:()=>Trt,RestaurantUpsertWithoutQustomerFeedbackInputSchema:()=>qrt,RestaurantUpsertWithoutRecipesInputSchema:()=>Ept,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>ert,RestaurantUpsertWithoutUsersInputSchema:()=>Npt,RestaurantUpsertWithoutWasteRecordInputSchema:()=>Jrt,RestaurantWhereInputSchema:()=>N,RestaurantWhereUniqueInputSchema:()=>J,SalesTransactionsAggregateArgsSchema:()=>Fmt,SalesTransactionsArgsSchema:()=>Szt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>ptt,SalesTransactionsCountOrderByAggregateInputSchema:()=>rtt,SalesTransactionsCreateArgsSchema:()=>XSt,SalesTransactionsCreateInputSchema:()=>D0,SalesTransactionsCreateManyAndReturnArgsSchema:()=>oTt,SalesTransactionsCreateManyArgsSchema:()=>eTt,SalesTransactionsCreateManyInputSchema:()=>tP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>vw,SalesTransactionsCreateManyMenuItemInputSchema:()=>dQ,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>Qv,SalesTransactionsCreateManyRestaurantInputSchema:()=>lH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Lz,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>Vl,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>sI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>Jh,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>hs,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Fc,SalesTransactionsDeleteArgsSchema:()=>aTt,SalesTransactionsDeleteManyArgsSchema:()=>rTt,SalesTransactionsFindFirstArgsSchema:()=>Bmt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>qmt,SalesTransactionsFindManyArgsSchema:()=>Lw,SalesTransactionsFindUniqueArgsSchema:()=>_mt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>Emt,SalesTransactionsGroupByArgsSchema:()=>Dmt,SalesTransactionsIncludeSchema:()=>Bs,SalesTransactionsListRelationFilterSchema:()=>rM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>ctt,SalesTransactionsMinOrderByAggregateInputSchema:()=>utt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>b4,SalesTransactionsOrderByWithAggregationInputSchema:()=>BL,SalesTransactionsOrderByWithRelationInputSchema:()=>Km,SalesTransactionsScalarFieldEnumSchema:()=>cg,SalesTransactionsScalarWhereInputSchema:()=>Cl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>NC,SalesTransactionsSchema:()=>bdt,SalesTransactionsSelectSchema:()=>qs,SalesTransactionsSumOrderByAggregateInputSchema:()=>ytt,SalesTransactionsUncheckedCreateInputSchema:()=>_0,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Kz,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>bs,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,SalesTransactionsUncheckedUpdateInputSchema:()=>L0,SalesTransactionsUncheckedUpdateManyInputSchema:()=>V0,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Qyt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>hm,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Zut,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>rK,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>M8,SalesTransactionsUpdateArgsSchema:()=>nTt,SalesTransactionsUpdateInputSchema:()=>E0,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>lTt,SalesTransactionsUpdateManyArgsSchema:()=>iTt,SalesTransactionsUpdateManyMutationInputSchema:()=>Mj,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>zj,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>TU,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>pm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Ir,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>dj,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SU,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>lK,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>j8,SalesTransactionsUpsertArgsSchema:()=>tTt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>sj,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AU,SalesTransactionsWhereInputSchema:()=>tn,SalesTransactionsWhereUniqueInputSchema:()=>st,SchedulingConstraintAggregateArgsSchema:()=>Kbt,SchedulingConstraintArgsSchema:()=>Ozt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>dot,SchedulingConstraintCountOrderByAggregateInputSchema:()=>sot,SchedulingConstraintCreateArgsSchema:()=>bUt,SchedulingConstraintCreateInputSchema:()=>vG,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>CUt,SchedulingConstraintCreateManyArgsSchema:()=>gUt,SchedulingConstraintCreateManyInputSchema:()=>CP,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>hO,SchedulingConstraintCreateManyUserInputSchema:()=>TH,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>Kn,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>zb,SchedulingConstraintCreateWithoutUserInputSchema:()=>Cu,SchedulingConstraintDeleteArgsSchema:()=>AUt,SchedulingConstraintDeleteManyArgsSchema:()=>WUt,SchedulingConstraintFindFirstArgsSchema:()=>$bt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>Jbt,SchedulingConstraintFindManyArgsSchema:()=>RK,SchedulingConstraintFindUniqueArgsSchema:()=>tIt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>eIt,SchedulingConstraintGroupByArgsSchema:()=>Xbt,SchedulingConstraintIncludeSchema:()=>Pd,SchedulingConstraintListRelationFilterSchema:()=>T4,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>zot,SchedulingConstraintMinOrderByAggregateInputSchema:()=>mot,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>zat,SchedulingConstraintOrderByWithAggregationInputSchema:()=>nV,SchedulingConstraintOrderByWithRelationInputSchema:()=>uh,SchedulingConstraintScalarFieldEnumSchema:()=>xg,SchedulingConstraintScalarWhereInputSchema:()=>Pp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>aA,SchedulingConstraintSchema:()=>Ndt,SchedulingConstraintSelectSchema:()=>Wd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>hot,SchedulingConstraintUncheckedCreateInputSchema:()=>OG,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>hi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>Au,SchedulingConstraintUncheckedUpdateInputSchema:()=>wG,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>NG,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>Gut,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>tl,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>y7,SchedulingConstraintUpdateArgsSchema:()=>SUt,SchedulingConstraintUpdateInputSchema:()=>fG,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>PUt,SchedulingConstraintUpdateManyArgsSchema:()=>TUt,SchedulingConstraintUpdateManyMutationInputSchema:()=>ON,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>CR,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>wi,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>gR,SchedulingConstraintUpdateWithoutUserInputSchema:()=>u7,SchedulingConstraintUpsertArgsSchema:()=>IUt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>IR,SchedulingConstraintWhereInputSchema:()=>dn,SchedulingConstraintWhereUniqueInputSchema:()=>Ae,SessionAggregateArgsSchema:()=>pgt,SessionArgsSchema:()=>Bzt,SessionAvgOrderByAggregateInputSchema:()=>Sat,SessionCountOrderByAggregateInputSchema:()=>Aat,SessionCreateArgsSchema:()=>XRt,SessionCreateInputSchema:()=>v1,SessionCreateManyAndReturnArgsSchema:()=>okt,SessionCreateManyArgsSchema:()=>ekt,SessionCreateManyInputSchema:()=>jP,SessionCreateManyUserInputEnvelopeSchema:()=>cO,SessionCreateManyUserInputSchema:()=>hH,SessionCreateNestedManyWithoutUserInputSchema:()=>Vn,SessionCreateOrConnectWithoutUserInputSchema:()=>rb,SessionCreateWithoutUserInputSchema:()=>lu,SessionDeleteArgsSchema:()=>akt,SessionDeleteManyArgsSchema:()=>rkt,SessionFindFirstArgsSchema:()=>lgt,SessionFindFirstOrThrowArgsSchema:()=>rgt,SessionFindManyArgsSchema:()=>jK,SessionFindUniqueArgsSchema:()=>ugt,SessionFindUniqueOrThrowArgsSchema:()=>ygt,SessionGroupByArgsSchema:()=>cgt,SessionIncludeSchema:()=>_d,SessionListRelationFilterSchema:()=>C4,SessionMaxOrderByAggregateInputSchema:()=>Tat,SessionMinOrderByAggregateInputSchema:()=>Pat,SessionOrderByRelationAggregateInputSchema:()=>yat,SessionOrderByWithAggregationInputSchema:()=>zV,SessionOrderByWithRelationInputSchema:()=>mh,SessionScalarFieldEnumSchema:()=>qg,SessionScalarWhereInputSchema:()=>Ap,SessionScalarWhereWithAggregatesInputSchema:()=>dA,SessionSchema:()=>Qdt,SessionSelectSchema:()=>Ed,SessionSumOrderByAggregateInputSchema:()=>Wat,SessionUncheckedCreateInputSchema:()=>O1,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>ci,SessionUncheckedCreateWithoutUserInputSchema:()=>ru,SessionUncheckedUpdateInputSchema:()=>w1,SessionUncheckedUpdateManyInputSchema:()=>N1,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>_ut,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Qi,SessionUncheckedUpdateWithoutUserInputSchema:()=>J8,SessionUpdateArgsSchema:()=>nkt,SessionUpdateInputSchema:()=>f1,SessionUpdateManyAndReturnArgsSchema:()=>lkt,SessionUpdateManyArgsSchema:()=>ikt,SessionUpdateManyMutationInputSchema:()=>NN,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>XU,SessionUpdateManyWithoutUserNestedInputSchema:()=>xi,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>KU,SessionUpdateWithoutUserInputSchema:()=>$8,SessionUpsertArgsSchema:()=>tkt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>JU,SessionWhereInputSchema:()=>bn,SessionWhereUniqueInputSchema:()=>Te,ShiftAggregateArgsSchema:()=>qCt,ShiftArgsSchema:()=>JQ,ShiftAvgOrderByAggregateInputSchema:()=>Xnt,ShiftCountOrderByAggregateInputSchema:()=>Knt,ShiftCountOutputTypeArgsSchema:()=>KQ,ShiftCountOutputTypeSelectSchema:()=>AX,ShiftCreateArgsSchema:()=>bjt,ShiftCreateInputSchema:()=>$9,ShiftCreateManyAndReturnArgsSchema:()=>Cjt,ShiftCreateManyArgsSchema:()=>gjt,ShiftCreateManyInputSchema:()=>LP,ShiftCreateManyUserInputEnvelopeSchema:()=>lO,ShiftCreateManyUserInputSchema:()=>dH,ShiftCreateNestedManyWithoutUserInputSchema:()=>_n,ShiftCreateNestedOneWithoutShiftTaskInputSchema:()=>blt,ShiftCreateOrConnectWithoutShiftTaskInputSchema:()=>R6,ShiftCreateOrConnectWithoutUserInputSchema:()=>nb,ShiftCreateWithoutShiftTaskInputSchema:()=>dv,ShiftCreateWithoutUserInputSchema:()=>tu,ShiftDeleteArgsSchema:()=>Ajt,ShiftDeleteManyArgsSchema:()=>Wjt,ShiftFindFirstArgsSchema:()=>NCt,ShiftFindFirstOrThrowArgsSchema:()=>BCt,ShiftFindManyArgsSchema:()=>vK,ShiftFindUniqueArgsSchema:()=>DCt,ShiftFindUniqueOrThrowArgsSchema:()=>_Ct,ShiftGroupByArgsSchema:()=>FCt,ShiftIncludeSchema:()=>hz,ShiftListRelationFilterSchema:()=>g4,ShiftMaxOrderByAggregateInputSchema:()=>tit,ShiftMinOrderByAggregateInputSchema:()=>eit,ShiftOrderByRelationAggregateInputSchema:()=>uat,ShiftOrderByWithAggregationInputSchema:()=>kV,ShiftOrderByWithRelationInputSchema:()=>fm,ShiftScalarFieldEnumSchema:()=>Xg,ShiftScalarRelationFilterSchema:()=>a4,ShiftScalarWhereInputSchema:()=>Cp,ShiftScalarWhereWithAggregatesInputSchema:()=>RA,ShiftSchema:()=>rzt,ShiftSelectSchema:()=>bz,ShiftStatusSchema:()=>Et,ShiftSumOrderByAggregateInputSchema:()=>oit,ShiftTaskAggregateArgsSchema:()=>Fbt,ShiftTaskArgsSchema:()=>Zzt,ShiftTaskAvgOrderByAggregateInputSchema:()=>eot,ShiftTaskCountOrderByAggregateInputSchema:()=>tot,ShiftTaskCreateArgsSchema:()=>XWt,ShiftTaskCreateInputSchema:()=>TG,ShiftTaskCreateManyAndReturnArgsSchema:()=>oUt,ShiftTaskCreateManyArgsSchema:()=>eUt,ShiftTaskCreateManyInputSchema:()=>IP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>pw,ShiftTaskCreateManyShiftInputSchema:()=>rQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>$2,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>nI,ShiftTaskCreateWithoutShiftInputSchema:()=>ts,ShiftTaskDeleteArgsSchema:()=>aUt,ShiftTaskDeleteManyArgsSchema:()=>rUt,ShiftTaskFindFirstArgsSchema:()=>Bbt,ShiftTaskFindFirstOrThrowArgsSchema:()=>qbt,ShiftTaskFindManyArgsSchema:()=>WK,ShiftTaskFindUniqueArgsSchema:()=>_bt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>Ebt,ShiftTaskGroupByArgsSchema:()=>Dbt,ShiftTaskIncludeSchema:()=>Cd,ShiftTaskListRelationFilterSchema:()=>H4,ShiftTaskMaxOrderByAggregateInputSchema:()=>oot,ShiftTaskMinOrderByAggregateInputSchema:()=>aot,ShiftTaskOrderByRelationAggregateInputSchema:()=>Jnt,ShiftTaskOrderByWithAggregationInputSchema:()=>oV,ShiftTaskOrderByWithRelationInputSchema:()=>ph,ShiftTaskScalarFieldEnumSchema:()=>Rg,ShiftTaskScalarWhereInputSchema:()=>fp,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>eA,ShiftTaskSchema:()=>fdt,ShiftTaskSelectSchema:()=>Ad,ShiftTaskSumOrderByAggregateInputSchema:()=>not,ShiftTaskUncheckedCreateInputSchema:()=>PG,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>J2,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>es,ShiftTaskUncheckedUpdateInputSchema:()=>UG,ShiftTaskUncheckedUpdateManyInputSchema:()=>RG,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>qyt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>t5,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>VJ,ShiftTaskUpdateArgsSchema:()=>nUt,ShiftTaskUpdateInputSchema:()=>WG,ShiftTaskUpdateManyAndReturnArgsSchema:()=>lUt,ShiftTaskUpdateManyArgsSchema:()=>iUt,ShiftTaskUpdateManyMutationInputSchema:()=>ZN,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>Lx,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>X2,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>Ex,ShiftTaskUpdateWithoutShiftInputSchema:()=>LJ,ShiftTaskUpsertArgsSchema:()=>tUt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>_x,ShiftTaskWhereInputSchema:()=>yn,ShiftTaskWhereUniqueInputSchema:()=>ge,ShiftUncheckedCreateInputSchema:()=>J9,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>li,ShiftUncheckedCreateWithoutShiftTaskInputSchema:()=>zv,ShiftUncheckedCreateWithoutUserInputSchema:()=>eu,ShiftUncheckedUpdateInputSchema:()=>X9,ShiftUncheckedUpdateManyInputSchema:()=>t$,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>qut,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Li,ShiftUncheckedUpdateWithoutShiftTaskInputSchema:()=>Z_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>V8,ShiftUpdateArgsSchema:()=>Sjt,ShiftUpdateInputSchema:()=>K9,ShiftUpdateManyAndReturnArgsSchema:()=>Pjt,ShiftUpdateManyArgsSchema:()=>Tjt,ShiftUpdateManyMutationInputSchema:()=>FN,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>LU,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Ui,ShiftUpdateOneRequiredWithoutShiftTaskNestedInputSchema:()=>Ilt,ShiftUpdateToOneWithWhereWithoutShiftTaskInputSchema:()=>zpt,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>EU,ShiftUpdateWithoutShiftTaskInputSchema:()=>M_,ShiftUpdateWithoutUserInputSchema:()=>L8,ShiftUpsertArgsSchema:()=>Ijt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>_U,ShiftUpsertWithoutShiftTaskInputSchema:()=>dpt,ShiftWhereInputSchema:()=>$e,ShiftWhereUniqueInputSchema:()=>Xt,SkillLevelSchema:()=>W,SortOrderInputSchema:()=>C,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>oCt,StockCountArgsSchema:()=>VQ,StockCountAvgOrderByAggregateInputSchema:()=>Cnt,StockCountCountOrderByAggregateInputSchema:()=>gnt,StockCountCountOutputTypeArgsSchema:()=>HQ,StockCountCountOutputTypeSelectSchema:()=>IX,StockCountCreateArgsSchema:()=>bxt,StockCountCreateInputSchema:()=>g9,StockCountCreateManyAndReturnArgsSchema:()=>Cxt,StockCountCreateManyArgsSchema:()=>gxt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>TO,StockCountCreateManyCreatedByInputSchema:()=>jH,StockCountCreateManyInputSchema:()=>BP,StockCountCreateManyInventoryInputEnvelopeSchema:()=>Bv,StockCountCreateManyInventoryInputSchema:()=>tH,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>ii,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>gM,StockCountCreateNestedOneWithoutItemsInputSchema:()=>D2,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Ab,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>Vh,StockCountCreateOrConnectWithoutItemsInputSchema:()=>s3,StockCountCreateWithoutCreatedByInputSchema:()=>Ou,StockCountCreateWithoutInventoryInputSchema:()=>kc,StockCountCreateWithoutItemsInputSchema:()=>Ef,StockCountDeleteArgsSchema:()=>Axt,StockCountDeleteManyArgsSchema:()=>Wxt,StockCountFindFirstArgsSchema:()=>tCt,StockCountFindFirstOrThrowArgsSchema:()=>eCt,StockCountFindManyArgsSchema:()=>tN,StockCountFindUniqueArgsSchema:()=>nCt,StockCountFindUniqueOrThrowArgsSchema:()=>iCt,StockCountGroupByArgsSchema:()=>aCt,StockCountIncludeSchema:()=>nz,StockCountItemAggregateArgsSchema:()=>pCt,StockCountItemArgsSchema:()=>Dzt,StockCountItemAvgOrderByAggregateInputSchema:()=>Unt,StockCountItemCountOrderByAggregateInputSchema:()=>Wnt,StockCountItemCreateArgsSchema:()=>Uxt,StockCountItemCreateInputSchema:()=>P9,StockCountItemCreateManyAndReturnArgsSchema:()=>xxt,StockCountItemCreateManyArgsSchema:()=>kxt,StockCountItemCreateManyInputSchema:()=>qP,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Mf,StockCountItemCreateManyItemInputSchema:()=>oQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>_f,StockCountItemCreateManyStockCountInputSchema:()=>aQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>jS,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>bF,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>Kb,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>Xb,StockCountItemCreateWithoutItemInputSchema:()=>_y,StockCountItemCreateWithoutStockCountInputSchema:()=>Ly,StockCountItemDeleteArgsSchema:()=>jxt,StockCountItemDeleteManyArgsSchema:()=>Oxt,StockCountItemFindFirstArgsSchema:()=>lCt,StockCountItemFindFirstOrThrowArgsSchema:()=>rCt,StockCountItemFindManyArgsSchema:()=>eN,StockCountItemFindUniqueArgsSchema:()=>uCt,StockCountItemFindUniqueOrThrowArgsSchema:()=>yCt,StockCountItemGroupByArgsSchema:()=>cCt,StockCountItemIncludeSchema:()=>lz,StockCountItemListRelationFilterSchema:()=>mM,StockCountItemMaxOrderByAggregateInputSchema:()=>Rnt,StockCountItemMinOrderByAggregateInputSchema:()=>knt,StockCountItemOrderByRelationAggregateInputSchema:()=>E4,StockCountItemOrderByWithAggregationInputSchema:()=>TV,StockCountItemOrderByWithRelationInputSchema:()=>Ih,StockCountItemScalarFieldEnumSchema:()=>Yg,StockCountItemScalarWhereInputSchema:()=>Ul,StockCountItemScalarWhereWithAggregatesInputSchema:()=>SA,StockCountItemSchema:()=>ozt,StockCountItemSelectSchema:()=>rz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>IN,StockCountItemSumOrderByAggregateInputSchema:()=>xnt,StockCountItemUncheckedCreateInputSchema:()=>W9,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>vS,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>IF,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>Ey,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>Vy,StockCountItemUncheckedUpdateInputSchema:()=>R9,StockCountItemUncheckedUpdateManyInputSchema:()=>k9,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>vyt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>_S,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>Oyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>SF,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>vJ,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>fJ,StockCountItemUpdateArgsSchema:()=>Mxt,StockCountItemUpdateInputSchema:()=>U9,StockCountItemUpdateManyAndReturnArgsSchema:()=>vxt,StockCountItemUpdateManyArgsSchema:()=>Zxt,StockCountItemUpdateManyMutationInputSchema:()=>_j,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>Ux,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>xx,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>qS,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>AF,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>Wx,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>kx,StockCountItemUpdateWithoutItemInputSchema:()=>ZJ,StockCountItemUpdateWithoutStockCountInputSchema:()=>OJ,StockCountItemUpsertArgsSchema:()=>Rxt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>Px,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>Rx,StockCountItemWhereInputSchema:()=>Cn,StockCountItemWhereUniqueInputSchema:()=>ht,StockCountListRelationFilterSchema:()=>nM,StockCountMaxOrderByAggregateInputSchema:()=>Ant,StockCountMinOrderByAggregateInputSchema:()=>Snt,StockCountOrderByRelationAggregateInputSchema:()=>u4,StockCountOrderByWithAggregationInputSchema:()=>SV,StockCountOrderByWithRelationInputSchema:()=>Zm,StockCountScalarFieldEnumSchema:()=>Qg,StockCountScalarRelationFilterSchema:()=>L4,StockCountScalarWhereInputSchema:()=>Il,StockCountScalarWhereWithAggregatesInputSchema:()=>AA,StockCountSchema:()=>ezt,StockCountSelectSchema:()=>iz,StockCountSumOrderByAggregateInputSchema:()=>Tnt,StockCountUncheckedCreateInputSchema:()=>C9,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ti,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>SM,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>fu,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>xc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>Lf,StockCountUncheckedUpdateInputSchema:()=>S9,StockCountUncheckedUpdateManyInputSchema:()=>T9,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>oyt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>rl,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Uut,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>xM,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>W7,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>g8,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>FE,StockCountUpdateArgsSchema:()=>Sxt,StockCountUpdateInputSchema:()=>A9,StockCountUpdateManyAndReturnArgsSchema:()=>Pxt,StockCountUpdateManyArgsSchema:()=>Txt,StockCountUpdateManyMutationInputSchema:()=>Dj,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>DR,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>iU,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Ei,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>UM,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>E2,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Sct,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>FR,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>nU,StockCountUpdateWithoutCreatedByInputSchema:()=>P7,StockCountUpdateWithoutInventoryInputSchema:()=>I8,StockCountUpdateWithoutItemsInputSchema:()=>qE,StockCountUpsertArgsSchema:()=>Ixt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>qR,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>aU,StockCountUpsertWithoutItemsInputSchema:()=>Act,StockCountWhereInputSchema:()=>Ye,StockCountWhereUniqueInputSchema:()=>lt,StringFieldUpdateOperationsInputSchema:()=>n,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>ul,StringNullableWithAggregatesFilterSchema:()=>Pt,StringWithAggregatesFilterSchema:()=>ut,SupplierPriceHistoryAggregateArgsSchema:()=>Hht,SupplierPriceHistoryArgsSchema:()=>Uzt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>set,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>yet,SupplierPriceHistoryCreateArgsSchema:()=>fPt,SupplierPriceHistoryCreateInputSchema:()=>NY,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>BPt,SupplierPriceHistoryCreateManyArgsSchema:()=>NPt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>cf,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>KH,SupplierPriceHistoryCreateManyInputSchema:()=>uP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>iw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>lQ,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>kI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>vF,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>Yb,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>aI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>Oy,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>Ky,SupplierPriceHistoryDeleteArgsSchema:()=>qPt,SupplierPriceHistoryDeleteManyArgsSchema:()=>EPt,SupplierPriceHistoryFindFirstArgsSchema:()=>Lht,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>Vht,SupplierPriceHistoryFindManyArgsSchema:()=>Qw,SupplierPriceHistoryFindUniqueArgsSchema:()=>Yht,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>Ght,SupplierPriceHistoryGroupByArgsSchema:()=>Qht,SupplierPriceHistoryIncludeSchema:()=>nd,SupplierPriceHistoryListRelationFilterSchema:()=>dM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>det,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>zet,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>_4,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>YL,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>oh,SupplierPriceHistoryScalarFieldEnumSchema:()=>gg,SupplierPriceHistoryScalarWhereInputSchema:()=>Wl,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>QC,SupplierPriceHistorySchema:()=>Rdt,SupplierPriceHistorySelectSchema:()=>id,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>met,SupplierPriceHistoryUncheckedCreateInputSchema:()=>BY,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>wI,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>wF,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>fy,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>Xy,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>FY,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>DY,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>xyt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>JI,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>Byt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>_F,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>WJ,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>EJ,SupplierPriceHistoryUpdateArgsSchema:()=>FPt,SupplierPriceHistoryUpdateInputSchema:()=>qY,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>_Pt,SupplierPriceHistoryUpdateManyArgsSchema:()=>DPt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>Oj,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>zx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>Dx,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>EI,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>qF,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>dx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Fx,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>PJ,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>_J,SupplierPriceHistoryUpsertArgsSchema:()=>wPt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>sx,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>qx,SupplierPriceHistoryWhereInputSchema:()=>nn,SupplierPriceHistoryWhereUniqueInputSchema:()=>zt,TaskTypeSchema:()=>ie,TransactionIsolationLevelSchema:()=>pdt,TransactionTypeSchema:()=>xt,UserAggregateArgsSchema:()=>ogt,UserArgsSchema:()=>Yt,UserAvgOrderByAggregateInputSchema:()=>hat,UserCountOrderByAggregateInputSchema:()=>mat,UserCountOutputTypeArgsSchema:()=>NQ,UserCountOutputTypeSelectSchema:()=>sX,UserCreateArgsSchema:()=>LRt,UserCreateInputSchema:()=>k1,UserCreateManyAndReturnArgsSchema:()=>QRt,UserCreateManyArgsSchema:()=>HRt,UserCreateManyInputSchema:()=>xP,UserCreateManyOrganizationInputEnvelopeSchema:()=>vv,UserCreateManyOrganizationInputSchema:()=>JV,UserCreateManyRestaurantInputEnvelopeSchema:()=>Dv,UserCreateManyRestaurantInputSchema:()=>eH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>k2,UserCreateNestedManyWithoutRestaurantInputSchema:()=>ql,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>glt,UserCreateNestedOneWithoutChecklistCompleteInputSchema:()=>HB,UserCreateNestedOneWithoutCustomerFeedbackInputSchema:()=>eq,UserCreateNestedOneWithoutInventoryTransactionInputSchema:()=>yF,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>RS,UserCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>Vq,UserCreateNestedOneWithoutLeftoverItemInputSchema:()=>gq,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>vlt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>VF,UserCreateNestedOneWithoutProductionPlanInputSchema:()=>jq,UserCreateNestedOneWithoutProductionPlanItemInputSchema:()=>qq,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>ZT,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>MT,UserCreateNestedOneWithoutSchedulingConstraintInputSchema:()=>Alt,UserCreateNestedOneWithoutSessionsInputSchema:()=>xlt,UserCreateNestedOneWithoutShiftsInputSchema:()=>G2,UserCreateNestedOneWithoutStockCountInputSchema:()=>hF,UserCreateNestedOneWithoutWasteRecordInputSchema:()=>Wq,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>k6,UserCreateOrConnectWithoutChecklistCompleteInputSchema:()=>p6,UserCreateOrConnectWithoutCustomerFeedbackInputSchema:()=>m6,UserCreateOrConnectWithoutInventoryTransactionInputSchema:()=>c3,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>l3,UserCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>Z6,UserCreateOrConnectWithoutLeftoverItemInputSchema:()=>I6,UserCreateOrConnectWithoutOrganizationInputSchema:()=>_h,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>T3,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>S3,UserCreateOrConnectWithoutProductionPlanInputSchema:()=>T6,UserCreateOrConnectWithoutProductionPlanItemInputSchema:()=>U6,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>X5,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>K5,UserCreateOrConnectWithoutRestaurantInputSchema:()=>Hh,UserCreateOrConnectWithoutSchedulingConstraintInputSchema:()=>x6,UserCreateOrConnectWithoutSessionsInputSchema:()=>_6,UserCreateOrConnectWithoutShiftsInputSchema:()=>g3,UserCreateOrConnectWithoutStockCountInputSchema:()=>y3,UserCreateOrConnectWithoutWasteRecordInputSchema:()=>A6,UserCreateWithoutAvailabilityInputSchema:()=>mv,UserCreateWithoutChecklistCompleteInputSchema:()=>UZ,UserCreateWithoutCustomerFeedbackInputSchema:()=>DZ,UserCreateWithoutInventoryTransactionInputSchema:()=>wf,UserCreateWithoutInventoryUpdatesInputSchema:()=>Rf,UserCreateWithoutInventoryWithdrawalInputSchema:()=>Tv,UserCreateWithoutLeftoverItemInputSchema:()=>YZ,UserCreateWithoutOrganizationInputSchema:()=>Sc,UserCreateWithoutPasswordResetsInputSchema:()=>hw,UserCreateWithoutPrepItemsInputSchema:()=>zw,UserCreateWithoutProductionPlanInputSchema:()=>nv,UserCreateWithoutProductionPlanItemInputSchema:()=>yv,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>aZ,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>eZ,UserCreateWithoutRestaurantInputSchema:()=>jc,UserCreateWithoutSchedulingConstraintInputSchema:()=>bv,UserCreateWithoutSessionsInputSchema:()=>PO,UserCreateWithoutShiftsInputSchema:()=>lw,UserCreateWithoutStockCountInputSchema:()=>Ff,UserCreateWithoutWasteRecordInputSchema:()=>tv,UserDeleteArgsSchema:()=>YRt,UserDeleteManyArgsSchema:()=>KRt,UserFindFirstArgsSchema:()=>tgt,UserFindFirstOrThrowArgsSchema:()=>egt,UserFindManyArgsSchema:()=>Jw,UserFindUniqueArgsSchema:()=>ngt,UserFindUniqueOrThrowArgsSchema:()=>igt,UserGroupByArgsSchema:()=>agt,UserIncludeSchema:()=>Fd,UserListRelationFilterSchema:()=>aM,UserMaxOrderByAggregateInputSchema:()=>bat,UserMinOrderByAggregateInputSchema:()=>Iat,UserNullableScalarRelationFilterSchema:()=>CI,UserOrderByRelationAggregateInputSchema:()=>p4,UserOrderByWithAggregationInputSchema:()=>dV,UserOrderByWithRelationInputSchema:()=>Ke,UserRoleSchema:()=>x,UserScalarFieldEnumSchema:()=>Bg,UserScalarRelationFilterSchema:()=>qe,UserScalarWhereInputSchema:()=>bl,UserScalarWhereWithAggregatesInputSchema:()=>sA,UserSchema:()=>Hdt,UserSelectSchema:()=>Dd,UserSumOrderByAggregateInputSchema:()=>gat,UserUncheckedCreateInputSchema:()=>x1,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>j2,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>hv,UserUncheckedCreateWithoutChecklistCompleteInputSchema:()=>RZ,UserUncheckedCreateWithoutCustomerFeedbackInputSchema:()=>_Z,UserUncheckedCreateWithoutInventoryTransactionInputSchema:()=>Nf,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>kf,UserUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>Pv,UserUncheckedCreateWithoutLeftoverItemInputSchema:()=>GZ,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Tc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>bw,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>mw,UserUncheckedCreateWithoutProductionPlanInputSchema:()=>iv,UserUncheckedCreateWithoutProductionPlanItemInputSchema:()=>sv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>nZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>oZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Mc,UserUncheckedCreateWithoutSchedulingConstraintInputSchema:()=>Iv,UserUncheckedCreateWithoutSessionsInputSchema:()=>WO,UserUncheckedCreateWithoutShiftsInputSchema:()=>rw,UserUncheckedCreateWithoutStockCountInputSchema:()=>Df,UserUncheckedCreateWithoutWasteRecordInputSchema:()=>ev,UserUncheckedUpdateInputSchema:()=>M1,UserUncheckedUpdateManyInputSchema:()=>Z1,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Tut,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>O2,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Rut,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>O_,UserUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>YD,UserUncheckedUpdateWithoutCustomerFeedbackInputSchema:()=>p_,UserUncheckedUpdateWithoutInventoryTransactionInputSchema:()=>OE,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>kE,UserUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>__,UserUncheckedUpdateWithoutLeftoverItemInputSchema:()=>z_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>d8,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>pL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>lL,UserUncheckedUpdateWithoutProductionPlanInputSchema:()=>P_,UserUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>j_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>jD,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>kD,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>A8,UserUncheckedUpdateWithoutSchedulingConstraintInputSchema:()=>w_,UserUncheckedUpdateWithoutSessionsInputSchema:()=>nE,UserUncheckedUpdateWithoutShiftsInputSchema:()=>tL,UserUncheckedUpdateWithoutStockCountInputSchema:()=>BE,UserUncheckedUpdateWithoutWasteRecordInputSchema:()=>C_,UserUpdateArgsSchema:()=>GRt,UserUpdateInputSchema:()=>j1,UserUpdateManyAndReturnArgsSchema:()=>JRt,UserUpdateManyArgsSchema:()=>$Rt,UserUpdateManyMutationInputSchema:()=>Bj,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>$W,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>pU,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>Z2,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>sr,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>Clt,UserUpdateOneRequiredWithoutChecklistCompleteNestedInputSchema:()=>$B,UserUpdateOneRequiredWithoutInventoryTransactionNestedInputSchema:()=>zF,UserUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>Yq,UserUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>Sq,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>Olt,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>YF,UserUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Oq,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>BT,UserUpdateOneRequiredWithoutSchedulingConstraintNestedInputSchema:()=>Slt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>jlt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>K2,UserUpdateOneRequiredWithoutStockCountNestedInputSchema:()=>CF,UserUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>kq,UserUpdateOneWithoutCustomerFeedbackNestedInputSchema:()=>nq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>wS,UserUpdateOneWithoutProductionPlanItemNestedInputSchema:()=>_q,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>qT,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>hpt,UserUpdateToOneWithWhereWithoutChecklistCompleteInputSchema:()=>jrt,UserUpdateToOneWithWhereWithoutCustomerFeedbackInputSchema:()=>Lrt,UserUpdateToOneWithWhereWithoutInventoryTransactionInputSchema:()=>hct,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>uct,UserUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>Ppt,UserUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>$rt,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>Lct,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>_ct,UserUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>lpt,UserUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>spt,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>srt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>urt,UserUpdateToOneWithWhereWithoutSchedulingConstraintInputSchema:()=>Ipt,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>Fpt,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>wct,UserUpdateToOneWithWhereWithoutStockCountInputSchema:()=>Cct,UserUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>opt,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>GW,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>rU,UserUpdateWithoutAvailabilityInputSchema:()=>v_,UserUpdateWithoutChecklistCompleteInputSchema:()=>QD,UserUpdateWithoutCustomerFeedbackInputSchema:()=>r_,UserUpdateWithoutInventoryTransactionInputSchema:()=>vE,UserUpdateWithoutInventoryUpdatesInputSchema:()=>RE,UserUpdateWithoutInventoryWithdrawalInputSchema:()=>D_,UserUpdateWithoutLeftoverItemInputSchema:()=>d_,UserUpdateWithoutOrganizationInputSchema:()=>s8,UserUpdateWithoutPasswordResetsInputSchema:()=>rL,UserUpdateWithoutPrepItemsInputSchema:()=>iL,UserUpdateWithoutProductionPlanInputSchema:()=>T_,UserUpdateWithoutProductionPlanItemInputSchema:()=>x_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>xD,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>RD,UserUpdateWithoutRestaurantInputSchema:()=>C8,UserUpdateWithoutSchedulingConstraintInputSchema:()=>f_,UserUpdateWithoutSessionsInputSchema:()=>aE,UserUpdateWithoutShiftsInputSchema:()=>XE,UserUpdateWithoutStockCountInputSchema:()=>NE,UserUpdateWithoutWasteRecordInputSchema:()=>g_,UserUpsertArgsSchema:()=>VRt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>YW,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>lU,UserUpsertWithoutAvailabilityInputSchema:()=>mpt,UserUpsertWithoutChecklistCompleteInputSchema:()=>xrt,UserUpsertWithoutCustomerFeedbackInputSchema:()=>Ert,UserUpsertWithoutInventoryTransactionInputSchema:()=>mct,UserUpsertWithoutInventoryUpdatesInputSchema:()=>cct,UserUpsertWithoutInventoryWithdrawalInputSchema:()=>Tpt,UserUpsertWithoutLeftoverItemInputSchema:()=>Grt,UserUpsertWithoutPasswordResetsInputSchema:()=>Ect,UserUpsertWithoutPrepItemsInputSchema:()=>Dct,UserUpsertWithoutProductionPlanInputSchema:()=>ipt,UserUpsertWithoutProductionPlanItemInputSchema:()=>ypt,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>yrt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>crt,UserUpsertWithoutSchedulingConstraintInputSchema:()=>bpt,UserUpsertWithoutSessionsInputSchema:()=>qpt,UserUpsertWithoutShiftsInputSchema:()=>fct,UserUpsertWithoutStockCountInputSchema:()=>gct,UserUpsertWithoutWasteRecordInputSchema:()=>ept,UserWhereInputSchema:()=>Z,UserWhereUniqueInputSchema:()=>j,VendorAggregateArgsSchema:()=>vCt,VendorArgsSchema:()=>xj,VendorAvgOrderByAggregateInputSchema:()=>Qnt,VendorCountOrderByAggregateInputSchema:()=>Hnt,VendorCountOutputTypeArgsSchema:()=>$Q,VendorCountOutputTypeSelectSchema:()=>CX,VendorCreateArgsSchema:()=>pjt,VendorCreateInputSchema:()=>V9,VendorCreateManyAndReturnArgsSchema:()=>yjt,VendorCreateManyArgsSchema:()=>ujt,VendorCreateManyInputSchema:()=>EP,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>WI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>PF,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>g2,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>Vb,VendorCreateOrConnectWithoutOrdersInputSchema:()=>h3,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>y6,VendorCreateWithoutIngredientsInputSchema:()=>ky,VendorCreateWithoutOrdersInputSchema:()=>Jf,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>vZ,VendorDeleteArgsSchema:()=>sjt,VendorDeleteManyArgsSchema:()=>hjt,VendorFindFirstArgsSchema:()=>MCt,VendorFindFirstOrThrowArgsSchema:()=>ZCt,VendorFindManyArgsSchema:()=>ZK,VendorFindUniqueArgsSchema:()=>fCt,VendorFindUniqueOrThrowArgsSchema:()=>wCt,VendorGroupByArgsSchema:()=>OCt,VendorIncludeSchema:()=>zz,VendorListRelationFilterSchema:()=>q4,VendorMaxOrderByAggregateInputSchema:()=>Ynt,VendorMinOrderByAggregateInputSchema:()=>Gnt,VendorOrderByRelationAggregateInputSchema:()=>Hat,VendorOrderByWithAggregationInputSchema:()=>RV,VendorOrderByWithRelationInputSchema:()=>_p,VendorScalarFieldEnumSchema:()=>Kg,VendorScalarRelationFilterSchema:()=>Xj,VendorScalarWhereInputSchema:()=>Op,VendorScalarWhereWithAggregatesInputSchema:()=>UA,VendorSchema:()=>lzt,VendorSelectSchema:()=>mz,VendorSumOrderByAggregateInputSchema:()=>$nt,VendorUncheckedCreateInputSchema:()=>H9,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>vI,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>xy,VendorUncheckedCreateWithoutOrdersInputSchema:()=>Kf,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>OZ,VendorUncheckedUpdateInputSchema:()=>Y9,VendorUncheckedUpdateManyInputSchema:()=>G9,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Uyt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>YI,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>gJ,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>YE,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>t_,VendorUpdateArgsSchema:()=>djt,VendorUpdateInputSchema:()=>Q9,VendorUpdateManyAndReturnArgsSchema:()=>mjt,VendorUpdateManyArgsSchema:()=>zjt,VendorUpdateManyMutationInputSchema:()=>qN,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>ix,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>FI,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>kF,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>A2,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>jct,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>wrt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>nx,VendorUpdateWithoutIngredientsInputSchema:()=>IJ,VendorUpdateWithoutOrdersInputSchema:()=>QE,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>XD,VendorUpsertArgsSchema:()=>cjt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>ax,VendorUpsertWithoutOrdersInputSchema:()=>xct,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>frt,VendorWhereInputSchema:()=>je,VendorWhereUniqueInputSchema:()=>Ht,WasteRecordAggregateArgsSchema:()=>Sbt,WasteRecordArgsSchema:()=>jzt,WasteRecordAvgOrderByAggregateInputSchema:()=>Fet,WasteRecordCountOrderByAggregateInputSchema:()=>qet,WasteRecordCreateArgsSchema:()=>UWt,WasteRecordCreateInputSchema:()=>pG,WasteRecordCreateManyAndReturnArgsSchema:()=>xWt,WasteRecordCreateManyArgsSchema:()=>kWt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>rf,WasteRecordCreateManyIngredienteInputSchema:()=>$H,WasteRecordCreateManyInputSchema:()=>mP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>sO,WasteRecordCreateManyRecordedByInputSchema:()=>gH,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>Gv,WasteRecordCreateManyRestaurantInputSchema:()=>pH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>UI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>Yn,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Ql,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>Hb,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>ub,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>Xh,WasteRecordCreateWithoutIngredienteInputSchema:()=>jy,WasteRecordCreateWithoutRecordedByInputSchema:()=>su,WasteRecordCreateWithoutRestaurantInputSchema:()=>Lc,WasteRecordDeleteArgsSchema:()=>jWt,WasteRecordDeleteManyArgsSchema:()=>OWt,WasteRecordFindFirstArgsSchema:()=>Cbt,WasteRecordFindFirstOrThrowArgsSchema:()=>Abt,WasteRecordFindManyArgsSchema:()=>oT,WasteRecordFindUniqueArgsSchema:()=>Pbt,WasteRecordFindUniqueOrThrowArgsSchema:()=>Wbt,WasteRecordGroupByArgsSchema:()=>Tbt,WasteRecordIncludeSchema:()=>zd,WasteRecordListRelationFilterSchema:()=>gS,WasteRecordMaxOrderByAggregateInputSchema:()=>Det,WasteRecordMinOrderByAggregateInputSchema:()=>_et,WasteRecordOrderByRelationAggregateInputSchema:()=>cB,WasteRecordOrderByWithAggregationInputSchema:()=>XL,WasteRecordOrderByWithRelationInputSchema:()=>lh,WasteRecordScalarFieldEnumSchema:()=>Pg,WasteRecordScalarWhereInputSchema:()=>fn,WasteRecordScalarWhereWithAggregatesInputSchema:()=>KC,WasteRecordSchema:()=>Zdt,WasteRecordSelectSchema:()=>md,WasteRecordSumOrderByAggregateInputSchema:()=>Eet,WasteRecordUncheckedCreateInputSchema:()=>cG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>OI,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>si,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>My,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>du,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,WasteRecordUncheckedUpdateInputSchema:()=>yG,WasteRecordUncheckedUpdateManyInputSchema:()=>sG,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Ryt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>GI,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Vut,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>$i,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Out,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>AJ,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>a7,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>f8,WasteRecordUpdateArgsSchema:()=>MWt,WasteRecordUpdateInputSchema:()=>uG,WasteRecordUpdateManyAndReturnArgsSchema:()=>vWt,WasteRecordUpdateManyArgsSchema:()=>ZWt,WasteRecordUpdateManyMutationInputSchema:()=>AT,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>px,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>pR,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>xU,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>DI,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>Zi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>rx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>rR,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kU,WasteRecordUpdateWithoutIngredienteInputSchema:()=>CJ,WasteRecordUpdateWithoutRecordedByInputSchema:()=>o7,WasteRecordUpdateWithoutRestaurantInputSchema:()=>O8,WasteRecordUpsertArgsSchema:()=>RWt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>lx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>lR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>RU,WasteRecordWhereInputSchema:()=>cn,WasteRecordWhereUniqueInputSchema:()=>D});var ye;(function(c){c.assertEqual=z=>z;function i(z){}c.assertIs=i;function p(z){throw new Error}c.assertNever=p,c.arrayToEnum=z=>{let h={};for(let P of z)h[P]=P;return h},c.getValidEnumValues=z=>{let h=c.objectKeys(z).filter(R=>typeof z[z[R]]!="number"),P={};for(let R of h)P[R]=z[R];return c.objectValues(P)},c.objectValues=z=>c.objectKeys(z).map(function(h){return z[h]}),c.objectKeys=typeof Object.keys=="function"?z=>Object.keys(z):z=>{let h=[];for(let P in z)Object.prototype.hasOwnProperty.call(z,P)&&h.push(P);return h},c.find=(z,h)=>{for(let P of z)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?z=>Number.isInteger(z):z=>typeof z=="number"&&isFinite(z)&&Math.floor(z)===z;function y(z,h=" | "){return z.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=y,c.jsonStringifyReplacer=(z,h)=>typeof h=="bigint"?h.toString():h;})(ye||(ye={}));var RL;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(RL||(RL={}));var K=ye.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Lm=c=>{switch(typeof c){case "undefined":return K.undefined;case "string":return K.string;case "number":return isNaN(c)?K.nan:K.number;case "boolean":return K.boolean;case "function":return K.function;case "bigint":return K.bigint;case "symbol":return K.symbol;case "object":return Array.isArray(c)?K.array:c===null?K.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?K.promise:typeof Map<"u"&&c instanceof Map?K.map:typeof Set<"u"&&c instanceof Set?K.set:typeof Date<"u"&&c instanceof Date?K.date:K.object;default:return K.unknown}},O=ye.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),tst=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),Lr=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=y=>{this.issues=[...this.issues,y];},this.addIssues=(y=[])=>{this.issues=[...this.issues,...y];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(h){return h.message},y={_errors:[]},z=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(z);else if(P.code==="invalid_return_type")z(P.returnTypeError);else if(P.code==="invalid_arguments")z(P.argumentsError);else if(P.path.length===0)y._errors.push(p(P));else {let R=y,$=0;for(;$<P.path.length;){let Q=P.path[$];$===P.path.length-1?(R[Q]=R[Q]||{_errors:[]},R[Q]._errors.push(p(P))):R[Q]=R[Q]||{_errors:[]},R=R[Q],$++;}}};return z(this),y}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ye.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},y=[];for(let z of this.issues)z.path.length>0?(p[z.path[0]]=p[z.path[0]]||[],p[z.path[0]].push(i(z))):y.push(i(z));return {formErrors:y,fieldErrors:p}}get formErrors(){return this.flatten()}};Lr.create=c=>new Lr(c);var yT=(c,i)=>{let p;switch(c.code){case O.invalid_type:c.received===K.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case O.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,ye.jsonStringifyReplacer)}`;break;case O.unrecognized_keys:p=`Unrecognized key(s) in object: ${ye.joinValues(c.keys,", ")}`;break;case O.invalid_union:p="Invalid input";break;case O.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${ye.joinValues(c.options)}`;break;case O.invalid_enum_value:p=`Invalid enum value. Expected ${ye.joinValues(c.options)}, received '${c.received}'`;break;case O.invalid_arguments:p="Invalid function arguments";break;case O.invalid_return_type:p="Invalid function return type";break;case O.invalid_date:p="Invalid date";break;case O.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:ye.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case O.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case O.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case O.custom:p="Invalid input";break;case O.invalid_intersection_types:p="Intersection results could not be merged";break;case O.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case O.not_finite:p="Number must be finite";break;default:p=i.defaultError,ye.assertNever(c);}return {message:p}},_K=yT;function est(c){_K=c;}function lN(){return _K}var rN=c=>{let{data:i,path:p,errorMaps:y,issueData:z}=c,h=[...p,...z.path||[]],P={...z,path:h};if(z.message!==void 0)return {...z,path:h,message:z.message};let R="",$=y.filter(Q=>!!Q).slice().reverse();for(let Q of $)R=Q(P,{data:i,defaultError:R}).message;return {...z,path:h,message:R}},ost=[];function Y(c,i){let p=lN(),y=rN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===yT?void 0:yT].filter(z=>!!z)});c.common.issues.push(y);}var yl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let y=[];for(let z of p){if(z.status==="aborted")return Wt;z.status==="dirty"&&i.dirty(),y.push(z.value);}return {status:i.value,value:y}}static async mergeObjectAsync(i,p){let y=[];for(let z of p){let h=await z.key,P=await z.value;y.push({key:h,value:P});}return c.mergeObjectSync(i,y)}static mergeObjectSync(i,p){let y={};for(let z of p){let{key:h,value:P}=z;if(h.status==="aborted"||P.status==="aborted")return Wt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||z.alwaysSet)&&(y[h.value]=P.value);}return {status:i.value,value:y}}},Wt=Object.freeze({status:"aborted"}),uT=c=>({status:"dirty",value:c}),xl=c=>({status:"valid",value:c}),kL=c=>c.status==="aborted",xL=c=>c.status==="dirty",zC=c=>c.status==="valid",LT=c=>typeof Promise<"u"&&c instanceof Promise;function pN(c,i,p,y){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function EK(c,i,p,y,z){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var et;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(et||(et={}));var _T,ET,pp=class{constructor(i,p,y,z){this._cachedPath=[],this.parent=i,this.data=p,this._path=y,this._key=z;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},qK=(c,i)=>{if(zC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new Lr(c.common.issues);return this._error=p,this._error}}};function Nt(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:y,description:z}=c;if(i&&(p||y))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:z}:{errorMap:(P,R)=>{var $,Q;let{message:St}=c;return P.code==="invalid_enum_value"?{message:St??R.defaultError}:typeof R.data>"u"?{message:($=St??y)!==null&&$!==void 0?$:R.defaultError}:P.code!=="invalid_type"?{message:R.defaultError}:{message:(Q=St??p)!==null&&Q!==void 0?Q:R.defaultError}},description:z}}var Bt=class{get description(){return this._def.description}_getType(i){return Lm(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:Lm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new yl,ctx:{common:i.parent.common,data:i.data,parsedType:Lm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(LT(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let y=this.safeParse(i,p);if(y.success)return y.data;throw y.error}safeParse(i,p){var y;let z={common:{issues:[],async:(y=p?.async)!==null&&y!==void 0?y:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Lm(i)},h=this._parseSync({data:i,path:z.path,parent:z});return qK(z,h)}"~validate"(i){var p,y;let z={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Lm(i)};if(!this["~standard"].async)try{let h=this._parseSync({data:i,path:[],parent:z});return zC(h)?{value:h.value}:{issues:z.common.issues}}catch(h){!((y=(p=h?.message)===null||p===void 0?void 0:p.toLowerCase())===null||y===void 0)&&y.includes("encountered")&&(this["~standard"].async=true),z.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:z}).then(h=>zC(h)?{value:h.value}:{issues:z.common.issues})}async parseAsync(i,p){let y=await this.safeParseAsync(i,p);if(y.success)return y.data;throw y.error}async safeParseAsync(i,p){let y={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Lm(i)},z=this._parse({data:i,path:y.path,parent:y}),h=await(LT(z)?z:Promise.resolve(z));return qK(y,h)}refine(i,p){let y=z=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(z):p;return this._refinement((z,h)=>{let P=i(z),R=()=>h.addIssue({code:O.custom,...y(z)});return typeof Promise<"u"&&P instanceof Promise?P.then($=>$?true:(R(),false)):P?true:(R(),false)})}refinement(i,p){return this._refinement((y,z)=>i(y)?true:(z.addIssue(typeof p=="function"?p(y,z):p),false))}_refinement(i){return new Vr({schema:this,typeName:Tt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return rp.create(this,this._def)}nullable(){return Am.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Hm.create(this)}promise(){return eg.create(this,this._def)}or(i){return AC.create([this,i],this._def)}and(i){return SC.create(this,i,this._def)}transform(i){return new Vr({...Nt(this._def),schema:this,typeName:Tt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new RC({...Nt(this._def),innerType:this,defaultValue:p,typeName:Tt.ZodDefault})}brand(){return new VT({typeName:Tt.ZodBranded,type:this,...Nt(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new kC({...Nt(this._def),innerType:this,catchValue:p,typeName:Tt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return HT.create(this,i)}readonly(){return xC.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},ast=/^c[^\s-]{8,}$/i,nst=/^[0-9a-z]+$/,ist=/^[0-9A-HJKMNP-TV-Z]{26}$/i,lst=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,rst=/^[a-z0-9_-]{21}$/i,pst=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,cst=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,ust=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,yst="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",UL,sst=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,dst=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,zst=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,mst=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,hst=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,bst=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,LK="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Ist=new RegExp(`^${LK}$`);function VK(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function gst(c){return new RegExp(`^${VK(c)}$`)}function HK(c){let i=`${LK}T${VK(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Cst(c,i){return !!((i==="v4"||!i)&&sst.test(c)||(i==="v6"||!i)&&zst.test(c))}function Ast(c,i){if(!pst.test(c))return  false;try{let[p]=c.split("."),y=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),z=JSON.parse(atob(y));return !(typeof z!="object"||z===null||!z.typ||!z.alg||i&&z.alg!==i)}catch{return  false}}function Sst(c,i){return !!((i==="v4"||!i)&&dst.test(c)||(i==="v6"||!i)&&mst.test(c))}var XI=class c extends Bt{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==K.string){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.string,received:h.parsedType}),Wt}let y=new yl,z;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(z=this._getOrReturnCtx(i,z),Y(z,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),y.dirty());else if(h.kind==="max")i.data.length>h.value&&(z=this._getOrReturnCtx(i,z),Y(z,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),y.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,R=i.data.length<h.value;(P||R)&&(z=this._getOrReturnCtx(i,z),P?Y(z,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:true,message:h.message}):R&&Y(z,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:true,message:h.message}),y.dirty());}else if(h.kind==="email")ust.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"email",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="emoji")UL||(UL=new RegExp(yst,"u")),UL.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"emoji",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="uuid")lst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"uuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="nanoid")rst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"nanoid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid")ast.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"cuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid2")nst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"cuid2",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="ulid")ist.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"ulid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{z=this._getOrReturnCtx(i,z),Y(z,{validation:"url",code:O.invalid_string,message:h.message}),y.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"regex",code:O.invalid_string,message:h.message}),y.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),y.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:{startsWith:h.value},message:h.message}),y.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:{endsWith:h.value},message:h.message}),y.dirty()):h.kind==="datetime"?HK(h).test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:"datetime",message:h.message}),y.dirty()):h.kind==="date"?Ist.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:"date",message:h.message}),y.dirty()):h.kind==="time"?gst(h).test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{code:O.invalid_string,validation:"time",message:h.message}),y.dirty()):h.kind==="duration"?cst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"duration",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="ip"?Cst(i.data,h.version)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"ip",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="jwt"?Ast(i.data,h.alg)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"jwt",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="cidr"?Sst(i.data,h.version)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"cidr",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="base64"?hst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"base64",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="base64url"?bst.test(i.data)||(z=this._getOrReturnCtx(i,z),Y(z,{validation:"base64url",code:O.invalid_string,message:h.message}),y.dirty()):ye.assertNever(h);return {status:y.value,value:i.data}}_regex(i,p,y){return this.refinement(z=>i.test(z),{validation:p,code:O.invalid_string,...et.errToObj(y)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...et.errToObj(i)})}url(i){return this._addCheck({kind:"url",...et.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...et.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...et.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...et.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...et.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...et.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...et.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...et.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...et.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...et.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...et.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...et.errToObj(i)})}datetime(i){var p,y;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(y=i?.local)!==null&&y!==void 0?y:false,...et.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...et.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...et.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...et.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...et.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...et.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...et.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...et.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...et.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...et.errToObj(p)})}nonempty(i){return this.min(1,et.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};XI.create=c=>{var i;return new XI({checks:[],typeName:Tt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Nt(c)})};function Tst(c,i){let p=(c.toString().split(".")[1]||"").length,y=(i.toString().split(".")[1]||"").length,z=p>y?p:y,h=parseInt(c.toFixed(z).replace(".","")),P=parseInt(i.toFixed(z).replace(".",""));return h%P/Math.pow(10,z)}var mC=class c extends Bt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==K.number){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.number,received:h.parsedType}),Wt}let y,z=new yl;for(let h of this._def.checks)h.kind==="int"?ye.isInteger(i.data)||(y=this._getOrReturnCtx(i,y),Y(y,{code:O.invalid_type,expected:"integer",received:"float",message:h.message}),z.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),z.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),z.dirty()):h.kind==="multipleOf"?Tst(i.data,h.value)!==0&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),z.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(y=this._getOrReturnCtx(i,y),Y(y,{code:O.not_finite,message:h.message}),z.dirty()):ye.assertNever(h);return {status:z.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,et.toString(p))}gt(i,p){return this.setLimit("min",i,false,et.toString(p))}lte(i,p){return this.setLimit("max",i,true,et.toString(p))}lt(i,p){return this.setLimit("max",i,false,et.toString(p))}setLimit(i,p,y,z){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:et.toString(z)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:et.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:et.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:et.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:et.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:et.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:et.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:et.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:et.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:et.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&ye.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let y of this._def.checks){if(y.kind==="finite"||y.kind==="int"||y.kind==="multipleOf")return  true;y.kind==="min"?(p===null||y.value>p)&&(p=y.value):y.kind==="max"&&(i===null||y.value<i)&&(i=y.value);}return Number.isFinite(p)&&Number.isFinite(i)}};mC.create=c=>new mC({checks:[],typeName:Tt.ZodNumber,coerce:c?.coerce||false,...Nt(c)});var hC=class c extends Bt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==K.bigint)return this._getInvalidInput(i);let y,z=new yl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),z.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),z.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(y=this._getOrReturnCtx(i,y),Y(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),z.dirty()):ye.assertNever(h);return {status:z.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return Y(p,{code:O.invalid_type,expected:K.bigint,received:p.parsedType}),Wt}gte(i,p){return this.setLimit("min",i,true,et.toString(p))}gt(i,p){return this.setLimit("min",i,false,et.toString(p))}lte(i,p){return this.setLimit("max",i,true,et.toString(p))}lt(i,p){return this.setLimit("max",i,false,et.toString(p))}setLimit(i,p,y,z){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:et.toString(z)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:et.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:et.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:et.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:et.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:et.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};hC.create=c=>{var i;return new hC({checks:[],typeName:Tt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Nt(c)})};var bC=class extends Bt{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==K.boolean){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.boolean,received:y.parsedType}),Wt}return xl(i.data)}};bC.create=c=>new bC({typeName:Tt.ZodBoolean,coerce:c?.coerce||false,...Nt(c)});var IC=class c extends Bt{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==K.date){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.date,received:h.parsedType}),Wt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_date}),Wt}let y=new yl,z;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(z=this._getOrReturnCtx(i,z),Y(z,{code:O.too_small,message:h.message,inclusive:true,exact:false,minimum:h.value,type:"date"}),y.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(z=this._getOrReturnCtx(i,z),Y(z,{code:O.too_big,message:h.message,inclusive:true,exact:false,maximum:h.value,type:"date"}),y.dirty()):ye.assertNever(h);return {status:y.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:et.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:et.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};IC.create=c=>new IC({checks:[],coerce:c?.coerce||false,typeName:Tt.ZodDate,...Nt(c)});var sT=class extends Bt{_parse(i){if(this._getType(i)!==K.symbol){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.symbol,received:y.parsedType}),Wt}return xl(i.data)}};sT.create=c=>new sT({typeName:Tt.ZodSymbol,...Nt(c)});var gC=class extends Bt{_parse(i){if(this._getType(i)!==K.undefined){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.undefined,received:y.parsedType}),Wt}return xl(i.data)}};gC.create=c=>new gC({typeName:Tt.ZodUndefined,...Nt(c)});var CC=class extends Bt{_parse(i){if(this._getType(i)!==K.null){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.null,received:y.parsedType}),Wt}return xl(i.data)}};CC.create=c=>new CC({typeName:Tt.ZodNull,...Nt(c)});var tg=class extends Bt{constructor(){super(...arguments),this._any=true;}_parse(i){return xl(i.data)}};tg.create=c=>new tg({typeName:Tt.ZodAny,...Nt(c)});var Vm=class extends Bt{constructor(){super(...arguments),this._unknown=true;}_parse(i){return xl(i.data)}};Vm.create=c=>new Vm({typeName:Tt.ZodUnknown,...Nt(c)});var sp=class extends Bt{_parse(i){let p=this._getOrReturnCtx(i);return Y(p,{code:O.invalid_type,expected:K.never,received:p.parsedType}),Wt}};sp.create=c=>new sp({typeName:Tt.ZodNever,...Nt(c)});var dT=class extends Bt{_parse(i){if(this._getType(i)!==K.undefined){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.void,received:y.parsedType}),Wt}return xl(i.data)}};dT.create=c=>new dT({typeName:Tt.ZodVoid,...Nt(c)});var Hm=class c extends Bt{_parse(i){let{ctx:p,status:y}=this._processInputParams(i),z=this._def;if(p.parsedType!==K.array)return Y(p,{code:O.invalid_type,expected:K.array,received:p.parsedType}),Wt;if(z.exactLength!==null){let P=p.data.length>z.exactLength.value,R=p.data.length<z.exactLength.value;(P||R)&&(Y(p,{code:P?O.too_big:O.too_small,minimum:R?z.exactLength.value:void 0,maximum:P?z.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:z.exactLength.message}),y.dirty());}if(z.minLength!==null&&p.data.length<z.minLength.value&&(Y(p,{code:O.too_small,minimum:z.minLength.value,type:"array",inclusive:true,exact:false,message:z.minLength.message}),y.dirty()),z.maxLength!==null&&p.data.length>z.maxLength.value&&(Y(p,{code:O.too_big,maximum:z.maxLength.value,type:"array",inclusive:true,exact:false,message:z.maxLength.message}),y.dirty()),p.common.async)return Promise.all([...p.data].map((P,R)=>z.type._parseAsync(new pp(p,P,p.path,R)))).then(P=>yl.mergeArray(y,P));let h=[...p.data].map((P,R)=>z.type._parseSync(new pp(p,P,p.path,R)));return yl.mergeArray(y,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:et.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:et.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:et.toString(p)}})}nonempty(i){return this.min(1,i)}};Hm.create=(c,i)=>new Hm({type:c,minLength:null,maxLength:null,exactLength:null,typeName:Tt.ZodArray,...Nt(i)});function cT(c){if(c instanceof Br){let i={};for(let p in c.shape){let y=c.shape[p];i[p]=rp.create(cT(y));}return new Br({...c._def,shape:()=>i})}else return c instanceof Hm?new Hm({...c._def,type:cT(c.element)}):c instanceof rp?rp.create(cT(c.unwrap())):c instanceof Am?Am.create(cT(c.unwrap())):c instanceof Cm?Cm.create(c.items.map(i=>cT(i))):c}var Br=class c extends Bt{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=ye.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==K.object){let Q=this._getOrReturnCtx(i);return Y(Q,{code:O.invalid_type,expected:K.object,received:Q.parsedType}),Wt}let{status:y,ctx:z}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),R=[];if(!(this._def.catchall instanceof sp&&this._def.unknownKeys==="strip"))for(let Q in z.data)P.includes(Q)||R.push(Q);let $=[];for(let Q of P){let St=h[Q],kl=z.data[Q];$.push({key:{status:"valid",value:Q},value:St._parse(new pp(z,kl,z.path,Q)),alwaysSet:Q in z.data});}if(this._def.catchall instanceof sp){let Q=this._def.unknownKeys;if(Q==="passthrough")for(let St of R)$.push({key:{status:"valid",value:St},value:{status:"valid",value:z.data[St]}});else if(Q==="strict")R.length>0&&(Y(z,{code:O.unrecognized_keys,keys:R}),y.dirty());else if(Q!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Q=this._def.catchall;for(let St of R){let kl=z.data[St];$.push({key:{status:"valid",value:St},value:Q._parse(new pp(z,kl,z.path,St)),alwaysSet:St in z.data});}}return z.common.async?Promise.resolve().then(async()=>{let Q=[];for(let St of $){let kl=await St.key,iN=await St.value;Q.push({key:kl,value:iN,alwaysSet:St.alwaysSet});}return Q}).then(Q=>yl.mergeObjectSync(y,Q)):yl.mergeObjectSync(y,$)}get shape(){return this._def.shape()}strict(i){return et.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,y)=>{var z,h,P,R;let $=(P=(h=(z=this._def).errorMap)===null||h===void 0?void 0:h.call(z,p,y).message)!==null&&P!==void 0?P:y.defaultError;return p.code==="unrecognized_keys"?{message:(R=et.errToObj(i).message)!==null&&R!==void 0?R:$}:{message:$}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:Tt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return ye.objectKeys(i).forEach(y=>{i[y]&&this.shape[y]&&(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{i[y]||(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}deepPartial(){return cT(this)}partial(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{let z=this.shape[y];i&&!i[y]?p[y]=z:p[y]=z.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return ye.objectKeys(this.shape).forEach(y=>{if(i&&!i[y])p[y]=this.shape[y];else {let h=this.shape[y];for(;h instanceof rp;)h=h._def.innerType;p[y]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return QK(ye.objectKeys(this.shape))}};Br.create=(c,i)=>new Br({shape:()=>c,unknownKeys:"strip",catchall:sp.create(),typeName:Tt.ZodObject,...Nt(i)});Br.strictCreate=(c,i)=>new Br({shape:()=>c,unknownKeys:"strict",catchall:sp.create(),typeName:Tt.ZodObject,...Nt(i)});Br.lazycreate=(c,i)=>new Br({shape:c,unknownKeys:"strip",catchall:sp.create(),typeName:Tt.ZodObject,...Nt(i)});var AC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=this._def.options;function z(h){for(let R of h)if(R.result.status==="valid")return R.result;for(let R of h)if(R.result.status==="dirty")return p.common.issues.push(...R.ctx.common.issues),R.result;let P=h.map(R=>new Lr(R.ctx.common.issues));return Y(p,{code:O.invalid_union,unionErrors:P}),Wt}if(p.common.async)return Promise.all(y.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(z);{let h,P=[];for(let $ of y){let Q={...p,common:{...p.common,issues:[]},parent:null},St=$._parseSync({data:p.data,path:p.path,parent:Q});if(St.status==="valid")return St;St.status==="dirty"&&!h&&(h={result:St,ctx:Q}),Q.common.issues.length&&P.push(Q.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let R=P.map($=>new Lr($));return Y(p,{code:O.invalid_union,unionErrors:R}),Wt}}get options(){return this._def.options}};AC.create=(c,i)=>new AC({options:c,typeName:Tt.ZodUnion,...Nt(i)});var Em=c=>c instanceof TC?Em(c.schema):c instanceof Vr?Em(c.innerType()):c instanceof PC?[c.value]:c instanceof WC?c.options:c instanceof UC?ye.objectValues(c.enum):c instanceof RC?Em(c._def.innerType):c instanceof gC?[void 0]:c instanceof CC?[null]:c instanceof rp?[void 0,...Em(c.unwrap())]:c instanceof Am?[null,...Em(c.unwrap())]:c instanceof VT||c instanceof xC?Em(c.unwrap()):c instanceof kC?Em(c._def.innerType):[],cN=class c extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.object)return Y(p,{code:O.invalid_type,expected:K.object,received:p.parsedType}),Wt;let y=this.discriminator,z=p.data[y],h=this.optionsMap.get(z);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):(Y(p,{code:O.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[y]}),Wt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,y){let z=new Map;for(let h of p){let P=Em(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let R of P){if(z.has(R))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(R)}`);z.set(R,h);}}return new c({typeName:Tt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:z,...Nt(y)})}};function jL(c,i){let p=Lm(c),y=Lm(i);if(c===i)return {valid:true,data:c};if(p===K.object&&y===K.object){let z=ye.objectKeys(i),h=ye.objectKeys(c).filter(R=>z.indexOf(R)!==-1),P={...c,...i};for(let R of h){let $=jL(c[R],i[R]);if(!$.valid)return {valid:false};P[R]=$.data;}return {valid:true,data:P}}else if(p===K.array&&y===K.array){if(c.length!==i.length)return {valid:false};let z=[];for(let h=0;h<c.length;h++){let P=c[h],R=i[h],$=jL(P,R);if(!$.valid)return {valid:false};z.push($.data);}return {valid:true,data:z}}else return p===K.date&&y===K.date&&+c==+i?{valid:true,data:c}:{valid:false}}var SC=class extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i),z=(h,P)=>{if(kL(h)||kL(P))return Wt;let R=jL(h.value,P.value);return R.valid?((xL(h)||xL(P))&&p.dirty(),{status:p.value,value:R.data}):(Y(y,{code:O.invalid_intersection_types}),Wt)};return y.common.async?Promise.all([this._def.left._parseAsync({data:y.data,path:y.path,parent:y}),this._def.right._parseAsync({data:y.data,path:y.path,parent:y})]).then(([h,P])=>z(h,P)):z(this._def.left._parseSync({data:y.data,path:y.path,parent:y}),this._def.right._parseSync({data:y.data,path:y.path,parent:y}))}};SC.create=(c,i,p)=>new SC({left:c,right:i,typeName:Tt.ZodIntersection,...Nt(p)});var Cm=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.array)return Y(y,{code:O.invalid_type,expected:K.array,received:y.parsedType}),Wt;if(y.data.length<this._def.items.length)return Y(y,{code:O.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),Wt;!this._def.rest&&y.data.length>this._def.items.length&&(Y(y,{code:O.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let h=[...y.data].map((P,R)=>{let $=this._def.items[R]||this._def.rest;return $?$._parse(new pp(y,P,y.path,R)):null}).filter(P=>!!P);return y.common.async?Promise.all(h).then(P=>yl.mergeArray(p,P)):yl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Cm.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Cm({items:c,typeName:Tt.ZodTuple,rest:null,...Nt(i)})};var uN=class c extends Bt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.object)return Y(y,{code:O.invalid_type,expected:K.object,received:y.parsedType}),Wt;let z=[],h=this._def.keyType,P=this._def.valueType;for(let R in y.data)z.push({key:h._parse(new pp(y,R,y.path,R)),value:P._parse(new pp(y,y.data[R],y.path,R)),alwaysSet:R in y.data});return y.common.async?yl.mergeObjectAsync(p,z):yl.mergeObjectSync(p,z)}get element(){return this._def.valueType}static create(i,p,y){return p instanceof Bt?new c({keyType:i,valueType:p,typeName:Tt.ZodRecord,...Nt(y)}):new c({keyType:XI.create(),valueType:i,typeName:Tt.ZodRecord,...Nt(p)})}},zT=class extends Bt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.map)return Y(y,{code:O.invalid_type,expected:K.map,received:y.parsedType}),Wt;let z=this._def.keyType,h=this._def.valueType,P=[...y.data.entries()].map(([R,$],Q)=>({key:z._parse(new pp(y,R,y.path,[Q,"key"])),value:h._parse(new pp(y,$,y.path,[Q,"value"]))}));if(y.common.async){let R=new Map;return Promise.resolve().then(async()=>{for(let $ of P){let Q=await $.key,St=await $.value;if(Q.status==="aborted"||St.status==="aborted")return Wt;(Q.status==="dirty"||St.status==="dirty")&&p.dirty(),R.set(Q.value,St.value);}return {status:p.value,value:R}})}else {let R=new Map;for(let $ of P){let Q=$.key,St=$.value;if(Q.status==="aborted"||St.status==="aborted")return Wt;(Q.status==="dirty"||St.status==="dirty")&&p.dirty(),R.set(Q.value,St.value);}return {status:p.value,value:R}}}};zT.create=(c,i,p)=>new zT({valueType:i,keyType:c,typeName:Tt.ZodMap,...Nt(p)});var mT=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==K.set)return Y(y,{code:O.invalid_type,expected:K.set,received:y.parsedType}),Wt;let z=this._def;z.minSize!==null&&y.data.size<z.minSize.value&&(Y(y,{code:O.too_small,minimum:z.minSize.value,type:"set",inclusive:true,exact:false,message:z.minSize.message}),p.dirty()),z.maxSize!==null&&y.data.size>z.maxSize.value&&(Y(y,{code:O.too_big,maximum:z.maxSize.value,type:"set",inclusive:true,exact:false,message:z.maxSize.message}),p.dirty());let h=this._def.valueType;function P($){let Q=new Set;for(let St of $){if(St.status==="aborted")return Wt;St.status==="dirty"&&p.dirty(),Q.add(St.value);}return {status:p.value,value:Q}}let R=[...y.data.values()].map(($,Q)=>h._parse(new pp(y,$,y.path,Q)));return y.common.async?Promise.all(R).then($=>P($)):P(R)}min(i,p){return new c({...this._def,minSize:{value:i,message:et.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:et.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};mT.create=(c,i)=>new mT({valueType:c,minSize:null,maxSize:null,typeName:Tt.ZodSet,...Nt(i)});var yN=class c extends Bt{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.function)return Y(p,{code:O.invalid_type,expected:K.function,received:p.parsedType}),Wt;function y(R,$){return rN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,lN(),yT].filter(Q=>!!Q),issueData:{code:O.invalid_arguments,argumentsError:$}})}function z(R,$){return rN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,lN(),yT].filter(Q=>!!Q),issueData:{code:O.invalid_return_type,returnTypeError:$}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof eg){let R=this;return xl(async function(...$){let Q=new Lr([]),St=await R._def.args.parseAsync($,h).catch(WL=>{throw Q.addIssue(y($,WL)),Q}),kl=await Reflect.apply(P,this,St);return await R._def.returns._def.type.parseAsync(kl,h).catch(WL=>{throw Q.addIssue(z(kl,WL)),Q})})}else {let R=this;return xl(function(...$){let Q=R._def.args.safeParse($,h);if(!Q.success)throw new Lr([y($,Q.error)]);let St=Reflect.apply(P,this,Q.data),kl=R._def.returns.safeParse(St,h);if(!kl.success)throw new Lr([z(St,kl.error)]);return kl.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Cm.create(i).rest(Vm.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,y){return new c({args:i||Cm.create([]).rest(Vm.create()),returns:p||Vm.create(),typeName:Tt.ZodFunction,...Nt(y)})}},TC=class extends Bt{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};TC.create=(c,i)=>new TC({getter:c,typeName:Tt.ZodLazy,...Nt(i)});var PC=class extends Bt{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return Y(p,{received:p.data,code:O.invalid_literal,expected:this._def.value}),Wt}return {status:"valid",value:i.data}}get value(){return this._def.value}};PC.create=(c,i)=>new PC({value:c,typeName:Tt.ZodLiteral,...Nt(i)});function QK(c,i){return new WC({values:c,typeName:Tt.ZodEnum,...Nt(i)})}var WC=class c extends Bt{constructor(){super(...arguments),_T.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),y=this._def.values;return Y(p,{expected:ye.joinValues(y),received:p.parsedType,code:O.invalid_type}),Wt}if(pN(this,_T)||EK(this,_T,new Set(this._def.values)),!pN(this,_T).has(i.data)){let p=this._getOrReturnCtx(i),y=this._def.values;return Y(p,{received:p.data,code:O.invalid_enum_value,options:y}),Wt}return xl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(y=>!i.includes(y)),{...this._def,...p})}};_T=new WeakMap;WC.create=QK;var UC=class extends Bt{constructor(){super(...arguments),ET.set(this,void 0);}_parse(i){let p=ye.getValidEnumValues(this._def.values),y=this._getOrReturnCtx(i);if(y.parsedType!==K.string&&y.parsedType!==K.number){let z=ye.objectValues(p);return Y(y,{expected:ye.joinValues(z),received:y.parsedType,code:O.invalid_type}),Wt}if(pN(this,ET)||EK(this,ET,new Set(ye.getValidEnumValues(this._def.values))),!pN(this,ET).has(i.data)){let z=ye.objectValues(p);return Y(y,{received:y.data,code:O.invalid_enum_value,options:z}),Wt}return xl(i.data)}get enum(){return this._def.values}};ET=new WeakMap;UC.create=(c,i)=>new UC({values:c,typeName:Tt.ZodNativeEnum,...Nt(i)});var eg=class extends Bt{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.promise&&p.common.async===false)return Y(p,{code:O.invalid_type,expected:K.promise,received:p.parsedType}),Wt;let y=p.parsedType===K.promise?p.data:Promise.resolve(p.data);return xl(y.then(z=>this._def.type.parseAsync(z,{path:p.path,errorMap:p.common.contextualErrorMap})))}};eg.create=(c,i)=>new eg({type:c,typeName:Tt.ZodPromise,...Nt(i)});var Vr=class extends Bt{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Tt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:y}=this._processInputParams(i),z=this._def.effect||null,h={addIssue:P=>{Y(y,P),P.fatal?p.abort():p.dirty();},get path(){return y.path}};if(h.addIssue=h.addIssue.bind(h),z.type==="preprocess"){let P=z.transform(y.data,h);if(y.common.async)return Promise.resolve(P).then(async R=>{if(p.value==="aborted")return Wt;let $=await this._def.schema._parseAsync({data:R,path:y.path,parent:y});return $.status==="aborted"?Wt:$.status==="dirty"||p.value==="dirty"?uT($.value):$});{if(p.value==="aborted")return Wt;let R=this._def.schema._parseSync({data:P,path:y.path,parent:y});return R.status==="aborted"?Wt:R.status==="dirty"||p.value==="dirty"?uT(R.value):R}}if(z.type==="refinement"){let P=R=>{let $=z.refinement(R,h);if(y.common.async)return Promise.resolve($);if($ instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return R};if(y.common.async===false){let R=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});return R.status==="aborted"?Wt:(R.status==="dirty"&&p.dirty(),P(R.value),{status:p.value,value:R.value})}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(R=>R.status==="aborted"?Wt:(R.status==="dirty"&&p.dirty(),P(R.value).then(()=>({status:p.value,value:R.value}))))}if(z.type==="transform")if(y.common.async===false){let P=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});if(!zC(P))return P;let R=z.transform(P.value,h);if(R instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:R}}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(P=>zC(P)?Promise.resolve(z.transform(P.value,h)).then(R=>({status:p.value,value:R})):P);ye.assertNever(z);}};Vr.create=(c,i,p)=>new Vr({schema:c,typeName:Tt.ZodEffects,effect:i,...Nt(p)});Vr.createWithPreprocess=(c,i,p)=>new Vr({schema:i,effect:{type:"preprocess",transform:c},typeName:Tt.ZodEffects,...Nt(p)});var rp=class extends Bt{_parse(i){return this._getType(i)===K.undefined?xl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};rp.create=(c,i)=>new rp({innerType:c,typeName:Tt.ZodOptional,...Nt(i)});var Am=class extends Bt{_parse(i){return this._getType(i)===K.null?xl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Am.create=(c,i)=>new Am({innerType:c,typeName:Tt.ZodNullable,...Nt(i)});var RC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return p.parsedType===K.undefined&&(y=this._def.defaultValue()),this._def.innerType._parse({data:y,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};RC.create=(c,i)=>new RC({innerType:c,typeName:Tt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Nt(i)});var kC=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y={...p,common:{...p.common,issues:[]}},z=this._def.innerType._parse({data:y.data,path:y.path,parent:{...y}});return LT(z)?z.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new Lr(y.common.issues)},input:y.data})})):{status:"valid",value:z.status==="valid"?z.value:this._def.catchValue({get error(){return new Lr(y.common.issues)},input:y.data})}}removeCatch(){return this._def.innerType}};kC.create=(c,i)=>new kC({innerType:c,typeName:Tt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Nt(i)});var hT=class extends Bt{_parse(i){if(this._getType(i)!==K.nan){let y=this._getOrReturnCtx(i);return Y(y,{code:O.invalid_type,expected:K.nan,received:y.parsedType}),Wt}return {status:"valid",value:i.data}}};hT.create=c=>new hT({typeName:Tt.ZodNaN,...Nt(c)});var Pst=Symbol("zod_brand"),VT=class extends Bt{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return this._def.type._parse({data:y,path:p.path,parent:p})}unwrap(){return this._def.type}},HT=class c extends Bt{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:y.data,path:y.path,parent:y});return h.status==="aborted"?Wt:h.status==="dirty"?(p.dirty(),uT(h.value)):this._def.out._parseAsync({data:h.value,path:y.path,parent:y})})();{let z=this._def.in._parseSync({data:y.data,path:y.path,parent:y});return z.status==="aborted"?Wt:z.status==="dirty"?(p.dirty(),{status:"dirty",value:z.value}):this._def.out._parseSync({data:z.value,path:y.path,parent:y})}}static create(i,p){return new c({in:i,out:p,typeName:Tt.ZodPipeline})}},xC=class extends Bt{_parse(i){let p=this._def.innerType._parse(i),y=z=>(zC(z)&&(z.value=Object.freeze(z.value)),z);return LT(p)?p.then(z=>y(z)):y(p)}unwrap(){return this._def.innerType}};xC.create=(c,i)=>new xC({innerType:c,typeName:Tt.ZodReadonly,...Nt(i)});function FK(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function YK(c,i={},p){return c?tg.create().superRefine((y,z)=>{var h,P;let R=c(y);if(R instanceof Promise)return R.then($=>{var Q,St;if(!$){let kl=FK(i,y),iN=(St=(Q=kl.fatal)!==null&&Q!==void 0?Q:p)!==null&&St!==void 0?St:true;z.addIssue({code:"custom",...kl,fatal:iN});}});if(!R){let $=FK(i,y),Q=(P=(h=$.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:true;z.addIssue({code:"custom",...$,fatal:Q});}}):tg.create()}var Wst={object:Br.lazycreate},Tt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(Tt||(Tt={}));var Ust=(c,i={message:`Input not instance of ${c.name}`})=>YK(p=>p instanceof c,i),GK=XI.create,$K=mC.create,Rst=hT.create,kst=hC.create,JK=bC.create,xst=IC.create,jst=sT.create,Mst=gC.create,Zst=CC.create,vst=tg.create,Ost=Vm.create,fst=sp.create,wst=dT.create,Nst=Hm.create,Bst=Br.create,qst=Br.strictCreate,Fst=AC.create,Dst=cN.create,_st=SC.create,Est=Cm.create,Lst=uN.create,Vst=zT.create,Hst=mT.create,Qst=yN.create,Yst=TC.create,Gst=PC.create,$st=WC.create,Jst=UC.create,Kst=eg.create,DK=Vr.create,Xst=rp.create,tdt=Am.create,edt=Vr.createWithPreprocess,odt=HT.create,adt=()=>GK().optional(),ndt=()=>$K().optional(),idt=()=>JK().optional(),ldt={string:c=>XI.create({...c,coerce:true}),number:c=>mC.create({...c,coerce:true}),boolean:c=>bC.create({...c,coerce:true}),bigint:c=>hC.create({...c,coerce:true}),date:c=>IC.create({...c,coerce:true})},rdt=Wt,t=Object.freeze({__proto__:null,defaultErrorMap:yT,setErrorMap:est,getErrorMap:lN,makeIssue:rN,EMPTY_PATH:ost,addIssueToContext:Y,ParseStatus:yl,INVALID:Wt,DIRTY:uT,OK:xl,isAborted:kL,isDirty:xL,isValid:zC,isAsync:LT,get util(){return ye},get objectUtil(){return RL},ZodParsedType:K,getParsedType:Lm,ZodType:Bt,datetimeRegex:HK,ZodString:XI,ZodNumber:mC,ZodBigInt:hC,ZodBoolean:bC,ZodDate:IC,ZodSymbol:sT,ZodUndefined:gC,ZodNull:CC,ZodAny:tg,ZodUnknown:Vm,ZodNever:sp,ZodVoid:dT,ZodArray:Hm,ZodObject:Br,ZodUnion:AC,ZodDiscriminatedUnion:cN,ZodIntersection:SC,ZodTuple:Cm,ZodRecord:uN,ZodMap:zT,ZodSet:mT,ZodFunction:yN,ZodLazy:TC,ZodLiteral:PC,ZodEnum:WC,ZodNativeEnum:UC,ZodPromise:eg,ZodEffects:Vr,ZodTransformer:Vr,ZodOptional:rp,ZodNullable:Am,ZodDefault:RC,ZodCatch:kC,ZodNaN:hT,BRAND:Pst,ZodBranded:VT,ZodPipeline:HT,ZodReadonly:xC,custom:YK,Schema:Bt,ZodSchema:Bt,late:Wst,get ZodFirstPartyTypeKind(){return Tt},coerce:ldt,any:vst,array:Nst,bigint:kst,boolean:JK,date:xst,discriminatedUnion:Dst,effect:DK,enum:$st,function:Qst,instanceof:Ust,intersection:_st,lazy:Yst,literal:Gst,map:Vst,nan:Rst,nativeEnum:Jst,never:fst,null:Zst,nullable:tdt,number:$K,object:Bst,oboolean:idt,onumber:ndt,optional:Xst,ostring:adt,pipeline:odt,preprocess:edt,promise:Kst,record:Lst,set:Hst,strictObject:qst,string:GK,symbol:jst,transformer:DK,tuple:Est,undefined:Mst,union:Fst,unknown:Ost,void:wst,NEVER:rdt,ZodIssueCode:O,quotelessJson:tst,ZodError:Lr});var pdt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),og=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium"]),ag=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),ng=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),ig=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),lg=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),rg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),pg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),cg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),ug=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),yg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),sg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),dg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),zg=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),mg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),hg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),bg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Ig=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),gg=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Cg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Ag=t.enum(["id","name","description","icon","createdAt","updatedAt"]),Sg=t.enum(["id","name","description","createdAt","updatedAt"]),Tg=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),Pg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),Wg=t.enum(["id","restaurantId","date","createdById","createdAt","updatedAt"]),Ug=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),Rg=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),kg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),xg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),jg=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),Mg=t.enum(["id","name","description"]),Zg=t.enum(["id","ingredientId","allergenId"]),vg=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),Og=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),fg=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),wg=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),Ng=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),Bg=t.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),qg=t.enum(["id","userId","code","token","expiresAt","createdAt"]),Fg=t.enum(["id","name","imageUrl","category","restaurantId"]),Dg=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel"]),_g=t.enum(["id","name","category","price","dietaryRestrictionId"]),Eg=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),Lg=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),Vg=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),Hg=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),Qg=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),Yg=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),Gg=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),$g=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),Jg=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),Kg=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),Xg=t.enum(["id","userId","startTime","endTime","status"]),tC=t.enum(["id","name","status","createdAt","updatedAt"]),eC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),oC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),aC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),nC=t.enum(["id","menuItemId","recipeId","joinAt"]),iC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),lC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),rC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),pC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),Pj=t.enum(["default","insensitive"]),KK=t.enum(["first","last"]),_t=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),Ot=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),ne=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),ft=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),qt=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Rt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),kt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),cdt=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED"]),ie=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),le=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),re=t.enum(["UNAVAILABLE","PREFERRED"]),vt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),xt=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),Mt=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),x=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Zt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Et=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),X=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),W=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),pe=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),udt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}),ydt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),sdt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ddt=t.object({type:pe,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),zdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),mdt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hdt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),bdt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Idt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gdt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Cdt=t.object({status:Ot,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Adt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),Sdt=t.object({type:ne,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Tdt=t.object({frequency:ft,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pdt=t.object({type:_t,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wdt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Udt=t.object({status:qt,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rdt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kdt=t.object({source:Rt,status:kt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Odt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fdt=t.object({taskType:ie,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wdt=t.object({dayOfWeek:le,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ndt=t.object({constraintsType:re,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bdt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),qdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),Fdt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),Ddt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_dt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Edt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ldt=t.object({type:vt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Vdt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),Hdt=t.object({role:x,id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),verified:t.boolean(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Qdt=t.object({id:t.string().uuid(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),Ydt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),Gdt=t.object({skillLevel:W,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),$dt=t.object({id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().nullable()}),Jdt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),Kdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),Xdt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),tzt=t.object({type:xt,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),ezt=t.object({status:Mt,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),ozt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),azt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),nzt=t.object({status:Zt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),izt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),lzt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),rzt=t.object({status:Et,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),pzt=t.object({status:X,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),czt=t.object({status:X,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),uzt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),yzt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),szt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),dzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),zzt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),mzt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hzt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ps=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),hQ=t.object({select:t.lazy(()=>Ws).optional(),include:t.lazy(()=>Ps).optional()}).strict(),Ws=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Us=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),bzt=t.object({select:t.lazy(()=>Rs).optional(),include:t.lazy(()=>Us).optional()}).strict(),Rs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),ks=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),bQ=t.object({select:t.lazy(()=>xs).optional(),include:t.lazy(()=>ks).optional()}).strict(),xs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),js=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Izt=t.object({select:t.lazy(()=>Ms).optional(),include:t.lazy(()=>js).optional()}).strict(),Ms=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Zs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),gzt=t.object({select:t.lazy(()=>vs).optional(),include:t.lazy(()=>Zs).optional()}).strict(),vs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Os=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Czt=t.object({select:t.lazy(()=>fs).optional(),include:t.lazy(()=>Os).optional()}).strict(),fs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),ws=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Azt=t.object({select:t.lazy(()=>Ns).optional(),include:t.lazy(()=>ws).optional()}).strict(),Ns=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Bs=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),Szt=t.object({select:t.lazy(()=>qs).optional(),include:t.lazy(()=>Bs).optional()}).strict(),qs=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),Fs=t.object({menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>gQ)]).optional()}).strict(),IQ=t.object({select:t.lazy(()=>Ds).optional(),include:t.lazy(()=>Fs).optional()}).strict(),gQ=t.object({select:t.lazy(()=>XK).nullish()}).strict(),XK=t.object({menuItems:t.boolean().optional()}).strict(),Ds=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>gQ)]).optional()}).strict(),_s=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CQ)]).optional()}).strict(),Wj=t.object({select:t.lazy(()=>Es).optional(),include:t.lazy(()=>_s).optional()}).strict(),CQ=t.object({select:t.lazy(()=>tX).nullish()}).strict(),tX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),Es=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CQ)]).optional()}).strict(),Ls=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>AQ)]).optional()}).strict(),Uj=t.object({select:t.lazy(()=>Vs).optional(),include:t.lazy(()=>Ls).optional()}).strict(),AQ=t.object({select:t.lazy(()=>eX).nullish()}).strict(),eX=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),Vs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>AQ)]).optional()}).strict(),Hs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),Tzt=t.object({select:t.lazy(()=>Qs).optional(),include:t.lazy(()=>Hs).optional()}).strict(),Qs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),Ys=t.object({equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional()}).strict(),Pzt=t.object({select:t.lazy(()=>Gs).optional(),include:t.lazy(()=>Ys).optional()}).strict(),Gs=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>Uj)]).optional()}).strict(),$s=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>SQ)]).optional()}).strict(),Rj=t.object({select:t.lazy(()=>Js).optional(),include:t.lazy(()=>$s).optional()}).strict(),SQ=t.object({select:t.lazy(()=>oX).nullish()}).strict(),oX=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),Js=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>SQ)]).optional()}).strict(),Ks=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PQ)]).optional()}).strict(),TQ=t.object({select:t.lazy(()=>Xs).optional(),include:t.lazy(()=>Ks).optional()}).strict(),PQ=t.object({select:t.lazy(()=>aX).nullish()}).strict(),aX=t.object({completions:t.boolean().optional()}).strict(),Xs=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PQ)]).optional()}).strict(),td=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>UQ)]).optional()}).strict(),WQ=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),UQ=t.object({select:t.lazy(()=>nX).nullish()}).strict(),nX=t.object({items:t.boolean().optional()}).strict(),ed=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Rj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Hw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>UQ)]).optional()}).strict(),od=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>WQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),Wzt=t.object({select:t.lazy(()=>ad).optional(),include:t.lazy(()=>od).optional()}).strict(),ad=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>WQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),nd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),Uzt=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>nd).optional()}).strict(),id=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),ld=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Rzt=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),rd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),pd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),RQ=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),kQ=t.object({select:t.lazy(()=>iX).nullish()}).strict(),iX=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),cd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),ud=t.object({recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xQ)]).optional()}).strict(),kzt=t.object({select:t.lazy(()=>yd).optional(),include:t.lazy(()=>ud).optional()}).strict(),xQ=t.object({select:t.lazy(()=>lX).nullish()}).strict(),lX=t.object({recipes:t.boolean().optional()}).strict(),yd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xQ)]).optional()}).strict(),sd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),xzt=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>sd).optional()}).strict(),dd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),jzt=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),md=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),hd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),jQ=t.object({select:t.lazy(()=>bd).optional(),include:t.lazy(()=>hd).optional()}).strict(),MQ=t.object({select:t.lazy(()=>rX).nullish()}).strict(),rX=t.object({items:t.boolean().optional()}).strict(),bd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),Id=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>jQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Mzt=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),gd=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>jQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Cd=t.object({shift:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),Zzt=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),Ad=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),Sd=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),vzt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Pd=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ozt=t.object({select:t.lazy(()=>Wd).optional(),include:t.lazy(()=>Pd).optional()}).strict(),Wd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ud=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>cS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),fzt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Ud).optional()}).strict(),Rd=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>cS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),kd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),ZQ=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),vQ=t.object({select:t.lazy(()=>pX).nullish()}).strict(),pX=t.object({ingredients:t.boolean().optional()}).strict(),xd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),jd=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),wzt=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),Md=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),Zd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),Nzt=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),vd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),Bm=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),Od=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),kj=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),OQ=t.object({select:t.lazy(()=>cX).nullish()}).strict(),cX=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),fd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),wd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),hI=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),fQ=t.object({select:t.lazy(()=>uX).nullish()}).strict(),uX=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Nd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),Bd=t.object({organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),to=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),wQ=t.object({select:t.lazy(()=>yX).nullish()}).strict(),yX=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),equipment:t.boolean().optional(),qualityChecklist:t.boolean().optional(),qustomerFeedback:t.boolean().optional()}).strict(),qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),Fd=t.object({organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),Yt=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),NQ=t.object({select:t.lazy(()=>sX).nullish()}).strict(),sX=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),productionPlanItem:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraint:t.boolean().optional(),inventoryWithdrawal:t.boolean().optional(),checklistComplete:t.boolean().optional(),customerFeedback:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransaction:t.boolean().optional(),StockCount:t.boolean().optional()}).strict(),Dd=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),passwordHash:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),verified:t.boolean().optional(),role:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Vw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),_d=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Bzt=t.object({select:t.lazy(()=>Ed).optional(),include:t.lazy(()=>_d).optional()}).strict(),Ed=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),code:t.boolean().optional(),token:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ld=t.object({recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),BQ=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),qQ=t.object({select:t.lazy(()=>dX).nullish()}).strict(),dX=t.object({recipes:t.boolean().optional()}).strict(),Vd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Hd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>BQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>hK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>bK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>IK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>hQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>zK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>bQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>mK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>QQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),Gt=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),FQ=t.object({select:t.lazy(()=>zX).nullish()}).strict(),zX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipment:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),Qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>BQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>pS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>hK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>bK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>IK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>hQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>zK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>bQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>mK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>QQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),Yd=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>RQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),$r=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),DQ=t.object({select:t.lazy(()=>mX).nullish()}).strict(),mX=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecord:t.boolean().optional(),IngredientAllergen:t.boolean().optional(),SupplierPriceHistory:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>RQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),$d=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional()}).strict(),qzt=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),Jd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional()}).strict(),Kd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),_Q=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),EQ=t.object({select:t.lazy(()=>hX).nullish()}).strict(),hX=t.object({equipment:t.boolean().optional()}).strict(),Xd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Wj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>XS)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),tz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),cS=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),LQ=t.object({select:t.lazy(()=>bX).nullish()}).strict(),bX=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),oz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>cS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Fzt=t.object({select:t.lazy(()=>az).optional(),include:t.lazy(()=>oz).optional()}).strict(),az=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>cS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),nz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>HQ)]).optional()}).strict(),VQ=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>nz).optional()}).strict(),HQ=t.object({select:t.lazy(()=>IX).nullish()}).strict(),IX=t.object({items:t.boolean().optional()}).strict(),iz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>hI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>HQ)]).optional()}).strict(),lz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>VQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>cS)]).optional()}).strict(),Dzt=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),rz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>VQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>cS)]).optional()}).strict(),pz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),QQ=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),cz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),uz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),YQ=t.object({select:t.lazy(()=>yz).optional(),include:t.lazy(()=>uz).optional()}).strict(),GQ=t.object({select:t.lazy(()=>gX).nullish()}).strict(),gX=t.object({items:t.boolean().optional()}).strict(),yz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),sz=t.object({order:t.union([t.boolean(),t.lazy(()=>YQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),_zt=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>sz).optional()}).strict(),dz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>YQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>$r)]).optional()}).strict(),zz=t.object({orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),xj=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),$Q=t.object({select:t.lazy(()=>CX).nullish()}).strict(),CX=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),mz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),hz=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),JQ=t.object({select:t.lazy(()=>bz).optional(),include:t.lazy(()=>hz).optional()}).strict(),KQ=t.object({select:t.lazy(()=>AX).nullish()}).strict(),AX=t.object({ShiftTask:t.boolean().optional()}).strict(),bz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),Iz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),XQ=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),t0=t.object({select:t.lazy(()=>SX).nullish()}).strict(),SX=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),Cz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>XQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Ezt=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),Az=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>XQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Sz=t.object({user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Lzt=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),Tz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Yt)]).optional()}).strict(),Pz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),jj=t.object({select:t.lazy(()=>Wz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),e0=t.object({select:t.lazy(()=>TX).nullish()}).strict(),TX=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),Wz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>to)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>KI)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),Uz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Vzt=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Uz).optional()}).strict(),Rz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),kz=t.object({menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>IQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>a0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),Jr=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),o0=t.object({select:t.lazy(()=>PX).nullish()}).strict(),PX=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),xz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>IQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>a0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Lw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>eT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>tT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),jz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),a0=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Jr)]).optional()}).strict(),Zz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Hzt=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),vz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Oz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),Qzt=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Gt)]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Sm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),Ol=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),ML=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),_count:t.lazy(()=>WX).optional(),_avg:t.lazy(()=>UX).optional(),_max:t.lazy(()=>RX).optional(),_min:t.lazy(()=>kX).optional(),_sum:t.lazy(()=>xX).optional()}).strict(),jC=t.object({AND:t.union([t.lazy(()=>jC),t.lazy(()=>jC).array()]).optional(),OR:t.lazy(()=>jC).array().optional(),NOT:t.union([t.lazy(()=>jC),t.lazy(()=>jC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>At),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>ut),t.string()]).optional(),calories:t.union([t.lazy(()=>At),t.number()]).optional(),protein:t.union([t.lazy(()=>At),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>At),t.number()]).optional(),fat:t.union([t.lazy(()=>At),t.number()]).optional(),fiber:t.union([t.lazy(()=>At),t.number()]).optional(),sugar:t.union([t.lazy(()=>At),t.number()]).optional(),sodium:t.union([t.lazy(()=>At),t.number()]).optional()}).strict(),Ga=t.object({AND:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),OR:t.lazy(()=>Ga).array().optional(),NOT:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Qm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),OR:t.lazy(()=>Ga).array().optional(),NOT:t.union([t.lazy(()=>Ga),t.lazy(()=>Ga).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),ZL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>jX).optional(),_avg:t.lazy(()=>MX).optional(),_max:t.lazy(()=>ZX).optional(),_min:t.lazy(()=>vX).optional(),_sum:t.lazy(()=>OX).optional()}).strict(),MC=t.object({AND:t.union([t.lazy(()=>MC),t.lazy(()=>MC).array()]).optional(),OR:t.lazy(()=>MC).array().optional(),NOT:t.union([t.lazy(()=>MC),t.lazy(()=>MC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),threshold:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),we=t.object({AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>u),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Tm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),fl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>u),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),vL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fX).optional(),_avg:t.lazy(()=>wX).optional(),_max:t.lazy(()=>NX).optional(),_min:t.lazy(()=>BX).optional(),_sum:t.lazy(()=>qX).optional()}).strict(),ZC=t.object({AND:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),OR:t.lazy(()=>ZC).array().optional(),NOT:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>ut),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),$a=t.object({AND:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),OR:t.lazy(()=>$a).array().optional(),NOT:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>HN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Ym=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),de=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),OR:t.lazy(()=>$a).array().optional(),NOT:t.union([t.lazy(()=>$a),t.lazy(()=>$a).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>HN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),OL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>FX).optional(),_avg:t.lazy(()=>DX).optional(),_max:t.lazy(()=>_X).optional(),_min:t.lazy(()=>EX).optional(),_sum:t.lazy(()=>LX).optional()}).strict(),vC=t.object({AND:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),OR:t.lazy(()=>vC).array().optional(),NOT:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>ut),t.string()]).optional(),type:t.union([t.lazy(()=>VX),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ja=t.object({AND:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),OR:t.lazy(()=>Ja).array().optional(),NOT:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Gm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),ze=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),OR:t.lazy(()=>Ja).array().optional(),NOT:t.union([t.lazy(()=>Ja),t.lazy(()=>Ja).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),fL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>HX).optional(),_avg:t.lazy(()=>QX).optional(),_max:t.lazy(()=>YX).optional(),_min:t.lazy(()=>GX).optional(),_sum:t.lazy(()=>$X).optional()}).strict(),OC=t.object({AND:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),OR:t.lazy(()=>OC).array().optional(),NOT:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>At),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>At),t.number()]).optional(),isCritical:t.union([t.lazy(()=>vl),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ka=t.object({AND:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),OR:t.lazy(()=>Ka).array().optional(),NOT:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),$m=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),OR:t.lazy(()=>Ka).array().optional(),NOT:t.union([t.lazy(()=>Ka),t.lazy(()=>Ka).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),wL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>JX).optional(),_avg:t.lazy(()=>KX).optional(),_max:t.lazy(()=>XX).optional(),_min:t.lazy(()=>ttt).optional(),_sum:t.lazy(()=>ett).optional()}).strict(),fC=t.object({AND:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),OR:t.lazy(()=>fC).array().optional(),NOT:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>At),t.number()]).optional(),actualYield:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Xa=t.object({AND:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),OR:t.lazy(()=>Xa).array().optional(),NOT:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),OR:t.lazy(()=>Xa).array().optional(),NOT:t.union([t.lazy(()=>Xa),t.lazy(()=>Xa).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),NL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ott).optional(),_avg:t.lazy(()=>att).optional(),_max:t.lazy(()=>ntt).optional(),_min:t.lazy(()=>itt).optional(),_sum:t.lazy(()=>ltt).optional()}).strict(),wC=t.object({AND:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),OR:t.lazy(()=>wC).array().optional(),NOT:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>At),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>At),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),tn=t.object({AND:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),OR:t.lazy(()=>tn).array().optional(),NOT:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Zl).optional()}).strict(),st=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),OR:t.lazy(()=>tn).array().optional(),NOT:t.union([t.lazy(()=>tn),t.lazy(()=>tn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional()}).strict()),BL=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>rtt).optional(),_avg:t.lazy(()=>ptt).optional(),_max:t.lazy(()=>ctt).optional(),_min:t.lazy(()=>utt).optional(),_sum:t.lazy(()=>ytt).optional()}).strict(),NC=t.object({AND:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),OR:t.lazy(()=>NC).array().optional(),NOT:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),total:t.union([t.lazy(()=>At),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number()]).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),menuItems:t.lazy(()=>gI).optional()}).strict(),Pm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>Ep).optional(),menuItems:t.lazy(()=>Qj).optional()}).strict(),$t=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>sN)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>sN)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>sN).optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>u),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),menuItems:t.lazy(()=>gI).optional()}).strict()),qL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>stt).optional(),_avg:t.lazy(()=>dtt).optional(),_max:t.lazy(()=>ztt).optional(),_min:t.lazy(()=>mtt).optional(),_sum:t.lazy(()=>htt).optional()}).strict(),BC=t.object({AND:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),OR:t.lazy(()=>BC).array().optional(),NOT:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ee=t.object({AND:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),OR:t.lazy(()=>ee).array().optional(),NOT:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>yS).optional(),instructions:t.lazy(()=>Yj).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict(),Bp=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional(),ingredients:t.lazy(()=>QN).optional(),instructions:t.lazy(()=>Q$).optional(),createdBy:t.lazy(()=>Ke).optional(),approvedBy:t.lazy(()=>Ke).optional()}).strict(),w=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>dN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>dN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>dN).optional(),AND:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),OR:t.lazy(()=>ee).array().optional(),NOT:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>yS).optional(),instructions:t.lazy(()=>Yj).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict()),FL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>btt).optional(),_avg:t.lazy(()=>Itt).optional(),_max:t.lazy(()=>gtt).optional(),_min:t.lazy(()=>Ctt).optional(),_sum:t.lazy(()=>Att).optional()}).strict(),qC=t.object({AND:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),OR:t.lazy(()=>qC).array().optional(),NOT:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ke=t.object({AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>YN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>sS).optional(),maintenanceLogs:t.lazy(()=>Y$).optional()}).strict(),qp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),recipes:t.lazy(()=>GN).optional(),maintenanceLogs:t.lazy(()=>Stt).optional()}).strict(),Lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>YN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>sS).optional(),maintenanceLogs:t.lazy(()=>Y$).optional()}).strict()),DL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ttt).optional(),_avg:t.lazy(()=>Ptt).optional(),_max:t.lazy(()=>Wtt).optional(),_min:t.lazy(()=>Utt).optional(),_sum:t.lazy(()=>Rtt).optional()}).strict(),FC=t.object({AND:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),OR:t.lazy(()=>FC).array().optional(),NOT:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>ktt),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),en=t.object({AND:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),OR:t.lazy(()=>en).array().optional(),NOT:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional(),RecipeInstruction:t.union([t.lazy(()=>G$),t.lazy(()=>Oe)]).optional().nullable()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),equipment:t.lazy(()=>qp).optional(),RecipeInstruction:t.lazy(()=>Mm).optional()}).strict(),B=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>zN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>zN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>zN).optional(),AND:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),OR:t.lazy(()=>en).array().optional(),NOT:t.union([t.lazy(()=>en),t.lazy(()=>en).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional(),RecipeInstruction:t.union([t.lazy(()=>G$),t.lazy(()=>Oe)]).optional().nullable()}).strict()),_L=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>xtt).optional(),_avg:t.lazy(()=>jtt).optional(),_max:t.lazy(()=>Mtt).optional(),_min:t.lazy(()=>Ztt).optional(),_sum:t.lazy(()=>vtt).optional()}).strict(),DC=t.object({AND:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),OR:t.lazy(()=>DC).array().optional(),NOT:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),on=t.object({AND:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),OR:t.lazy(()=>on).array().optional(),NOT:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>$N),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional()}).strict(),th=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>qp).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),OR:t.lazy(()=>on).array().optional(),NOT:t.union([t.lazy(()=>on),t.lazy(()=>on).array()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>$N),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Gj),t.lazy(()=>ke)]).optional()}).strict()),EL=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ott).optional(),_avg:t.lazy(()=>ftt).optional(),_max:t.lazy(()=>wtt).optional(),_min:t.lazy(()=>Ntt).optional(),_sum:t.lazy(()=>Btt).optional()}).strict(),_C=t.object({AND:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),OR:t.lazy(()=>_C).array().optional(),NOT:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>qtt),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),cost:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>ut),t.string()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),xe=t.object({AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>JN),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>$$).optional(),completions:t.lazy(()=>$j).optional()}).strict(),Fp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),items:t.lazy(()=>Ftt).optional(),completions:t.lazy(()=>J$).optional()}).strict(),Vt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>JN),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>$$).optional(),completions:t.lazy(()=>$j).optional()}).strict()),LL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dtt).optional(),_avg:t.lazy(()=>_tt).optional(),_max:t.lazy(()=>Ett).optional(),_min:t.lazy(()=>Ltt).optional(),_sum:t.lazy(()=>Vtt).optional()}).strict(),EC=t.object({AND:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),OR:t.lazy(()=>EC).array().optional(),NOT:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Htt),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Le=t.object({AND:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),OR:t.lazy(()=>Le).array().optional(),NOT:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completions:t.lazy(()=>Kj).optional()}).strict(),Wm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Fp).optional(),completions:t.lazy(()=>K$).optional()}).strict(),Jt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),OR:t.lazy(()=>Le).array().optional(),NOT:t.union([t.lazy(()=>Le),t.lazy(()=>Le).array()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number().int()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completions:t.lazy(()=>Kj).optional()}).strict()),VL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qtt).optional(),_avg:t.lazy(()=>Ytt).optional(),_max:t.lazy(()=>Gtt).optional(),_min:t.lazy(()=>$tt).optional(),_sum:t.lazy(()=>Jtt).optional()}).strict(),LC=t.object({AND:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),OR:t.lazy(()=>LC).array().optional(),NOT:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>ut),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>Ktt),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ve=t.object({AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),completedById:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>Kj).optional()}).strict(),Um=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Fp).optional(),completedBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>K$).optional()}).strict(),ot=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>Jj),t.lazy(()=>xe)]).optional(),completedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>Kj).optional()}).strict()),HL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xtt).optional(),_avg:t.lazy(()=>tet).optional(),_max:t.lazy(()=>eet).optional(),_min:t.lazy(()=>oet).optional(),_sum:t.lazy(()=>aet).optional()}).strict(),VC=t.object({AND:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),OR:t.lazy(()=>VC).array().optional(),NOT:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),an=t.object({AND:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),OR:t.lazy(()=>an).array().optional(),NOT:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>XN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>X$),t.lazy(()=>Ve)]).optional(),checklistItem:t.union([t.lazy(()=>t4),t.lazy(()=>Le)]).optional()}).strict(),eh=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>Um).optional(),checklistItem:t.lazy(()=>Wm).optional()}).strict(),dt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),OR:t.lazy(()=>an).array().optional(),NOT:t.union([t.lazy(()=>an),t.lazy(()=>an).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>XN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>X$),t.lazy(()=>Ve)]).optional(),checklistItem:t.union([t.lazy(()=>t4),t.lazy(()=>Le)]).optional()}).strict()),QL=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>net).optional(),_avg:t.lazy(()=>iet).optional(),_max:t.lazy(()=>ret).optional(),_min:t.lazy(()=>pet).optional(),_sum:t.lazy(()=>cet).optional()}).strict(),HC=t.object({AND:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),OR:t.lazy(()=>HC).array().optional(),NOT:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>uet),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),nn=t.object({AND:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),OR:t.lazy(()=>nn).array().optional(),NOT:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional()}).strict(),oh=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>_p).optional(),ingredient:t.lazy(()=>Ml).optional()}).strict(),zt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),OR:t.lazy(()=>nn).array().optional(),NOT:t.union([t.lazy(()=>nn),t.lazy(()=>nn).array()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional()}).strict()),YL=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>yet).optional(),_avg:t.lazy(()=>set).optional(),_max:t.lazy(()=>det).optional(),_min:t.lazy(()=>zet).optional(),_sum:t.lazy(()=>met).optional()}).strict(),QC=t.object({AND:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),OR:t.lazy(()=>QC).array().optional(),NOT:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),startDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ln=t.object({AND:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),OR:t.lazy(()=>ln).array().optional(),NOT:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>eB),t.lazy(()=>kt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict(),ah=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Zl).optional(),respondedBy:t.lazy(()=>Ke).optional()}).strict(),q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),OR:t.lazy(()=>ln).array().optional(),NOT:t.union([t.lazy(()=>ln),t.lazy(()=>ln).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>eB),t.lazy(()=>kt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict()),GL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>het).optional(),_avg:t.lazy(()=>bet).optional(),_max:t.lazy(()=>Iet).optional(),_min:t.lazy(()=>get).optional(),_sum:t.lazy(()=>Cet).optional()}).strict(),YC=t.object({AND:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),OR:t.lazy(()=>YC).array().optional(),NOT:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Aet),t.lazy(()=>Rt)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>Tet),t.lazy(()=>kt)]).optional(),responseText:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItems:t.lazy(()=>gI).optional(),recipes:t.lazy(()=>tp).optional(),ingredients:t.lazy(()=>eM).optional()}).strict(),Rm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>Qj).optional(),recipes:t.lazy(()=>dS).optional(),ingredients:t.lazy(()=>e4).optional()}).strict(),at=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItems:t.lazy(()=>gI).optional(),recipes:t.lazy(()=>tp).optional(),ingredients:t.lazy(()=>eM).optional()}).strict()),$L=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Pet).optional(),_avg:t.lazy(()=>Wet).optional(),_max:t.lazy(()=>Uet).optional(),_min:t.lazy(()=>Ret).optional(),_sum:t.lazy(()=>ket).optional()}).strict(),GC=t.object({AND:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),OR:t.lazy(()=>GC).array().optional(),NOT:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),rn=t.object({AND:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),OR:t.lazy(()=>rn).array().optional(),NOT:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>tp).optional()}).strict(),nh=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>dS).optional()}).strict(),Ie=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),OR:t.lazy(()=>rn).array().optional(),NOT:t.union([t.lazy(()=>rn),t.lazy(()=>rn).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>tp).optional()}).strict()),JL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>xet).optional(),_avg:t.lazy(()=>jet).optional(),_max:t.lazy(()=>Met).optional(),_min:t.lazy(()=>Zet).optional(),_sum:t.lazy(()=>vet).optional()}).strict(),$C=t.object({AND:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),OR:t.lazy(()=>$C).array().optional(),NOT:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),pn=t.object({AND:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),OR:t.lazy(()=>pn).array().optional(),NOT:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),ih=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItem:t.lazy(()=>Zl).optional(),recordedBy:t.lazy(()=>Ke).optional()}).strict(),F=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),OR:t.lazy(()=>pn).array().optional(),NOT:t.union([t.lazy(()=>pn),t.lazy(()=>pn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),KL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Oet).optional(),_avg:t.lazy(()=>fet).optional(),_max:t.lazy(()=>wet).optional(),_min:t.lazy(()=>Net).optional(),_sum:t.lazy(()=>Bet).optional()}).strict(),JC=t.object({AND:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),OR:t.lazy(()=>JC).array().optional(),NOT:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>ut),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),cn=t.object({AND:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),OR:t.lazy(()=>cn).array().optional(),NOT:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),lh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),ingrediente:t.lazy(()=>Ml).optional(),recordedBy:t.lazy(()=>Ke).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),OR:t.lazy(()=>cn).array().optional(),NOT:t.union([t.lazy(()=>cn),t.lazy(()=>cn).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),recordedBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),XL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qet).optional(),_avg:t.lazy(()=>Fet).optional(),_max:t.lazy(()=>Det).optional(),_min:t.lazy(()=>_et).optional(),_sum:t.lazy(()=>Eet).optional()}).strict(),KC=t.object({AND:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),OR:t.lazy(()=>KC).array().optional(),NOT:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),reason:t.union([t.lazy(()=>ut),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),He=t.object({AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>zS).optional()}).strict(),km=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),createdBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>oB).optional()}).strict(),nt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>zS).optional()}).strict()),tV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Let).optional(),_avg:t.lazy(()=>Vet).optional(),_max:t.lazy(()=>Het).optional(),_min:t.lazy(()=>Qet).optional(),_sum:t.lazy(()=>Yet).optional()}).strict(),XC=t.object({AND:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),OR:t.lazy(()=>XC).array().optional(),NOT:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),un=t.object({AND:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),OR:t.lazy(()=>un).array().optional(),NOT:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>o4),t.lazy(()=>He)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict(),rh=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>km).optional(),recipe:t.lazy(()=>Xe).optional(),assignedTo:t.lazy(()=>Ke).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),OR:t.lazy(()=>un).array().optional(),NOT:t.union([t.lazy(()=>un),t.lazy(()=>un).array()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>o4),t.lazy(()=>He)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable()}).strict()),eV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Get).optional(),_avg:t.lazy(()=>$et).optional(),_max:t.lazy(()=>Jet).optional(),_min:t.lazy(()=>Ket).optional(),_sum:t.lazy(()=>Xet).optional()}).strict(),tA=t.object({AND:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),OR:t.lazy(()=>tA).array().optional(),NOT:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),yn=t.object({AND:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),OR:t.lazy(()=>yn).array().optional(),NOT:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number()]).optional(),taskType:t.union([t.lazy(()=>aB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>a4),t.lazy(()=>$e)]).optional()}).strict(),ph=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>fm).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),OR:t.lazy(()=>yn).array().optional(),NOT:t.union([t.lazy(()=>yn),t.lazy(()=>yn).array()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>aB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>a4),t.lazy(()=>$e)]).optional()}).strict()),oV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>tot).optional(),_avg:t.lazy(()=>eot).optional(),_max:t.lazy(()=>oot).optional(),_min:t.lazy(()=>aot).optional(),_sum:t.lazy(()=>not).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>iot),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),sn=t.object({AND:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),OR:t.lazy(()=>sn).array().optional(),NOT:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>nB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),ch=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),OR:t.lazy(()=>sn).array().optional(),NOT:t.union([t.lazy(()=>sn),t.lazy(()=>sn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>nB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),aV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>lot).optional(),_avg:t.lazy(()=>rot).optional(),_max:t.lazy(()=>pot).optional(),_min:t.lazy(()=>cot).optional(),_sum:t.lazy(()=>uot).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>yot),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),dn=t.object({AND:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),OR:t.lazy(()=>dn).array().optional(),NOT:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>iB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),uh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),OR:t.lazy(()=>dn).array().optional(),NOT:t.union([t.lazy(()=>dn),t.lazy(()=>dn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>iB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),nV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>sot).optional(),_avg:t.lazy(()=>dot).optional(),_max:t.lazy(()=>zot).optional(),_min:t.lazy(()=>mot).optional(),_sum:t.lazy(()=>hot).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>bot),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),zn=t.object({AND:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),OR:t.lazy(()=>zn).array().optional(),NOT:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional(),recipe:t.union([t.lazy(()=>n4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),yh=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>cp).optional(),recipe:t.lazy(()=>Xe).optional(),createdBy:t.lazy(()=>Ke).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),OR:t.lazy(()=>zn).array().optional(),NOT:t.union([t.lazy(()=>zn),t.lazy(()=>zn).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional(),recipe:t.union([t.lazy(()=>n4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),iV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Iot).optional(),_avg:t.lazy(()=>got).optional(),_max:t.lazy(()=>Cot).optional(),_min:t.lazy(()=>Aot).optional(),_sum:t.lazy(()=>Sot).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),recipeId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),lo=t.object({AND:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),OR:t.lazy(()=>lo).array().optional(),NOT:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>oM).optional()}).strict(),xm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),ingredients:t.lazy(()=>i4).optional()}).strict(),Kr=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),OR:t.lazy(()=>lo).array().optional(),NOT:t.union([t.lazy(()=>lo),t.lazy(()=>lo).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>oM).optional()}).strict()),lV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Tot).optional(),_avg:t.lazy(()=>Pot).optional(),_max:t.lazy(()=>Wot).optional(),_min:t.lazy(()=>Uot).optional(),_sum:t.lazy(()=>Rot).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable()}).strict(),mn=t.object({AND:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),OR:t.lazy(()=>mn).array().optional(),NOT:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),allergen:t.union([t.lazy(()=>l4),t.lazy(()=>lo)]).optional()}).strict(),sh=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>Ml).optional(),allergen:t.lazy(()=>xm).optional()}).strict(),mt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),OR:t.lazy(()=>mn).array().optional(),NOT:t.union([t.lazy(()=>mn),t.lazy(()=>mn).array()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),allergen:t.union([t.lazy(()=>l4),t.lazy(()=>lo)]).optional()}).strict()),rV=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>kot).optional(),_avg:t.lazy(()=>xot).optional(),_max:t.lazy(()=>jot).optional(),_min:t.lazy(()=>Mot).optional(),_sum:t.lazy(()=>Zot).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),hn=t.object({AND:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),OR:t.lazy(()=>hn).array().optional(),NOT:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional()}).strict(),dh=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Zl).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),OR:t.lazy(()=>hn).array().optional(),NOT:t.union([t.lazy(()=>hn),t.lazy(()=>hn).array()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional()}).strict()),pV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vot).optional(),_avg:t.lazy(()=>Oot).optional(),_max:t.lazy(()=>fot).optional(),_min:t.lazy(()=>wot).optional(),_sum:t.lazy(()=>Not).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),pl=t.object({AND:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),OR:t.lazy(()=>pl).array().optional(),NOT:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),zh=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qm=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),OR:t.lazy(()=>pl).array().optional(),NOT:t.union([t.lazy(()=>pl),t.lazy(()=>pl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict()),cV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Bot).optional(),_avg:t.lazy(()=>qot).optional(),_max:t.lazy(()=>Fot).optional(),_min:t.lazy(()=>Dot).optional(),_sum:t.lazy(()=>_ot).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Re=t.object({AND:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),OR:t.lazy(()=>Re).array().optional(),NOT:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurants:t.lazy(()=>r4).optional(),users:t.lazy(()=>aM).optional()}).strict(),Dp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>Eot).optional(),users:t.lazy(()=>p4).optional()}).strict(),Rl=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),OR:t.lazy(()=>Re).array().optional(),NOT:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurants:t.lazy(()=>r4).optional(),users:t.lazy(()=>aM).optional()}).strict()),uV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Lot).optional(),_avg:t.lazy(()=>Vot).optional(),_max:t.lazy(()=>Hot).optional(),_min:t.lazy(()=>Qot).optional(),_sum:t.lazy(()=>Yot).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),wt=t.object({AND:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),OR:t.lazy(()=>wt).array().optional(),NOT:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>c4),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>hS).optional(),transactions:t.lazy(()=>bS).optional(),stockCounts:t.lazy(()=>nM).optional()}).strict(),Gr=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),items:t.lazy(()=>lB).optional(),transactions:t.lazy(()=>rB).optional(),stockCounts:t.lazy(()=>u4).optional()}).strict(),Ha=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),OR:t.lazy(()=>wt).array().optional(),NOT:t.union([t.lazy(()=>wt),t.lazy(()=>wt).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>c4),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),items:t.lazy(()=>hS).optional(),transactions:t.lazy(()=>bS).optional(),stockCounts:t.lazy(()=>nM).optional()}).strict()),yV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Got).optional(),_avg:t.lazy(()=>$ot).optional(),_max:t.lazy(()=>Jot).optional(),_min:t.lazy(()=>Kot).optional(),_sum:t.lazy(()=>Xot).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>tat),t.lazy(()=>vt)]).optional(),isActive:t.union([t.lazy(()=>vl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),N=t.object({AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),users:t.lazy(()=>aM).optional(),cookbooks:t.lazy(()=>y4).optional(),inventory:t.union([t.lazy(()=>s4),t.lazy(()=>wt)]).optional().nullable(),orders:t.lazy(()=>lM).optional(),recipes:t.lazy(()=>tp).optional(),menus:t.lazy(()=>d4).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItem:t.lazy(()=>IS).optional(),wasteRecord:t.lazy(()=>gS).optional(),productionPlan:t.lazy(()=>pM).optional(),equipment:t.lazy(()=>z4).optional(),qualityChecklist:t.lazy(()=>m4).optional(),qustomerFeedback:t.lazy(()=>CS).optional()}).strict(),kn=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),organization:t.lazy(()=>Dp).optional(),users:t.lazy(()=>p4).optional(),cookbooks:t.lazy(()=>eat).optional(),inventory:t.lazy(()=>Gr).optional(),orders:t.lazy(()=>h4).optional(),recipes:t.lazy(()=>dS).optional(),menus:t.lazy(()=>oat).optional(),salesTransactions:t.lazy(()=>b4).optional(),leftoverItem:t.lazy(()=>pB).optional(),wasteRecord:t.lazy(()=>cB).optional(),productionPlan:t.lazy(()=>I4).optional(),equipment:t.lazy(()=>aat).optional(),qualityChecklist:t.lazy(()=>nat).optional(),qustomerFeedback:t.lazy(()=>uB).optional()}).strict(),J=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),users:t.lazy(()=>aM).optional(),cookbooks:t.lazy(()=>y4).optional(),inventory:t.union([t.lazy(()=>s4),t.lazy(()=>wt)]).optional().nullable(),orders:t.lazy(()=>lM).optional(),recipes:t.lazy(()=>tp).optional(),menus:t.lazy(()=>d4).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItem:t.lazy(()=>IS).optional(),wasteRecord:t.lazy(()=>gS).optional(),productionPlan:t.lazy(()=>pM).optional(),equipment:t.lazy(()=>z4).optional(),qualityChecklist:t.lazy(()=>m4).optional(),qustomerFeedback:t.lazy(()=>CS).optional()}).strict()),sV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>iat).optional(),_avg:t.lazy(()=>lat).optional(),_max:t.lazy(()=>rat).optional(),_min:t.lazy(()=>pat).optional(),_sum:t.lazy(()=>cat).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>ut),t.string()]).optional(),city:t.union([t.lazy(()=>ut),t.string()]).optional(),zipCode:t.union([t.lazy(()=>ut),t.string()]).optional(),state:t.union([t.lazy(()=>ut),t.string()]).optional(),owner:t.union([t.lazy(()=>ut),t.string()]).optional(),organizationId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>vl),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable()}).strict(),Z=t.object({AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>yB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>g4).optional(),prepItems:t.lazy(()=>AS).optional(),inventoryUpdates:t.lazy(()=>hS).optional(),sessions:t.lazy(()=>C4).optional(),passwordResets:t.lazy(()=>A4).optional(),leftoverItem:t.lazy(()=>IS).optional(),wasteRecord:t.lazy(()=>gS).optional(),productionPlan:t.lazy(()=>pM).optional(),productionPlanItem:t.lazy(()=>zS).optional(),availability:t.lazy(()=>S4).optional(),schedulingConstraint:t.lazy(()=>T4).optional(),inventoryWithdrawal:t.lazy(()=>SS).optional(),checklistComplete:t.lazy(()=>$j).optional(),customerFeedback:t.lazy(()=>CS).optional(),recipeVersionsCreated:t.lazy(()=>NA).optional(),recipeVersionsApproved:t.lazy(()=>NA).optional(),InventoryTransaction:t.lazy(()=>bS).optional(),StockCount:t.lazy(()=>nM).optional()}).strict(),Ke=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Dp).optional(),restaurant:t.lazy(()=>kn).optional(),shifts:t.lazy(()=>uat).optional(),prepItems:t.lazy(()=>sB).optional(),inventoryUpdates:t.lazy(()=>lB).optional(),sessions:t.lazy(()=>yat).optional(),passwordResets:t.lazy(()=>sat).optional(),leftoverItem:t.lazy(()=>pB).optional(),wasteRecord:t.lazy(()=>cB).optional(),productionPlan:t.lazy(()=>I4).optional(),productionPlanItem:t.lazy(()=>oB).optional(),availability:t.lazy(()=>dat).optional(),schedulingConstraint:t.lazy(()=>zat).optional(),inventoryWithdrawal:t.lazy(()=>dB).optional(),checklistComplete:t.lazy(()=>J$).optional(),customerFeedback:t.lazy(()=>uB).optional(),recipeVersionsCreated:t.lazy(()=>CN).optional(),recipeVersionsApproved:t.lazy(()=>CN).optional(),InventoryTransaction:t.lazy(()=>rB).optional(),StockCount:t.lazy(()=>u4).optional()}).strict(),j=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>yB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>iM),t.lazy(()=>Re)]).optional().nullable(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>g4).optional(),prepItems:t.lazy(()=>AS).optional(),inventoryUpdates:t.lazy(()=>hS).optional(),sessions:t.lazy(()=>C4).optional(),passwordResets:t.lazy(()=>A4).optional(),leftoverItem:t.lazy(()=>IS).optional(),wasteRecord:t.lazy(()=>gS).optional(),productionPlan:t.lazy(()=>pM).optional(),productionPlanItem:t.lazy(()=>zS).optional(),availability:t.lazy(()=>S4).optional(),schedulingConstraint:t.lazy(()=>T4).optional(),inventoryWithdrawal:t.lazy(()=>SS).optional(),checklistComplete:t.lazy(()=>$j).optional(),customerFeedback:t.lazy(()=>CS).optional(),recipeVersionsCreated:t.lazy(()=>NA).optional(),recipeVersionsApproved:t.lazy(()=>NA).optional(),InventoryTransaction:t.lazy(()=>bS).optional(),StockCount:t.lazy(()=>nM).optional()}).strict()),dV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mat).optional(),_avg:t.lazy(()=>hat).optional(),_max:t.lazy(()=>bat).optional(),_min:t.lazy(()=>Iat).optional(),_sum:t.lazy(()=>gat).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),sub:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>ut),t.string()]).optional(),firstName:t.union([t.lazy(()=>ut),t.string()]).optional(),lastName:t.union([t.lazy(()=>ut),t.string()]).optional(),profileImage:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>vl),t.boolean()]).optional(),role:t.union([t.lazy(()=>Cat),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),bn=t.object({AND:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),OR:t.lazy(()=>bn).array().optional(),NOT:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),mh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Te=t.union([t.object({id:t.string().uuid(),code:t.string(),token:t.string()}),t.object({id:t.string().uuid(),code:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({code:t.string(),token:t.string()}),t.object({code:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),code:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),OR:t.lazy(()=>bn).array().optional(),NOT:t.union([t.lazy(()=>bn),t.lazy(()=>bn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),zV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Aat).optional(),_avg:t.lazy(()=>Sat).optional(),_max:t.lazy(()=>Tat).optional(),_min:t.lazy(()=>Pat).optional(),_sum:t.lazy(()=>Wat).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>ut),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),code:t.union([t.lazy(()=>ut),t.string()]).optional(),token:t.union([t.lazy(()=>ut),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipes:t.lazy(()=>tp).optional(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable()}).strict(),jm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipes:t.lazy(()=>dS).optional(),restaurant:t.lazy(()=>kn).optional()}).strict(),Kt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>tp).optional(),restaurant:t.union([t.lazy(()=>cM),t.lazy(()=>N)]).optional().nullable()}).strict()),mV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Uat).optional(),_avg:t.lazy(()=>Rat).optional(),_max:t.lazy(()=>kat).optional(),_min:t.lazy(()=>xat).optional(),_sum:t.lazy(()=>jat).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>ut),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>zB),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>P4),t.lazy(()=>Qe)]).optional(),ingredients:t.lazy(()=>yS).optional(),instructions:t.lazy(()=>Yj).optional(),menuItems:t.lazy(()=>gI).optional(),foodCostHistory:t.lazy(()=>W4).optional(),prepHistory:t.lazy(()=>U4).optional(),prepBoards:t.lazy(()=>R4).optional(),prepItems:t.lazy(()=>AS).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),productionPlanItems:t.lazy(()=>zS).optional(),withdrawals:t.lazy(()=>SS).optional(),tags:t.lazy(()=>k4).optional(),versions:t.lazy(()=>NA).optional(),equipment:t.lazy(()=>sS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional(),temperatures:t.lazy(()=>x4).optional(),yields:t.lazy(()=>j4).optional(),laborCosts:t.lazy(()=>M4).optional(),nutritionalInfo:t.union([t.lazy(()=>Z4),t.lazy(()=>fe)]).optional().nullable(),criticalPoints:t.lazy(()=>v4).optional(),storage:t.union([t.lazy(()=>O4),t.lazy(()=>we)]).optional().nullable(),photos:t.lazy(()=>f4).optional(),RecipeStats:t.union([t.lazy(()=>w4),t.lazy(()=>Ne)]).optional().nullable()}).strict(),Xe=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),cookBook:t.lazy(()=>jm).optional(),ingredients:t.lazy(()=>QN).optional(),instructions:t.lazy(()=>Q$).optional(),menuItems:t.lazy(()=>Qj).optional(),foodCostHistory:t.lazy(()=>Mat).optional(),prepHistory:t.lazy(()=>Zat).optional(),prepBoards:t.lazy(()=>vat).optional(),prepItems:t.lazy(()=>sB).optional(),menuItemRecipes:t.lazy(()=>N4).optional(),productionPlanItems:t.lazy(()=>oB).optional(),withdrawals:t.lazy(()=>dB).optional(),tags:t.lazy(()=>Oat).optional(),versions:t.lazy(()=>CN).optional(),equipment:t.lazy(()=>GN).optional(),dietaryRestrictions:t.lazy(()=>B4).optional(),temperatures:t.lazy(()=>fat).optional(),yields:t.lazy(()=>wat).optional(),laborCosts:t.lazy(()=>Nat).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),criticalPoints:t.lazy(()=>Bat).optional(),storage:t.lazy(()=>Tm).optional(),photos:t.lazy(()=>qat).optional(),RecipeStats:t.lazy(()=>vm).optional()}).strict(),g=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>zB),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>P4),t.lazy(()=>Qe)]).optional(),ingredients:t.lazy(()=>yS).optional(),instructions:t.lazy(()=>Yj).optional(),menuItems:t.lazy(()=>gI).optional(),foodCostHistory:t.lazy(()=>W4).optional(),prepHistory:t.lazy(()=>U4).optional(),prepBoards:t.lazy(()=>R4).optional(),prepItems:t.lazy(()=>AS).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),productionPlanItems:t.lazy(()=>zS).optional(),withdrawals:t.lazy(()=>SS).optional(),tags:t.lazy(()=>k4).optional(),versions:t.lazy(()=>NA).optional(),equipment:t.lazy(()=>sS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional(),temperatures:t.lazy(()=>x4).optional(),yields:t.lazy(()=>j4).optional(),laborCosts:t.lazy(()=>M4).optional(),nutritionalInfo:t.union([t.lazy(()=>Z4),t.lazy(()=>fe)]).optional().nullable(),criticalPoints:t.lazy(()=>v4).optional(),storage:t.union([t.lazy(()=>O4),t.lazy(()=>we)]).optional().nullable(),photos:t.lazy(()=>f4).optional(),RecipeStats:t.union([t.lazy(()=>w4),t.lazy(()=>Ne)]).optional().nullable()}).strict()),hV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fat).optional(),_avg:t.lazy(()=>Dat).optional(),_max:t.lazy(()=>_at).optional(),_min:t.lazy(()=>Eat).optional(),_sum:t.lazy(()=>Lat).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>vl),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>vl),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>ut),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Vat),t.lazy(()=>W)]).optional()}).strict(),Ut=t.object({AND:t.union([t.lazy(()=>Ut),t.lazy(()=>Ut).array()]).optional(),OR:t.lazy(()=>Ut).array().optional(),NOT:t.union([t.lazy(()=>Ut),t.lazy(()=>Ut).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipeIngredients:t.lazy(()=>yS).optional(),inventoryItems:t.lazy(()=>hS).optional(),orderItems:t.lazy(()=>sM).optional(),vendors:t.lazy(()=>q4).optional(),WasteRecord:t.lazy(()=>gS).optional(),IngredientAllergen:t.lazy(()=>oM).optional(),SupplierPriceHistory:t.lazy(()=>dM).optional(),DietaryRestriction:t.union([t.lazy(()=>F4),t.lazy(()=>ve)]).optional().nullable()}).strict(),Ml=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeIngredients:t.lazy(()=>QN).optional(),inventoryItems:t.lazy(()=>lB).optional(),orderItems:t.lazy(()=>D4).optional(),vendors:t.lazy(()=>Hat).optional(),WasteRecord:t.lazy(()=>cB).optional(),IngredientAllergen:t.lazy(()=>i4).optional(),SupplierPriceHistory:t.lazy(()=>_4).optional(),DietaryRestriction:t.lazy(()=>Rm).optional()}).strict(),G=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Ut),t.lazy(()=>Ut).array()]).optional(),OR:t.lazy(()=>Ut).array().optional(),NOT:t.union([t.lazy(()=>Ut),t.lazy(()=>Ut).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipeIngredients:t.lazy(()=>yS).optional(),inventoryItems:t.lazy(()=>hS).optional(),orderItems:t.lazy(()=>sM).optional(),vendors:t.lazy(()=>q4).optional(),WasteRecord:t.lazy(()=>gS).optional(),IngredientAllergen:t.lazy(()=>oM).optional(),SupplierPriceHistory:t.lazy(()=>dM).optional(),DietaryRestriction:t.union([t.lazy(()=>F4),t.lazy(()=>ve)]).optional().nullable()}).strict()),bV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Qat).optional(),_avg:t.lazy(()=>Yat).optional(),_max:t.lazy(()=>Gat).optional(),_min:t.lazy(()=>$at).optional(),_sum:t.lazy(()=>Jat).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),category:t.union([t.lazy(()=>ut),t.string()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),In=t.object({AND:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),OR:t.lazy(()=>In).array().optional(),NOT:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>AI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),recipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable()}).strict(),hh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),ingredient:t.lazy(()=>Ml).optional(),recipeVersion:t.lazy(()=>Bp).optional()}).strict(),L=t.union([t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>mN)}),t.object({id:t.number().int()}),t.object({recipeId_ingredientId:t.lazy(()=>mN)})]).and(t.object({id:t.number().int().optional(),recipeId_ingredientId:t.lazy(()=>mN).optional(),AND:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),OR:t.lazy(()=>In).array().optional(),NOT:t.union([t.lazy(()=>In),t.lazy(()=>In).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>AI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),recipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable()}).strict()),IV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Kat).optional(),_avg:t.lazy(()=>Xat).optional(),_max:t.lazy(()=>tnt).optional(),_min:t.lazy(()=>ent).optional(),_sum:t.lazy(()=>ont).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>AI).optional(),isOptional:t.union([t.lazy(()=>vl),t.boolean()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable(),equipment:t.lazy(()=>sS).optional()}).strict(),Mm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional(),RecipeVersion:t.lazy(()=>Bp).optional(),equipment:t.lazy(()=>GN).optional()}).strict(),it=t.union([t.object({id:t.number().int(),recipeId_stepNumber:t.lazy(()=>hN)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber:t.lazy(()=>hN)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber:t.lazy(()=>hN).optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>zM),t.lazy(()=>ee)]).optional().nullable(),equipment:t.lazy(()=>sS).optional()}).strict()),gV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>ant).optional(),_avg:t.lazy(()=>nnt).optional(),_max:t.lazy(()=>int).optional(),_min:t.lazy(()=>lnt).optional(),_sum:t.lazy(()=>rnt).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>ut),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>vl),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable()}).strict(),oe=t.object({AND:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),OR:t.lazy(()=>oe).array().optional(),NOT:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>bS).optional(),withdrawals:t.lazy(()=>SS).optional(),stockCounts:t.lazy(()=>mM).optional()}).strict(),cp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),inventory:t.lazy(()=>Gr).optional(),ingredient:t.lazy(()=>Ml).optional(),lastUpdatedBy:t.lazy(()=>Ke).optional(),transactions:t.lazy(()=>rB).optional(),withdrawals:t.lazy(()=>dB).optional(),stockCounts:t.lazy(()=>E4).optional()}).strict(),f=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>bN)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>bN)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>bN).optional(),AND:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),OR:t.lazy(()=>oe).array().optional(),NOT:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>CI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>bS).optional(),withdrawals:t.lazy(()=>SS).optional(),stockCounts:t.lazy(()=>mM).optional()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>pnt).optional(),_avg:t.lazy(()=>cnt).optional(),_max:t.lazy(()=>unt).optional(),_min:t.lazy(()=>ynt).optional(),_sum:t.lazy(()=>snt).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>At),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>At),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>At),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>At),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>At),t.number()]).optional(),averageCost:t.union([t.lazy(()=>At),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>jl),t.number()]).optional().nullable()}).strict(),gn=t.object({AND:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),OR:t.lazy(()=>gn).array().optional(),NOT:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>mB),t.lazy(()=>xt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),item:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),bh=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>Gr).optional(),item:t.lazy(()=>cp).optional(),createdBy:t.lazy(()=>Ke).optional()}).strict(),V=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),OR:t.lazy(()=>gn).array().optional(),NOT:t.union([t.lazy(()=>gn),t.lazy(()=>gn).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),type:t.union([t.lazy(()=>mB),t.lazy(()=>xt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),item:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dnt).optional(),_avg:t.lazy(()=>znt).optional(),_max:t.lazy(()=>mnt).optional(),_min:t.lazy(()=>hnt).optional(),_sum:t.lazy(()=>bnt).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>Int),t.lazy(()=>xt)]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),previousQty:t.union([t.lazy(()=>At),t.number()]).optional(),newQty:t.union([t.lazy(()=>At),t.number()]).optional(),cost:t.union([t.lazy(()=>jl),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>mM).optional()}).strict(),Zm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),inventory:t.lazy(()=>Gr).optional(),createdBy:t.lazy(()=>Ke).optional(),items:t.lazy(()=>E4).optional()}).strict(),lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>TS),t.lazy(()=>wt)]).optional(),createdBy:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>mM).optional()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>gnt).optional(),_avg:t.lazy(()=>Cnt).optional(),_max:t.lazy(()=>Ant).optional(),_min:t.lazy(()=>Snt).optional(),_sum:t.lazy(()=>Tnt).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Pnt),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable()}).strict(),Cn=t.object({AND:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),OR:t.lazy(()=>Cn).array().optional(),NOT:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>L4),t.lazy(()=>Ye)]).optional(),item:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional()}).strict(),Ih=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),stockCount:t.lazy(()=>Zm).optional(),item:t.lazy(()=>cp).optional()}).strict(),ht=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>IN)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>IN)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>IN).optional(),AND:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),OR:t.lazy(()=>Cn).array().optional(),NOT:t.union([t.lazy(()=>Cn),t.lazy(()=>Cn).array()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>L4),t.lazy(()=>Ye)]).optional(),item:t.union([t.lazy(()=>mS),t.lazy(()=>oe)]).optional()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Wnt).optional(),_avg:t.lazy(()=>Unt).optional(),_max:t.lazy(()=>Rnt).optional(),_min:t.lazy(()=>knt).optional(),_sum:t.lazy(()=>xnt).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>At),t.number()]).optional(),actualQty:t.union([t.lazy(()=>At),t.number()]).optional(),difference:t.union([t.lazy(()=>At),t.number()]).optional(),notes:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>u),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),vm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),wl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>u),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>jnt).optional(),_avg:t.lazy(()=>Mnt).optional(),_max:t.lazy(()=>Znt).optional(),_min:t.lazy(()=>vnt).optional(),_sum:t.lazy(()=>Ont).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>At),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>At),t.number()]).optional(),averageRating:t.union([t.lazy(()=>At),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Yr),t.coerce.date()]).optional().nullable()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),items:t.lazy(()=>sM).optional()}).strict(),Om=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),vendor:t.lazy(()=>_p).optional(),items:t.lazy(()=>D4).optional()}).strict(),rt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>Xj),t.lazy(()=>je)]).optional(),items:t.lazy(()=>sM).optional()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fnt).optional(),_avg:t.lazy(()=>wnt).optional(),_max:t.lazy(()=>Nnt).optional(),_min:t.lazy(()=>Bnt).optional(),_sum:t.lazy(()=>qnt).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Fnt),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),An=t.object({AND:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),OR:t.lazy(()=>An).array().optional(),NOT:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),orderId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>V4),t.lazy(()=>Ge)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional()}).strict(),gh=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>Om).optional(),ingredient:t.lazy(()=>Ml).optional()}).strict(),bt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),OR:t.lazy(()=>An).array().optional(),NOT:t.union([t.lazy(()=>An),t.lazy(()=>An).array()]).optional(),orderId:t.union([t.lazy(()=>u),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>V4),t.lazy(()=>Ge)]).optional(),ingredient:t.union([t.lazy(()=>Xr),t.lazy(()=>Ut)]).optional()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dnt).optional(),_avg:t.lazy(()=>_nt).optional(),_max:t.lazy(()=>Ent).optional(),_min:t.lazy(()=>Lnt).optional(),_sum:t.lazy(()=>Vnt).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>At),t.number()]).optional(),unit:t.union([t.lazy(()=>ut),t.string()]).optional(),price:t.union([t.lazy(()=>At),t.number()]).optional()}).strict(),je=t.object({AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),orders:t.lazy(()=>lM).optional(),ingredients:t.lazy(()=>eM).optional(),supplierPriceHistory:t.lazy(()=>dM).optional()}).strict(),_p=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>h4).optional(),ingredients:t.lazy(()=>e4).optional(),supplierPriceHistory:t.lazy(()=>_4).optional()}).strict(),Ht=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),orders:t.lazy(()=>lM).optional(),ingredients:t.lazy(()=>eM).optional(),supplierPriceHistory:t.lazy(()=>dM).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hnt).optional(),_avg:t.lazy(()=>Qnt).optional(),_max:t.lazy(()=>Ynt).optional(),_min:t.lazy(()=>Gnt).optional(),_sum:t.lazy(()=>$nt).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),contact:t.union([t.lazy(()=>ut),t.string()]).optional(),email:t.union([t.lazy(()=>ut),t.string()]).optional(),phone:t.union([t.lazy(()=>ut),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>Et)]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>H4).optional()}).strict(),fm=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional(),ShiftTask:t.lazy(()=>Jnt).optional()}).strict(),Xt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>Et)]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>H4).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>Knt).optional(),_avg:t.lazy(()=>Xnt).optional(),_max:t.lazy(()=>tit).optional(),_min:t.lazy(()=>eit).optional(),_sum:t.lazy(()=>oit).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>ait),t.lazy(()=>Et)]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>tp).optional(),prepItems:t.lazy(()=>AS).optional()}).strict(),wm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>dS).optional(),prepItems:t.lazy(()=>sB).optional()}).strict(),te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipes:t.lazy(()=>tp).optional(),prepItems:t.lazy(()=>AS).optional()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>nit).optional(),_avg:t.lazy(()=>iit).optional(),_max:t.lazy(()=>lit).optional(),_min:t.lazy(()=>rit).optional(),_sum:t.lazy(()=>pit).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),status:t.union([t.lazy(()=>Q4),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Sn=t.object({AND:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),OR:t.lazy(()=>Sn).array().optional(),NOT:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>Y4),t.lazy(()=>Je)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),Ch=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>wm).optional(),recipe:t.lazy(()=>Xe).optional(),assignedTo:t.lazy(()=>Ke).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),OR:t.lazy(()=>Sn).array().optional(),NOT:t.union([t.lazy(()=>Sn),t.lazy(()=>Sn).array()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>Y4),t.lazy(()=>Je)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>cit).optional(),_avg:t.lazy(()=>uit).optional(),_max:t.lazy(()=>yit).optional(),_min:t.lazy(()=>sit).optional(),_sum:t.lazy(()=>dit).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Q4),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Tn=t.object({AND:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),OR:t.lazy(()=>Tn).array().optional(),NOT:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict(),Ah=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Ke).optional()}).strict(),Pe=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),OR:t.lazy(()=>Tn).array().optional(),NOT:t.union([t.lazy(()=>Tn),t.lazy(()=>Tn).array()]).optional(),userId:t.union([t.lazy(()=>u),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>qe),t.lazy(()=>Z)]).optional()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>zit).optional(),_avg:t.lazy(()=>mit).optional(),_max:t.lazy(()=>hit).optional(),_min:t.lazy(()=>bit).optional(),_sum:t.lazy(()=>Iit).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>ut),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>gI).optional(),MenuCategory:t.lazy(()=>G4).optional()}).strict(),Ep=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>kn).optional(),menuItems:t.lazy(()=>Qj).optional(),MenuCategory:t.lazy(()=>git).optional()}).strict(),Qt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Qa),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>gI).optional(),MenuCategory:t.lazy(()=>G4).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cit).optional(),_avg:t.lazy(()=>Ait).optional(),_max:t.lazy(()=>Sit).optional(),_min:t.lazy(()=>Tit).optional(),_sum:t.lazy(()=>Pit).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Pn=t.object({AND:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),OR:t.lazy(()=>Pn).array().optional(),NOT:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Sh=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Zl).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),It=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>gN)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>gN)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>gN).optional(),AND:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),OR:t.lazy(()=>Pn).array().optional(),NOT:t.union([t.lazy(()=>Pn),t.lazy(()=>Pn).array()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>II),t.lazy(()=>gt)]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wit).optional(),_avg:t.lazy(()=>Uit).optional(),_max:t.lazy(()=>Rit).optional(),_min:t.lazy(()=>kit).optional(),_sum:t.lazy(()=>xit).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),gt=t.object({AND:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),OR:t.lazy(()=>gt).array().optional(),NOT:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>AI).optional(),recipeServingsAmount:t.lazy(()=>Wh).optional(),recipeServingsCost:t.lazy(()=>Wh).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),category:t.union([t.lazy(()=>$4),t.lazy(()=>Ze)]).optional().nullable(),recipes:t.lazy(()=>tp).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),nutritionalInfo:t.union([t.lazy(()=>J4),t.lazy(()=>Be)]).optional().nullable(),recommendations:t.lazy(()=>K4).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItems:t.lazy(()=>IS).optional(),feedback:t.lazy(()=>CS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional()}).strict(),Zl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),menu:t.lazy(()=>Ep).optional(),category:t.lazy(()=>Pm).optional(),recipes:t.lazy(()=>dS).optional(),menuItemRecipes:t.lazy(()=>N4).optional(),nutritionalInfo:t.lazy(()=>Nm).optional(),recommendations:t.lazy(()=>jit).optional(),salesTransactions:t.lazy(()=>b4).optional(),leftoverItems:t.lazy(()=>pB).optional(),feedback:t.lazy(()=>uB).optional(),dietaryRestrictions:t.lazy(()=>B4).optional()}).strict(),k=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),OR:t.lazy(()=>gt).array().optional(),NOT:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>AI).optional(),recipeServingsAmount:t.lazy(()=>Wh).optional(),recipeServingsCost:t.lazy(()=>Wh).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>Hj),t.lazy(()=>Me)]).optional(),category:t.union([t.lazy(()=>$4),t.lazy(()=>Ze)]).optional().nullable(),recipes:t.lazy(()=>tp).optional(),menuItemRecipes:t.lazy(()=>uM).optional(),nutritionalInfo:t.union([t.lazy(()=>J4),t.lazy(()=>Be)]).optional().nullable(),recommendations:t.lazy(()=>K4).optional(),salesTransactions:t.lazy(()=>rM).optional(),leftoverItems:t.lazy(()=>IS).optional(),feedback:t.lazy(()=>CS).optional(),dietaryRestrictions:t.lazy(()=>yM).optional()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),_count:t.lazy(()=>Mit).optional(),_avg:t.lazy(()=>Zit).optional(),_max:t.lazy(()=>vit).optional(),_min:t.lazy(()=>Oit).optional(),_sum:t.lazy(()=>fit).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>ut),t.string()]).optional(),description:t.union([t.lazy(()=>Pt),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>At),t.number()]).optional(),foodCost:t.union([t.lazy(()=>At),t.number()]).optional(),isActive:t.union([t.lazy(()=>vl),t.boolean()]).optional(),recipeIds:t.lazy(()=>AI).optional(),recipeServingsAmount:t.lazy(()=>Wh).optional(),recipeServingsCost:t.lazy(()=>Wh).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable()}).strict(),Nm=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Zl).optional()}).strict(),Nl=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>tM),t.lazy(()=>gt)]).optional().nullable()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>C)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>wit).optional(),_avg:t.lazy(()=>Nit).optional(),_max:t.lazy(()=>Bit).optional(),_min:t.lazy(()=>qit).optional(),_sum:t.lazy(()=>Fit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Rn),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>At),t.number()]).optional(),fat:t.union([t.lazy(()=>At),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>At),t.number()]).optional(),transFat:t.union([t.lazy(()=>At),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>At),t.number()]).optional(),sodium:t.union([t.lazy(()=>At),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>At),t.number()]).optional(),fiber:t.union([t.lazy(()=>At),t.number()]).optional(),sugar:t.union([t.lazy(()=>At),t.number()]).optional(),protein:t.union([t.lazy(()=>At),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Wn=t.object({AND:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),OR:t.lazy(()=>Wn).array().optional(),NOT:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Th=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),We=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),OR:t.lazy(()=>Wn).array().optional(),NOT:t.union([t.lazy(()=>Wn),t.lazy(()=>Wn).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dit).optional(),_avg:t.lazy(()=>_it).optional(),_max:t.lazy(()=>Eit).optional(),_min:t.lazy(()=>Lit).optional(),_sum:t.lazy(()=>Vit).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>At),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Un=t.object({AND:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),OR:t.lazy(()=>Un).array().optional(),NOT:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict(),Ph=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>Xe).optional()}).strict(),Ue=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),OR:t.lazy(()=>Un).array().optional(),NOT:t.union([t.lazy(()=>Un),t.lazy(()=>Un).array()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>u),t.number().int()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ue),t.lazy(()=>v)]).optional()}).strict()),NV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hit).optional(),_avg:t.lazy(()=>Qit).optional(),_max:t.lazy(()=>Yit).optional(),_min:t.lazy(()=>Git).optional(),_sum:t.lazy(()=>$it).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),n0=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),recipe:t.lazy(()=>Jit)}).strict(),i0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),l0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),recipe:t.lazy(()=>Kit).optional()}).strict(),r0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),QT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),p0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),c0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),u0=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Xit)}).strict(),y0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),s0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tlt).optional()}).strict(),d0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m0=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>elt)}).strict(),h0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),b0=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>olt).optional()}).strict(),I0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),g0=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A0=t.object({url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>alt)}).strict(),S0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T0=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>nlt).optional()}).strict(),P0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$T=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SN=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U0=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>ilt)}).strict(),R0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),k0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>llt).optional()}).strict(),x0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M0=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>rlt)}).strict(),Z0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v0=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>plt).optional()}).strict(),O0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PN=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w0=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>clt)}).strict(),N0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B0=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>ult).optional()}).strict(),q0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WN=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D0=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>X4),menuItem:t.lazy(()=>t2)}).strict(),_0=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E0=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>e2).optional(),menuItem:t.lazy(()=>o2).optional()}).strict(),L0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mj=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H0=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>a2),menuItems:t.lazy(()=>n2).optional()}).strict(),Q0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>i2).optional()}).strict(),Y0=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>l2).optional(),menuItems:t.lazy(()=>r2).optional()}).strict(),G0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>p2).optional()}).strict(),eP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$0=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J0=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kT),ingredients:t.lazy(()=>xT).optional(),instructions:t.lazy(()=>jT).optional(),createdBy:t.lazy(()=>MT),approvedBy:t.lazy(()=>ZT).optional()}).strict(),K0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>vT).optional(),instructions:t.lazy(()=>OT).optional()}).strict(),X0=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>fT).optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional(),createdBy:t.lazy(()=>BT).optional(),approvedBy:t.lazy(()=>qT).optional()}).strict(),tY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FT).optional(),instructions:t.lazy(()=>DT).optional()}).strict(),oP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bT=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oY=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gB),recipes:t.lazy(()=>CB).optional(),maintenanceLogs:t.lazy(()=>AB).optional()}).strict(),aY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>SB).optional(),maintenanceLogs:t.lazy(()=>TB).optional()}).strict(),nY=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>PB).optional(),recipes:t.lazy(()=>WB).optional(),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),iY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>RB).optional(),maintenanceLogs:t.lazy(()=>kB).optional()}).strict(),aP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rY=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>xB),equipment:t.lazy(()=>jB),RecipeInstruction:t.lazy(()=>MB).optional()}).strict(),pY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),cY=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>ZB).optional(),equipment:t.lazy(()=>vB).optional(),RecipeInstruction:t.lazy(()=>OB).optional()}).strict(),uY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),nP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),IT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),yY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),sY=t.object({date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>ylt)}).strict(),dY=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>slt).optional()}).strict(),mY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bY=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>fB),items:t.lazy(()=>wB).optional(),completions:t.lazy(()=>NB).optional()}).strict(),IY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>BB).optional(),completions:t.lazy(()=>qB).optional()}).strict(),gY=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>FB).optional(),items:t.lazy(()=>DB).optional(),completions:t.lazy(()=>_B).optional()}).strict(),CY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>EB).optional(),completions:t.lazy(()=>LB).optional()}).strict(),lP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SY=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>c2),completions:t.lazy(()=>u2).optional()}).strict(),TY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>y2).optional()}).strict(),PY=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>s2).optional(),completions:t.lazy(()=>d2).optional()}).strict(),WY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>z2).optional()}).strict(),rP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jN=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RY=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>VB),completedBy:t.lazy(()=>HB),items:t.lazy(()=>QB).optional()}).strict(),kY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>YB).optional()}).strict(),xY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>GB).optional(),completedBy:t.lazy(()=>$B).optional(),items:t.lazy(()=>JB).optional()}).strict(),jY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>KB).optional()}).strict(),pP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZY=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>m2),checklistItem:t.lazy(()=>h2)}).strict(),vY=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OY=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>b2).optional(),checklistItem:t.lazy(()=>I2).optional()}).strict(),fY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vj=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NY=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>g2),ingredient:t.lazy(()=>C2)}).strict(),BY=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qY=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>A2).optional(),ingredient:t.lazy(()=>S2).optional()}).strict(),FY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oj=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_Y=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XB),menuItem:t.lazy(()=>tq).optional(),respondedBy:t.lazy(()=>eq).optional()}).strict(),EY=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LY=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>oq).optional(),menuItem:t.lazy(()=>aq).optional(),respondedBy:t.lazy(()=>nq).optional()}).strict(),VY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gT=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QY=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>iq).optional(),recipes:t.lazy(()=>lq).optional(),ingredients:t.lazy(()=>rq).optional()}).strict(),YY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>pq).optional(),recipes:t.lazy(()=>cq).optional(),ingredients:t.lazy(()=>uq).optional()}).strict(),GY=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yq).optional(),recipes:t.lazy(()=>sq).optional(),ingredients:t.lazy(()=>dq).optional()}).strict(),$Y=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>zq).optional(),recipes:t.lazy(()=>mq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),sP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fj=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JY=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KY=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>dlt).optional()}).strict(),XY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>zlt).optional()}).strict(),tG=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>mlt).optional()}).strict(),eG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>hlt).optional()}).strict(),dP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>bq),menuItem:t.lazy(()=>Iq),recordedBy:t.lazy(()=>gq)}).strict(),nG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Cq).optional(),menuItem:t.lazy(()=>Aq).optional(),recordedBy:t.lazy(()=>Sq).optional()}).strict(),lG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Tq),ingrediente:t.lazy(()=>Pq),recordedBy:t.lazy(()=>Wq)}).strict(),cG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Uq).optional(),ingrediente:t.lazy(()=>Rq).optional(),recordedBy:t.lazy(()=>kq).optional()}).strict(),yG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dG=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>xq),createdBy:t.lazy(()=>jq),items:t.lazy(()=>Mq).optional()}).strict(),zG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Zq).optional()}).strict(),mG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>vq).optional(),createdBy:t.lazy(()=>Oq).optional(),items:t.lazy(()=>fq).optional()}).strict(),hG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>wq).optional()}).strict(),hP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IG=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Nq),recipe:t.lazy(()=>Bq),assignedTo:t.lazy(()=>qq).optional()}).strict(),gG=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CG=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Fq).optional(),recipe:t.lazy(()=>Dq).optional(),assignedTo:t.lazy(()=>_q).optional()}).strict(),AG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ST=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TG=t.object({taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>blt)}).strict(),PG=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WG=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>Ilt).optional()}).strict(),UG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZN=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kG=t.object({dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>glt)}).strict(),xG=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jG=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Clt).optional()}).strict(),MG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vN=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vG=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Alt)}).strict(),OG=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Slt).optional()}).strict(),wG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CP=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ON=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BG=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Eq),recipe:t.lazy(()=>Lq).optional(),createdBy:t.lazy(()=>Vq)}).strict(),qG=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FG=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Hq).optional(),recipe:t.lazy(()=>Qq).optional(),createdBy:t.lazy(()=>Yq).optional()}).strict(),DG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AP=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TT=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_G=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EG=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Tlt).optional()}).strict(),LG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Plt).optional()}).strict(),VG=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Wlt).optional()}).strict(),HG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Ult).optional()}).strict(),SP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),QG=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),YG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),GG=t.object({ingredient:t.lazy(()=>T2),allergen:t.lazy(()=>P2)}).strict(),$G=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),JG=t.object({ingredient:t.lazy(()=>W2).optional(),allergen:t.lazy(()=>U2).optional()}).strict(),KG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),TP=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),Nj=t.object({}).strict(),XG=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),t1=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Rlt)}).strict(),e1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),o1=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>klt).optional()}).strict(),a1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fN=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i1=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l1=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),r1=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WP=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c1=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>R2).optional(),users:t.lazy(()=>k2).optional()}).strict(),s1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>x2).optional(),users:t.lazy(()=>j2).optional()}).strict(),d1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>M2).optional(),users:t.lazy(()=>Z2).optional()}).strict(),z1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>v2).optional(),users:t.lazy(()=>O2).optional()}).strict(),UP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),m1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b1=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),I1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),g1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),C1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),RP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),A1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),P1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),W1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),U1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),kP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),wN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),R1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),k1=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),x1=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),j1=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),M1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),xP=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bj=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v1=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>xlt)}).strict(),O1=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),f1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>jlt).optional()}).strict(),w1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jP=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),NN=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>f2).optional(),restaurant:t.lazy(()=>w2).optional()}).strict(),q1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>N2).optional()}).strict(),F1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>B2).optional(),restaurant:t.lazy(()=>q2).optional()}).strict(),D1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>F2).optional()}).strict(),MP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),BN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional()}).strict(),_1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),E1=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),L1=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),V1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),H1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),bI=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),Q1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),Y1=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),G1=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),$1=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),J1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),vP=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable()}).strict(),qj=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),K1=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),X1=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Gq),ingredient:t.lazy(()=>$q),recipeVersion:t.lazy(()=>Jq).optional()}).strict(),t9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),e9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Kq).optional(),ingredient:t.lazy(()=>Xq).optional(),recipeVersion:t.lazy(()=>tF).optional()}).strict(),o9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),OP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),PT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),n9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>eF),RecipeVersion:t.lazy(()=>oF).optional(),equipment:t.lazy(()=>aF).optional()}).strict(),i9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>nF).optional()}).strict(),l9=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>iF).optional(),RecipeVersion:t.lazy(()=>lF).optional(),equipment:t.lazy(()=>rF).optional()}).strict(),r9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),fP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),Fj=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),p9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),c9=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),ingredient:t.lazy(()=>US),lastUpdatedBy:t.lazy(()=>RS).optional(),transactions:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>xS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),u9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),y9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),ingredient:t.lazy(()=>fS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),s9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),wP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),WT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),d9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),z9=t.object({type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>cF),item:t.lazy(()=>uF),createdBy:t.lazy(()=>yF)}).strict(),m9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),h9=t.object({type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>sF).optional(),item:t.lazy(()=>dF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),b9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),UT=t.object({type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g9=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>mF),createdBy:t.lazy(()=>hF),items:t.lazy(()=>bF).optional()}).strict(),C9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>IF).optional()}).strict(),A9=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>gF).optional(),createdBy:t.lazy(()=>CF).optional(),items:t.lazy(()=>AF).optional()}).strict(),S9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),BP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),Dj=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),T9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),P9=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>D2),item:t.lazy(()=>_2)}).strict(),W9=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),U9=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>E2).optional(),item:t.lazy(()=>L2).optional()}).strict(),R9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),qP=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),_j=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),k9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),x9=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>Mlt)}).strict(),j9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),M9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Zlt).optional()}).strict(),Z9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),FP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),v9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),O9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),f9=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TF),vendor:t.lazy(()=>PF),items:t.lazy(()=>WF).optional()}).strict(),w9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>UF).optional()}).strict(),N9=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>RF).optional(),vendor:t.lazy(()=>kF).optional(),items:t.lazy(()=>xF).optional()}).strict(),B9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jF).optional()}).strict(),DP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ej=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F9=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>V2),ingredient:t.lazy(()=>H2)}).strict(),D9=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),_9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>Q2).optional(),ingredient:t.lazy(()=>Y2).optional()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),_P=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Lj=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),L9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),V9=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>MF).optional(),ingredients:t.lazy(()=>ZF).optional(),supplierPriceHistory:t.lazy(()=>vF).optional()}).strict(),H9=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>OF).optional(),ingredients:t.lazy(()=>fF).optional(),supplierPriceHistory:t.lazy(()=>wF).optional()}).strict(),Q9=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>NF).optional(),ingredients:t.lazy(()=>BF).optional(),supplierPriceHistory:t.lazy(()=>qF).optional()}).strict(),Y9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>FF).optional(),ingredients:t.lazy(()=>DF).optional(),supplierPriceHistory:t.lazy(()=>_F).optional()}).strict(),EP=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$9=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),user:t.lazy(()=>G2),ShiftTask:t.lazy(()=>$2).optional()}).strict(),J9=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>J2).optional()}).strict(),K9=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),user:t.lazy(()=>K2).optional(),ShiftTask:t.lazy(()=>X2).optional()}).strict(),X9=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>t5).optional()}).strict(),LP=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),FN=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),t$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),e$=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>e5).optional(),prepItems:t.lazy(()=>o5).optional()}).strict(),o$=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>a5).optional(),prepItems:t.lazy(()=>n5).optional()}).strict(),a$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>i5).optional(),prepItems:t.lazy(()=>l5).optional()}).strict(),n$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>r5).optional(),prepItems:t.lazy(()=>p5).optional()}).strict(),VP=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l$=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>EF),recipe:t.lazy(()=>LF),assignedTo:t.lazy(()=>VF)}).strict(),r$=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),p$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>HF).optional(),recipe:t.lazy(()=>QF).optional(),assignedTo:t.lazy(()=>YF).optional()}).strict(),c$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),HP=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),RT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),u$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),y$=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>vlt)}).strict(),s$=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d$=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Olt).optional()}).strict(),z$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QP=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_N=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h$=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>GF),menuItems:t.lazy(()=>$F).optional(),MenuCategory:t.lazy(()=>JF).optional()}).strict(),b$=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>KF).optional(),MenuCategory:t.lazy(()=>XF).optional()}).strict(),I$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>tD).optional(),menuItems:t.lazy(()=>eD).optional(),MenuCategory:t.lazy(()=>oD).optional()}).strict(),g$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>aD).optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),YP=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EN=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A$=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>c5),recipe:t.lazy(()=>u5)}).strict(),S$=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),T$=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>y5).optional(),recipe:t.lazy(()=>s5).optional()}).strict(),P$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Vj=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U$=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),R$=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),k$=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),x$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),$P=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),uS=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional()}).strict(),j$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),M$=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>flt).optional()}).strict(),Z$=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>wlt).optional()}).strict(),O$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JP=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),f$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N$=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Nlt)}).strict(),B$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),q$=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Blt).optional()}).strict(),F$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LN=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_$=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>qlt)}).strict(),E$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Flt).optional()}).strict(),V$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VN=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H$=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),U=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Hr)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>BA)]).optional()}).strict(),ue=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),WX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),UX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),RX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),kX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),xX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>d5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),At=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>z5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>Hr).optional(),_min:t.lazy(()=>Hr).optional(),_max:t.lazy(()=>Hr).optional()}).strict(),ut=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>m5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>BA).optional(),_max:t.lazy(()=>BA).optional()}).strict(),Ft=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Qr)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>qA)]).optional().nullable()}).strict(),s=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>FA)]).optional()}).strict(),C=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>KK).optional()}).strict(),jX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),MX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),ZX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),OX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),jl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>h5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Qr).optional(),_sum:t.lazy(()=>Qr).optional(),_min:t.lazy(()=>Qr).optional(),_max:t.lazy(()=>Qr).optional()}).strict(),Pt=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Pj).optional(),not:t.union([t.string(),t.lazy(()=>b5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>qA).optional(),_max:t.lazy(()=>qA).optional()}).strict(),M=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>I5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),fX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),NX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),BX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),HN=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>DA)]).optional()}).strict(),tt=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>cl)]).optional().nullable()}).strict(),FX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),DX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),_X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),EX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),LX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),VX=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>g5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),Rn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>C5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Qr).optional(),_sum:t.lazy(()=>cl).optional(),_min:t.lazy(()=>cl).optional(),_max:t.lazy(()=>cl).optional()}).strict(),Dt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>_A)]).optional()}).strict(),HX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),QX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),YX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),GX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),vl=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>A5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),JX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),KX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),XX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ltt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Qa=t.object({is:t.lazy(()=>N).optional(),isNot:t.lazy(()=>N).optional()}).strict(),II=t.object({is:t.lazy(()=>gt).optional(),isNot:t.lazy(()=>gt).optional()}).strict(),rtt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ptt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),ctt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),utt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ytt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Hj=t.object({is:t.lazy(()=>Me).optional(),isNot:t.lazy(()=>Me).optional()}).strict(),gI=t.object({every:t.lazy(()=>gt).optional(),some:t.lazy(()=>gt).optional(),none:t.lazy(()=>gt).optional()}).strict(),Qj=t.object({_count:t.lazy(()=>e).optional()}).strict(),sN=t.object({menuId:t.number(),name:t.string()}).strict(),stt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dtt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),ztt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),htt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),ce=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>EA)]).optional().nullable()}).strict(),yS=t.object({every:t.lazy(()=>In).optional(),some:t.lazy(()=>In).optional(),none:t.lazy(()=>In).optional()}).strict(),Yj=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),qe=t.object({is:t.lazy(()=>Z).optional(),isNot:t.lazy(()=>Z).optional()}).strict(),CI=t.object({is:t.lazy(()=>Z).optional().nullable(),isNot:t.lazy(()=>Z).optional().nullable()}).strict(),QN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Q$=t.object({_count:t.lazy(()=>e).optional()}).strict(),dN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),gtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ctt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Yr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>S5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),YN=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>LA)]).optional()}).strict(),sS=t.object({every:t.lazy(()=>en).optional(),some:t.lazy(()=>en).optional(),none:t.lazy(()=>en).optional()}).strict(),Y$=t.object({every:t.lazy(()=>on).optional(),some:t.lazy(()=>on).optional(),none:t.lazy(()=>on).optional()}).strict(),GN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Stt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ttt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ptt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Utt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),ktt=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),Gj=t.object({is:t.lazy(()=>ke).optional(),isNot:t.lazy(()=>ke).optional()}).strict(),G$=t.object({is:t.lazy(()=>Oe).optional().nullable(),isNot:t.lazy(()=>Oe).optional().nullable()}).strict(),zN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),vtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),$N=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>VA)]).optional()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Btt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),qtt=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>P5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),JN=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>HA)]).optional()}).strict(),$$=t.object({every:t.lazy(()=>Le).optional(),some:t.lazy(()=>Le).optional(),none:t.lazy(()=>Le).optional()}).strict(),$j=t.object({every:t.lazy(()=>Ve).optional(),some:t.lazy(()=>Ve).optional(),none:t.lazy(()=>Ve).optional()}).strict(),Ftt=t.object({_count:t.lazy(()=>e).optional()}).strict(),J$=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ltt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Htt=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>W5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),KN=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>QA)]).optional()}).strict(),Jj=t.object({is:t.lazy(()=>xe).optional(),isNot:t.lazy(()=>xe).optional()}).strict(),Kj=t.object({every:t.lazy(()=>an).optional(),some:t.lazy(()=>an).optional(),none:t.lazy(()=>an).optional()}).strict(),K$=t.object({_count:t.lazy(()=>e).optional()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$tt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),Ktt=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>U5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),XN=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>YA)]).optional()}).strict(),ul=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),X$=t.object({is:t.lazy(()=>Ve).optional(),isNot:t.lazy(()=>Ve).optional()}).strict(),t4=t.object({is:t.lazy(()=>Le).optional(),isNot:t.lazy(()=>Le).optional()}).strict(),net=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),uet=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),Xj=t.object({is:t.lazy(()=>je).optional(),isNot:t.lazy(()=>je).optional()}).strict(),Xr=t.object({is:t.lazy(()=>Ut).optional(),isNot:t.lazy(()=>Ut).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),set=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),met=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),tB=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>GA)]).optional()}).strict(),eB=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>$A)]).optional()}).strict(),tM=t.object({is:t.lazy(()=>gt).optional().nullable(),isNot:t.lazy(()=>gt).optional().nullable()}).strict(),het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Aet=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),Tet=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),tp=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),eM=t.object({every:t.lazy(()=>Ut).optional(),some:t.lazy(()=>Ut).optional(),none:t.lazy(()=>Ut).optional()}).strict(),dS=t.object({_count:t.lazy(()=>e).optional()}).strict(),e4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional()}).strict(),Uet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ret=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ket=t.object({id:t.lazy(()=>e).optional()}).strict(),xet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional()}).strict(),Met=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vet=t.object({id:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Det=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_et=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),zS=t.object({every:t.lazy(()=>un).optional(),some:t.lazy(()=>un).optional(),none:t.lazy(()=>un).optional()}).strict(),oB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),o4=t.object({is:t.lazy(()=>He).optional(),isNot:t.lazy(()=>He).optional()}).strict(),Get=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),aB=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>JA)]).optional()}).strict(),a4=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),not=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),iot=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),nB=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>KA)]).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),uot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),yot=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),iB=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>XA)]).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),bot=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),mS=t.object({is:t.lazy(()=>oe).optional(),isNot:t.lazy(()=>oe).optional()}).strict(),n4=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),oM=t.object({every:t.lazy(()=>mn).optional(),some:t.lazy(()=>mn).optional(),none:t.lazy(()=>mn).optional()}).strict(),i4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Tot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Pot=t.object({id:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Rot=t.object({id:t.lazy(()=>e).optional()}).strict(),l4=t.object({is:t.lazy(()=>lo).optional(),isNot:t.lazy(()=>lo).optional()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),jot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Not=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional()}).strict(),r4=t.object({every:t.lazy(()=>N).optional(),some:t.lazy(()=>N).optional(),none:t.lazy(()=>N).optional()}).strict(),aM=t.object({every:t.lazy(()=>Z).optional(),some:t.lazy(()=>Z).optional(),none:t.lazy(()=>Z).optional()}).strict(),Eot=t.object({_count:t.lazy(()=>e).optional()}).strict(),p4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional()}).strict(),c4=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>tS)]).optional()}).strict(),hS=t.object({every:t.lazy(()=>oe).optional(),some:t.lazy(()=>oe).optional(),none:t.lazy(()=>oe).optional()}).strict(),bS=t.object({every:t.lazy(()=>gn).optional(),some:t.lazy(()=>gn).optional(),none:t.lazy(()=>gn).optional()}).strict(),nM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),lB=t.object({_count:t.lazy(()=>e).optional()}).strict(),rB=t.object({_count:t.lazy(()=>e).optional()}).strict(),u4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),tat=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),iM=t.object({is:t.lazy(()=>Re).optional().nullable(),isNot:t.lazy(()=>Re).optional().nullable()}).strict(),y4=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),s4=t.object({is:t.lazy(()=>wt).optional().nullable(),isNot:t.lazy(()=>wt).optional().nullable()}).strict(),lM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),d4=t.object({every:t.lazy(()=>Me).optional(),some:t.lazy(()=>Me).optional(),none:t.lazy(()=>Me).optional()}).strict(),rM=t.object({every:t.lazy(()=>tn).optional(),some:t.lazy(()=>tn).optional(),none:t.lazy(()=>tn).optional()}).strict(),IS=t.object({every:t.lazy(()=>pn).optional(),some:t.lazy(()=>pn).optional(),none:t.lazy(()=>pn).optional()}).strict(),gS=t.object({every:t.lazy(()=>cn).optional(),some:t.lazy(()=>cn).optional(),none:t.lazy(()=>cn).optional()}).strict(),pM=t.object({every:t.lazy(()=>He).optional(),some:t.lazy(()=>He).optional(),none:t.lazy(()=>He).optional()}).strict(),z4=t.object({every:t.lazy(()=>ke).optional(),some:t.lazy(()=>ke).optional(),none:t.lazy(()=>ke).optional()}).strict(),m4=t.object({every:t.lazy(()=>xe).optional(),some:t.lazy(()=>xe).optional(),none:t.lazy(()=>xe).optional()}).strict(),CS=t.object({every:t.lazy(()=>ln).optional(),some:t.lazy(()=>ln).optional(),none:t.lazy(()=>ln).optional()}).strict(),eat=t.object({_count:t.lazy(()=>e).optional()}).strict(),h4=t.object({_count:t.lazy(()=>e).optional()}).strict(),oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),b4=t.object({_count:t.lazy(()=>e).optional()}).strict(),pB=t.object({_count:t.lazy(()=>e).optional()}).strict(),cB=t.object({_count:t.lazy(()=>e).optional()}).strict(),I4=t.object({_count:t.lazy(()=>e).optional()}).strict(),aat=t.object({_count:t.lazy(()=>e).optional()}).strict(),nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),uB=t.object({_count:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),cat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),yB=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>eS)]).optional()}).strict(),cM=t.object({is:t.lazy(()=>N).optional().nullable(),isNot:t.lazy(()=>N).optional().nullable()}).strict(),g4=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),AS=t.object({every:t.lazy(()=>Sn).optional(),some:t.lazy(()=>Sn).optional(),none:t.lazy(()=>Sn).optional()}).strict(),C4=t.object({every:t.lazy(()=>bn).optional(),some:t.lazy(()=>bn).optional(),none:t.lazy(()=>bn).optional()}).strict(),A4=t.object({every:t.lazy(()=>Tn).optional(),some:t.lazy(()=>Tn).optional(),none:t.lazy(()=>Tn).optional()}).strict(),S4=t.object({every:t.lazy(()=>sn).optional(),some:t.lazy(()=>sn).optional(),none:t.lazy(()=>sn).optional()}).strict(),T4=t.object({every:t.lazy(()=>dn).optional(),some:t.lazy(()=>dn).optional(),none:t.lazy(()=>dn).optional()}).strict(),SS=t.object({every:t.lazy(()=>zn).optional(),some:t.lazy(()=>zn).optional(),none:t.lazy(()=>zn).optional()}).strict(),NA=t.object({every:t.lazy(()=>ee).optional(),some:t.lazy(()=>ee).optional(),none:t.lazy(()=>ee).optional()}).strict(),uat=t.object({_count:t.lazy(()=>e).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),yat=t.object({_count:t.lazy(()=>e).optional()}).strict(),sat=t.object({_count:t.lazy(()=>e).optional()}).strict(),dat=t.object({_count:t.lazy(()=>e).optional()}).strict(),zat=t.object({_count:t.lazy(()=>e).optional()}).strict(),dB=t.object({_count:t.lazy(()=>e).optional()}).strict(),CN=t.object({_count:t.lazy(()=>e).optional()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Cat=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Sat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Pat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Wat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),jat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),zB=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>oS)]).optional()}).strict(),P4=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),W4=t.object({every:t.lazy(()=>Wn).optional(),some:t.lazy(()=>Wn).optional(),none:t.lazy(()=>Wn).optional()}).strict(),U4=t.object({every:t.lazy(()=>Un).optional(),some:t.lazy(()=>Un).optional(),none:t.lazy(()=>Un).optional()}).strict(),R4=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),uM=t.object({every:t.lazy(()=>Pn).optional(),some:t.lazy(()=>Pn).optional(),none:t.lazy(()=>Pn).optional()}).strict(),k4=t.object({every:t.lazy(()=>rn).optional(),some:t.lazy(()=>rn).optional(),none:t.lazy(()=>rn).optional()}).strict(),yM=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),x4=t.object({every:t.lazy(()=>Ja).optional(),some:t.lazy(()=>Ja).optional(),none:t.lazy(()=>Ja).optional()}).strict(),j4=t.object({every:t.lazy(()=>Ka).optional(),some:t.lazy(()=>Ka).optional(),none:t.lazy(()=>Ka).optional()}).strict(),M4=t.object({every:t.lazy(()=>Xa).optional(),some:t.lazy(()=>Xa).optional(),none:t.lazy(()=>Xa).optional()}).strict(),Z4=t.object({is:t.lazy(()=>fe).optional().nullable(),isNot:t.lazy(()=>fe).optional().nullable()}).strict(),v4=t.object({every:t.lazy(()=>Ga).optional(),some:t.lazy(()=>Ga).optional(),none:t.lazy(()=>Ga).optional()}).strict(),O4=t.object({is:t.lazy(()=>we).optional().nullable(),isNot:t.lazy(()=>we).optional().nullable()}).strict(),f4=t.object({every:t.lazy(()=>$a).optional(),some:t.lazy(()=>$a).optional(),none:t.lazy(()=>$a).optional()}).strict(),w4=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),Mat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Zat=t.object({_count:t.lazy(()=>e).optional()}).strict(),vat=t.object({_count:t.lazy(()=>e).optional()}).strict(),N4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),B4=t.object({_count:t.lazy(()=>e).optional()}).strict(),fat=t.object({_count:t.lazy(()=>e).optional()}).strict(),wat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bat=t.object({_count:t.lazy(()=>e).optional()}).strict(),qat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Lat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Vat=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),sM=t.object({every:t.lazy(()=>An).optional(),some:t.lazy(()=>An).optional(),none:t.lazy(()=>An).optional()}).strict(),q4=t.object({every:t.lazy(()=>je).optional(),some:t.lazy(()=>je).optional(),none:t.lazy(()=>je).optional()}).strict(),dM=t.object({every:t.lazy(()=>nn).optional(),some:t.lazy(()=>nn).optional(),none:t.lazy(()=>nn).optional()}).strict(),F4=t.object({is:t.lazy(()=>ve).optional().nullable(),isNot:t.lazy(()=>ve).optional().nullable()}).strict(),D4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Hat=t.object({_count:t.lazy(()=>e).optional()}).strict(),_4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional()}).strict(),AI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),zM=t.object({is:t.lazy(()=>ee).optional().nullable(),isNot:t.lazy(()=>ee).optional().nullable()}).strict(),mN=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),hN=t.object({recipeId:t.number(),stepNumber:t.number()}).strict(),ant=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),rnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),TS=t.object({is:t.lazy(()=>wt).optional(),isNot:t.lazy(()=>wt).optional()}).strict(),mM=t.object({every:t.lazy(()=>Cn).optional(),some:t.lazy(()=>Cn).optional(),none:t.lazy(()=>Cn).optional()}).strict(),E4=t.object({_count:t.lazy(()=>e).optional()}).strict(),bN=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),pnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),mB=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>aS)]).optional()}).strict(),dnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),bnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Int=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),hB=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>nS)]).optional()}).strict(),gnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Cnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Ant=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Snt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),L4=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),IN=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),jnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Znt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),bB=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>iS)]).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Fnt=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),V4=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),Dnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),_nt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Ent=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Vnt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$nt=t.object({id:t.lazy(()=>e).optional()}).strict(),IB=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>lS)]).optional()}).strict(),H4=t.object({every:t.lazy(()=>yn).optional(),some:t.lazy(()=>yn).optional(),none:t.lazy(()=>yn).optional()}).strict(),Jnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),ait=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),PS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>rS)]).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional()}).strict(),Q4=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),Y4=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),cit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),G4=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),git=t.object({_count:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),gN=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Wh=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),$4=t.object({is:t.lazy(()=>Ze).optional().nullable(),isNot:t.lazy(()=>Ze).optional().nullable()}).strict(),J4=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),K4=t.object({every:t.lazy(()=>hn).optional(),some:t.lazy(()=>hn).optional(),none:t.lazy(()=>hn).optional()}).strict(),jit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$it=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),Jit=t.object({create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]).optional(),connectOrCreate:t.lazy(()=>D5).optional(),connect:t.lazy(()=>g).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),n=t.object({set:t.string().optional()}).strict(),Kit=t.object({create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]).optional(),connectOrCreate:t.lazy(()=>D5).optional(),upsert:t.lazy(()=>Dlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>_lt),t.lazy(()=>iD),t.lazy(()=>lD)]).optional()}).strict(),a=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Xit=t.object({create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]).optional(),connectOrCreate:t.lazy(()=>_5).optional(),connect:t.lazy(()=>g).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),tlt=t.object({create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]).optional(),connectOrCreate:t.lazy(()=>_5).optional(),upsert:t.lazy(()=>Elt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Llt),t.lazy(()=>rD),t.lazy(()=>pD)]).optional()}).strict(),elt=t.object({create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]).optional(),connectOrCreate:t.lazy(()=>E5).optional(),connect:t.lazy(()=>g).optional()}).strict(),olt=t.object({create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]).optional(),connectOrCreate:t.lazy(()=>E5).optional(),upsert:t.lazy(()=>Vlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Hlt),t.lazy(()=>cD),t.lazy(()=>uD)]).optional()}).strict(),alt=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>L5).optional(),connect:t.lazy(()=>g).optional()}).strict(),cC=t.object({set:t.lazy(()=>pe).optional()}).strict(),m=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),nlt=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>L5).optional(),upsert:t.lazy(()=>Qlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Ylt),t.lazy(()=>yD),t.lazy(()=>sD)]).optional()}).strict(),ilt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>V5).optional(),connect:t.lazy(()=>g).optional()}).strict(),d=t.object({set:t.boolean().optional()}).strict(),llt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>V5).optional(),upsert:t.lazy(()=>Glt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>$lt),t.lazy(()=>dD),t.lazy(()=>zD)]).optional()}).strict(),rlt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>H5).optional(),connect:t.lazy(()=>g).optional()}).strict(),plt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>H5).optional(),upsert:t.lazy(()=>Jlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Klt),t.lazy(()=>mD),t.lazy(()=>hD)]).optional()}).strict(),clt=t.object({create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]).optional(),connectOrCreate:t.lazy(()=>Q5).optional(),connect:t.lazy(()=>g).optional()}).strict(),ult=t.object({create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]).optional(),connectOrCreate:t.lazy(()=>Q5).optional(),upsert:t.lazy(()=>Xlt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>trt),t.lazy(()=>bD),t.lazy(()=>ID)]).optional()}).strict(),X4=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>Y5).optional(),connect:t.lazy(()=>J).optional()}).strict(),t2=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>G5).optional(),connect:t.lazy(()=>k).optional()}).strict(),e2=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>Y5).optional(),upsert:t.lazy(()=>ert).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>ort),t.lazy(()=>gD),t.lazy(()=>CD)]).optional()}).strict(),o2=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>G5).optional(),upsert:t.lazy(()=>art).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>nrt),t.lazy(()=>AD),t.lazy(()=>SD)]).optional()}).strict(),a2=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>$5).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),n2=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>$M).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),i2=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>$M).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),l2=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>$5).optional(),upsert:t.lazy(()=>irt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>lrt),t.lazy(()=>TD),t.lazy(()=>PD)]).optional()}).strict(),r2=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>$M).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),p2=t.object({create:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array(),t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>$M).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),kT=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),connect:t.lazy(()=>g).optional()}).strict(),xT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),jT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),MT=t.object({create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),connect:t.lazy(()=>j).optional()}).strict(),ZT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),connect:t.lazy(()=>j).optional()}).strict(),vT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),OT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),fT=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),upsert:t.lazy(()=>rrt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>prt),t.lazy(()=>WD),t.lazy(()=>UD)]).optional()}).strict(),wT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),NT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),BT=t.object({create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),upsert:t.lazy(()=>crt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>urt),t.lazy(()=>RD),t.lazy(()=>kD)]).optional()}).strict(),qT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),upsert:t.lazy(()=>yrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>srt),t.lazy(()=>xD),t.lazy(()=>jD)]).optional()}).strict(),FT=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),DT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>tZ).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),gB=t.object({create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),connect:t.lazy(()=>J).optional()}).strict(),CB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),AB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),SB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),TB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),up=t.object({set:t.lazy(()=>Ot).optional()}).strict(),PB=t.object({create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),upsert:t.lazy(()=>drt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>zrt),t.lazy(()=>MD),t.lazy(()=>ZD)]).optional()}).strict(),WB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),UB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional()}).strict(),RB=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>rZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),kB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>pZ).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional()}).strict(),xB=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),connect:t.lazy(()=>g).optional()}).strict(),jB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),connect:t.lazy(()=>Lt).optional()}).strict(),MB=t.object({create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),connect:t.lazy(()=>it).optional()}).strict(),ZB=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),upsert:t.lazy(()=>mrt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>hrt),t.lazy(()=>vD),t.lazy(()=>OD)]).optional()}).strict(),vB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),upsert:t.lazy(()=>brt).optional(),connect:t.lazy(()=>Lt).optional(),update:t.union([t.lazy(()=>Irt),t.lazy(()=>fD),t.lazy(()=>wD)]).optional()}).strict(),OB=t.object({create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),upsert:t.lazy(()=>grt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),connect:t.lazy(()=>it).optional(),update:t.union([t.lazy(()=>Crt),t.lazy(()=>ND),t.lazy(()=>BD)]).optional()}).strict(),ylt=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),connect:t.lazy(()=>Lt).optional()}).strict(),uC=t.object({set:t.lazy(()=>ne).optional()}).strict(),slt=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),upsert:t.lazy(()=>Art).optional(),connect:t.lazy(()=>Lt).optional(),update:t.union([t.lazy(()=>Srt),t.lazy(()=>qD),t.lazy(()=>FD)]).optional()}).strict(),fB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),connect:t.lazy(()=>J).optional()}).strict(),wB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),NB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),BB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),qB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),yp=t.object({set:t.lazy(()=>ft).optional()}).strict(),FB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),upsert:t.lazy(()=>Trt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Prt),t.lazy(()=>DD),t.lazy(()=>_D)]).optional()}).strict(),DB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional()}).strict(),_B=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),EB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional()}).strict(),LB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>ac),t.lazy(()=>ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),c2=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),u2=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),y2=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),Fm=t.object({set:t.lazy(()=>_t).optional()}).strict(),s2=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),upsert:t.lazy(()=>Wrt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>Urt),t.lazy(()=>ED),t.lazy(()=>LD)]).optional()}).strict(),d2=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),z2=t.object({create:t.union([t.lazy(()=>nc),t.lazy(()=>nc).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),VB=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),HB=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),connect:t.lazy(()=>j).optional()}).strict(),QB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),YB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional()}).strict(),GB=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),upsert:t.lazy(()=>Rrt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>krt),t.lazy(()=>VD),t.lazy(()=>HD)]).optional()}).strict(),$B=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),upsert:t.lazy(()=>xrt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>jrt),t.lazy(()=>QD),t.lazy(()=>YD)]).optional()}).strict(),JB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),KB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),disconnect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),delete:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),connect:t.union([t.lazy(()=>dt),t.lazy(()=>dt).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Dm=t.object({set:t.string().array()}).strict(),m2=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),connect:t.lazy(()=>ot).optional()}).strict(),h2=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),connect:t.lazy(()=>Jt).optional()}).strict(),wz=t.object({set:t.lazy(()=>qt).optional()}).strict(),Nz=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),b2=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),upsert:t.lazy(()=>Mrt).optional(),connect:t.lazy(()=>ot).optional(),update:t.union([t.lazy(()=>Zrt),t.lazy(()=>GD),t.lazy(()=>$D)]).optional()}).strict(),I2=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),upsert:t.lazy(()=>vrt).optional(),connect:t.lazy(()=>Jt).optional(),update:t.union([t.lazy(()=>Ort),t.lazy(()=>JD),t.lazy(()=>KD)]).optional()}).strict(),g2=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),C2=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),connect:t.lazy(()=>G).optional()}).strict(),A2=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),upsert:t.lazy(()=>frt).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>wrt),t.lazy(()=>XD),t.lazy(()=>t_)]).optional()}).strict(),S2=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),upsert:t.lazy(()=>Nrt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Brt),t.lazy(()=>e_),t.lazy(()=>o_)]).optional()}).strict(),ep=t.object({set:t.string().array()}).strict(),XB=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),connect:t.lazy(()=>J).optional()}).strict(),tq=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),connect:t.lazy(()=>k).optional()}).strict(),eq=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),connect:t.lazy(()=>j).optional()}).strict(),qr=t.object({set:t.lazy(()=>Rt).optional()}).strict(),Fr=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Dr=t.object({set:t.lazy(()=>kt).optional()}).strict(),oq=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),upsert:t.lazy(()=>qrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Frt),t.lazy(()=>a_),t.lazy(()=>n_)]).optional()}).strict(),aq=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),upsert:t.lazy(()=>Drt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>_rt),t.lazy(()=>i_),t.lazy(()=>l_)]).optional()}).strict(),nq=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),upsert:t.lazy(()=>Ert).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Lrt),t.lazy(()=>r_),t.lazy(()=>p_)]).optional()}).strict(),iq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),lq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),rq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),dlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),zlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),mlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),hlt=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),connect:t.lazy(()=>k).optional()}).strict(),gq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),upsert:t.lazy(()=>Vrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Hrt),t.lazy(()=>c_),t.lazy(()=>u_)]).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),upsert:t.lazy(()=>Qrt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Yrt),t.lazy(()=>y_),t.lazy(()=>s_)]).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),upsert:t.lazy(()=>Grt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>$rt),t.lazy(()=>d_),t.lazy(()=>z_)]).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),connect:t.lazy(()=>G).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),upsert:t.lazy(()=>Jrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Krt),t.lazy(()=>m_),t.lazy(()=>h_)]).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),upsert:t.lazy(()=>Xrt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>tpt),t.lazy(()=>b_),t.lazy(()=>I_)]).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),upsert:t.lazy(()=>ept).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>opt),t.lazy(()=>g_),t.lazy(()=>C_)]).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),connect:t.lazy(()=>J).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>lv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>lv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),upsert:t.lazy(()=>apt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>npt),t.lazy(()=>A_),t.lazy(()=>S_)]).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),upsert:t.lazy(()=>ipt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>lpt),t.lazy(()=>T_),t.lazy(()=>P_)]).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>lv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>hc),t.lazy(()=>hc).array(),t.lazy(()=>bc),t.lazy(()=>bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>lv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),connect:t.lazy(()=>nt).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),connect:t.lazy(()=>g).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),upsert:t.lazy(()=>rpt).optional(),connect:t.lazy(()=>nt).optional(),update:t.union([t.lazy(()=>ppt),t.lazy(()=>W_),t.lazy(()=>U_)]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),upsert:t.lazy(()=>cpt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>upt),t.lazy(()=>R_),t.lazy(()=>k_)]).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),upsert:t.lazy(()=>ypt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>spt),t.lazy(()=>x_),t.lazy(()=>j_)]).optional()}).strict(),blt=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),connect:t.lazy(()=>Xt).optional()}).strict(),yC=t.object({set:t.lazy(()=>ie).optional()}).strict(),Ilt=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),upsert:t.lazy(()=>dpt).optional(),connect:t.lazy(()=>Xt).optional(),update:t.union([t.lazy(()=>zpt),t.lazy(()=>M_),t.lazy(()=>Z_)]).optional()}).strict(),glt=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),connect:t.lazy(()=>j).optional()}).strict(),sC=t.object({set:t.lazy(()=>le).optional()}).strict(),Clt=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),upsert:t.lazy(()=>mpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>hpt),t.lazy(()=>v_),t.lazy(()=>O_)]).optional()}).strict(),Alt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),connect:t.lazy(()=>j).optional()}).strict(),dC=t.object({set:t.lazy(()=>re).optional()}).strict(),Slt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),upsert:t.lazy(()=>bpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ipt),t.lazy(()=>f_),t.lazy(()=>w_)]).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),connect:t.lazy(()=>f).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),connect:t.lazy(()=>g).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),upsert:t.lazy(()=>gpt).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Cpt),t.lazy(()=>N_),t.lazy(()=>B_)]).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),upsert:t.lazy(()=>Apt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Spt),t.lazy(()=>q_),t.lazy(()=>F_)]).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),upsert:t.lazy(()=>Tpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ppt),t.lazy(()=>D_),t.lazy(()=>__)]).optional()}).strict(),Tlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),Plt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),Wlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Ult=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>Wv).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),T2=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),connect:t.lazy(()=>G).optional()}).strict(),P2=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),connect:t.lazy(()=>Kr).optional()}).strict(),W2=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),upsert:t.lazy(()=>Wpt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Upt),t.lazy(()=>E_),t.lazy(()=>L_)]).optional()}).strict(),U2=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),upsert:t.lazy(()=>Rpt).optional(),connect:t.lazy(()=>Kr).optional(),update:t.union([t.lazy(()=>kpt),t.lazy(()=>V_),t.lazy(()=>H_)]).optional()}).strict(),Rlt=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),connect:t.lazy(()=>k).optional()}).strict(),klt=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),upsert:t.lazy(()=>xpt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>jpt),t.lazy(()=>Q_),t.lazy(()=>Y_)]).optional()}).strict(),R2=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),k2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>vv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),x2=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),j2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>vv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),M2=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),Z2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>vv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),v2=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>Zv).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),O2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>vv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),hM=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),connect:t.lazy(()=>J).optional()}).strict(),bM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),IM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),gM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),CM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),AM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),SM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),op=t.object({set:t.lazy(()=>vt).optional()}).strict(),TM=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),upsert:t.lazy(()=>Mpt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Zpt),t.lazy(()=>G_),t.lazy(()=>$_)]).optional()}).strict(),PM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),WM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),UM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),RM=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Wc),t.lazy(()=>Wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),kM=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>Nv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),xM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Bl=t.object({create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),connect:t.lazy(()=>Rl).optional()}).strict(),ql=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),Fl=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),Dl=t.object({create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),_l=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),El=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),Ll=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),Vl=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Hl=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Ql=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),upsert:t.lazy(()=>vpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),connect:t.lazy(()=>Rl).optional(),update:t.union([t.lazy(()=>Opt),t.lazy(()=>J_),t.lazy(()=>K_)]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),upsert:t.lazy(()=>B6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>q6),t.lazy(()=>tO),t.lazy(()=>eO)]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),disconnect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),delete:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)]).optional(),connectOrCreate:t.lazy(()=>Ev).optional(),upsert:t.lazy(()=>B6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>wt)]).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>q6),t.lazy(()=>tO),t.lazy(()=>eO)]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>Hv).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),disconnect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),delete:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),connect:t.union([t.lazy(()=>Lt),t.lazy(()=>Lt).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>Rl).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>J).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),createMany:t.lazy(()=>pO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),$n=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Jn=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Kn=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Xn=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),createMany:t.lazy(()=>pO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),jt=t.object({set:t.lazy(()=>x).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>fpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Re)]).optional(),connect:t.lazy(()=>Rl).optional(),update:t.union([t.lazy(()=>wpt),t.lazy(()=>X_),t.lazy(()=>tE)]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>Npt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Bpt),t.lazy(()=>eE),t.lazy(()=>oE)]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>pO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>pO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),disconnect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),delete:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),connect:t.union([t.lazy(()=>nt),t.lazy(()=>nt).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>hu),t.lazy(()=>hu).array(),t.lazy(()=>bu),t.lazy(()=>bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Wu),t.lazy(()=>Wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),disconnect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),delete:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),connect:t.union([t.lazy(()=>ot),t.lazy(()=>ot).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),xlt=t.object({create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>j).optional()}).strict(),jlt=t.object({create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>qpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Fpt),t.lazy(()=>aE),t.lazy(()=>nE)]).optional()}).strict(),f2=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),w2=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),connect:t.lazy(()=>J).optional()}).strict(),N2=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),B2=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),q2=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),upsert:t.lazy(()=>Dpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>_pt),t.lazy(()=>iE),t.lazy(()=>lE)]).optional()}).strict(),F2=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),Ct=t.object({set:t.string().array()}).strict(),ro=t.object({create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),connect:t.lazy(()=>J).optional()}).strict(),po=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>Kt).optional()}).strict(),co=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),uo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),connect:t.lazy(()=>fl).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),connect:t.lazy(()=>wl).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),connect:t.lazy(()=>fl).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),connect:t.lazy(()=>wl).optional()}).strict(),pt=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),ct=t.object({set:t.lazy(()=>W).optional()}).strict(),ta=t.object({create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),upsert:t.lazy(()=>Ept).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Lpt),t.lazy(()=>rE),t.lazy(()=>pE)]).optional()}).strict(),ea=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>Vpt).optional(),connect:t.lazy(()=>Kt).optional(),update:t.union([t.lazy(()=>Hpt),t.lazy(()=>cE),t.lazy(()=>uE)]).optional()}).strict(),oa=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),aa=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),na=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),ia=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),la=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),ra=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),pa=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),ca=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),ua=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),ya=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),sa=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),da=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),za=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),ma=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),ha=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),ba=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Ia=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),ga=t.object({create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),upsert:t.lazy(()=>H6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>Q6),t.lazy(()=>JO),t.lazy(()=>KO)]).optional()}).strict(),Ca=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),disconnect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),delete:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Aa=t.object({create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),upsert:t.lazy(()=>Y6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>fl).optional(),update:t.union([t.lazy(()=>G6),t.lazy(()=>XO),t.lazy(()=>tf)]).optional()}).strict(),Sa=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Ta=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),upsert:t.lazy(()=>$6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>J6),t.lazy(()=>ef),t.lazy(()=>of)]).optional()}).strict(),Pa=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),Wa=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),Ua=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),Ra=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),ka=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),xa=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),ja=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),Ma=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Za=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional()}).strict(),va=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),Oa=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),fa=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional()}).strict(),wa=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),Na=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Ba=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),qa=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Fa=t.object({create:t.union([t.lazy(()=>hy),t.lazy(()=>hy).array(),t.lazy(()=>by),t.lazy(()=>by).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Da=t.object({create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)]).optional(),connectOrCreate:t.lazy(()=>HO).optional(),upsert:t.lazy(()=>H6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>Q6),t.lazy(()=>JO),t.lazy(()=>KO)]).optional()}).strict(),_a=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),disconnect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),delete:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),connect:t.union([t.lazy(()=>se),t.lazy(()=>se).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Ea=t.object({create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)]).optional(),connectOrCreate:t.lazy(()=>YO).optional(),upsert:t.lazy(()=>Y6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>fl).optional(),update:t.union([t.lazy(()=>G6),t.lazy(()=>XO),t.lazy(()=>tf)]).optional()}).strict(),La=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Va=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>$O).optional(),upsert:t.lazy(()=>$6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>J6),t.lazy(()=>ef),t.lazy(()=>of)]).optional()}).strict(),SI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),TI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),PI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),WI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),UI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),RI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),kI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),xI=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),connect:t.lazy(()=>at).optional()}).strict(),jI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),MI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ZI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),vI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),OI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),fI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),wI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),NI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),BI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),qI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),FI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),DI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),_I=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),upsert:t.lazy(()=>Qpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),connect:t.lazy(()=>at).optional(),update:t.union([t.lazy(()=>Ypt),t.lazy(()=>yE),t.lazy(()=>sE)]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Wy),t.lazy(()=>Wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional()}).strict(),QI=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),ap=t.object({set:t.number().array()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),connect:t.lazy(()=>g).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),connect:t.lazy(()=>G).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),connect:t.lazy(()=>w).optional()}).strict(),_r=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),upsert:t.lazy(()=>Gpt).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>$pt),t.lazy(()=>dE),t.lazy(()=>zE)]).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),upsert:t.lazy(()=>Jpt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Kpt),t.lazy(()=>mE),t.lazy(()=>hE)]).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),upsert:t.lazy(()=>Xpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>tct),t.lazy(()=>bE),t.lazy(()=>IE)]).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),connect:t.lazy(()=>g).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),connect:t.lazy(()=>w).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),upsert:t.lazy(()=>ect).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>oct),t.lazy(()=>gE),t.lazy(()=>CE)]).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),upsert:t.lazy(()=>act).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ee)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>nct),t.lazy(()=>AE),t.lazy(()=>SE)]).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional()}).strict(),WS=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),US=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),connect:t.lazy(()=>G).optional()}).strict(),RS=t.object({create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),connect:t.lazy(()=>j).optional()}).strict(),kS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),xS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),jS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),MS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),ZS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),vS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),OS=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),upsert:t.lazy(()=>ict).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>lct),t.lazy(()=>TE),t.lazy(()=>PE)]).optional()}).strict(),fS=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),upsert:t.lazy(()=>rct).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>pct),t.lazy(()=>WE),t.lazy(()=>UE)]).optional()}).strict(),wS=t.object({create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),upsert:t.lazy(()=>cct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>uct),t.lazy(()=>RE),t.lazy(()=>kE)]).optional()}).strict(),NS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),BS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),qS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),FS=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional()}).strict(),DS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional()}).strict(),_S=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>f).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),connect:t.lazy(()=>j).optional()}).strict(),Er=t.object({set:t.lazy(()=>xt).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),upsert:t.lazy(()=>yct).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>sct),t.lazy(()=>xE),t.lazy(()=>jE)]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>dct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>zct),t.lazy(()=>ME),t.lazy(()=>ZE)]).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),upsert:t.lazy(()=>mct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>hct),t.lazy(()=>vE),t.lazy(()=>OE)]).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),connect:t.lazy(()=>Ha).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),connect:t.lazy(()=>j).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),np=t.object({set:t.lazy(()=>Mt).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),upsert:t.lazy(()=>bct).optional(),connect:t.lazy(()=>Ha).optional(),update:t.union([t.lazy(()=>Ict),t.lazy(()=>fE),t.lazy(()=>wE)]).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),upsert:t.lazy(()=>gct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Cct),t.lazy(()=>NE),t.lazy(()=>BE)]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),D2=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),connect:t.lazy(()=>lt).optional()}).strict(),_2=t.object({create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),connect:t.lazy(()=>f).optional()}).strict(),E2=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),upsert:t.lazy(()=>Act).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>Sct),t.lazy(()=>qE),t.lazy(()=>FE)]).optional()}).strict(),L2=t.object({create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),upsert:t.lazy(()=>Tct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Pct),t.lazy(()=>DE),t.lazy(()=>_E)]).optional()}).strict(),Mlt=t.object({create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),connect:t.lazy(()=>g).optional()}).strict(),Zlt=t.object({create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),upsert:t.lazy(()=>Wct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Uct),t.lazy(()=>EE),t.lazy(()=>LE)]).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>J).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),ip=t.object({set:t.lazy(()=>Zt).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>Rct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>kct),t.lazy(()=>VE),t.lazy(()=>HE)]).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>xct).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>jct),t.lazy(()=>QE),t.lazy(()=>YE)]).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),V2=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>rt).optional()}).strict(),H2=t.object({create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>G).optional()}).strict(),Q2=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>Mct).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>Zct),t.lazy(()=>GE),t.lazy(()=>$E)]).optional()}).strict(),Y2=t.object({create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>vct).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Oct),t.lazy(()=>JE),t.lazy(()=>KE)]).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),G2=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>j).optional()}).strict(),$2=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),J2=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),_m=t.object({set:t.lazy(()=>Et).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>fct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>wct),t.lazy(()=>XE),t.lazy(()=>tL)]).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),t5=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),e5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),o5=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>cw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),a5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),n5=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>cw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ya=t.object({set:t.lazy(()=>X).optional()}).strict(),i5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),l5=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>cw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),r5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),p5=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>cw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>te).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>g).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>j).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>Nct).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>Bct),t.lazy(()=>eL),t.lazy(()=>oL)]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>qct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>Fct),t.lazy(()=>aL),t.lazy(()=>nL)]).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>Dct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>_ct),t.lazy(()=>iL),t.lazy(()=>lL)]).optional()}).strict(),vlt=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>j).optional()}).strict(),Olt=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>Ect).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Lct),t.lazy(()=>rL),t.lazy(()=>pL)]).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>J).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Vct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Hct),t.lazy(()=>cL),t.lazy(()=>uL)]).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>Cw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),c5=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>k).optional()}).strict(),u5=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>g).optional()}).strict(),y5=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Qct).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Yct),t.lazy(()=>yL),t.lazy(()=>sL)]).optional()}).strict(),s5=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>Gct).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>$ct),t.lazy(()=>dL),t.lazy(()=>zL)]).optional()}).strict(),oo=t.object({set:t.number().array()}).strict(),ao=t.object({set:t.number().array()}).strict(),no=t.object({set:t.number().array()}).strict(),io=t.object({set:t.string().array()}).strict(),Bz=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),qz=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>$t).optional()}).strict(),Fz=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),Dz=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>jw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),_z=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),connect:t.lazy(()=>Nl).optional()}).strict(),Ez=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Lz=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Vz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Hz=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Qz=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Yz=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional()}).strict(),Gz=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>jw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),$z=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),connect:t.lazy(()=>Nl).optional()}).strict(),Jz=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Kz=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Xz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),tm=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),em=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Fe=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),De=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),_e=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ee=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),om=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>Jct).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Kct),t.lazy(()=>mL),t.lazy(()=>hL)]).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>Xct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ze)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ze)]).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>tut),t.lazy(()=>bL),t.lazy(()=>IL)]).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>jw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),upsert:t.lazy(()=>x3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Nl).optional(),update:t.union([t.lazy(()=>j3),t.lazy(()=>ww),t.lazy(()=>Nw)]).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),disconnect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),delete:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),connect:t.union([t.lazy(()=>g),t.lazy(()=>g).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>jw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>Mw).optional(),upsert:t.lazy(()=>x3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Nl).optional(),update:t.union([t.lazy(()=>j3),t.lazy(()=>ww),t.lazy(()=>Nw)]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>Zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>hs),t.lazy(()=>hs).array(),t.lazy(()=>bs),t.lazy(()=>bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Ow).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),flt=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>k).optional()}).strict(),wlt=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>eut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>gt)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>out),t.lazy(()=>gL),t.lazy(()=>CL)]).optional()}).strict(),Nlt=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>g).optional()}).strict(),Blt=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>aut).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>nut),t.lazy(()=>AL),t.lazy(()=>SL)]).optional()}).strict(),qlt=t.object({create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>g).optional()}).strict(),Flt=t.object({create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>iut).optional(),connect:t.lazy(()=>g).optional(),update:t.union([t.lazy(()=>lut),t.lazy(()=>TL),t.lazy(()=>PL)]).optional()}).strict(),yt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),Hr=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Hr)]).optional()}).strict(),BA=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>BA)]).optional()}).strict(),d5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>d5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),z5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>z5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Hr).optional(),_sum:t.lazy(()=>Hr).optional(),_min:t.lazy(()=>Hr).optional(),_max:t.lazy(()=>Hr).optional()}).strict(),m5=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>m5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>BA).optional(),_max:t.lazy(()=>BA).optional()}).strict(),Qr=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Qr)]).optional().nullable()}).strict(),qA=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>qA)]).optional().nullable()}).strict(),FA=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>FA)]).optional()}).strict(),h5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>h5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Qr).optional(),_sum:t.lazy(()=>Qr).optional(),_min:t.lazy(()=>Qr).optional(),_max:t.lazy(()=>Qr).optional()}).strict(),cl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>cl)]).optional().nullable()}).strict(),b5=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>b5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>qA).optional(),_max:t.lazy(()=>qA).optional()}).strict(),I5=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>I5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),DA=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>DA)]).optional()}).strict(),g5=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>g5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),C5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>C5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_avg:t.lazy(()=>Qr).optional(),_sum:t.lazy(()=>cl).optional(),_min:t.lazy(()=>cl).optional(),_max:t.lazy(()=>cl).optional()}).strict(),_A=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>_A)]).optional()}).strict(),A5=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>A5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),EA=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>EA)]).optional().nullable()}).strict(),S5=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>S5)]).optional().nullable(),_count:t.lazy(()=>cl).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),LA=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>LA)]).optional()}).strict(),T5=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),VA=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>VA)]).optional()}).strict(),P5=t.object({equals:t.lazy(()=>ne).optional(),in:t.lazy(()=>ne).array().optional(),notIn:t.lazy(()=>ne).array().optional(),not:t.union([t.lazy(()=>ne),t.lazy(()=>P5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),HA=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>HA)]).optional()}).strict(),W5=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>W5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),QA=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>QA)]).optional()}).strict(),U5=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>U5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),YA=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>YA)]).optional()}).strict(),R5=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),GA=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>GA)]).optional()}).strict(),$A=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>$A)]).optional()}).strict(),k5=t.object({equals:t.lazy(()=>Rt).optional(),in:t.lazy(()=>Rt).array().optional(),notIn:t.lazy(()=>Rt).array().optional(),not:t.union([t.lazy(()=>Rt),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),x5=t.object({equals:t.lazy(()=>kt).optional(),in:t.lazy(()=>kt).array().optional(),notIn:t.lazy(()=>kt).array().optional(),not:t.union([t.lazy(()=>kt),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),JA=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>JA)]).optional()}).strict(),j5=t.object({equals:t.lazy(()=>ie).optional(),in:t.lazy(()=>ie).array().optional(),notIn:t.lazy(()=>ie).array().optional(),not:t.union([t.lazy(()=>ie),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),KA=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>KA)]).optional()}).strict(),M5=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XA=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>XA)]).optional()}).strict(),Z5=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),tS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>tS)]).optional()}).strict(),v5=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),eS=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>eS)]).optional()}).strict(),O5=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),oS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>oS)]).optional()}).strict(),f5=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),aS=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>aS)]).optional()}).strict(),w5=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),nS=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>nS)]).optional()}).strict(),N5=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),iS=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>iS)]).optional()}).strict(),B5=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),lS=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>lS)]).optional()}).strict(),q5=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),rS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>rS)]).optional()}).strict(),F5=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),jM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),MM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),D5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)])}).strict(),Dlt=t.object({update:t.union([t.lazy(()=>iD),t.lazy(()=>lD)]),create:t.union([t.lazy(()=>jM),t.lazy(()=>MM)]),where:t.lazy(()=>v).optional()}).strict(),_lt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>iD),t.lazy(()=>lD)])}).strict(),iD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),lD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ZM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),vM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),_5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)])}).strict(),Elt=t.object({update:t.union([t.lazy(()=>rD),t.lazy(()=>pD)]),create:t.union([t.lazy(()=>ZM),t.lazy(()=>vM)]),where:t.lazy(()=>v).optional()}).strict(),Llt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>rD),t.lazy(()=>pD)])}).strict(),rD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),pD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),OM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),fM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),E5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)])}).strict(),Vlt=t.object({update:t.union([t.lazy(()=>cD),t.lazy(()=>uD)]),create:t.union([t.lazy(()=>OM),t.lazy(()=>fM)]),where:t.lazy(()=>v).optional()}).strict(),Hlt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>cD),t.lazy(()=>uD)])}).strict(),cD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),uD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),wM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),NM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),L5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)])}).strict(),Qlt=t.object({update:t.union([t.lazy(()=>yD),t.lazy(()=>sD)]),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]),where:t.lazy(()=>v).optional()}).strict(),Ylt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>yD),t.lazy(()=>sD)])}).strict(),yD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),sD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),BM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),qM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),V5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)])}).strict(),Glt=t.object({update:t.union([t.lazy(()=>dD),t.lazy(()=>zD)]),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]),where:t.lazy(()=>v).optional()}).strict(),$lt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>dD),t.lazy(()=>zD)])}).strict(),dD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),zD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),FM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),DM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),H5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)])}).strict(),Jlt=t.object({update:t.union([t.lazy(()=>mD),t.lazy(()=>hD)]),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]),where:t.lazy(()=>v).optional()}).strict(),Klt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>mD),t.lazy(()=>hD)])}).strict(),mD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),hD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),_M=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),EM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Q5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)])}).strict(),Xlt=t.object({update:t.union([t.lazy(()=>bD),t.lazy(()=>ID)]),create:t.union([t.lazy(()=>_M),t.lazy(()=>EM)]),where:t.lazy(()=>v).optional()}).strict(),trt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>bD),t.lazy(()=>ID)])}).strict(),bD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),ID=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),LM=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),VM=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),Y5=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)])}).strict(),HM=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),QM=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),G5=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)])}).strict(),ert=t.object({update:t.union([t.lazy(()=>gD),t.lazy(()=>CD)]),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]),where:t.lazy(()=>N).optional()}).strict(),ort=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>gD),t.lazy(()=>CD)])}).strict(),gD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),CD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),art=t.object({update:t.union([t.lazy(()=>AD),t.lazy(()=>SD)]),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]),where:t.lazy(()=>gt).optional()}).strict(),nrt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>AD),t.lazy(()=>SD)])}).strict(),AD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),SD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),YM=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>GF),menuItems:t.lazy(()=>$F).optional()}).strict(),GM=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>KF).optional()}).strict(),$5=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)])}).strict(),Lp=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Vp=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Uh=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Lp),t.lazy(()=>Vp)])}).strict(),$M=t.object({data:t.union([t.lazy(()=>BV),t.lazy(()=>BV).array()]),skipDuplicates:t.boolean().optional()}).strict(),irt=t.object({update:t.union([t.lazy(()=>TD),t.lazy(()=>PD)]),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]),where:t.lazy(()=>Me).optional()}).strict(),lrt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>TD),t.lazy(()=>PD)])}).strict(),TD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>tD).optional(),menuItems:t.lazy(()=>eD).optional()}).strict(),PD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>aD).optional()}).strict(),tW=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>O3),t.lazy(()=>f3)]),create:t.union([t.lazy(()=>Lp),t.lazy(()=>Vp)])}).strict(),eW=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>O3),t.lazy(()=>f3)])}).strict(),oW=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>uS),t.lazy(()=>rut)])}).strict(),eo=t.object({AND:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional(),OR:t.lazy(()=>eo).array().optional(),NOT:t.union([t.lazy(()=>eo),t.lazy(()=>eo).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),recipeIds:t.lazy(()=>AI).optional(),recipeServingsAmount:t.lazy(()=>Wh).optional(),recipeServingsCost:t.lazy(()=>Wh).optional(),allergens:t.lazy(()=>ul).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),categoryId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),JM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),KM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),J5=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)])}).strict(),Hp=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Gq),ingredient:t.lazy(()=>$q)}).strict(),Qp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),Rh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),XM=t.object({data:t.union([t.lazy(()=>qV),t.lazy(()=>qV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yp=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>eF),equipment:t.lazy(()=>aF).optional()}).strict(),Gp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>nF).optional()}).strict(),kh=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),tZ=t.object({data:t.union([t.lazy(()=>FV),t.lazy(()=>FV).array()]),skipDuplicates:t.boolean().optional()}).strict(),eZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),oZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),K5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)])}).strict(),aZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),nZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),X5=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)])}).strict(),rrt=t.object({update:t.union([t.lazy(()=>WD),t.lazy(()=>UD)]),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]),where:t.lazy(()=>v).optional()}).strict(),prt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>WD),t.lazy(()=>UD)])}).strict(),WD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),UD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),aW=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>w3),t.lazy(()=>N3)]),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),nW=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>w3),t.lazy(()=>N3)])}).strict(),iW=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>PT),t.lazy(()=>put)])}).strict(),xn=t.object({AND:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional(),OR:t.lazy(()=>xn).array().optional(),NOT:t.union([t.lazy(()=>xn),t.lazy(()=>xn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>AI).optional(),isOptional:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),lW=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>B3),t.lazy(()=>q3)]),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),rW=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>B3),t.lazy(()=>q3)])}).strict(),pW=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>cut)])}).strict(),sl=t.object({AND:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),OR:t.lazy(()=>sl).array().optional(),NOT:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),crt=t.object({update:t.union([t.lazy(()=>RD),t.lazy(()=>kD)]),create:t.union([t.lazy(()=>eZ),t.lazy(()=>oZ)]),where:t.lazy(()=>Z).optional()}).strict(),urt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>RD),t.lazy(()=>kD)])}).strict(),RD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),kD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),yrt=t.object({update:t.union([t.lazy(()=>xD),t.lazy(()=>jD)]),create:t.union([t.lazy(()=>aZ),t.lazy(()=>nZ)]),where:t.lazy(()=>Z).optional()}).strict(),srt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>xD),t.lazy(()=>jD)])}).strict(),xD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),jD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),iZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),lZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),t6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)])}).strict(),$p=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>xB),RecipeInstruction:t.lazy(()=>MB).optional()}).strict(),Jp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),xh=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),rZ=t.object({data:t.union([t.lazy(()=>DV),t.lazy(()=>DV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kp=t.object({date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xp=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jh=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),pZ=t.object({data:t.union([t.lazy(()=>_V),t.lazy(()=>_V).array()]),skipDuplicates:t.boolean().optional()}).strict(),drt=t.object({update:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)]),create:t.union([t.lazy(()=>iZ),t.lazy(()=>lZ)]),where:t.lazy(()=>N).optional()}).strict(),zrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)])}).strict(),MD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),ZD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),cW=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>F3),t.lazy(()=>D3)]),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),uW=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>F3),t.lazy(()=>D3)])}).strict(),yW=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>IT),t.lazy(()=>uut)])}).strict(),jn=t.object({AND:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional(),OR:t.lazy(()=>jn).array().optional(),NOT:t.union([t.lazy(()=>jn),t.lazy(()=>jn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),sW=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>_3),t.lazy(()=>E3)]),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),dW=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>_3),t.lazy(()=>E3)])}).strict(),zW=t.object({where:t.lazy(()=>dp),data:t.union([t.lazy(()=>kN),t.lazy(()=>yut)])}).strict(),dp=t.object({AND:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional(),OR:t.lazy(()=>dp).array().optional(),NOT:t.union([t.lazy(()=>dp),t.lazy(()=>dp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>$N),t.lazy(()=>ne)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),cZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),uZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),e6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)])}).strict(),yZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gB),maintenanceLogs:t.lazy(()=>AB).optional()}).strict(),sZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>TB).optional()}).strict(),o6=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)])}).strict(),dZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>eF),RecipeVersion:t.lazy(()=>oF).optional()}).strict(),zZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),a6=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)])}).strict(),mrt=t.object({update:t.union([t.lazy(()=>vD),t.lazy(()=>OD)]),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]),where:t.lazy(()=>v).optional()}).strict(),hrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>vD),t.lazy(()=>OD)])}).strict(),vD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),OD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),brt=t.object({update:t.union([t.lazy(()=>fD),t.lazy(()=>wD)]),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]),where:t.lazy(()=>ke).optional()}).strict(),Irt=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>fD),t.lazy(()=>wD)])}).strict(),fD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>PB).optional(),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),wD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>kB).optional()}).strict(),grt=t.object({update:t.union([t.lazy(()=>ND),t.lazy(()=>BD)]),create:t.union([t.lazy(()=>dZ),t.lazy(()=>zZ)]),where:t.lazy(()=>Oe).optional()}).strict(),Crt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>ND),t.lazy(()=>BD)])}).strict(),ND=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>iF).optional(),RecipeVersion:t.lazy(()=>lF).optional()}).strict(),BD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),mZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gB),recipes:t.lazy(()=>CB).optional()}).strict(),hZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>SB).optional()}).strict(),n6=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)])}).strict(),Art=t.object({update:t.union([t.lazy(()=>qD),t.lazy(()=>FD)]),create:t.union([t.lazy(()=>mZ),t.lazy(()=>hZ)]),where:t.lazy(()=>ke).optional()}).strict(),Srt=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>qD),t.lazy(()=>FD)])}).strict(),qD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>PB).optional(),recipes:t.lazy(()=>WB).optional()}).strict(),FD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>RB).optional()}).strict(),bZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),IZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),i6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)])}).strict(),tc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>u2).optional()}).strict(),ec=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>y2).optional()}).strict(),Mh=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),gZ=t.object({data:t.union([t.lazy(()=>EV),t.lazy(()=>EV).array()]),skipDuplicates:t.boolean().optional()}).strict(),oc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>HB),items:t.lazy(()=>QB).optional()}).strict(),ac=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>YB).optional()}).strict(),Zh=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>oc),t.lazy(()=>ac)])}).strict(),CZ=t.object({data:t.union([t.lazy(()=>LV),t.lazy(()=>LV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Trt=t.object({update:t.union([t.lazy(()=>DD),t.lazy(()=>_D)]),create:t.union([t.lazy(()=>bZ),t.lazy(()=>IZ)]),where:t.lazy(()=>N).optional()}).strict(),Prt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>DD),t.lazy(()=>_D)])}).strict(),DD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),_D=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),mW=t.object({where:t.lazy(()=>Jt),update:t.union([t.lazy(()=>L3),t.lazy(()=>V3)]),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),hW=t.object({where:t.lazy(()=>Jt),data:t.union([t.lazy(()=>L3),t.lazy(()=>V3)])}).strict(),bW=t.object({where:t.lazy(()=>zp),data:t.union([t.lazy(()=>jN),t.lazy(()=>sut)])}).strict(),zp=t.object({AND:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional(),OR:t.lazy(()=>zp).array().optional(),NOT:t.union([t.lazy(()=>zp),t.lazy(()=>zp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>_t)]).optional(),requiredPhotos:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),IW=t.object({where:t.lazy(()=>ot),update:t.union([t.lazy(()=>H3),t.lazy(()=>Q3)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>ac)])}).strict(),gW=t.object({where:t.lazy(()=>ot),data:t.union([t.lazy(()=>H3),t.lazy(()=>Q3)])}).strict(),CW=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>Zj),t.lazy(()=>dut)])}).strict(),dl=t.object({AND:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),OR:t.lazy(()=>dl).array().optional(),NOT:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistId:t.union([t.lazy(()=>u),t.number()]).optional(),completedById:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>fB),completions:t.lazy(()=>NB).optional()}).strict(),SZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>qB).optional()}).strict(),l6=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)])}).strict(),nc=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>m2)}).strict(),ic=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vh=t.object({where:t.lazy(()=>dt),create:t.union([t.lazy(()=>nc),t.lazy(()=>ic)])}).strict(),TZ=t.object({data:t.union([t.lazy(()=>VV),t.lazy(()=>VV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wrt=t.object({update:t.union([t.lazy(()=>ED),t.lazy(()=>LD)]),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]),where:t.lazy(()=>xe).optional()}).strict(),Urt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>ED),t.lazy(()=>LD)])}).strict(),ED=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>FB).optional(),completions:t.lazy(()=>_B).optional()}).strict(),LD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>LB).optional()}).strict(),AW=t.object({where:t.lazy(()=>dt),update:t.union([t.lazy(()=>Y3),t.lazy(()=>G3)]),create:t.union([t.lazy(()=>nc),t.lazy(()=>ic)])}).strict(),SW=t.object({where:t.lazy(()=>dt),data:t.union([t.lazy(()=>Y3),t.lazy(()=>G3)])}).strict(),TW=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>vj),t.lazy(()=>zut)])}).strict(),zl=t.object({AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>u),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>XN),t.lazy(()=>qt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>ul).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>fB),items:t.lazy(()=>wB).optional()}).strict(),WZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>BB).optional()}).strict(),r6=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)])}).strict(),UZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),RZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),p6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)])}).strict(),lc=t.object({status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>h2)}).strict(),rc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oh=t.object({where:t.lazy(()=>dt),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),kZ=t.object({data:t.union([t.lazy(()=>HV),t.lazy(()=>HV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Rrt=t.object({update:t.union([t.lazy(()=>VD),t.lazy(()=>HD)]),create:t.union([t.lazy(()=>PZ),t.lazy(()=>WZ)]),where:t.lazy(()=>xe).optional()}).strict(),krt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>VD),t.lazy(()=>HD)])}).strict(),VD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>FB).optional(),items:t.lazy(()=>DB).optional()}).strict(),HD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>EB).optional()}).strict(),xrt=t.object({update:t.union([t.lazy(()=>QD),t.lazy(()=>YD)]),create:t.union([t.lazy(()=>UZ),t.lazy(()=>RZ)]),where:t.lazy(()=>Z).optional()}).strict(),jrt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>QD),t.lazy(()=>YD)])}).strict(),QD=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),YD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),PW=t.object({where:t.lazy(()=>dt),update:t.union([t.lazy(()=>$3),t.lazy(()=>J3)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),WW=t.object({where:t.lazy(()=>dt),data:t.union([t.lazy(()=>$3),t.lazy(()=>J3)])}).strict(),UW=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>vj),t.lazy(()=>mut)])}).strict(),xZ=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>VB),completedBy:t.lazy(()=>HB)}).strict(),jZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c6=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),MZ=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>c2)}).strict(),ZZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u6=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)])}).strict(),Mrt=t.object({update:t.union([t.lazy(()=>GD),t.lazy(()=>$D)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>Ve).optional()}).strict(),Zrt=t.object({where:t.lazy(()=>Ve).optional(),data:t.union([t.lazy(()=>GD),t.lazy(()=>$D)])}).strict(),GD=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>GB).optional(),completedBy:t.lazy(()=>$B).optional()}).strict(),$D=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vrt=t.object({update:t.union([t.lazy(()=>JD),t.lazy(()=>KD)]),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]),where:t.lazy(()=>Le).optional()}).strict(),Ort=t.object({where:t.lazy(()=>Le).optional(),data:t.union([t.lazy(()=>JD),t.lazy(()=>KD)])}).strict(),JD=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>s2).optional()}).strict(),KD=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vZ=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>MF).optional(),ingredients:t.lazy(()=>ZF).optional()}).strict(),OZ=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>OF).optional(),ingredients:t.lazy(()=>fF).optional()}).strict(),y6=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)])}).strict(),fZ=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),wZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional()}).strict(),s6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)])}).strict(),frt=t.object({update:t.union([t.lazy(()=>XD),t.lazy(()=>t_)]),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]),where:t.lazy(()=>je).optional()}).strict(),wrt=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>XD),t.lazy(()=>t_)])}).strict(),XD=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>NF).optional(),ingredients:t.lazy(()=>BF).optional()}).strict(),t_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>FF).optional(),ingredients:t.lazy(()=>DF).optional()}).strict(),Nrt=t.object({update:t.union([t.lazy(()=>e_),t.lazy(()=>o_)]),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]),where:t.lazy(()=>Ut).optional()}).strict(),Brt=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>e_),t.lazy(()=>o_)])}).strict(),e_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),o_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional()}).strict(),NZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional()}).strict(),BZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional()}).strict(),d6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)])}).strict(),qZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),FZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),z6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)])}).strict(),DZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),_Z=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),m6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)])}).strict(),qrt=t.object({update:t.union([t.lazy(()=>a_),t.lazy(()=>n_)]),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]),where:t.lazy(()=>N).optional()}).strict(),Frt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>a_),t.lazy(()=>n_)])}).strict(),a_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional()}).strict(),n_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional()}).strict(),Drt=t.object({update:t.union([t.lazy(()=>i_),t.lazy(()=>l_)]),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]),where:t.lazy(()=>gt).optional()}).strict(),_rt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>i_),t.lazy(()=>l_)])}).strict(),i_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),l_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Ert=t.object({update:t.union([t.lazy(()=>r_),t.lazy(()=>p_)]),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]),where:t.lazy(()=>Z).optional()}).strict(),Lrt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>r_),t.lazy(()=>p_)])}).strict(),r_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),p_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),pc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional()}).strict(),cc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional()}).strict(),fh=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),uc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),yc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),wh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),sc=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional()}).strict(),dc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),Nh=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),EZ=t.object({data:t.union([t.lazy(()=>QV),t.lazy(()=>QV).array()]),skipDuplicates:t.boolean().optional()}).strict(),RW=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>K3),t.lazy(()=>X3)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),kW=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>K3),t.lazy(()=>X3)])}).strict(),xW=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>uS),t.lazy(()=>hut)])}).strict(),jW=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>t8),t.lazy(()=>e8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),MW=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>t8),t.lazy(()=>e8)])}).strict(),ZW=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>but)])}).strict(),ae=t.object({AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>ul).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>u),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>zB),t.lazy(()=>W)]).optional()}).strict(),vW=t.object({where:t.lazy(()=>G),update:t.union([t.lazy(()=>o8),t.lazy(()=>a8)]),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),OW=t.object({where:t.lazy(()=>G),data:t.union([t.lazy(()=>o8),t.lazy(()=>a8)])}).strict(),fW=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>qj),t.lazy(()=>Iut)])}).strict(),ml=t.object({AND:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),OR:t.lazy(()=>ml).array().optional(),NOT:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),zc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),mc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Bh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),wW=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>n8),t.lazy(()=>i8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),NW=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>n8),t.lazy(()=>i8)])}).strict(),BW=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>gut)])}).strict(),LZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),h6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),HZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),QZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),b6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)])}).strict(),YZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),GZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),I6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)])}).strict(),Vrt=t.object({update:t.union([t.lazy(()=>c_),t.lazy(()=>u_)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>N).optional()}).strict(),Hrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>c_),t.lazy(()=>u_)])}).strict(),c_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),u_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),Qrt=t.object({update:t.union([t.lazy(()=>y_),t.lazy(()=>s_)]),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]),where:t.lazy(()=>gt).optional()}).strict(),Yrt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>y_),t.lazy(()=>s_)])}).strict(),y_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),s_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Grt=t.object({update:t.union([t.lazy(()=>d_),t.lazy(()=>z_)]),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]),where:t.lazy(()=>Z).optional()}).strict(),$rt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>d_),t.lazy(()=>z_)])}).strict(),d_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),z_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),$Z=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),JZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),g6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)])}).strict(),KZ=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),XZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),C6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)])}).strict(),tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),ev=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),A6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)])}).strict(),Jrt=t.object({update:t.union([t.lazy(()=>m_),t.lazy(()=>h_)]),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]),where:t.lazy(()=>N).optional()}).strict(),Krt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>m_),t.lazy(()=>h_)])}).strict(),m_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),h_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),Xrt=t.object({update:t.union([t.lazy(()=>b_),t.lazy(()=>I_)]),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]),where:t.lazy(()=>Ut).optional()}).strict(),tpt=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>b_),t.lazy(()=>I_)])}).strict(),b_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),I_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),ept=t.object({update:t.union([t.lazy(()=>g_),t.lazy(()=>C_)]),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]),where:t.lazy(()=>Z).optional()}).strict(),opt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>g_),t.lazy(()=>C_)])}).strict(),g_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),C_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),av=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),S6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>ov),t.lazy(()=>av)])}).strict(),nv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),iv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),T6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)])}).strict(),hc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Bq),assignedTo:t.lazy(()=>qq).optional()}).strict(),bc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>hc),t.lazy(()=>bc)])}).strict(),lv=t.object({data:t.union([t.lazy(()=>YV),t.lazy(()=>YV).array()]),skipDuplicates:t.boolean().optional()}).strict(),apt=t.object({update:t.union([t.lazy(()=>A_),t.lazy(()=>S_)]),create:t.union([t.lazy(()=>ov),t.lazy(()=>av)]),where:t.lazy(()=>N).optional()}).strict(),npt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>A_),t.lazy(()=>S_)])}).strict(),A_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),S_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),ipt=t.object({update:t.union([t.lazy(()=>T_),t.lazy(()=>P_)]),create:t.union([t.lazy(()=>nv),t.lazy(()=>iv)]),where:t.lazy(()=>Z).optional()}).strict(),lpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>T_),t.lazy(()=>P_)])}).strict(),T_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),P_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),qW=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>l8),t.lazy(()=>r8)]),create:t.union([t.lazy(()=>hc),t.lazy(()=>bc)])}).strict(),FW=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>l8),t.lazy(()=>r8)])}).strict(),DW=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>ST),t.lazy(()=>Cut)])}).strict(),Mn=t.object({AND:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional(),OR:t.lazy(()=>Mn).array().optional(),NOT:t.union([t.lazy(()=>Mn),t.lazy(()=>Mn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),rv=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>xq),createdBy:t.lazy(()=>jq)}).strict(),pv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),P6=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)])}).strict(),cv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),uv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),W6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)])}).strict(),yv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),sv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),U6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)])}).strict(),rpt=t.object({update:t.union([t.lazy(()=>W_),t.lazy(()=>U_)]),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]),where:t.lazy(()=>He).optional()}).strict(),ppt=t.object({where:t.lazy(()=>He).optional(),data:t.union([t.lazy(()=>W_),t.lazy(()=>U_)])}).strict(),W_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>vq).optional(),createdBy:t.lazy(()=>Oq).optional()}).strict(),U_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cpt=t.object({update:t.union([t.lazy(()=>R_),t.lazy(()=>k_)]),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]),where:t.lazy(()=>v).optional()}).strict(),upt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>R_),t.lazy(()=>k_)])}).strict(),R_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),k_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ypt=t.object({update:t.union([t.lazy(()=>x_),t.lazy(()=>j_)]),create:t.union([t.lazy(()=>yv),t.lazy(()=>sv)]),where:t.lazy(()=>Z).optional()}).strict(),spt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>x_),t.lazy(()=>j_)])}).strict(),x_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),j_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),dv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),user:t.lazy(()=>G2)}).strict(),zv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),R6=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)])}).strict(),dpt=t.object({update:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)]),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]),where:t.lazy(()=>$e).optional()}).strict(),zpt=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)])}).strict(),M_=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),user:t.lazy(()=>K2).optional()}).strict(),Z_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),mv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),hv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),k6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)])}).strict(),mpt=t.object({update:t.union([t.lazy(()=>v_),t.lazy(()=>O_)]),create:t.union([t.lazy(()=>mv),t.lazy(()=>hv)]),where:t.lazy(()=>Z).optional()}).strict(),hpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>v_),t.lazy(()=>O_)])}).strict(),v_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),O_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),bv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Iv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),x6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)])}).strict(),bpt=t.object({update:t.union([t.lazy(()=>f_),t.lazy(()=>w_)]),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]),where:t.lazy(()=>Z).optional()}).strict(),Ipt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>f_),t.lazy(()=>w_)])}).strict(),f_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),w_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),gv=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),ingredient:t.lazy(()=>US),lastUpdatedBy:t.lazy(()=>RS).optional(),transactions:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),Cv=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),j6=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)])}).strict(),Av=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Sv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),M6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)])}).strict(),Tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),Z6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)])}).strict(),gpt=t.object({update:t.union([t.lazy(()=>N_),t.lazy(()=>B_)]),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]),where:t.lazy(()=>oe).optional()}).strict(),Cpt=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>N_),t.lazy(()=>B_)])}).strict(),N_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),ingredient:t.lazy(()=>fS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),transactions:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),B_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),Apt=t.object({update:t.union([t.lazy(()=>q_),t.lazy(()=>F_)]),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]),where:t.lazy(()=>v).optional()}).strict(),Spt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>q_),t.lazy(()=>F_)])}).strict(),q_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),F_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Tpt=t.object({update:t.union([t.lazy(()=>D_),t.lazy(()=>__)]),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]),where:t.lazy(()=>Z).optional()}).strict(),Ppt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>D_),t.lazy(()=>__)])}).strict(),D_=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),__=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Ic=t.object({ingredient:t.lazy(()=>T2)}).strict(),gc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),Fh=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),Wv=t.object({data:t.union([t.lazy(()=>GV),t.lazy(()=>GV).array()]),skipDuplicates:t.boolean().optional()}).strict(),_W=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>p8),t.lazy(()=>c8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),EW=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>p8),t.lazy(()=>c8)])}).strict(),LW=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>Aut)])}).strict(),hl=t.object({AND:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),OR:t.lazy(()=>hl).array().optional(),NOT:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),allergenId:t.union([t.lazy(()=>u),t.number()]).optional()}).strict(),Uv=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),Rv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),v6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)])}).strict(),kv=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),xv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),O6=t.object({where:t.lazy(()=>Kr),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)])}).strict(),Wpt=t.object({update:t.union([t.lazy(()=>E_),t.lazy(()=>L_)]),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Rv)]),where:t.lazy(()=>Ut).optional()}).strict(),Upt=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>E_),t.lazy(()=>L_)])}).strict(),E_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),L_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),Rpt=t.object({update:t.union([t.lazy(()=>V_),t.lazy(()=>H_)]),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]),where:t.lazy(()=>lo).optional()}).strict(),kpt=t.object({where:t.lazy(()=>lo).optional(),data:t.union([t.lazy(()=>V_),t.lazy(()=>H_)])}).strict(),V_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),H_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),jv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Mv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),f6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)])}).strict(),xpt=t.object({update:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)]),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]),where:t.lazy(()=>gt).optional()}).strict(),jpt=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)])}).strict(),Q_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),Y_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Cc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),Ac=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),Dh=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),Zv=t.object({data:t.union([t.lazy(()=>$V),t.lazy(()=>$V).array()]),skipDuplicates:t.boolean().optional()}).strict(),Sc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Tc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),_h=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),vv=t.object({data:t.union([t.lazy(()=>JV),t.lazy(()=>JV).array()]),skipDuplicates:t.boolean().optional()}).strict(),VW=t.object({where:t.lazy(()=>J),update:t.union([t.lazy(()=>u8),t.lazy(()=>y8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),HW=t.object({where:t.lazy(()=>J),data:t.union([t.lazy(()=>u8),t.lazy(()=>y8)])}).strict(),QW=t.object({where:t.lazy(()=>mp),data:t.union([t.lazy(()=>wN),t.lazy(()=>Sut)])}).strict(),mp=t.object({AND:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),OR:t.lazy(()=>mp).array().optional(),NOT:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable()}).strict(),YW=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>s8),t.lazy(()=>d8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),GW=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>s8),t.lazy(()=>d8)])}).strict(),$W=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Tut)])}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),role:t.union([t.lazy(()=>yB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),fv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),w6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),Pc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>US),lastUpdatedBy:t.lazy(()=>RS).optional(),transactions:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>xS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),Wc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Eh=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Wc)])}).strict(),wv=t.object({data:t.union([t.lazy(()=>KV),t.lazy(()=>KV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uc=t.object({type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>uF),createdBy:t.lazy(()=>yF)}).strict(),Rc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Lh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Uc),t.lazy(()=>Rc)])}).strict(),Nv=t.object({data:t.union([t.lazy(()=>XV),t.lazy(()=>XV).array()]),skipDuplicates:t.boolean().optional()}).strict(),kc=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>hF),items:t.lazy(()=>bF).optional()}).strict(),xc=t.object({id:t.number().int().optional(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>IF).optional()}).strict(),Vh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Bv=t.object({data:t.union([t.lazy(()=>tH),t.lazy(()=>tH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Mpt=t.object({update:t.union([t.lazy(()=>G_),t.lazy(()=>$_)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>N).optional()}).strict(),Zpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>G_),t.lazy(()=>$_)])}).strict(),G_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),$_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),JW=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>z8),t.lazy(()=>m8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Wc)])}).strict(),KW=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>z8),t.lazy(()=>m8)])}).strict(),XW=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>WT),t.lazy(()=>Put)])}).strict(),Zn=t.object({AND:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional(),OR:t.lazy(()=>Zn).array().optional(),NOT:t.union([t.lazy(()=>Zn),t.lazy(()=>Zn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable()}).strict(),tU=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>h8),t.lazy(()=>b8)]),create:t.union([t.lazy(()=>Uc),t.lazy(()=>Rc)])}).strict(),eU=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>h8),t.lazy(()=>b8)])}).strict(),oU=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>UT),t.lazy(()=>Wut)])}).strict(),vn=t.object({AND:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional(),OR:t.lazy(()=>vn).array().optional(),NOT:t.union([t.lazy(()=>vn),t.lazy(()=>vn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),type:t.union([t.lazy(()=>mB),t.lazy(()=>xt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),aU=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>I8),t.lazy(()=>g8)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),nU=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>I8),t.lazy(()=>g8)])}).strict(),iU=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Dj),t.lazy(()=>Uut)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>Mt)]).optional(),startedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),qv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>k2).optional()}).strict(),Fv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>j2).optional()}).strict(),N6=t.object({where:t.lazy(()=>Rl),create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)])}).strict(),jc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Mc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),Hh=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),Dv=t.object({data:t.union([t.lazy(()=>eH),t.lazy(()=>eH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>f2).optional()}).strict(),vc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>N2).optional()}).strict(),Qh=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),_v=t.object({data:t.union([t.lazy(()=>oH),t.lazy(()=>oH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ES=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),LS=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),Ev=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)])}).strict(),Oc=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>PF),items:t.lazy(()=>WF).optional()}).strict(),fc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>UF).optional()}).strict(),Yh=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>aH),t.lazy(()=>aH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Gh=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),Vv=t.object({data:t.union([t.lazy(()=>nH),t.lazy(()=>nH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bc=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>$F).optional(),MenuCategory:t.lazy(()=>JF).optional()}).strict(),qc=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>KF).optional(),MenuCategory:t.lazy(()=>XF).optional()}).strict(),$h=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),Hv=t.object({data:t.union([t.lazy(()=>iH),t.lazy(()=>iH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fc=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>t2)}).strict(),Dc=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Jh=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),Qv=t.object({data:t.union([t.lazy(()=>lH),t.lazy(()=>lH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_c=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Iq),recordedBy:t.lazy(()=>gq)}).strict(),Ec=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Kh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),Yv=t.object({data:t.union([t.lazy(()=>rH),t.lazy(()=>rH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>Pq),recordedBy:t.lazy(()=>Wq)}).strict(),Vc=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),Gv=t.object({data:t.union([t.lazy(()=>pH),t.lazy(()=>pH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hc=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>jq),items:t.lazy(()=>Mq).optional()}).strict(),Qc=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Zq).optional()}).strict(),tb=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),$v=t.object({data:t.union([t.lazy(()=>cH),t.lazy(()=>cH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>CB).optional(),maintenanceLogs:t.lazy(()=>AB).optional()}).strict(),Gc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>SB).optional(),maintenanceLogs:t.lazy(()=>TB).optional()}).strict(),eb=t.object({where:t.lazy(()=>Lt),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),Jv=t.object({data:t.union([t.lazy(()=>uH),t.lazy(()=>uH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>wB).optional(),completions:t.lazy(()=>NB).optional()}).strict(),Jc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>BB).optional(),completions:t.lazy(()=>qB).optional()}).strict(),ob=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>yH),t.lazy(()=>yH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>tq).optional(),respondedBy:t.lazy(()=>eq).optional()}).strict(),Xc=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ab=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),Xv=t.object({data:t.union([t.lazy(()=>sH),t.lazy(()=>sH).array()]),skipDuplicates:t.boolean().optional()}).strict(),vpt=t.object({update:t.union([t.lazy(()=>J_),t.lazy(()=>K_)]),create:t.union([t.lazy(()=>qv),t.lazy(()=>Fv)]),where:t.lazy(()=>Re).optional()}).strict(),Opt=t.object({where:t.lazy(()=>Re).optional(),data:t.union([t.lazy(()=>J_),t.lazy(()=>K_)])}).strict(),J_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>Z2).optional()}).strict(),K_=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>O2).optional()}).strict(),lU=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>C8),t.lazy(()=>A8)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),rU=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>C8),t.lazy(()=>A8)])}).strict(),pU=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Rut)])}).strict(),cU=t.object({where:t.lazy(()=>Kt),update:t.union([t.lazy(()=>S8),t.lazy(()=>T8)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),uU=t.object({where:t.lazy(()=>Kt),data:t.union([t.lazy(()=>S8),t.lazy(()=>T8)])}).strict(),yU=t.object({where:t.lazy(()=>hp),data:t.union([t.lazy(()=>BN),t.lazy(()=>kut)])}).strict(),hp=t.object({AND:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),OR:t.lazy(()=>hp).array().optional(),NOT:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),B6=t.object({update:t.union([t.lazy(()=>tO),t.lazy(()=>eO)]),create:t.union([t.lazy(()=>ES),t.lazy(()=>LS)]),where:t.lazy(()=>wt).optional()}).strict(),q6=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>tO),t.lazy(()=>eO)])}).strict(),tO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),eO=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),sU=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>P8),t.lazy(()=>W8)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),dU=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>P8),t.lazy(()=>W8)])}).strict(),zU=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>xut)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),mU=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>U8),t.lazy(()=>R8)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),hU=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>U8),t.lazy(()=>R8)])}).strict(),bU=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>jut)])}).strict(),IU=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>k8),t.lazy(()=>x8)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),gU=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>k8),t.lazy(()=>x8)])}).strict(),CU=t.object({where:t.lazy(()=>bp),data:t.union([t.lazy(()=>EN),t.lazy(()=>Mut)])}).strict(),bp=t.object({AND:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),OR:t.lazy(()=>bp).array().optional(),NOT:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AU=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>j8),t.lazy(()=>M8)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),SU=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>j8),t.lazy(()=>M8)])}).strict(),TU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Mj),t.lazy(()=>Zut)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PU=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),WU=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)])}).strict(),UU=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>CT),t.lazy(()=>vut)])}).strict(),On=t.object({AND:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional(),OR:t.lazy(()=>On).array().optional(),NOT:t.union([t.lazy(()=>On),t.lazy(()=>On).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),RU=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>O8),t.lazy(()=>f8)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),kU=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>O8),t.lazy(()=>f8)])}).strict(),xU=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>AT),t.lazy(()=>Out)])}).strict(),fn=t.object({AND:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional(),OR:t.lazy(()=>fn).array().optional(),NOT:t.union([t.lazy(()=>fn),t.lazy(()=>fn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),jU=t.object({where:t.lazy(()=>nt),update:t.union([t.lazy(()=>w8),t.lazy(()=>N8)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),MU=t.object({where:t.lazy(()=>nt),data:t.union([t.lazy(()=>w8),t.lazy(()=>N8)])}).strict(),ZU=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>wj),t.lazy(()=>fut)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vU=t.object({where:t.lazy(()=>Lt),update:t.union([t.lazy(()=>B8),t.lazy(()=>q8)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),OU=t.object({where:t.lazy(()=>Lt),data:t.union([t.lazy(()=>B8),t.lazy(()=>q8)])}).strict(),fU=t.object({where:t.lazy(()=>Ip),data:t.union([t.lazy(()=>RN),t.lazy(()=>wut)])}).strict(),Ip=t.object({AND:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),OR:t.lazy(()=>Ip).array().optional(),NOT:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>YN),t.lazy(()=>Ot)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),wU=t.object({where:t.lazy(()=>Vt),update:t.union([t.lazy(()=>F8),t.lazy(()=>D8)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),NU=t.object({where:t.lazy(()=>Vt),data:t.union([t.lazy(()=>F8),t.lazy(()=>D8)])}).strict(),BU=t.object({where:t.lazy(()=>gp),data:t.union([t.lazy(()=>xN),t.lazy(()=>Nut)])}).strict(),gp=t.object({AND:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),OR:t.lazy(()=>gp).array().optional(),NOT:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),frequency:t.union([t.lazy(()=>JN),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),qU=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>_8),t.lazy(()=>E8)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),FU=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>_8),t.lazy(()=>E8)])}).strict(),DU=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>gT),t.lazy(()=>But)])}).strict(),wn=t.object({AND:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional(),OR:t.lazy(()=>wn).array().optional(),NOT:t.union([t.lazy(()=>wn),t.lazy(()=>wn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>u),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>tB),t.lazy(()=>Rt)]).optional(),tags:t.lazy(()=>ul).optional(),status:t.union([t.lazy(()=>eB),t.lazy(()=>kt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),oO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>R2).optional()}).strict(),aO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>x2).optional()}).strict(),F6=t.object({where:t.lazy(()=>Rl),create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)])}).strict(),nO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),iO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),D6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)])}).strict(),tu=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>$2).optional()}).strict(),eu=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et),ShiftTask:t.lazy(()=>J2).optional()}).strict(),nb=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),lO=t.object({data:t.union([t.lazy(()=>dH),t.lazy(()=>dH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ou=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>EF),recipe:t.lazy(()=>LF)}).strict(),au=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),ib=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ou),t.lazy(()=>au)])}).strict(),rO=t.object({data:t.union([t.lazy(()=>zH),t.lazy(()=>zH).array()]),skipDuplicates:t.boolean().optional()}).strict(),nu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),ingredient:t.lazy(()=>US),transactions:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>xS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),iu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),lb=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>nu),t.lazy(()=>iu)])}).strict(),pO=t.object({data:t.union([t.lazy(()=>mH),t.lazy(()=>mH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),ru=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),rb=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),cO=t.object({data:t.union([t.lazy(()=>hH),t.lazy(()=>hH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cu=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pb=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),uO=t.object({data:t.union([t.lazy(()=>bH),t.lazy(()=>bH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>bq),menuItem:t.lazy(()=>Iq)}).strict(),yu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cb=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),yO=t.object({data:t.union([t.lazy(()=>IH),t.lazy(()=>IH).array()]),skipDuplicates:t.boolean().optional()}).strict(),su=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Tq),ingrediente:t.lazy(()=>Pq)}).strict(),du=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ub=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),sO=t.object({data:t.union([t.lazy(()=>gH),t.lazy(()=>gH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>xq),items:t.lazy(()=>Mq).optional()}).strict(),mu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Zq).optional()}).strict(),yb=t.object({where:t.lazy(()=>nt),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),dO=t.object({data:t.union([t.lazy(()=>CH),t.lazy(()=>CH).array()]),skipDuplicates:t.boolean().optional()}).strict(),hu=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Nq),recipe:t.lazy(()=>Bq)}).strict(),bu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>hu),t.lazy(()=>bu)])}).strict(),zO=t.object({data:t.union([t.lazy(()=>AH),t.lazy(()=>AH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gu=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),db=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),mO=t.object({data:t.union([t.lazy(()=>SH),t.lazy(()=>SH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Au=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zb=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>TH),t.lazy(()=>TH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Eq),recipe:t.lazy(()=>Lq).optional()}).strict(),Tu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>PH),t.lazy(()=>PH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>VB),items:t.lazy(()=>QB).optional()}).strict(),Wu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>YB).optional()}).strict(),hb=t.object({where:t.lazy(()=>ot),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Wu)])}).strict(),IO=t.object({data:t.union([t.lazy(()=>WH),t.lazy(()=>WH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XB),menuItem:t.lazy(()=>tq).optional()}).strict(),Ru=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Uu),t.lazy(()=>Ru)])}).strict(),gO=t.object({data:t.union([t.lazy(()=>UH),t.lazy(()=>UH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kT),ingredients:t.lazy(()=>xT).optional(),instructions:t.lazy(()=>jT).optional(),approvedBy:t.lazy(()=>ZT).optional()}).strict(),xu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>vT).optional(),instructions:t.lazy(()=>OT).optional()}).strict(),Ib=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),CO=t.object({data:t.union([t.lazy(()=>RH),t.lazy(()=>RH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kT),ingredients:t.lazy(()=>xT).optional(),instructions:t.lazy(()=>jT).optional(),createdBy:t.lazy(()=>MT)}).strict(),Mu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>vT).optional(),instructions:t.lazy(()=>OT).optional()}).strict(),gb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),AO=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>cF),item:t.lazy(()=>uF)}).strict(),vu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),Cb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),SO=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>mF),items:t.lazy(()=>bF).optional()}).strict(),fu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>IF).optional()}).strict(),Ab=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),TO=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),fpt=t.object({update:t.union([t.lazy(()=>X_),t.lazy(()=>tE)]),create:t.union([t.lazy(()=>oO),t.lazy(()=>aO)]),where:t.lazy(()=>Re).optional()}).strict(),wpt=t.object({where:t.lazy(()=>Re).optional(),data:t.union([t.lazy(()=>X_),t.lazy(()=>tE)])}).strict(),X_=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>M2).optional()}).strict(),tE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>v2).optional()}).strict(),Npt=t.object({update:t.union([t.lazy(()=>eE),t.lazy(()=>oE)]),create:t.union([t.lazy(()=>nO),t.lazy(()=>iO)]),where:t.lazy(()=>N).optional()}).strict(),Bpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>eE),t.lazy(()=>oE)])}).strict(),eE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),oE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),_U=t.object({where:t.lazy(()=>Xt),update:t.union([t.lazy(()=>L8),t.lazy(()=>V8)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),EU=t.object({where:t.lazy(()=>Xt),data:t.union([t.lazy(()=>L8),t.lazy(()=>V8)])}).strict(),LU=t.object({where:t.lazy(()=>Cp),data:t.union([t.lazy(()=>FN),t.lazy(()=>qut)])}).strict(),Cp=t.object({AND:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),OR:t.lazy(()=>Cp).array().optional(),NOT:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>Et)]).optional()}).strict(),VU=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>au)])}).strict(),HU=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)])}).strict(),QU=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>RT),t.lazy(()=>Fut)])}).strict(),Nn=t.object({AND:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional(),OR:t.lazy(()=>Nn).array().optional(),NOT:t.union([t.lazy(()=>Nn),t.lazy(()=>Nn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>u),t.number()]).optional()}).strict(),YU=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)]),create:t.union([t.lazy(()=>nu),t.lazy(()=>iu)])}).strict(),GU=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)])}).strict(),$U=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>WT),t.lazy(()=>Dut)])}).strict(),JU=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>$8),t.lazy(()=>J8)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),KU=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>$8),t.lazy(()=>J8)])}).strict(),XU=t.object({where:t.lazy(()=>Ap),data:t.union([t.lazy(()=>NN),t.lazy(()=>_ut)])}).strict(),Ap=t.object({AND:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),OR:t.lazy(()=>Ap).array().optional(),NOT:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),tR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>K8),t.lazy(()=>X8)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),eR=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>K8),t.lazy(()=>X8)])}).strict(),oR=t.object({where:t.lazy(()=>Sp),data:t.union([t.lazy(()=>_N),t.lazy(()=>Eut)])}).strict(),Sp=t.object({AND:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),OR:t.lazy(()=>Sp).array().optional(),NOT:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),aR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>t7),t.lazy(()=>e7)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),nR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>t7),t.lazy(()=>e7)])}).strict(),iR=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>CT),t.lazy(()=>Lut)])}).strict(),lR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>o7),t.lazy(()=>a7)]),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),rR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>o7),t.lazy(()=>a7)])}).strict(),pR=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>AT),t.lazy(()=>Vut)])}).strict(),cR=t.object({where:t.lazy(()=>nt),update:t.union([t.lazy(()=>n7),t.lazy(()=>i7)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),uR=t.object({where:t.lazy(()=>nt),data:t.union([t.lazy(()=>n7),t.lazy(()=>i7)])}).strict(),yR=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>wj),t.lazy(()=>Hut)])}).strict(),sR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>l7),t.lazy(()=>r7)]),create:t.union([t.lazy(()=>hu),t.lazy(()=>bu)])}).strict(),dR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>l7),t.lazy(()=>r7)])}).strict(),zR=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>ST),t.lazy(()=>Qut)])}).strict(),mR=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>p7),t.lazy(()=>c7)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),hR=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>p7),t.lazy(()=>c7)])}).strict(),bR=t.object({where:t.lazy(()=>Tp),data:t.union([t.lazy(()=>vN),t.lazy(()=>Yut)])}).strict(),Tp=t.object({AND:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),OR:t.lazy(()=>Tp).array().optional(),NOT:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>nB),t.lazy(()=>le)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),IR=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>u7),t.lazy(()=>y7)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),gR=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>u7),t.lazy(()=>y7)])}).strict(),CR=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>ON),t.lazy(()=>Gut)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),userId:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>iB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),AR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>s7),t.lazy(()=>d7)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),SR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>s7),t.lazy(()=>d7)])}).strict(),TR=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>TT),t.lazy(()=>$ut)])}).strict(),Bn=t.object({AND:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional(),OR:t.lazy(()=>Bn).array().optional(),NOT:t.union([t.lazy(()=>Bn),t.lazy(()=>Bn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>u),t.number()]).optional(),dateTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),PR=t.object({where:t.lazy(()=>ot),update:t.union([t.lazy(()=>z7),t.lazy(()=>m7)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Wu)])}).strict(),WR=t.object({where:t.lazy(()=>ot),data:t.union([t.lazy(()=>z7),t.lazy(()=>m7)])}).strict(),UR=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>Zj),t.lazy(()=>Jut)])}).strict(),RR=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>h7),t.lazy(()=>b7)]),create:t.union([t.lazy(()=>Uu),t.lazy(()=>Ru)])}).strict(),kR=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>h7),t.lazy(()=>b7)])}).strict(),xR=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>gT),t.lazy(()=>Kut)])}).strict(),jR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>I7),t.lazy(()=>g7)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),MR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>I7),t.lazy(()=>g7)])}).strict(),ZR=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>bT),t.lazy(()=>Xut)])}).strict(),qn=t.object({AND:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional(),OR:t.lazy(()=>qn).array().optional(),NOT:t.union([t.lazy(()=>qn),t.lazy(()=>qn).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>u),t.number()]).optional(),approvedById:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>C7),t.lazy(()=>A7)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),OR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>C7),t.lazy(()=>A7)])}).strict(),fR=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>bT),t.lazy(()=>tyt)])}).strict(),wR=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>S7),t.lazy(()=>T7)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),NR=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>S7),t.lazy(()=>T7)])}).strict(),BR=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>UT),t.lazy(()=>eyt)])}).strict(),qR=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>P7),t.lazy(()=>W7)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),FR=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>P7),t.lazy(()=>W7)])}).strict(),DR=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Dj),t.lazy(()=>oyt)])}).strict(),PO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),WO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),_6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)])}).strict(),qpt=t.object({update:t.union([t.lazy(()=>aE),t.lazy(()=>nE)]),create:t.union([t.lazy(()=>PO),t.lazy(()=>WO)]),where:t.lazy(()=>Z).optional()}).strict(),Fpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>aE),t.lazy(()=>nE)])}).strict(),aE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),nE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),wu=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Nu=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Sb=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),RO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),kO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),E6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)])}).strict(),_R=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>U7),t.lazy(()=>R7)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),ER=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>U7),t.lazy(()=>R7)])}).strict(),LR=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>ayt)])}).strict(),Dpt=t.object({update:t.union([t.lazy(()=>iE),t.lazy(()=>lE)]),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]),where:t.lazy(()=>N).optional()}).strict(),_pt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>iE),t.lazy(()=>lE)])}).strict(),iE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),lE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),xO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),jO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),L6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)])}).strict(),MO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>w2).optional()}).strict(),ZO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),V6=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)])}).strict(),Bu=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>$q),recipeVersion:t.lazy(()=>Jq).optional()}).strict(),qu=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Tb=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),vO=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fu=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>oF).optional(),equipment:t.lazy(()=>aF).optional()}).strict(),Du=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>nF).optional()}).strict(),Pb=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),OO=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_u=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Eu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Wb=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),Lu=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Vu=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ub=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),fO=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hu=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qu=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Rb=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yu=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>o5).optional()}).strict(),Gu=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>n5).optional()}).strict(),kb=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),$u=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>EF),assignedTo:t.lazy(()=>VF)}).strict(),Ju=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),xb=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ku=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>c5)}).strict(),Xu=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),jb=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),BO=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ty=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Nq),assignedTo:t.lazy(()=>qq).optional()}).strict(),ey=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),oy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Eq),createdBy:t.lazy(()=>Vq)}).strict(),ay=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>oy),t.lazy(()=>ay)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ny=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vb=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>ny),t.lazy(()=>iy)])}).strict(),ly=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>xT).optional(),instructions:t.lazy(()=>jT).optional(),createdBy:t.lazy(()=>MT),approvedBy:t.lazy(()=>ZT).optional()}).strict(),ry=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>vT).optional(),instructions:t.lazy(()=>OT).optional()}).strict(),Ob=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),py=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>jB),RecipeInstruction:t.lazy(()=>MB).optional()}).strict(),cy=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),fb=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>iq).optional(),ingredients:t.lazy(()=>rq).optional()}).strict(),yy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>pq).optional(),ingredients:t.lazy(()=>uq).optional()}).strict(),wb=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),sy=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dy=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nb=t.object({where:t.lazy(()=>ze),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),EO=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),zy=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),my=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bb=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),hy=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),by=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qb=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>hy),t.lazy(()=>by)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),VS=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),HS=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),HO=t.object({where:t.lazy(()=>Ol),create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)])}).strict(),Iy=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gy=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fb=t.object({where:t.lazy(()=>se),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),QO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),QS=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YS=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YO=t.object({where:t.lazy(()=>fl),create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)])}).strict(),Cy=t.object({url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ay=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Db=t.object({where:t.lazy(()=>de),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),GO=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),GS=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),$S=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),$O=t.object({where:t.lazy(()=>wl),create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)])}).strict(),Ept=t.object({update:t.union([t.lazy(()=>rE),t.lazy(()=>pE)]),create:t.union([t.lazy(()=>xO),t.lazy(()=>jO)]),where:t.lazy(()=>N).optional()}).strict(),Lpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>rE),t.lazy(()=>pE)])}).strict(),rE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),pE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),Vpt=t.object({update:t.union([t.lazy(()=>cE),t.lazy(()=>uE)]),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]),where:t.lazy(()=>Qe).optional()}).strict(),Hpt=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>cE),t.lazy(()=>uE)])}).strict(),cE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurant:t.lazy(()=>q2).optional()}).strict(),uE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),VR=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>k7),t.lazy(()=>x7)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),HR=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>k7),t.lazy(()=>x7)])}).strict(),QR=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>PT),t.lazy(()=>nyt)])}).strict(),YR=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>j7),t.lazy(()=>M7)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),GR=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>j7),t.lazy(()=>M7)])}).strict(),$R=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>iyt)])}).strict(),JR=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),KR=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)])}).strict(),XR=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>uS),t.lazy(()=>lyt)])}).strict(),tk=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>O7),t.lazy(()=>f7)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),ek=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>O7),t.lazy(()=>f7)])}).strict(),ok=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>LN),t.lazy(()=>ryt)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),ak=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>w7),t.lazy(()=>N7)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),nk=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>w7),t.lazy(()=>N7)])}).strict(),ik=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>VN),t.lazy(()=>pyt)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>u),t.number()]).optional(),date:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),lk=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>B7),t.lazy(()=>q7)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),rk=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>B7),t.lazy(()=>q7)])}).strict(),pk=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>DN),t.lazy(()=>cyt)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>PS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),ck=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>F7),t.lazy(()=>D7)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),uk=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>F7),t.lazy(()=>D7)])}).strict(),yk=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>RT),t.lazy(()=>uyt)])}).strict(),sk=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>_7),t.lazy(()=>E7)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),dk=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>_7),t.lazy(()=>E7)])}).strict(),zk=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>yyt)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),joinAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),mk=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>L7),t.lazy(()=>V7)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),hk=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>L7),t.lazy(()=>V7)])}).strict(),bk=t.object({where:t.lazy(()=>Mn),data:t.union([t.lazy(()=>ST),t.lazy(()=>syt)])}).strict(),Ik=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ay)])}).strict(),gk=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)])}).strict(),Ck=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>TT),t.lazy(()=>dyt)])}).strict(),Ak=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)]),create:t.union([t.lazy(()=>ny),t.lazy(()=>iy)])}).strict(),Sk=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)])}).strict(),Tk=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>MN),t.lazy(()=>zyt)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Pk=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>$7),t.lazy(()=>J7)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Wk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>$7),t.lazy(()=>J7)])}).strict(),Uk=t.object({where:t.lazy(()=>qn),data:t.union([t.lazy(()=>bT),t.lazy(()=>myt)])}).strict(),Rk=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>K7),t.lazy(()=>X7)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),kk=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>K7),t.lazy(()=>X7)])}).strict(),xk=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>IT),t.lazy(()=>hyt)])}).strict(),jk=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),Mk=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)])}).strict(),Zk=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>fj),t.lazy(()=>byt)])}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),vk=t.object({where:t.lazy(()=>ze),update:t.union([t.lazy(()=>oJ),t.lazy(()=>aJ)]),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),Ok=t.object({where:t.lazy(()=>ze),data:t.union([t.lazy(()=>oJ),t.lazy(()=>aJ)])}).strict(),fk=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>TN),t.lazy(()=>Iyt)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),wk=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>nJ),t.lazy(()=>iJ)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Nk=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>nJ),t.lazy(()=>iJ)])}).strict(),Bk=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>PN),t.lazy(()=>gyt)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),qk=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)]),create:t.union([t.lazy(()=>hy),t.lazy(()=>by)])}).strict(),Fk=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)])}).strict(),Dk=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>WN),t.lazy(()=>Cyt)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),prepTime:t.union([t.lazy(()=>u),t.number()]).optional(),cookTime:t.union([t.lazy(()=>u),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),H6=t.object({update:t.union([t.lazy(()=>JO),t.lazy(()=>KO)]),create:t.union([t.lazy(()=>VS),t.lazy(()=>HS)]),where:t.lazy(()=>fe).optional()}).strict(),Q6=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>JO),t.lazy(()=>KO)])}).strict(),JO=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),KO=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),_k=t.object({where:t.lazy(()=>se),update:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Ek=t.object({where:t.lazy(()=>se),data:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)])}).strict(),Lk=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>AN),t.lazy(()=>Ayt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>u),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>Ft),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Y6=t.object({update:t.union([t.lazy(()=>XO),t.lazy(()=>tf)]),create:t.union([t.lazy(()=>QS),t.lazy(()=>YS)]),where:t.lazy(()=>we).optional()}).strict(),G6=t.object({where:t.lazy(()=>we).optional(),data:t.union([t.lazy(()=>XO),t.lazy(()=>tf)])}).strict(),XO=t.object({temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tf=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>n)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>a)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vk=t.object({where:t.lazy(()=>de),update:t.union([t.lazy(()=>uJ),t.lazy(()=>yJ)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Hk=t.object({where:t.lazy(()=>de),data:t.union([t.lazy(()=>uJ),t.lazy(()=>yJ)])}).strict(),Qk=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>SN),t.lazy(()=>Syt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),recipeId:t.union([t.lazy(()=>u),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>HN),t.lazy(()=>pe)]).optional(),stepNumber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),$6=t.object({update:t.union([t.lazy(()=>ef),t.lazy(()=>of)]),create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]),where:t.lazy(()=>Ne).optional()}).strict(),J6=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>ef),t.lazy(()=>of)])}).strict(),ef=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),of=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>a)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Sy=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Gq),recipeVersion:t.lazy(()=>Jq).optional()}).strict(),Ty=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),_b=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),af=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Py=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),lastUpdatedBy:t.lazy(()=>RS).optional(),transactions:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>xS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),Wy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Eb=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Py),t.lazy(()=>Wy)])}).strict(),nf=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>V2)}).strict(),Ry=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Lb=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Uy),t.lazy(()=>Ry)])}).strict(),lf=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ky=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>MF).optional(),supplierPriceHistory:t.lazy(()=>vF).optional()}).strict(),xy=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>OF).optional(),supplierPriceHistory:t.lazy(()=>wF).optional()}).strict(),Vb=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),jy=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Tq),recordedBy:t.lazy(()=>Wq)}).strict(),My=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Hb=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zy=t.object({allergen:t.lazy(()=>P2)}).strict(),vy=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),Qb=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oy=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>g2)}).strict(),fy=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Yb=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uf=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>iq).optional(),recipes:t.lazy(()=>lq).optional()}).strict(),yf=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>pq).optional(),recipes:t.lazy(()=>cq).optional()}).strict(),K6=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)])}).strict(),Yk=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>sJ),t.lazy(()=>dJ)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Gk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>sJ),t.lazy(()=>dJ)])}).strict(),$k=t.object({where:t.lazy(()=>xn),data:t.union([t.lazy(()=>PT),t.lazy(()=>Tyt)])}).strict(),Jk=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Wy)])}).strict(),Kk=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)])}).strict(),Xk=t.object({where:t.lazy(()=>Zn),data:t.union([t.lazy(()=>WT),t.lazy(()=>Pyt)])}).strict(),tx=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>hJ),t.lazy(()=>bJ)]),create:t.union([t.lazy(()=>Uy),t.lazy(()=>Ry)])}).strict(),ex=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>hJ),t.lazy(()=>bJ)])}).strict(),ox=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>Wyt)])}).strict(),Pl=t.object({AND:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),OR:t.lazy(()=>Pl).array().optional(),NOT:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),orderId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional()}).strict(),ax=t.object({where:t.lazy(()=>Ht),update:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),nx=t.object({where:t.lazy(()=>Ht),data:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)])}).strict(),ix=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>qN),t.lazy(()=>Uyt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),lx=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rx=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)])}).strict(),px=t.object({where:t.lazy(()=>fn),data:t.union([t.lazy(()=>AT),t.lazy(()=>Ryt)])}).strict(),cx=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)]),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),ux=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)])}).strict(),yx=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>kyt)])}).strict(),sx=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>PJ),t.lazy(()=>WJ)]),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),dx=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>PJ),t.lazy(()=>WJ)])}).strict(),zx=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>xyt)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),vendorId:t.union([t.lazy(()=>u),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>u),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>ce),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Qpt=t.object({update:t.union([t.lazy(()=>yE),t.lazy(()=>sE)]),create:t.union([t.lazy(()=>uf),t.lazy(()=>yf)]),where:t.lazy(()=>ve).optional()}).strict(),Ypt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>yE),t.lazy(()=>sE)])}).strict(),yE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yq).optional(),recipes:t.lazy(()=>sq).optional()}).strict(),sE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>zq).optional(),recipes:t.lazy(()=>mq).optional()}).strict(),sf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),df=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),X6=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>sf),t.lazy(()=>df)])}).strict(),zf=t.object({name:t.string(),category:t.string(),price:t.number(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),mf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),t3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)])}).strict(),hf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kT),instructions:t.lazy(()=>jT).optional(),createdBy:t.lazy(()=>MT),approvedBy:t.lazy(()=>ZT).optional()}).strict(),bf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>OT).optional()}).strict(),e3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)])}).strict(),Gpt=t.object({update:t.union([t.lazy(()=>dE),t.lazy(()=>zE)]),create:t.union([t.lazy(()=>sf),t.lazy(()=>df)]),where:t.lazy(()=>v).optional()}).strict(),$pt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>dE),t.lazy(()=>zE)])}).strict(),dE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),zE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Jpt=t.object({update:t.union([t.lazy(()=>mE),t.lazy(()=>hE)]),create:t.union([t.lazy(()=>zf),t.lazy(()=>mf)]),where:t.lazy(()=>Ut).optional()}).strict(),Kpt=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>mE),t.lazy(()=>hE)])}).strict(),mE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),hE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),Xpt=t.object({update:t.union([t.lazy(()=>bE),t.lazy(()=>IE)]),create:t.union([t.lazy(()=>hf),t.lazy(()=>bf)]),where:t.lazy(()=>ee).optional()}).strict(),tct=t.object({where:t.lazy(()=>ee).optional(),data:t.union([t.lazy(()=>bE),t.lazy(()=>IE)])}).strict(),bE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>NT).optional(),createdBy:t.lazy(()=>BT).optional(),approvedBy:t.lazy(()=>qT).optional()}).strict(),IE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>DT).optional()}).strict(),If=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),gf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),o3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)])}).strict(),Cf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kT),ingredients:t.lazy(()=>xT).optional(),createdBy:t.lazy(()=>MT),approvedBy:t.lazy(()=>ZT).optional()}).strict(),Af=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>vT).optional()}).strict(),a3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)])}).strict(),wy=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>xB),equipment:t.lazy(()=>jB)}).strict(),Ny=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),Gb=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),Sf=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ect=t.object({update:t.union([t.lazy(()=>gE),t.lazy(()=>CE)]),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]),where:t.lazy(()=>v).optional()}).strict(),oct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>gE),t.lazy(()=>CE)])}).strict(),gE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),CE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),act=t.object({update:t.union([t.lazy(()=>AE),t.lazy(()=>SE)]),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]),where:t.lazy(()=>ee).optional()}).strict(),nct=t.object({where:t.lazy(()=>ee).optional(),data:t.union([t.lazy(()=>AE),t.lazy(()=>SE)])}).strict(),AE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>fT).optional(),ingredients:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>BT).optional(),approvedBy:t.lazy(()=>qT).optional()}).strict(),SE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FT).optional()}).strict(),mx=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>UJ),t.lazy(()=>RJ)]),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),hx=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>UJ),t.lazy(()=>RJ)])}).strict(),bx=t.object({where:t.lazy(()=>jn),data:t.union([t.lazy(()=>IT),t.lazy(()=>jyt)])}).strict(),Tf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),transactions:t.lazy(()=>IM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),Pf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),n3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)])}).strict(),Wf=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),orderItems:t.lazy(()=>PI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),Uf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),orderItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),i3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)])}).strict(),Rf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),kf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),l3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)])}).strict(),By=t.object({type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>cF),createdBy:t.lazy(()=>yF)}).strict(),qy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),$b=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),xf=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Lq).optional(),createdBy:t.lazy(()=>Vq)}).strict(),Dy=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Jb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),jf=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_y=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>D2)}).strict(),Ey=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Kb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),Mf=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ict=t.object({update:t.union([t.lazy(()=>TE),t.lazy(()=>PE)]),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]),where:t.lazy(()=>wt).optional()}).strict(),lct=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>TE),t.lazy(()=>PE)])}).strict(),TE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),PE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),rct=t.object({update:t.union([t.lazy(()=>WE),t.lazy(()=>UE)]),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Uf)]),where:t.lazy(()=>Ut).optional()}).strict(),pct=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>WE),t.lazy(()=>UE)])}).strict(),WE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),UE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),cct=t.object({update:t.union([t.lazy(()=>RE),t.lazy(()=>kE)]),create:t.union([t.lazy(()=>Rf),t.lazy(()=>kf)]),where:t.lazy(()=>Z).optional()}).strict(),uct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>RE),t.lazy(()=>kE)])}).strict(),RE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),kE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Ix=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)]),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),gx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)])}).strict(),Cx=t.object({where:t.lazy(()=>vn),data:t.union([t.lazy(()=>UT),t.lazy(()=>Myt)])}).strict(),Ax=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)]),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),Sx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)])}).strict(),Tx=t.object({where:t.lazy(()=>Bn),data:t.union([t.lazy(()=>TT),t.lazy(()=>Zyt)])}).strict(),Px=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)]),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),Wx=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)])}).strict(),Ux=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>_j),t.lazy(()=>vyt)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>u),t.number()]).optional(),itemId:t.union([t.lazy(()=>u),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Zf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),stockCounts:t.lazy(()=>gM).optional()}).strict(),vf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),r3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)])}).strict(),Of=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),ingredient:t.lazy(()=>US),lastUpdatedBy:t.lazy(()=>RS).optional(),withdrawals:t.lazy(()=>xS).optional(),stockCounts:t.lazy(()=>jS).optional()}).strict(),ff=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),p3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)])}).strict(),wf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),Nf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),c3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)])}).strict(),yct=t.object({update:t.union([t.lazy(()=>xE),t.lazy(()=>jE)]),create:t.union([t.lazy(()=>Zf),t.lazy(()=>vf)]),where:t.lazy(()=>wt).optional()}).strict(),sct=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>xE),t.lazy(()=>jE)])}).strict(),xE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),jE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),dct=t.object({update:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)]),create:t.union([t.lazy(()=>Of),t.lazy(()=>ff)]),where:t.lazy(()=>oe).optional()}).strict(),zct=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)])}).strict(),ME=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),ingredient:t.lazy(()=>fS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),ZE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),mct=t.object({update:t.union([t.lazy(()=>vE),t.lazy(()=>OE)]),create:t.union([t.lazy(()=>wf),t.lazy(()=>Nf)]),where:t.lazy(()=>Z).optional()}).strict(),hct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>vE),t.lazy(()=>OE)])}).strict(),vE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),OE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Bf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>hM),items:t.lazy(()=>bM).optional(),transactions:t.lazy(()=>IM).optional()}).strict(),qf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>vt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional()}).strict(),u3=t.object({where:t.lazy(()=>Ha),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)])}).strict(),Ff=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional()}).strict(),Df=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional()}).strict(),y3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)])}).strict(),Ly=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>_2)}).strict(),Vy=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Xb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),_f=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bct=t.object({update:t.union([t.lazy(()=>fE),t.lazy(()=>wE)]),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]),where:t.lazy(()=>wt).optional()}).strict(),Ict=t.object({where:t.lazy(()=>wt).optional(),data:t.union([t.lazy(()=>fE),t.lazy(()=>wE)])}).strict(),fE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>TM).optional(),items:t.lazy(()=>PM).optional(),transactions:t.lazy(()=>WM).optional()}).strict(),wE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>vt),t.lazy(()=>op)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional()}).strict(),gct=t.object({update:t.union([t.lazy(()=>NE),t.lazy(()=>BE)]),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]),where:t.lazy(()=>Z).optional()}).strict(),Cct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>NE),t.lazy(()=>BE)])}).strict(),NE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional()}).strict(),BE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional()}).strict(),Rx=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)]),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),kx=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)])}).strict(),xx=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>_j),t.lazy(()=>Oyt)])}).strict(),Ef=t.object({status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>mF),createdBy:t.lazy(()=>hF)}).strict(),Lf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),s3=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)])}).strict(),Vf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>WS),ingredient:t.lazy(()=>US),lastUpdatedBy:t.lazy(()=>RS).optional(),transactions:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>xS).optional()}).strict(),Hf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional()}).strict(),d3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)])}).strict(),Act=t.object({update:t.union([t.lazy(()=>qE),t.lazy(()=>FE)]),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]),where:t.lazy(()=>Ye).optional()}).strict(),Sct=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>qE),t.lazy(()=>FE)])}).strict(),qE=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>gF).optional(),createdBy:t.lazy(()=>CF).optional()}).strict(),FE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Tct=t.object({update:t.union([t.lazy(()=>DE),t.lazy(()=>_E)]),create:t.union([t.lazy(()=>Vf),t.lazy(()=>Hf)]),where:t.lazy(()=>oe).optional()}).strict(),Pct=t.object({where:t.lazy(()=>oe).optional(),data:t.union([t.lazy(()=>DE),t.lazy(()=>_E)])}).strict(),DE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),ingredient:t.lazy(()=>fS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional()}).strict(),_E=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional()}).strict(),Qf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional()}).strict(),Yf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional()}).strict(),z3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)])}).strict(),Wct=t.object({update:t.union([t.lazy(()=>EE),t.lazy(()=>LE)]),create:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]),where:t.lazy(()=>v).optional()}).strict(),Uct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>EE),t.lazy(()=>LE)])}).strict(),EE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional()}).strict(),LE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional()}).strict(),Gf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),recipes:t.lazy(()=>El).optional(),menus:t.lazy(()=>Ll).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),$f=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),m3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)])}).strict(),Jf=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZF).optional(),supplierPriceHistory:t.lazy(()=>vF).optional()}).strict(),Kf=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>fF).optional(),supplierPriceHistory:t.lazy(()=>wF).optional()}).strict(),h3=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),Hy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>H2)}).strict(),Qy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),tI=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Xf=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Rct=t.object({update:t.union([t.lazy(()=>VE),t.lazy(()=>HE)]),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]),where:t.lazy(()=>N).optional()}).strict(),kct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>VE),t.lazy(()=>HE)])}).strict(),VE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),HE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),xct=t.object({update:t.union([t.lazy(()=>QE),t.lazy(()=>YE)]),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),where:t.lazy(()=>je).optional()}).strict(),jct=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>QE),t.lazy(()=>YE)])}).strict(),QE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>BF).optional(),supplierPriceHistory:t.lazy(()=>qF).optional()}).strict(),YE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>DF).optional(),supplierPriceHistory:t.lazy(()=>_F).optional()}).strict(),jx=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)]),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Mx=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)])}).strict(),Zx=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>fyt)])}).strict(),tw=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TF),vendor:t.lazy(()=>PF)}).strict(),ew=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),b3=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)])}).strict(),ow=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),vendors:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),aw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),vendors:t.lazy(()=>vI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),I3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)])}).strict(),Mct=t.object({update:t.union([t.lazy(()=>GE),t.lazy(()=>$E)]),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]),where:t.lazy(()=>Ge).optional()}).strict(),Zct=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>GE),t.lazy(()=>$E)])}).strict(),GE=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>RF).optional(),vendor:t.lazy(()=>kF).optional()}).strict(),$E=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vct=t.object({update:t.union([t.lazy(()=>JE),t.lazy(()=>KE)]),create:t.union([t.lazy(()=>ow),t.lazy(()=>aw)]),where:t.lazy(()=>Ut).optional()}).strict(),Oct=t.object({where:t.lazy(()=>Ut).optional(),data:t.union([t.lazy(()=>JE),t.lazy(()=>KE)])}).strict(),JE=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),KE=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),Yy=t.object({status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TF),items:t.lazy(()=>WF).optional()}).strict(),Gy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>UF).optional()}).strict(),eI=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),nw=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),$y=t.object({name:t.string(),category:t.string(),price:t.number(),recipeIngredients:t.lazy(()=>SI).optional(),inventoryItems:t.lazy(()=>TI).optional(),orderItems:t.lazy(()=>PI).optional(),WasteRecord:t.lazy(()=>UI).optional(),IngredientAllergen:t.lazy(()=>RI).optional(),SupplierPriceHistory:t.lazy(()=>kI).optional(),DietaryRestriction:t.lazy(()=>xI).optional()}).strict(),Jy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),dietaryRestrictionId:t.number().int().optional().nullable(),recipeIngredients:t.lazy(()=>jI).optional(),inventoryItems:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>ZI).optional(),WasteRecord:t.lazy(()=>OI).optional(),IngredientAllergen:t.lazy(()=>fI).optional(),SupplierPriceHistory:t.lazy(()=>wI).optional()}).strict(),oI=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Ky=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>C2)}).strict(),Xy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aI=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),iw=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),vx=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)]),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),Ox=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)])}).strict(),fx=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>wyt)])}).strict(),wx=t.object({where:t.lazy(()=>G),update:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)]),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Nx=t.object({where:t.lazy(()=>G),data:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)])}).strict(),Bx=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>qj),t.lazy(()=>Nyt)])}).strict(),qx=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)]),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),Fx=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)])}).strict(),Dx=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>Byt)])}).strict(),lw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),rw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),g3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)])}).strict(),ts=t.object({taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),es=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nI=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),pw=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),fct=t.object({update:t.union([t.lazy(()=>XE),t.lazy(()=>tL)]),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]),where:t.lazy(()=>Z).optional()}).strict(),wct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>XE),t.lazy(()=>tL)])}).strict(),XE=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),tL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),_x=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),Ex=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)])}).strict(),Lx=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>ZN),t.lazy(()=>qyt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),shiftId:t.union([t.lazy(()=>u),t.number()]).optional(),taskType:t.union([t.lazy(()=>aB),t.lazy(()=>ie)]).optional(),startTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>u),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),os=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),as=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),iI=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>os),t.lazy(()=>as)])}).strict(),ns=t.object({quantity:t.number().int(),status:t.lazy(()=>X),recipe:t.lazy(()=>LF),assignedTo:t.lazy(()=>VF)}).strict(),is=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),lI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ns),t.lazy(()=>is)])}).strict(),cw=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vx=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)]),create:t.union([t.lazy(()=>os),t.lazy(()=>as)])}).strict(),Hx=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)])}).strict(),Qx=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>Fyt)])}).strict(),Yx=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)]),create:t.union([t.lazy(()=>ns),t.lazy(()=>is)])}).strict(),Gx=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)])}).strict(),$x=t.object({where:t.lazy(()=>Nn),data:t.union([t.lazy(()=>RT),t.lazy(()=>Dyt)])}).strict(),uw=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>e5).optional()}).strict(),yw=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>a5).optional()}).strict(),C3=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)])}).strict(),sw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),A3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)])}).strict(),zw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),passwordResets:t.lazy(()=>Hn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),mw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),S3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)])}).strict(),Nct=t.object({update:t.union([t.lazy(()=>eL),t.lazy(()=>oL)]),create:t.union([t.lazy(()=>uw),t.lazy(()=>yw)]),where:t.lazy(()=>Je).optional()}).strict(),Bct=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>eL),t.lazy(()=>oL)])}).strict(),eL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>i5).optional()}).strict(),oL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>r5).optional()}).strict(),qct=t.object({update:t.union([t.lazy(()=>aL),t.lazy(()=>nL)]),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]),where:t.lazy(()=>v).optional()}).strict(),Fct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>aL),t.lazy(()=>nL)])}).strict(),aL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),nL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Dct=t.object({update:t.union([t.lazy(()=>iL),t.lazy(()=>lL)]),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]),where:t.lazy(()=>Z).optional()}).strict(),_ct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>iL),t.lazy(()=>lL)])}).strict(),iL=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),lL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),hw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Fn).optional(),restaurant:t.lazy(()=>Dn).optional(),shifts:t.lazy(()=>_n).optional(),prepItems:t.lazy(()=>En).optional(),inventoryUpdates:t.lazy(()=>Ln).optional(),sessions:t.lazy(()=>Vn).optional(),leftoverItem:t.lazy(()=>Qn).optional(),wasteRecord:t.lazy(()=>Yn).optional(),productionPlan:t.lazy(()=>Gn).optional(),productionPlanItem:t.lazy(()=>$n).optional(),availability:t.lazy(()=>Jn).optional(),schedulingConstraint:t.lazy(()=>Kn).optional(),inventoryWithdrawal:t.lazy(()=>Xn).optional(),checklistComplete:t.lazy(()=>ti).optional(),customerFeedback:t.lazy(()=>ei).optional(),recipeVersionsCreated:t.lazy(()=>oi).optional(),recipeVersionsApproved:t.lazy(()=>ai).optional(),InventoryTransaction:t.lazy(()=>ni).optional(),StockCount:t.lazy(()=>ii).optional()}).strict(),bw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),leftoverItem:t.lazy(()=>yi).optional(),wasteRecord:t.lazy(()=>si).optional(),productionPlan:t.lazy(()=>di).optional(),productionPlanItem:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraint:t.lazy(()=>hi).optional(),inventoryWithdrawal:t.lazy(()=>bi).optional(),checklistComplete:t.lazy(()=>Ii).optional(),customerFeedback:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransaction:t.lazy(()=>Si).optional(),StockCount:t.lazy(()=>Ti).optional()}).strict(),T3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)])}).strict(),Ect=t.object({update:t.union([t.lazy(()=>rL),t.lazy(()=>pL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]),where:t.lazy(()=>Z).optional()}).strict(),Lct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>rL),t.lazy(()=>pL)])}).strict(),rL=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),pL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Iw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Bl).optional(),users:t.lazy(()=>ql).optional(),cookbooks:t.lazy(()=>Fl).optional(),inventory:t.lazy(()=>Dl).optional(),orders:t.lazy(()=>_l).optional(),recipes:t.lazy(()=>El).optional(),salesTransactions:t.lazy(()=>Vl).optional(),leftoverItem:t.lazy(()=>Hl).optional(),wasteRecord:t.lazy(()=>Ql).optional(),productionPlan:t.lazy(()=>Yl).optional(),equipment:t.lazy(()=>Gl).optional(),qualityChecklist:t.lazy(()=>$l).optional(),qustomerFeedback:t.lazy(()=>Jl).optional()}).strict(),gw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>nr).optional(),leftoverItem:t.lazy(()=>ir).optional(),wasteRecord:t.lazy(()=>lr).optional(),productionPlan:t.lazy(()=>rr).optional(),equipment:t.lazy(()=>pr).optional(),qualityChecklist:t.lazy(()=>cr).optional(),qustomerFeedback:t.lazy(()=>ur).optional()}).strict(),P3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)])}).strict(),ls=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),rs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),rI=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Cw=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ps=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>n2).optional()}).strict(),cs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>i2).optional()}).strict(),pI=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),Aw=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vct=t.object({update:t.union([t.lazy(()=>cL),t.lazy(()=>uL)]),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]),where:t.lazy(()=>N).optional()}).strict(),Hct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>cL),t.lazy(()=>uL)])}).strict(),cL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>yr).optional(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),uL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),Jx=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Kx=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)])}).strict(),Xx=t.object({where:t.lazy(()=>eo),data:t.union([t.lazy(()=>uS),t.lazy(()=>_yt)])}).strict(),tj=t.object({where:t.lazy(()=>$t),update:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),ej=t.object({where:t.lazy(()=>$t),data:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)])}).strict(),oj=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>UN),t.lazy(()=>Eyt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>u),t.number()]).optional(),menuId:t.union([t.lazy(()=>u),t.number()]).optional(),isActive:t.union([t.lazy(()=>Dt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),Sw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),nutritionalInfo:t.lazy(()=>_z).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),Tw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),W3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)])}).strict(),Pw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Ww=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),U3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)])}).strict(),Qct=t.object({update:t.union([t.lazy(()=>yL),t.lazy(()=>sL)]),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]),where:t.lazy(()=>gt).optional()}).strict(),Yct=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>yL),t.lazy(()=>sL)])}).strict(),yL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),sL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Gct=t.object({update:t.union([t.lazy(()=>dL),t.lazy(()=>zL)]),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Ww)]),where:t.lazy(()=>v).optional()}).strict(),$ct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>dL),t.lazy(()=>zL)])}).strict(),dL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),zL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Uw=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>GF),MenuCategory:t.lazy(()=>JF).optional()}).strict(),Rw=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>XF).optional()}).strict(),R3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)])}).strict(),kw=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>a2)}).strict(),xw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),k3=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)])}).strict(),us=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),ys=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),cI=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),ss=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>u5)}).strict(),ds=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),uI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),jw=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),JS=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KS=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mw=t.object({where:t.lazy(()=>Nl),create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)])}).strict(),zs=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ms=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yI=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),Zw=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),hs=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>X4)}).strict(),bs=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sI=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>hs),t.lazy(()=>bs)])}).strict(),vw=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Is=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>bq),recordedBy:t.lazy(()=>gq)}).strict(),gs=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),Ow=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cs=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XB),respondedBy:t.lazy(()=>eq).optional()}).strict(),As=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),fw=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>lq).optional(),ingredients:t.lazy(()=>rq).optional()}).strict(),Ts=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>cq).optional(),ingredients:t.lazy(()=>uq).optional()}).strict(),mI=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Jct=t.object({update:t.union([t.lazy(()=>mL),t.lazy(()=>hL)]),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Rw)]),where:t.lazy(()=>Me).optional()}).strict(),Kct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>mL),t.lazy(()=>hL)])}).strict(),mL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>tD).optional(),MenuCategory:t.lazy(()=>oD).optional()}).strict(),hL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),Xct=t.object({update:t.union([t.lazy(()=>bL),t.lazy(()=>IL)]),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]),where:t.lazy(()=>Ze).optional()}).strict(),tut=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>bL),t.lazy(()=>IL)])}).strict(),bL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>l2).optional()}).strict(),IL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aj=t.object({where:t.lazy(()=>g),update:t.union([t.lazy(()=>tK),t.lazy(()=>eK)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),nj=t.object({where:t.lazy(()=>g),data:t.union([t.lazy(()=>tK),t.lazy(()=>eK)])}).strict(),ij=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>bI),t.lazy(()=>Lyt)])}).strict(),lj=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>oK),t.lazy(()=>aK)]),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),rj=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>oK),t.lazy(()=>aK)])}).strict(),pj=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>Vyt)])}).strict(),x3=t.object({update:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]),create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]),where:t.lazy(()=>Be).optional()}).strict(),j3=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)])}).strict(),ww=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nw=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cj=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>nK),t.lazy(()=>iK)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),uj=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>nK),t.lazy(()=>iK)])}).strict(),yj=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>fN),t.lazy(()=>Hyt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>u),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>u),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>s),t.coerce.date()]).optional()}).strict(),sj=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>lK),t.lazy(()=>rK)]),create:t.union([t.lazy(()=>hs),t.lazy(()=>bs)])}).strict(),dj=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>lK),t.lazy(()=>rK)])}).strict(),zj=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Mj),t.lazy(()=>Qyt)])}).strict(),mj=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>pK),t.lazy(()=>cK)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),hj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>pK),t.lazy(()=>cK)])}).strict(),bj=t.object({where:t.lazy(()=>On),data:t.union([t.lazy(()=>CT),t.lazy(()=>Yyt)])}).strict(),Ij=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>uK),t.lazy(()=>yK)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),gj=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>uK),t.lazy(()=>yK)])}).strict(),Cj=t.object({where:t.lazy(()=>wn),data:t.union([t.lazy(()=>gT),t.lazy(()=>Gyt)])}).strict(),Aj=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>sK),t.lazy(()=>dK)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Sj=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>sK),t.lazy(()=>dK)])}).strict(),Tj=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>fj),t.lazy(()=>$yt)])}).strict(),Bw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menu:t.lazy(()=>Bz),category:t.lazy(()=>qz).optional(),recipes:t.lazy(()=>Fz).optional(),menuItemRecipes:t.lazy(()=>Dz).optional(),recommendations:t.lazy(()=>Ez).optional(),salesTransactions:t.lazy(()=>Lz).optional(),leftoverItems:t.lazy(()=>Vz).optional(),feedback:t.lazy(()=>Hz).optional(),dietaryRestrictions:t.lazy(()=>Qz).optional()}).strict(),qw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),M3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)])}).strict(),eut=t.object({update:t.union([t.lazy(()=>gL),t.lazy(()=>CL)]),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]),where:t.lazy(()=>gt).optional()}).strict(),out=t.object({where:t.lazy(()=>gt).optional(),data:t.union([t.lazy(()=>gL),t.lazy(()=>CL)])}).strict(),gL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),CL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Fw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),prepHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),prepHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),Z3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)])}).strict(),aut=t.object({update:t.union([t.lazy(()=>AL),t.lazy(()=>SL)]),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]),where:t.lazy(()=>v).optional()}).strict(),nut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>AL),t.lazy(()=>SL)])}).strict(),AL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),SL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),_w=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>ro),cookBook:t.lazy(()=>po),ingredients:t.lazy(()=>co).optional(),instructions:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>so).optional(),prepBoards:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>bo).optional(),productionPlanItems:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>go).optional(),tags:t.lazy(()=>Co).optional(),versions:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Uo).optional(),nutritionalInfo:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>ko).optional(),storage:t.lazy(()=>xo).optional(),photos:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Mo).optional()}).strict(),Ew=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>Zo).optional(),instructions:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>fo).optional(),prepBoards:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>Do).optional(),tags:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>Xo).optional()}).strict(),v3=t.object({where:t.lazy(()=>g),create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)])}).strict(),iut=t.object({update:t.union([t.lazy(()=>TL),t.lazy(()=>PL)]),create:t.union([t.lazy(()=>_w),t.lazy(()=>Ew)]),where:t.lazy(()=>v).optional()}).strict(),lut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>TL),t.lazy(()=>PL)])}).strict(),TL=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),PL=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),BV=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),menuId:t.number().int()}).strict(),O3=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),f3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),rut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),qV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),FV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),w3=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Kq).optional(),ingredient:t.lazy(()=>Xq).optional()}).strict(),N3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),put=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B3=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>iF).optional(),equipment:t.lazy(()=>rF).optional()}).strict(),q3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),cut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),DV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),_V=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>ne),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),F3=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>ZB).optional(),RecipeInstruction:t.lazy(()=>OB).optional()}).strict(),D3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),uut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),_3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ne),t.lazy(()=>uC)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EV=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>_t),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LV=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L3=t.object({description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>d2).optional()}).strict(),V3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>z2).optional()}).strict(),sut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),order:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>_t),t.lazy(()=>Fm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>$B).optional(),items:t.lazy(()=>JB).optional()}).strict(),Q3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>KB).optional()}).strict(),dut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VV=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Y3=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>b2).optional()}).strict(),G3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HV=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>qt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Dm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$3=t.object({status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>I2).optional()}).strict(),J3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>qt),t.lazy(()=>wz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Nz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QV=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number()}).strict(),K3=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional()}).strict(),X3=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional()}).strict(),hut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),t8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),e8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),but=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),o8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),vendors:t.lazy(()=>FI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional()}).strict(),a8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),vendors:t.lazy(()=>YI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),Iut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),n8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),i8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),gut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),YV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Dq).optional(),assignedTo:t.lazy(()=>_q).optional()}).strict(),r8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GV=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),p8=t.object({ingredient:t.lazy(()=>W2).optional()}).strict(),c8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),Aut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),$V=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),JV=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>dr).optional(),inventory:t.lazy(()=>zr).optional(),orders:t.lazy(()=>mr).optional(),recipes:t.lazy(()=>hr).optional(),menus:t.lazy(()=>br).optional(),salesTransactions:t.lazy(()=>Ir).optional(),leftoverItem:t.lazy(()=>gr).optional(),wasteRecord:t.lazy(()=>Cr).optional(),productionPlan:t.lazy(()=>Ar).optional(),equipment:t.lazy(()=>Sr).optional(),qualityChecklist:t.lazy(()=>Tr).optional(),qustomerFeedback:t.lazy(()=>Pr).optional()}).strict(),y8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Ur).optional(),inventory:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItem:t.lazy(()=>Zr).optional(),wasteRecord:t.lazy(()=>vr).optional(),productionPlan:t.lazy(()=>Or).optional(),equipment:t.lazy(()=>fr).optional(),qualityChecklist:t.lazy(()=>wr).optional(),qustomerFeedback:t.lazy(()=>Nr).optional()}).strict(),Sut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>n)]).optional(),city:t.union([t.string(),t.lazy(()=>n)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>n)]).optional(),state:t.union([t.string(),t.lazy(()=>n)]).optional(),owner:t.union([t.string(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),s8=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),d8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Tut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KV=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),XV=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),tH=t.object({id:t.number().int().optional(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),z8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),ingredient:t.lazy(()=>fS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),m8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),Put=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),h8=t.object({type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>dF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),b8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I8=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>CF).optional(),items:t.lazy(()=>AF).optional()}).strict(),g8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),Uut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),eH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),aH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),iH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rH=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cH=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ot).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sH=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C8=t.object({email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Ri).optional(),inventoryUpdates:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>ji).optional(),leftoverItem:t.lazy(()=>Mi).optional(),wasteRecord:t.lazy(()=>Zi).optional(),productionPlan:t.lazy(()=>vi).optional(),productionPlanItem:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>fi).optional(),schedulingConstraint:t.lazy(()=>wi).optional(),inventoryWithdrawal:t.lazy(()=>Ni).optional(),checklistComplete:t.lazy(()=>Bi).optional(),customerFeedback:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Di).optional(),InventoryTransaction:t.lazy(()=>_i).optional(),StockCount:t.lazy(()=>Ei).optional()}).strict(),A8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItem:t.lazy(()=>Gi).optional(),wasteRecord:t.lazy(()=>$i).optional(),productionPlan:t.lazy(()=>Ji).optional(),productionPlanItem:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraint:t.lazy(()=>tl).optional(),inventoryWithdrawal:t.lazy(()=>el).optional(),checklistComplete:t.lazy(()=>ol).optional(),customerFeedback:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransaction:t.lazy(()=>ll).optional(),StockCount:t.lazy(()=>rl).optional()}).strict(),Rut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>n)]).optional(),firstName:t.union([t.string(),t.lazy(()=>n)]).optional(),lastName:t.union([t.string(),t.lazy(()=>n)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>jt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>B2).optional()}).strict(),T8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>F2).optional()}).strict(),kut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>n)]).optional()}).strict(),P8=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>kF).optional(),items:t.lazy(()=>xF).optional()}).strict(),W8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jF).optional()}).strict(),xut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),R8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),jut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),k8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>eD).optional(),MenuCategory:t.lazy(()=>oD).optional()}).strict(),x8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>aD).optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),Mut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j8=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>o2).optional()}).strict(),M8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Aq).optional(),recordedBy:t.lazy(()=>Sq).optional()}).strict(),v8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>Rq).optional(),recordedBy:t.lazy(()=>kq).optional()}).strict(),f8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Out=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>Oq).optional(),items:t.lazy(()=>fq).optional()}).strict(),N8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>wq).optional()}).strict(),fut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>WB).optional(),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),q8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>RB).optional(),maintenanceLogs:t.lazy(()=>kB).optional()}).strict(),wut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>up)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F8=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>DB).optional(),completions:t.lazy(()=>_B).optional()}).strict(),D8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>EB).optional(),completions:t.lazy(()=>LB).optional()}).strict(),Nut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>ft),t.lazy(()=>yp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_8=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>aq).optional(),respondedBy:t.lazy(()=>nq).optional()}).strict(),E8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),But=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dH=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Et)}).strict(),zH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),mH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),hH=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),bH=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SH=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>le),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TH=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WH=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),jH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Mt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),L8=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>X2).optional()}).strict(),V8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),ShiftTask:t.lazy(()=>t5).optional()}).strict(),qut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional()}).strict(),H8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>HF).optional(),recipe:t.lazy(()=>QF).optional()}).strict(),Q8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),Fut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional()}).strict(),Y8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),ingredient:t.lazy(()=>fS).optional(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),G8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),Dut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),$8=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J8=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_ut=t.object({id:t.union([t.string().uuid(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K8=t.object({token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X8=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Eut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Cq).optional(),menuItem:t.lazy(()=>Aq).optional()}).strict(),e7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Uq).optional(),ingrediente:t.lazy(()=>Rq).optional()}).strict(),a7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>vq).optional(),items:t.lazy(()=>fq).optional()}).strict(),i7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>wq).optional()}).strict(),Hut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Fq).optional(),recipe:t.lazy(()=>Dq).optional()}).strict(),r7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Qut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p7=t.object({dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dayOfWeek:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Gut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Hq).optional(),recipe:t.lazy(()=>Qq).optional()}).strict(),d7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$ut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>GB).optional(),items:t.lazy(()=>JB).optional()}).strict(),m7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>KB).optional()}).strict(),Jut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h7=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>oq).optional(),menuItem:t.lazy(()=>aq).optional()}).strict(),b7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>fT).optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional(),approvedBy:t.lazy(()=>qT).optional()}).strict(),g7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FT).optional(),instructions:t.lazy(()=>DT).optional()}).strict(),Xut=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>fT).optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional(),createdBy:t.lazy(()=>BT).optional()}).strict(),A7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FT).optional(),instructions:t.lazy(()=>DT).optional()}).strict(),tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S7=t.object({type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>sF).optional(),item:t.lazy(()=>dF).optional()}).strict(),T7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P7=t.object({status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>gF).optional(),items:t.lazy(()=>AF).optional()}).strict(),W7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Mt),t.lazy(()=>np)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),MH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ct),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional()}).strict(),U7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),R7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),ZH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),vH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),OH=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fH=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),NH=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),BH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FH=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DH=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),_H=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EH=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LH=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HH=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>pe),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),k7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>Xq).optional(),recipeVersion:t.lazy(()=>tF).optional()}).strict(),x7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),j7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>lF).optional(),equipment:t.lazy(()=>rF).optional()}).strict(),M7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),instruction:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Z7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menu:t.lazy(()=>om).optional(),category:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),v7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),O7=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>l5).optional()}).strict(),q7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>p5).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),prepBoard:t.lazy(()=>HF).optional(),assignedTo:t.lazy(()=>YF).optional()}).strict(),D7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),_7=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>y5).optional()}).strict(),E7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Fq).optional(),assignedTo:t.lazy(()=>_q).optional()}).strict(),V7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>Hq).optional(),createdBy:t.lazy(()=>Yq).optional()}).strict(),Q7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y7=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional(),createdBy:t.lazy(()=>BT).optional(),approvedBy:t.lazy(()=>qT).optional()}).strict(),J7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>FT).optional(),instructions:t.lazy(()=>DT).optional()}).strict(),myt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K7=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>vB).optional(),RecipeInstruction:t.lazy(()=>OB).optional()}).strict(),X7=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),tJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yq).optional(),ingredients:t.lazy(()=>dq).optional()}).strict(),eJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>zq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nJ=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lJ=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>n)]).optional(),threshold:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uJ=t.object({url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Syt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),url:t.union([t.string(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>cC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ap),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),YH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),GH=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),$H=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JH=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),KH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Kq).optional(),recipeVersion:t.lazy(()=>tF).optional()}).strict(),dJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),Tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>_r),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),zJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),inventory:t.lazy(()=>OS).optional(),lastUpdatedBy:t.lazy(()=>wS).optional(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),mJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),Pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>b)]).optional().nullable()}).strict(),hJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>Q2).optional()}).strict(),bJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),IJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>NF).optional(),supplierPriceHistory:t.lazy(()=>qF).optional()}).strict(),gJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>FF).optional(),supplierPriceHistory:t.lazy(()=>_F).optional()}).strict(),Uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),contact:t.union([t.string(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>n)]).optional(),phone:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Uq).optional(),recordedBy:t.lazy(()=>kq).optional()}).strict(),AJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SJ=t.object({allergen:t.lazy(()=>U2).optional()}).strict(),TJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),PJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>A2).optional()}).strict(),WJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),UJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>ZB).optional(),equipment:t.lazy(()=>vB).optional()}).strict(),RJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),tQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>xt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),eQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),kJ=t.object({type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>sF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),xJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Myt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>xt),t.lazy(()=>Er)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Qq).optional(),createdBy:t.lazy(()=>Yq).optional()}).strict(),MJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>E2).optional()}).strict(),vJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),aQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),OJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>L2).optional()}).strict(),fJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),nQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),wJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>Y2).optional()}).strict(),NJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),iQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Zt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BJ=t.object({status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>RF).optional(),items:t.lazy(()=>xF).optional()}).strict(),qJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jF).optional()}).strict(),wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ip)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),recipeIngredients:t.lazy(()=>NI).optional(),inventoryItems:t.lazy(()=>BI).optional(),orderItems:t.lazy(()=>qI).optional(),WasteRecord:t.lazy(()=>DI).optional(),IngredientAllergen:t.lazy(()=>_I).optional(),SupplierPriceHistory:t.lazy(()=>EI).optional(),DietaryRestriction:t.lazy(()=>LI).optional()}).strict(),DJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipeIngredients:t.lazy(()=>VI).optional(),inventoryItems:t.lazy(()=>HI).optional(),orderItems:t.lazy(()=>QI).optional(),WasteRecord:t.lazy(()=>GI).optional(),IngredientAllergen:t.lazy(()=>$I).optional(),SupplierPriceHistory:t.lazy(()=>JI).optional()}).strict(),Nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),category:t.union([t.string(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),_J=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>S2).optional()}).strict(),EJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Byt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>n)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ie),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LJ=t.object({taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),taskType:t.union([t.lazy(()=>ie),t.lazy(()=>yC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),HJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),menuItems:t.lazy(()=>na).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),QJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),menuItems:t.lazy(()=>Ua).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),YJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),recipe:t.lazy(()=>QF).optional(),assignedTo:t.lazy(()=>YF).optional()}).strict(),GJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),Dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Ya)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>a)]).optional()}).strict(),cQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>oo),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>no),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>io),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),uQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$J=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),category:t.lazy(()=>am).optional(),recipes:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>ym).optional()}).strict(),JJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),recipes:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),_yt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Fe),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>De),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>_e),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Ee),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable()}).strict(),KJ=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>r2).optional()}).strict(),XJ=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>p2).optional()}).strict(),Eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>a)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),sQ=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Rt),tags:t.union([t.lazy(()=>ep),t.string().array()]).optional(),status:t.lazy(()=>kt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tK=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),restaurant:t.lazy(()=>ta).optional(),cookBook:t.lazy(()=>ea).optional(),ingredients:t.lazy(()=>oa).optional(),instructions:t.lazy(()=>aa).optional(),foodCostHistory:t.lazy(()=>ia).optional(),prepHistory:t.lazy(()=>la).optional(),prepBoards:t.lazy(()=>ra).optional(),prepItems:t.lazy(()=>pa).optional(),menuItemRecipes:t.lazy(()=>ca).optional(),productionPlanItems:t.lazy(()=>ua).optional(),withdrawals:t.lazy(()=>ya).optional(),tags:t.lazy(()=>sa).optional(),versions:t.lazy(()=>da).optional(),equipment:t.lazy(()=>za).optional(),dietaryRestrictions:t.lazy(()=>ma).optional(),temperatures:t.lazy(()=>ha).optional(),yields:t.lazy(()=>ba).optional(),laborCosts:t.lazy(()=>Ia).optional(),nutritionalInfo:t.lazy(()=>ga).optional(),criticalPoints:t.lazy(()=>Ca).optional(),storage:t.lazy(()=>Aa).optional(),photos:t.lazy(()=>Sa).optional(),RecipeStats:t.lazy(()=>Ta).optional()}).strict(),eK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional(),ingredients:t.lazy(()=>Pa).optional(),instructions:t.lazy(()=>Wa).optional(),foodCostHistory:t.lazy(()=>Ra).optional(),prepHistory:t.lazy(()=>ka).optional(),prepBoards:t.lazy(()=>xa).optional(),prepItems:t.lazy(()=>ja).optional(),menuItemRecipes:t.lazy(()=>Ma).optional(),productionPlanItems:t.lazy(()=>Za).optional(),withdrawals:t.lazy(()=>va).optional(),tags:t.lazy(()=>Oa).optional(),versions:t.lazy(()=>fa).optional(),equipment:t.lazy(()=>wa).optional(),dietaryRestrictions:t.lazy(()=>Na).optional(),temperatures:t.lazy(()=>Ba).optional(),yields:t.lazy(()=>qa).optional(),laborCosts:t.lazy(()=>Fa).optional(),nutritionalInfo:t.lazy(()=>Da).optional(),criticalPoints:t.lazy(()=>_a).optional(),storage:t.lazy(()=>Ea).optional(),photos:t.lazy(()=>La).optional(),RecipeStats:t.lazy(()=>Va).optional()}).strict(),Lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),imageUrls:t.union([t.lazy(()=>pt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>a)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>b)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>n)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>ct)]).optional()}).strict(),oK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>s5).optional()}).strict(),aK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nK=t.object({recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lK=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>e2).optional()}).strict(),rK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Cq).optional(),recordedBy:t.lazy(()=>Sq).optional()}).strict(),cK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>n)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uK=t.object({rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>oq).optional(),respondedBy:t.lazy(()=>nq).optional()}).strict(),yK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>a)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>a)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Rt),t.lazy(()=>qr)]).optional(),tags:t.union([t.lazy(()=>Fr),t.string().array()]).optional(),status:t.union([t.lazy(()=>kt),t.lazy(()=>Dr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>m)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sK=t.object({name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>sq).optional(),ingredients:t.lazy(()=>dq).optional()}).strict(),dK=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>mq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),$yt=t.object({id:t.union([t.number().int(),t.lazy(()=>a)]).optional(),name:t.union([t.string(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yzt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),Gzt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),$zt=t.object({select:Ws.optional(),include:Ps.optional(),where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([og,og.array()]).optional()}).strict(),Jzt=t.object({where:fe.optional(),orderBy:t.union([Sm.array(),Sm]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kzt=t.object({where:fe.optional(),orderBy:t.union([ML.array(),ML]).optional(),by:og.array(),having:jC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xzt=t.object({select:Ws.optional(),include:Ps.optional(),where:Ol}).strict(),tmt=t.object({select:Ws.optional(),include:Ps.optional(),where:Ol}).strict(),emt=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),omt=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),zK=t.object({select:Rs.optional(),include:Us.optional(),where:Ga.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),amt=t.object({where:Ga.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nmt=t.object({where:Ga.optional(),orderBy:t.union([ZL.array(),ZL]).optional(),by:ag.array(),having:MC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),imt=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),lmt=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),rmt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),pmt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),cmt=t.object({select:xs.optional(),include:ks.optional(),where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ng,ng.array()]).optional()}).strict(),umt=t.object({where:we.optional(),orderBy:t.union([Tm.array(),Tm]).optional(),cursor:fl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ymt=t.object({where:we.optional(),orderBy:t.union([vL.array(),vL]).optional(),by:ng.array(),having:ZC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),smt=t.object({select:xs.optional(),include:ks.optional(),where:fl}).strict(),dmt=t.object({select:xs.optional(),include:ks.optional(),where:fl}).strict(),zmt=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),mmt=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),mK=t.object({select:Ms.optional(),include:js.optional(),where:$a.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),hmt=t.object({where:$a.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bmt=t.object({where:$a.optional(),orderBy:t.union([OL.array(),OL]).optional(),by:ig.array(),having:vC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Imt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),gmt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),Cmt=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),Amt=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),hK=t.object({select:vs.optional(),include:Zs.optional(),where:Ja.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),Smt=t.object({where:Ja.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tmt=t.object({where:Ja.optional(),orderBy:t.union([fL.array(),fL]).optional(),by:lg.array(),having:OC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pmt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),Wmt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),Umt=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),Rmt=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),bK=t.object({select:fs.optional(),include:Os.optional(),where:Ka.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),kmt=t.object({where:Ka.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xmt=t.object({where:Ka.optional(),orderBy:t.union([wL.array(),wL]).optional(),by:rg.array(),having:fC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Mmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Zmt=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),vmt=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),IK=t.object({select:Ns.optional(),include:ws.optional(),where:Xa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Omt=t.object({where:Xa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fmt=t.object({where:Xa.optional(),orderBy:t.union([NL.array(),NL]).optional(),by:pg.array(),having:wC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),Nmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),Bmt=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),qmt=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Lw=t.object({select:qs.optional(),include:Bs.optional(),where:tn.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Fmt=t.object({where:tn.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dmt=t.object({where:tn.optional(),orderBy:t.union([BL.array(),BL]).optional(),by:cg.array(),having:NC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_mt=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),Emt=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),Lmt=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),Vmt=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),gK=t.object({select:Ds.optional(),include:Fs.optional(),where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),Hmt=t.object({where:Ze.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qmt=t.object({where:Ze.optional(),orderBy:t.union([qL.array(),qL]).optional(),by:ug.array(),having:BC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ymt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),Gmt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),$mt=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Jmt=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),pS=t.object({select:Es.optional(),include:_s.optional(),where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Kmt=t.object({where:ee.optional(),orderBy:t.union([Bp.array(),Bp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xmt=t.object({where:ee.optional(),orderBy:t.union([FL.array(),FL]).optional(),by:yg.array(),having:qC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tht=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),eht=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),oht=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),aht=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),CK=t.object({select:Vs.optional(),include:Ls.optional(),where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),nht=t.object({where:ke.optional(),orderBy:t.union([qp.array(),qp]).optional(),cursor:Lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iht=t.object({where:ke.optional(),orderBy:t.union([DL.array(),DL]).optional(),by:sg.array(),having:FC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lht=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),rht=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),pht=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),cht=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),XS=t.object({select:Qs.optional(),include:Hs.optional(),where:en.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),uht=t.object({where:en.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yht=t.object({where:en.optional(),orderBy:t.union([_L.array(),_L]).optional(),by:dg.array(),having:DC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sht=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),dht=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),zht=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),mht=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),AK=t.object({select:Gs.optional(),include:Ys.optional(),where:on.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),hht=t.object({where:on.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bht=t.object({where:on.optional(),orderBy:t.union([EL.array(),EL]).optional(),by:zg.array(),having:_C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Iht=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),ght=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),Cht=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),Aht=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),SK=t.object({select:Js.optional(),include:$s.optional(),where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),Sht=t.object({where:xe.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tht=t.object({where:xe.optional(),orderBy:t.union([LL.array(),LL]).optional(),by:mg.array(),having:EC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pht=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),Wht=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),Uht=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Rht=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),TK=t.object({select:Xs.optional(),include:Ks.optional(),where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),kht=t.object({where:Le.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xht=t.object({where:Le.optional(),orderBy:t.union([VL.array(),VL]).optional(),by:hg.array(),having:LC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jht=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),Mht=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),Zht=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),vht=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Vw=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Oht=t.object({where:Ve.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:ot.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fht=t.object({where:Ve.optional(),orderBy:t.union([HL.array(),HL]).optional(),by:bg.array(),having:VC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wht=t.object({select:ed.optional(),include:td.optional(),where:ot}).strict(),Nht=t.object({select:ed.optional(),include:td.optional(),where:ot}).strict(),Bht=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),qht=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Hw=t.object({select:ad.optional(),include:od.optional(),where:an.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Fht=t.object({where:an.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:dt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dht=t.object({where:an.optional(),orderBy:t.union([QL.array(),QL]).optional(),by:Ig.array(),having:HC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_ht=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),Eht=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),Lht=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Vht=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Qw=t.object({select:id.optional(),include:nd.optional(),where:nn.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Hht=t.object({where:nn.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qht=t.object({where:nn.optional(),orderBy:t.union([YL.array(),YL]).optional(),by:gg.array(),having:QC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Yht=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),Ght=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),$ht=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Jht=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),tT=t.object({select:rd.optional(),include:ld.optional(),where:ln.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Kht=t.object({where:ln.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xht=t.object({where:ln.optional(),orderBy:t.union([GL.array(),GL]).optional(),by:Cg.array(),having:YC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tbt=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),ebt=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),obt=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),abt=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Yw=t.object({select:cd.optional(),include:pd.optional(),where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),nbt=t.object({where:ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ibt=t.object({where:ve.optional(),orderBy:t.union([$L.array(),$L]).optional(),by:Ag.array(),having:GC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lbt=t.object({select:cd.optional(),include:pd.optional(),where:at}).strict(),rbt=t.object({select:cd.optional(),include:pd.optional(),where:at}).strict(),pbt=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),cbt=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),PK=t.object({select:yd.optional(),include:ud.optional(),where:rn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),ubt=t.object({where:rn.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ybt=t.object({where:rn.optional(),orderBy:t.union([JL.array(),JL]).optional(),by:Sg.array(),having:$C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sbt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),dbt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),zbt=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),mbt=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),eT=t.object({select:dd.optional(),include:sd.optional(),where:pn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),hbt=t.object({where:pn.optional(),orderBy:t.union([ih.array(),ih]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bbt=t.object({where:pn.optional(),orderBy:t.union([KL.array(),KL]).optional(),by:Tg.array(),having:JC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ibt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),gbt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),Cbt=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),Abt=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),oT=t.object({select:md.optional(),include:zd.optional(),where:cn.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),Sbt=t.object({where:cn.optional(),orderBy:t.union([lh.array(),lh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tbt=t.object({where:cn.optional(),orderBy:t.union([XL.array(),XL]).optional(),by:Pg.array(),having:KC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pbt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),Wbt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),Ubt=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Rbt=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Gw=t.object({select:bd.optional(),include:hd.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),kbt=t.object({where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:nt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xbt=t.object({where:He.optional(),orderBy:t.union([tV.array(),tV]).optional(),by:Wg.array(),having:XC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jbt=t.object({select:bd.optional(),include:hd.optional(),where:nt}).strict(),Mbt=t.object({select:bd.optional(),include:hd.optional(),where:nt}).strict(),Zbt=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),vbt=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),aT=t.object({select:gd.optional(),include:Id.optional(),where:un.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),Obt=t.object({where:un.optional(),orderBy:t.union([rh.array(),rh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fbt=t.object({where:un.optional(),orderBy:t.union([eV.array(),eV]).optional(),by:Ug.array(),having:tA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wbt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),Nbt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),Bbt=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),qbt=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),WK=t.object({select:Ad.optional(),include:Cd.optional(),where:yn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Fbt=t.object({where:yn.optional(),orderBy:t.union([ph.array(),ph]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dbt=t.object({where:yn.optional(),orderBy:t.union([oV.array(),oV]).optional(),by:Rg.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_bt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),Ebt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),Lbt=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Vbt=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),UK=t.object({select:Td.optional(),include:Sd.optional(),where:sn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Hbt=t.object({where:sn.optional(),orderBy:t.union([ch.array(),ch]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qbt=t.object({where:sn.optional(),orderBy:t.union([aV.array(),aV]).optional(),by:kg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ybt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),Gbt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),$bt=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Jbt=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),RK=t.object({select:Wd.optional(),include:Pd.optional(),where:dn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Kbt=t.object({where:dn.optional(),orderBy:t.union([uh.array(),uh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xbt=t.object({where:dn.optional(),orderBy:t.union([nV.array(),nV]).optional(),by:xg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tIt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),eIt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),oIt=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),aIt=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),nT=t.object({select:Rd.optional(),include:Ud.optional(),where:zn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),nIt=t.object({where:zn.optional(),orderBy:t.union([yh.array(),yh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iIt=t.object({where:zn.optional(),orderBy:t.union([iV.array(),iV]).optional(),by:jg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lIt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),rIt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),pIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Kr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),cIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Kr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),uIt=t.object({select:xd.optional(),include:kd.optional(),where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Kr.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),yIt=t.object({where:lo.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:Kr.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sIt=t.object({where:lo.optional(),orderBy:t.union([lV.array(),lV]).optional(),by:Mg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dIt=t.object({select:xd.optional(),include:kd.optional(),where:Kr}).strict(),zIt=t.object({select:xd.optional(),include:kd.optional(),where:Kr}).strict(),mIt=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),hIt=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),$w=t.object({select:Md.optional(),include:jd.optional(),where:mn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),bIt=t.object({where:mn.optional(),orderBy:t.union([sh.array(),sh]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),IIt=t.object({where:mn.optional(),orderBy:t.union([rV.array(),rV]).optional(),by:Zg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gIt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),CIt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),AIt=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),SIt=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),kK=t.object({select:vd.optional(),include:Zd.optional(),where:hn.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),TIt=t.object({where:hn.optional(),orderBy:t.union([dh.array(),dh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PIt=t.object({where:hn.optional(),orderBy:t.union([pV.array(),pV]).optional(),by:vg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WIt=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),UIt=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),RIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),kIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),xIt=t.object({select:Bm.optional(),where:pl.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),jIt=t.object({where:pl.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:qm.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MIt=t.object({where:pl.optional(),orderBy:t.union([cV.array(),cV]).optional(),by:Og.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZIt=t.object({select:Bm.optional(),where:qm}).strict(),vIt=t.object({select:Bm.optional(),where:qm}).strict(),OIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),fIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),wIt=t.object({select:fd.optional(),include:Od.optional(),where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),NIt=t.object({where:Re.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Rl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BIt=t.object({where:Re.optional(),orderBy:t.union([uV.array(),uV]).optional(),by:fg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qIt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),FIt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),DIt=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Gr.array(),Gr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),_It=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Gr.array(),Gr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),EIt=t.object({select:Nd.optional(),include:wd.optional(),where:wt.optional(),orderBy:t.union([Gr.array(),Gr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),LIt=t.object({where:wt.optional(),orderBy:t.union([Gr.array(),Gr]).optional(),cursor:Ha.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({where:wt.optional(),orderBy:t.union([yV.array(),yV]).optional(),by:wg.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),QIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),YIt=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),GIt=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),xK=t.object({select:qd.optional(),include:Bd.optional(),where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),$It=t.object({where:N.optional(),orderBy:t.union([kn.array(),kn]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({where:N.optional(),orderBy:t.union([sV.array(),sV]).optional(),by:Ng.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KIt=t.object({select:qd.optional(),include:Bd.optional(),where:J}).strict(),XIt=t.object({select:qd.optional(),include:Bd.optional(),where:J}).strict(),tgt=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),egt=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),Jw=t.object({select:Dd.optional(),include:Fd.optional(),where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),ogt=t.object({where:Z.optional(),orderBy:t.union([Ke.array(),Ke]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({where:Z.optional(),orderBy:t.union([dV.array(),dV]).optional(),by:Bg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ngt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),igt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),lgt=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),rgt=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),jK=t.object({select:Ed.optional(),include:_d.optional(),where:bn.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),pgt=t.object({where:bn.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({where:bn.optional(),orderBy:t.union([zV.array(),zV]).optional(),by:qg.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ugt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),ygt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),sgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),dgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),MK=t.object({select:Vd.optional(),include:Ld.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),zgt=t.object({where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({where:Qe.optional(),orderBy:t.union([mV.array(),mV]).optional(),by:Fg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),bgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),Igt=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),ggt=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),lp=t.object({select:Qd.optional(),include:Hd.optional(),where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),Cgt=t.object({where:v.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:g.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({where:v.optional(),orderBy:t.union([hV.array(),hV]).optional(),by:Dg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sgt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),Tgt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),Pgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ut.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Wgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ut.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Kw=t.object({select:Gd.optional(),include:Yd.optional(),where:Ut.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Ugt=t.object({where:Ut.optional(),orderBy:t.union([Ml.array(),Ml]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rgt=t.object({where:Ut.optional(),orderBy:t.union([bV.array(),bV]).optional(),by:_g.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kgt=t.object({select:Gd.optional(),include:Yd.optional(),where:G}).strict(),xgt=t.object({select:Gd.optional(),include:Yd.optional(),where:G}).strict(),jgt=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Mgt=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),iT=t.object({select:Jd.optional(),include:$d.optional(),where:In.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Zgt=t.object({where:In.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vgt=t.object({where:In.optional(),orderBy:t.union([IV.array(),IV]).optional(),by:Eg.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ogt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),fgt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),wgt=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Ngt=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Xw=t.object({select:Xd.optional(),include:Kd.optional(),where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Bgt=t.object({where:Oe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qgt=t.object({where:Oe.optional(),orderBy:t.union([gV.array(),gV]).optional(),by:Lg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fgt=t.object({select:Xd.optional(),include:Kd.optional(),where:it}).strict(),Dgt=t.object({select:Xd.optional(),include:Kd.optional(),where:it}).strict(),_gt=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Egt=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),lT=t.object({select:ez.optional(),include:tz.optional(),where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Lgt=t.object({where:oe.optional(),orderBy:t.union([cp.array(),cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vgt=t.object({where:oe.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Vg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hgt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),Qgt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),Ygt=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Ggt=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),rT=t.object({select:az.optional(),include:oz.optional(),where:gn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),$gt=t.object({where:gn.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jgt=t.object({where:gn.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:Hg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kgt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),Xgt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),tCt=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),eCt=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),tN=t.object({select:iz.optional(),include:nz.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),oCt=t.object({where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aCt=t.object({where:Ye.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:Qg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nCt=t.object({select:iz.optional(),include:nz.optional(),where:lt}).strict(),iCt=t.object({select:iz.optional(),include:nz.optional(),where:lt}).strict(),lCt=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),rCt=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),eN=t.object({select:rz.optional(),include:lz.optional(),where:Cn.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),pCt=t.object({where:Cn.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cCt=t.object({where:Cn.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:Yg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uCt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),yCt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),sCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),dCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),zCt=t.object({select:cz.optional(),include:pz.optional(),where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),mCt=t.object({where:Ne.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hCt=t.object({where:Ne.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:Gg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bCt=t.object({select:cz.optional(),include:pz.optional(),where:wl}).strict(),ICt=t.object({select:cz.optional(),include:pz.optional(),where:wl}).strict(),gCt=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),CCt=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),oN=t.object({select:yz.optional(),include:uz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),ACt=t.object({where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SCt=t.object({where:Ge.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:$g.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TCt=t.object({select:yz.optional(),include:uz.optional(),where:rt}).strict(),PCt=t.object({select:yz.optional(),include:uz.optional(),where:rt}).strict(),WCt=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),UCt=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),aN=t.object({select:dz.optional(),include:sz.optional(),where:An.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),RCt=t.object({where:An.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kCt=t.object({where:An.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:Jg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xCt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),jCt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),MCt=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),ZCt=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),ZK=t.object({select:mz.optional(),include:zz.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),vCt=t.object({where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OCt=t.object({where:je.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:Kg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fCt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),wCt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),NCt=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),BCt=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),vK=t.object({select:bz.optional(),include:hz.optional(),where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),qCt=t.object({where:$e.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FCt=t.object({where:$e.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:Xg.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DCt=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),_Ct=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),ECt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),LCt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),OK=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),VCt=t.object({where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HCt=t.object({where:Je.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:tC.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QCt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),YCt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),GCt=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),$Ct=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),pT=t.object({select:Az.optional(),include:Cz.optional(),where:Sn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),JCt=t.object({where:Sn.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KCt=t.object({where:Sn.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:eC.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),XCt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),tAt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),eAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),oAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),fK=t.object({select:Tz.optional(),include:Sz.optional(),where:Tn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),aAt=t.object({where:Tn.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nAt=t.object({where:Tn.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:oC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),lAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),rAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),pAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),wK=t.object({select:Wz.optional(),include:Pz.optional(),where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),cAt=t.object({where:Me.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uAt=t.object({where:Me.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:aC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),sAt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),dAt=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),zAt=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),nN=t.object({select:Rz.optional(),include:Uz.optional(),where:Pn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),mAt=t.object({where:Pn.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hAt=t.object({where:Pn.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:nC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bAt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),IAt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),gAt=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Zl.array(),Zl]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),CAt=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Zl.array(),Zl]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),KI=t.object({select:xz.optional(),include:kz.optional(),where:gt.optional(),orderBy:t.union([Zl.array(),Zl]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),AAt=t.object({where:gt.optional(),orderBy:t.union([Zl.array(),Zl]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SAt=t.object({where:gt.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:iC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TAt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),PAt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),WAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),UAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),RAt=t.object({select:Mz.optional(),include:jz.optional(),where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),kAt=t.object({where:Be.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xAt=t.object({where:Be.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:lC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jAt=t.object({select:Mz.optional(),include:jz.optional(),where:Nl}).strict(),MAt=t.object({select:Mz.optional(),include:jz.optional(),where:Nl}).strict(),ZAt=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),vAt=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),NK=t.object({select:vz.optional(),include:Zz.optional(),where:Wn.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),OAt=t.object({where:Wn.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fAt=t.object({where:Wn.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:rC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wAt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),NAt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),BAt=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),qAt=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),BK=t.object({select:fz.optional(),include:Oz.optional(),where:Un.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),FAt=t.object({where:Un.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DAt=t.object({where:Un.optional(),orderBy:t.union([NV.array(),NV]).optional(),by:pC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_At=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),EAt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),LAt=t.object({select:Ws.optional(),include:Ps.optional(),data:t.union([n0,i0])}).strict(),VAt=t.object({select:Ws.optional(),include:Ps.optional(),where:Ol,create:t.union([n0,i0]),update:t.union([l0,r0])}).strict(),HAt=t.object({data:t.union([QT,QT.array()]),skipDuplicates:t.boolean().optional()}).strict(),QAt=t.object({data:t.union([QT,QT.array()]),skipDuplicates:t.boolean().optional()}).strict(),YAt=t.object({select:Ws.optional(),include:Ps.optional(),where:Ol}).strict(),GAt=t.object({select:Ws.optional(),include:Ps.optional(),data:t.union([l0,r0]),where:Ol}).strict(),$At=t.object({data:t.union([p0,c0]),where:fe.optional(),limit:t.number().optional()}).strict(),JAt=t.object({data:t.union([p0,c0]),where:fe.optional(),limit:t.number().optional()}).strict(),KAt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),XAt=t.object({select:Rs.optional(),include:Us.optional(),data:t.union([u0,y0])}).strict(),tSt=t.object({select:Rs.optional(),include:Us.optional(),where:se,create:t.union([u0,y0]),update:t.union([s0,d0])}).strict(),eSt=t.object({data:t.union([YT,YT.array()]),skipDuplicates:t.boolean().optional()}).strict(),oSt=t.object({data:t.union([YT,YT.array()]),skipDuplicates:t.boolean().optional()}).strict(),aSt=t.object({select:Rs.optional(),include:Us.optional(),where:se}).strict(),nSt=t.object({select:Rs.optional(),include:Us.optional(),data:t.union([s0,d0]),where:se}).strict(),iSt=t.object({data:t.union([AN,z0]),where:Ga.optional(),limit:t.number().optional()}).strict(),lSt=t.object({data:t.union([AN,z0]),where:Ga.optional(),limit:t.number().optional()}).strict(),rSt=t.object({where:Ga.optional(),limit:t.number().optional()}).strict(),pSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([m0,h0])}).strict(),cSt=t.object({select:xs.optional(),include:ks.optional(),where:fl,create:t.union([m0,h0]),update:t.union([b0,I0])}).strict(),uSt=t.object({data:t.union([GT,GT.array()]),skipDuplicates:t.boolean().optional()}).strict(),ySt=t.object({data:t.union([GT,GT.array()]),skipDuplicates:t.boolean().optional()}).strict(),sSt=t.object({select:xs.optional(),include:ks.optional(),where:fl}).strict(),dSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([b0,I0]),where:fl}).strict(),zSt=t.object({data:t.union([g0,C0]),where:we.optional(),limit:t.number().optional()}).strict(),mSt=t.object({data:t.union([g0,C0]),where:we.optional(),limit:t.number().optional()}).strict(),hSt=t.object({where:we.optional(),limit:t.number().optional()}).strict(),bSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([A0,S0])}).strict(),ISt=t.object({select:Ms.optional(),include:js.optional(),where:de,create:t.union([A0,S0]),update:t.union([T0,P0])}).strict(),gSt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),CSt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),ASt=t.object({select:Ms.optional(),include:js.optional(),where:de}).strict(),SSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([T0,P0]),where:de}).strict(),TSt=t.object({data:t.union([SN,W0]),where:$a.optional(),limit:t.number().optional()}).strict(),PSt=t.object({data:t.union([SN,W0]),where:$a.optional(),limit:t.number().optional()}).strict(),WSt=t.object({where:$a.optional(),limit:t.number().optional()}).strict(),USt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([U0,R0])}).strict(),RSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze,create:t.union([U0,R0]),update:t.union([k0,x0])}).strict(),kSt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),xSt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),jSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),MSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([k0,x0]),where:ze}).strict(),ZSt=t.object({data:t.union([TN,j0]),where:Ja.optional(),limit:t.number().optional()}).strict(),vSt=t.object({data:t.union([TN,j0]),where:Ja.optional(),limit:t.number().optional()}).strict(),OSt=t.object({where:Ja.optional(),limit:t.number().optional()}).strict(),fSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([M0,Z0])}).strict(),wSt=t.object({select:fs.optional(),include:Os.optional(),where:me,create:t.union([M0,Z0]),update:t.union([v0,O0])}).strict(),NSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),BSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),qSt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),FSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([v0,O0]),where:me}).strict(),DSt=t.object({data:t.union([PN,f0]),where:Ka.optional(),limit:t.number().optional()}).strict(),_St=t.object({data:t.union([PN,f0]),where:Ka.optional(),limit:t.number().optional()}).strict(),ESt=t.object({where:Ka.optional(),limit:t.number().optional()}).strict(),LSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([w0,N0])}).strict(),VSt=t.object({select:Ns.optional(),include:ws.optional(),where:he,create:t.union([w0,N0]),update:t.union([B0,q0])}).strict(),HSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),QSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),YSt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),GSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([B0,q0]),where:he}).strict(),$St=t.object({data:t.union([WN,F0]),where:Xa.optional(),limit:t.number().optional()}).strict(),JSt=t.object({data:t.union([WN,F0]),where:Xa.optional(),limit:t.number().optional()}).strict(),KSt=t.object({where:Xa.optional(),limit:t.number().optional()}).strict(),XSt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([D0,_0])}).strict(),tTt=t.object({select:qs.optional(),include:Bs.optional(),where:st,create:t.union([D0,_0]),update:t.union([E0,L0])}).strict(),eTt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oTt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aTt=t.object({select:qs.optional(),include:Bs.optional(),where:st}).strict(),nTt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([E0,L0]),where:st}).strict(),iTt=t.object({data:t.union([Mj,V0]),where:tn.optional(),limit:t.number().optional()}).strict(),lTt=t.object({data:t.union([Mj,V0]),where:tn.optional(),limit:t.number().optional()}).strict(),rTt=t.object({where:tn.optional(),limit:t.number().optional()}).strict(),pTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([H0,Q0])}).strict(),cTt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t,create:t.union([H0,Q0]),update:t.union([Y0,G0])}).strict(),uTt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yTt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sTt=t.object({select:Ds.optional(),include:Fs.optional(),where:$t}).strict(),dTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([Y0,G0]),where:$t}).strict(),zTt=t.object({data:t.union([UN,$0]),where:Ze.optional(),limit:t.number().optional()}).strict(),mTt=t.object({data:t.union([UN,$0]),where:Ze.optional(),limit:t.number().optional()}).strict(),hTt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),bTt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([J0,K0])}).strict(),ITt=t.object({select:Es.optional(),include:_s.optional(),where:w,create:t.union([J0,K0]),update:t.union([X0,tY])}).strict(),gTt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),CTt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ATt=t.object({select:Es.optional(),include:_s.optional(),where:w}).strict(),STt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([X0,tY]),where:w}).strict(),TTt=t.object({data:t.union([bT,eY]),where:ee.optional(),limit:t.number().optional()}).strict(),PTt=t.object({data:t.union([bT,eY]),where:ee.optional(),limit:t.number().optional()}).strict(),WTt=t.object({where:ee.optional(),limit:t.number().optional()}).strict(),UTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([oY,aY])}).strict(),RTt=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt,create:t.union([oY,aY]),update:t.union([nY,iY])}).strict(),kTt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xTt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jTt=t.object({select:Vs.optional(),include:Ls.optional(),where:Lt}).strict(),MTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([nY,iY]),where:Lt}).strict(),ZTt=t.object({data:t.union([RN,lY]),where:ke.optional(),limit:t.number().optional()}).strict(),vTt=t.object({data:t.union([RN,lY]),where:ke.optional(),limit:t.number().optional()}).strict(),OTt=t.object({where:ke.optional(),limit:t.number().optional()}).strict(),fTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([rY,pY])}).strict(),wTt=t.object({select:Qs.optional(),include:Hs.optional(),where:B,create:t.union([rY,pY]),update:t.union([cY,uY])}).strict(),NTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qTt=t.object({select:Qs.optional(),include:Hs.optional(),where:B}).strict(),FTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([cY,uY]),where:B}).strict(),DTt=t.object({data:t.union([IT,yY]),where:en.optional(),limit:t.number().optional()}).strict(),_Tt=t.object({data:t.union([IT,yY]),where:en.optional(),limit:t.number().optional()}).strict(),ETt=t.object({where:en.optional(),limit:t.number().optional()}).strict(),LTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([sY,dY])}).strict(),VTt=t.object({select:Gs.optional(),include:Ys.optional(),where:be,create:t.union([sY,dY]),update:t.union([zY,mY])}).strict(),HTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YTt=t.object({select:Gs.optional(),include:Ys.optional(),where:be}).strict(),GTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([zY,mY]),where:be}).strict(),$Tt=t.object({data:t.union([kN,hY]),where:on.optional(),limit:t.number().optional()}).strict(),JTt=t.object({data:t.union([kN,hY]),where:on.optional(),limit:t.number().optional()}).strict(),KTt=t.object({where:on.optional(),limit:t.number().optional()}).strict(),XTt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([bY,IY])}).strict(),tPt=t.object({select:Js.optional(),include:$s.optional(),where:Vt,create:t.union([bY,IY]),update:t.union([gY,CY])}).strict(),ePt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oPt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aPt=t.object({select:Js.optional(),include:$s.optional(),where:Vt}).strict(),nPt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([gY,CY]),where:Vt}).strict(),iPt=t.object({data:t.union([xN,AY]),where:xe.optional(),limit:t.number().optional()}).strict(),lPt=t.object({data:t.union([xN,AY]),where:xe.optional(),limit:t.number().optional()}).strict(),rPt=t.object({where:xe.optional(),limit:t.number().optional()}).strict(),pPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([SY,TY])}).strict(),cPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt,create:t.union([SY,TY]),update:t.union([PY,WY])}).strict(),uPt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yPt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Jt}).strict(),dPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([PY,WY]),where:Jt}).strict(),zPt=t.object({data:t.union([jN,UY]),where:Le.optional(),limit:t.number().optional()}).strict(),mPt=t.object({data:t.union([jN,UY]),where:Le.optional(),limit:t.number().optional()}).strict(),hPt=t.object({where:Le.optional(),limit:t.number().optional()}).strict(),bPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([RY,kY])}).strict(),IPt=t.object({select:ed.optional(),include:td.optional(),where:ot,create:t.union([RY,kY]),update:t.union([xY,jY])}).strict(),gPt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),CPt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),APt=t.object({select:ed.optional(),include:td.optional(),where:ot}).strict(),SPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([xY,jY]),where:ot}).strict(),TPt=t.object({data:t.union([Zj,MY]),where:Ve.optional(),limit:t.number().optional()}).strict(),PPt=t.object({data:t.union([Zj,MY]),where:Ve.optional(),limit:t.number().optional()}).strict(),WPt=t.object({where:Ve.optional(),limit:t.number().optional()}).strict(),UPt=t.object({select:ad.optional(),include:od.optional(),data:t.union([ZY,vY])}).strict(),RPt=t.object({select:ad.optional(),include:od.optional(),where:dt,create:t.union([ZY,vY]),update:t.union([OY,fY])}).strict(),kPt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xPt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jPt=t.object({select:ad.optional(),include:od.optional(),where:dt}).strict(),MPt=t.object({select:ad.optional(),include:od.optional(),data:t.union([OY,fY]),where:dt}).strict(),ZPt=t.object({data:t.union([vj,wY]),where:an.optional(),limit:t.number().optional()}).strict(),vPt=t.object({data:t.union([vj,wY]),where:an.optional(),limit:t.number().optional()}).strict(),OPt=t.object({where:an.optional(),limit:t.number().optional()}).strict(),fPt=t.object({select:id.optional(),include:nd.optional(),data:t.union([NY,BY])}).strict(),wPt=t.object({select:id.optional(),include:nd.optional(),where:zt,create:t.union([NY,BY]),update:t.union([qY,FY])}).strict(),NPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qPt=t.object({select:id.optional(),include:nd.optional(),where:zt}).strict(),FPt=t.object({select:id.optional(),include:nd.optional(),data:t.union([qY,FY]),where:zt}).strict(),DPt=t.object({data:t.union([Oj,DY]),where:nn.optional(),limit:t.number().optional()}).strict(),_Pt=t.object({data:t.union([Oj,DY]),where:nn.optional(),limit:t.number().optional()}).strict(),EPt=t.object({where:nn.optional(),limit:t.number().optional()}).strict(),LPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([_Y,EY])}).strict(),VPt=t.object({select:rd.optional(),include:ld.optional(),where:q,create:t.union([_Y,EY]),update:t.union([LY,VY])}).strict(),HPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YPt=t.object({select:rd.optional(),include:ld.optional(),where:q}).strict(),GPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([LY,VY]),where:q}).strict(),$Pt=t.object({data:t.union([gT,HY]),where:ln.optional(),limit:t.number().optional()}).strict(),JPt=t.object({data:t.union([gT,HY]),where:ln.optional(),limit:t.number().optional()}).strict(),KPt=t.object({where:ln.optional(),limit:t.number().optional()}).strict(),XPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([QY,YY])}).strict(),tWt=t.object({select:cd.optional(),include:pd.optional(),where:at,create:t.union([QY,YY]),update:t.union([GY,$Y])}).strict(),eWt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oWt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aWt=t.object({select:cd.optional(),include:pd.optional(),where:at}).strict(),nWt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([GY,$Y]),where:at}).strict(),iWt=t.object({data:t.union([fj,JY]),where:ve.optional(),limit:t.number().optional()}).strict(),lWt=t.object({data:t.union([fj,JY]),where:ve.optional(),limit:t.number().optional()}).strict(),rWt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),pWt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([KY,XY])}).strict(),cWt=t.object({select:yd.optional(),include:ud.optional(),where:Ie,create:t.union([KY,XY]),update:t.union([tG,eG])}).strict(),uWt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yWt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sWt=t.object({select:yd.optional(),include:ud.optional(),where:Ie}).strict(),dWt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([tG,eG]),where:Ie}).strict(),zWt=t.object({data:t.union([MN,oG]),where:rn.optional(),limit:t.number().optional()}).strict(),mWt=t.object({data:t.union([MN,oG]),where:rn.optional(),limit:t.number().optional()}).strict(),hWt=t.object({where:rn.optional(),limit:t.number().optional()}).strict(),bWt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([aG,nG])}).strict(),IWt=t.object({select:dd.optional(),include:sd.optional(),where:F,create:t.union([aG,nG]),update:t.union([iG,lG])}).strict(),gWt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),CWt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),AWt=t.object({select:dd.optional(),include:sd.optional(),where:F}).strict(),SWt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([iG,lG]),where:F}).strict(),TWt=t.object({data:t.union([CT,rG]),where:pn.optional(),limit:t.number().optional()}).strict(),PWt=t.object({data:t.union([CT,rG]),where:pn.optional(),limit:t.number().optional()}).strict(),WWt=t.object({where:pn.optional(),limit:t.number().optional()}).strict(),UWt=t.object({select:md.optional(),include:zd.optional(),data:t.union([pG,cG])}).strict(),RWt=t.object({select:md.optional(),include:zd.optional(),where:D,create:t.union([pG,cG]),update:t.union([uG,yG])}).strict(),kWt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xWt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jWt=t.object({select:md.optional(),include:zd.optional(),where:D}).strict(),MWt=t.object({select:md.optional(),include:zd.optional(),data:t.union([uG,yG]),where:D}).strict(),ZWt=t.object({data:t.union([AT,sG]),where:cn.optional(),limit:t.number().optional()}).strict(),vWt=t.object({data:t.union([AT,sG]),where:cn.optional(),limit:t.number().optional()}).strict(),OWt=t.object({where:cn.optional(),limit:t.number().optional()}).strict(),fWt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([dG,zG])}).strict(),wWt=t.object({select:bd.optional(),include:hd.optional(),where:nt,create:t.union([dG,zG]),update:t.union([mG,hG])}).strict(),NWt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BWt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qWt=t.object({select:bd.optional(),include:hd.optional(),where:nt}).strict(),FWt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([mG,hG]),where:nt}).strict(),DWt=t.object({data:t.union([wj,bG]),where:He.optional(),limit:t.number().optional()}).strict(),_Wt=t.object({data:t.union([wj,bG]),where:He.optional(),limit:t.number().optional()}).strict(),EWt=t.object({where:He.optional(),limit:t.number().optional()}).strict(),LWt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([IG,gG])}).strict(),VWt=t.object({select:gd.optional(),include:Id.optional(),where:_,create:t.union([IG,gG]),update:t.union([CG,AG])}).strict(),HWt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QWt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YWt=t.object({select:gd.optional(),include:Id.optional(),where:_}).strict(),GWt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([CG,AG]),where:_}).strict(),$Wt=t.object({data:t.union([ST,SG]),where:un.optional(),limit:t.number().optional()}).strict(),JWt=t.object({data:t.union([ST,SG]),where:un.optional(),limit:t.number().optional()}).strict(),KWt=t.object({where:un.optional(),limit:t.number().optional()}).strict(),XWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([TG,PG])}).strict(),tUt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge,create:t.union([TG,PG]),update:t.union([WG,UG])}).strict(),eUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aUt=t.object({select:Ad.optional(),include:Cd.optional(),where:ge}).strict(),nUt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([WG,UG]),where:ge}).strict(),iUt=t.object({data:t.union([ZN,RG]),where:yn.optional(),limit:t.number().optional()}).strict(),lUt=t.object({data:t.union([ZN,RG]),where:yn.optional(),limit:t.number().optional()}).strict(),rUt=t.object({where:yn.optional(),limit:t.number().optional()}).strict(),pUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([kG,xG])}).strict(),cUt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce,create:t.union([kG,xG]),update:t.union([jG,MG])}).strict(),uUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sUt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),dUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([jG,MG]),where:Ce}).strict(),zUt=t.object({data:t.union([vN,ZG]),where:sn.optional(),limit:t.number().optional()}).strict(),mUt=t.object({data:t.union([vN,ZG]),where:sn.optional(),limit:t.number().optional()}).strict(),hUt=t.object({where:sn.optional(),limit:t.number().optional()}).strict(),bUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([vG,OG])}).strict(),IUt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae,create:t.union([vG,OG]),update:t.union([fG,wG])}).strict(),gUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),CUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),AUt=t.object({select:Wd.optional(),include:Pd.optional(),where:Ae}).strict(),SUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([fG,wG]),where:Ae}).strict(),TUt=t.object({data:t.union([ON,NG]),where:dn.optional(),limit:t.number().optional()}).strict(),PUt=t.object({data:t.union([ON,NG]),where:dn.optional(),limit:t.number().optional()}).strict(),WUt=t.object({where:dn.optional(),limit:t.number().optional()}).strict(),UUt=t.object({select:Rd.optional(),include:Ud.optional(),data:t.union([BG,qG])}).strict(),RUt=t.object({select:Rd.optional(),include:Ud.optional(),where:E,create:t.union([BG,qG]),update:t.union([FG,DG])}).strict(),kUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jUt=t.object({select:Rd.optional(),include:Ud.optional(),where:E}).strict(),MUt=t.object({select:Rd.optional(),include:Ud.optional(),data:t.union([FG,DG]),where:E}).strict(),ZUt=t.object({data:t.union([TT,_G]),where:zn.optional(),limit:t.number().optional()}).strict(),vUt=t.object({data:t.union([TT,_G]),where:zn.optional(),limit:t.number().optional()}).strict(),OUt=t.object({where:zn.optional(),limit:t.number().optional()}).strict(),fUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([EG,LG])}).strict(),wUt=t.object({select:xd.optional(),include:kd.optional(),where:Kr,create:t.union([EG,LG]),update:t.union([VG,HG])}).strict(),NUt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BUt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qUt=t.object({select:xd.optional(),include:kd.optional(),where:Kr}).strict(),FUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([VG,HG]),where:Kr}).strict(),DUt=t.object({data:t.union([QG,YG]),where:lo.optional(),limit:t.number().optional()}).strict(),_Ut=t.object({data:t.union([QG,YG]),where:lo.optional(),limit:t.number().optional()}).strict(),EUt=t.object({where:lo.optional(),limit:t.number().optional()}).strict(),LUt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([GG,$G])}).strict(),VUt=t.object({select:Md.optional(),include:jd.optional(),where:mt,create:t.union([GG,$G]),update:t.union([JG,KG])}).strict(),HUt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QUt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YUt=t.object({select:Md.optional(),include:jd.optional(),where:mt}).strict(),GUt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([JG,KG]),where:mt}).strict(),$Ut=t.object({data:t.union([Nj,XG]),where:mn.optional(),limit:t.number().optional()}).strict(),JUt=t.object({data:t.union([Nj,XG]),where:mn.optional(),limit:t.number().optional()}).strict(),KUt=t.object({where:mn.optional(),limit:t.number().optional()}).strict(),XUt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([t1,e1])}).strict(),tRt=t.object({select:vd.optional(),include:Zd.optional(),where:Se,create:t.union([t1,e1]),update:t.union([o1,a1])}).strict(),eRt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oRt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aRt=t.object({select:vd.optional(),include:Zd.optional(),where:Se}).strict(),nRt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([o1,a1]),where:Se}).strict(),iRt=t.object({data:t.union([fN,n1]),where:hn.optional(),limit:t.number().optional()}).strict(),lRt=t.object({data:t.union([fN,n1]),where:hn.optional(),limit:t.number().optional()}).strict(),rRt=t.object({where:hn.optional(),limit:t.number().optional()}).strict(),pRt=t.object({select:Bm.optional(),data:t.union([i1,l1])}).strict(),cRt=t.object({select:Bm.optional(),where:qm,create:t.union([i1,l1]),update:t.union([r1,p1])}).strict(),uRt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yRt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sRt=t.object({select:Bm.optional(),where:qm}).strict(),dRt=t.object({select:Bm.optional(),data:t.union([r1,p1]),where:qm}).strict(),zRt=t.object({data:t.union([c1,u1]),where:pl.optional(),limit:t.number().optional()}).strict(),mRt=t.object({data:t.union([c1,u1]),where:pl.optional(),limit:t.number().optional()}).strict(),hRt=t.object({where:pl.optional(),limit:t.number().optional()}).strict(),bRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([y1,s1])}).strict(),IRt=t.object({select:fd.optional(),include:Od.optional(),where:Rl,create:t.union([y1,s1]),update:t.union([d1,z1])}).strict(),gRt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),CRt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ARt=t.object({select:fd.optional(),include:Od.optional(),where:Rl}).strict(),SRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([d1,z1]),where:Rl}).strict(),TRt=t.object({data:t.union([m1,h1]),where:Re.optional(),limit:t.number().optional()}).strict(),PRt=t.object({data:t.union([m1,h1]),where:Re.optional(),limit:t.number().optional()}).strict(),WRt=t.object({where:Re.optional(),limit:t.number().optional()}).strict(),URt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([b1,I1])}).strict(),RRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha,create:t.union([b1,I1]),update:t.union([g1,C1])}).strict(),kRt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xRt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ha}).strict(),MRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([g1,C1]),where:Ha}).strict(),ZRt=t.object({data:t.union([A1,S1]),where:wt.optional(),limit:t.number().optional()}).strict(),vRt=t.object({data:t.union([A1,S1]),where:wt.optional(),limit:t.number().optional()}).strict(),ORt=t.object({where:wt.optional(),limit:t.number().optional()}).strict(),fRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([T1,P1])}).strict(),wRt=t.object({select:qd.optional(),include:Bd.optional(),where:J,create:t.union([T1,P1]),update:t.union([W1,U1])}).strict(),NRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qRt=t.object({select:qd.optional(),include:Bd.optional(),where:J}).strict(),FRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([W1,U1]),where:J}).strict(),DRt=t.object({data:t.union([wN,R1]),where:N.optional(),limit:t.number().optional()}).strict(),_Rt=t.object({data:t.union([wN,R1]),where:N.optional(),limit:t.number().optional()}).strict(),ERt=t.object({where:N.optional(),limit:t.number().optional()}).strict(),LRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([k1,x1])}).strict(),VRt=t.object({select:Dd.optional(),include:Fd.optional(),where:j,create:t.union([k1,x1]),update:t.union([j1,M1])}).strict(),HRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YRt=t.object({select:Dd.optional(),include:Fd.optional(),where:j}).strict(),GRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([j1,M1]),where:j}).strict(),$Rt=t.object({data:t.union([Bj,Z1]),where:Z.optional(),limit:t.number().optional()}).strict(),JRt=t.object({data:t.union([Bj,Z1]),where:Z.optional(),limit:t.number().optional()}).strict(),KRt=t.object({where:Z.optional(),limit:t.number().optional()}).strict(),XRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([v1,O1])}).strict(),tkt=t.object({select:Ed.optional(),include:_d.optional(),where:Te,create:t.union([v1,O1]),update:t.union([f1,w1])}).strict(),ekt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),okt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),akt=t.object({select:Ed.optional(),include:_d.optional(),where:Te}).strict(),nkt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([f1,w1]),where:Te}).strict(),ikt=t.object({data:t.union([NN,N1]),where:bn.optional(),limit:t.number().optional()}).strict(),lkt=t.object({data:t.union([NN,N1]),where:bn.optional(),limit:t.number().optional()}).strict(),rkt=t.object({where:bn.optional(),limit:t.number().optional()}).strict(),pkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([B1,q1])}).strict(),ckt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt,create:t.union([B1,q1]),update:t.union([F1,D1])}).strict(),ukt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ykt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),skt=t.object({select:Vd.optional(),include:Ld.optional(),where:Kt}).strict(),dkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([F1,D1]),where:Kt}).strict(),zkt=t.object({data:t.union([BN,_1]),where:Qe.optional(),limit:t.number().optional()}).strict(),mkt=t.object({data:t.union([BN,_1]),where:Qe.optional(),limit:t.number().optional()}).strict(),hkt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),bkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([E1,L1])}).strict(),Ikt=t.object({select:Qd.optional(),include:Hd.optional(),where:g,create:t.union([E1,L1]),update:t.union([V1,H1])}).strict(),gkt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ckt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Akt=t.object({select:Qd.optional(),include:Hd.optional(),where:g}).strict(),Skt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([V1,H1]),where:g}).strict(),Tkt=t.object({data:t.union([bI,Q1]),where:v.optional(),limit:t.number().optional()}).strict(),Pkt=t.object({data:t.union([bI,Q1]),where:v.optional(),limit:t.number().optional()}).strict(),Wkt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),Ukt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([Y1,G1])}).strict(),Rkt=t.object({select:Gd.optional(),include:Yd.optional(),where:G,create:t.union([Y1,G1]),update:t.union([$1,J1])}).strict(),kkt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xkt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jkt=t.object({select:Gd.optional(),include:Yd.optional(),where:G}).strict(),Mkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([$1,J1]),where:G}).strict(),Zkt=t.object({data:t.union([qj,K1]),where:Ut.optional(),limit:t.number().optional()}).strict(),vkt=t.object({data:t.union([qj,K1]),where:Ut.optional(),limit:t.number().optional()}).strict(),Okt=t.object({where:Ut.optional(),limit:t.number().optional()}).strict(),fkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([X1,t9])}).strict(),wkt=t.object({select:Jd.optional(),include:$d.optional(),where:L,create:t.union([X1,t9]),update:t.union([e9,o9])}).strict(),Nkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Bkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qkt=t.object({select:Jd.optional(),include:$d.optional(),where:L}).strict(),Fkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([e9,o9]),where:L}).strict(),Dkt=t.object({data:t.union([PT,a9]),where:In.optional(),limit:t.number().optional()}).strict(),_kt=t.object({data:t.union([PT,a9]),where:In.optional(),limit:t.number().optional()}).strict(),Ekt=t.object({where:In.optional(),limit:t.number().optional()}).strict(),Lkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([n9,i9])}).strict(),Vkt=t.object({select:Xd.optional(),include:Kd.optional(),where:it,create:t.union([n9,i9]),update:t.union([l9,r9])}).strict(),Hkt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Qkt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ykt=t.object({select:Xd.optional(),include:Kd.optional(),where:it}).strict(),Gkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([l9,r9]),where:it}).strict(),$kt=t.object({data:t.union([Fj,p9]),where:Oe.optional(),limit:t.number().optional()}).strict(),Jkt=t.object({data:t.union([Fj,p9]),where:Oe.optional(),limit:t.number().optional()}).strict(),Kkt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),Xkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([c9,u9])}).strict(),txt=t.object({select:ez.optional(),include:tz.optional(),where:f,create:t.union([c9,u9]),update:t.union([y9,s9])}).strict(),ext=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oxt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),axt=t.object({select:ez.optional(),include:tz.optional(),where:f}).strict(),nxt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([y9,s9]),where:f}).strict(),ixt=t.object({data:t.union([WT,d9]),where:oe.optional(),limit:t.number().optional()}).strict(),lxt=t.object({data:t.union([WT,d9]),where:oe.optional(),limit:t.number().optional()}).strict(),rxt=t.object({where:oe.optional(),limit:t.number().optional()}).strict(),pxt=t.object({select:az.optional(),include:oz.optional(),data:t.union([z9,m9])}).strict(),cxt=t.object({select:az.optional(),include:oz.optional(),where:V,create:t.union([z9,m9]),update:t.union([h9,b9])}).strict(),uxt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yxt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sxt=t.object({select:az.optional(),include:oz.optional(),where:V}).strict(),dxt=t.object({select:az.optional(),include:oz.optional(),data:t.union([h9,b9]),where:V}).strict(),zxt=t.object({data:t.union([UT,I9]),where:gn.optional(),limit:t.number().optional()}).strict(),mxt=t.object({data:t.union([UT,I9]),where:gn.optional(),limit:t.number().optional()}).strict(),hxt=t.object({where:gn.optional(),limit:t.number().optional()}).strict(),bxt=t.object({select:iz.optional(),include:nz.optional(),data:t.union([g9,C9])}).strict(),Ixt=t.object({select:iz.optional(),include:nz.optional(),where:lt,create:t.union([g9,C9]),update:t.union([A9,S9])}).strict(),gxt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Cxt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Axt=t.object({select:iz.optional(),include:nz.optional(),where:lt}).strict(),Sxt=t.object({select:iz.optional(),include:nz.optional(),data:t.union([A9,S9]),where:lt}).strict(),Txt=t.object({data:t.union([Dj,T9]),where:Ye.optional(),limit:t.number().optional()}).strict(),Pxt=t.object({data:t.union([Dj,T9]),where:Ye.optional(),limit:t.number().optional()}).strict(),Wxt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),Uxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([P9,W9])}).strict(),Rxt=t.object({select:rz.optional(),include:lz.optional(),where:ht,create:t.union([P9,W9]),update:t.union([U9,R9])}).strict(),kxt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xxt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jxt=t.object({select:rz.optional(),include:lz.optional(),where:ht}).strict(),Mxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([U9,R9]),where:ht}).strict(),Zxt=t.object({data:t.union([_j,k9]),where:Cn.optional(),limit:t.number().optional()}).strict(),vxt=t.object({data:t.union([_j,k9]),where:Cn.optional(),limit:t.number().optional()}).strict(),Oxt=t.object({where:Cn.optional(),limit:t.number().optional()}).strict(),fxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([x9,j9])}).strict(),wxt=t.object({select:cz.optional(),include:pz.optional(),where:wl,create:t.union([x9,j9]),update:t.union([M9,Z9])}).strict(),Nxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Bxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qxt=t.object({select:cz.optional(),include:pz.optional(),where:wl}).strict(),Fxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([M9,Z9]),where:wl}).strict(),Dxt=t.object({data:t.union([v9,O9]),where:Ne.optional(),limit:t.number().optional()}).strict(),_xt=t.object({data:t.union([v9,O9]),where:Ne.optional(),limit:t.number().optional()}).strict(),Ext=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),Lxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([f9,w9])}).strict(),Vxt=t.object({select:yz.optional(),include:uz.optional(),where:rt,create:t.union([f9,w9]),update:t.union([N9,B9])}).strict(),Hxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Qxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Yxt=t.object({select:yz.optional(),include:uz.optional(),where:rt}).strict(),Gxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([N9,B9]),where:rt}).strict(),$xt=t.object({data:t.union([Ej,q9]),where:Ge.optional(),limit:t.number().optional()}).strict(),Jxt=t.object({data:t.union([Ej,q9]),where:Ge.optional(),limit:t.number().optional()}).strict(),Kxt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),Xxt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([F9,D9])}).strict(),tjt=t.object({select:dz.optional(),include:sz.optional(),where:bt,create:t.union([F9,D9]),update:t.union([_9,E9])}).strict(),ejt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),ojt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),ajt=t.object({select:dz.optional(),include:sz.optional(),where:bt}).strict(),njt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([_9,E9]),where:bt}).strict(),ijt=t.object({data:t.union([Lj,L9]),where:An.optional(),limit:t.number().optional()}).strict(),ljt=t.object({data:t.union([Lj,L9]),where:An.optional(),limit:t.number().optional()}).strict(),rjt=t.object({where:An.optional(),limit:t.number().optional()}).strict(),pjt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([V9,H9])}).strict(),cjt=t.object({select:mz.optional(),include:zz.optional(),where:Ht,create:t.union([V9,H9]),update:t.union([Q9,Y9])}).strict(),ujt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yjt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sjt=t.object({select:mz.optional(),include:zz.optional(),where:Ht}).strict(),djt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([Q9,Y9]),where:Ht}).strict(),zjt=t.object({data:t.union([qN,G9]),where:je.optional(),limit:t.number().optional()}).strict(),mjt=t.object({data:t.union([qN,G9]),where:je.optional(),limit:t.number().optional()}).strict(),hjt=t.object({where:je.optional(),limit:t.number().optional()}).strict(),bjt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([$9,J9])}).strict(),Ijt=t.object({select:bz.optional(),include:hz.optional(),where:Xt,create:t.union([$9,J9]),update:t.union([K9,X9])}).strict(),gjt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Cjt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ajt=t.object({select:bz.optional(),include:hz.optional(),where:Xt}).strict(),Sjt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([K9,X9]),where:Xt}).strict(),Tjt=t.object({data:t.union([FN,t$]),where:$e.optional(),limit:t.number().optional()}).strict(),Pjt=t.object({data:t.union([FN,t$]),where:$e.optional(),limit:t.number().optional()}).strict(),Wjt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),Ujt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([e$,o$])}).strict(),Rjt=t.object({select:gz.optional(),include:Iz.optional(),where:te,create:t.union([e$,o$]),update:t.union([a$,n$])}).strict(),kjt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xjt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jjt=t.object({select:gz.optional(),include:Iz.optional(),where:te}).strict(),Mjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([a$,n$]),where:te}).strict(),Zjt=t.object({data:t.union([DN,i$]),where:Je.optional(),limit:t.number().optional()}).strict(),vjt=t.object({data:t.union([DN,i$]),where:Je.optional(),limit:t.number().optional()}).strict(),Ojt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),fjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([l$,r$])}).strict(),wjt=t.object({select:Az.optional(),include:Cz.optional(),where:H,create:t.union([l$,r$]),update:t.union([p$,c$])}).strict(),Njt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Bjt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qjt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),Fjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([p$,c$]),where:H}).strict(),Djt=t.object({data:t.union([RT,u$]),where:Sn.optional(),limit:t.number().optional()}).strict(),_jt=t.object({data:t.union([RT,u$]),where:Sn.optional(),limit:t.number().optional()}).strict(),Ejt=t.object({where:Sn.optional(),limit:t.number().optional()}).strict(),Ljt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([y$,s$])}).strict(),Vjt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe,create:t.union([y$,s$]),update:t.union([d$,z$])}).strict(),Hjt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Qjt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Yjt=t.object({select:Tz.optional(),include:Sz.optional(),where:Pe}).strict(),Gjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([d$,z$]),where:Pe}).strict(),$jt=t.object({data:t.union([_N,m$]),where:Tn.optional(),limit:t.number().optional()}).strict(),Jjt=t.object({data:t.union([_N,m$]),where:Tn.optional(),limit:t.number().optional()}).strict(),Kjt=t.object({where:Tn.optional(),limit:t.number().optional()}).strict(),Xjt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([h$,b$])}).strict(),tMt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt,create:t.union([h$,b$]),update:t.union([I$,g$])}).strict(),eMt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),oMt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aMt=t.object({select:Wz.optional(),include:Pz.optional(),where:Qt}).strict(),nMt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([I$,g$]),where:Qt}).strict(),iMt=t.object({data:t.union([EN,C$]),where:Me.optional(),limit:t.number().optional()}).strict(),lMt=t.object({data:t.union([EN,C$]),where:Me.optional(),limit:t.number().optional()}).strict(),rMt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),pMt=t.object({select:Rz.optional(),include:Uz.optional(),data:t.union([A$,S$])}).strict(),cMt=t.object({select:Rz.optional(),include:Uz.optional(),where:It,create:t.union([A$,S$]),update:t.union([T$,P$])}).strict(),uMt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yMt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),sMt=t.object({select:Rz.optional(),include:Uz.optional(),where:It}).strict(),dMt=t.object({select:Rz.optional(),include:Uz.optional(),data:t.union([T$,P$]),where:It}).strict(),zMt=t.object({data:t.union([Vj,W$]),where:Pn.optional(),limit:t.number().optional()}).strict(),mMt=t.object({data:t.union([Vj,W$]),where:Pn.optional(),limit:t.number().optional()}).strict(),hMt=t.object({where:Pn.optional(),limit:t.number().optional()}).strict(),bMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([U$,R$])}).strict(),IMt=t.object({select:xz.optional(),include:kz.optional(),where:k,create:t.union([U$,R$]),update:t.union([k$,x$])}).strict(),gMt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),CMt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),AMt=t.object({select:xz.optional(),include:kz.optional(),where:k}).strict(),SMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([k$,x$]),where:k}).strict(),TMt=t.object({data:t.union([uS,j$]),where:gt.optional(),limit:t.number().optional()}).strict(),PMt=t.object({data:t.union([uS,j$]),where:gt.optional(),limit:t.number().optional()}).strict(),WMt=t.object({where:gt.optional(),limit:t.number().optional()}).strict(),UMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([M$,Z$])}).strict(),RMt=t.object({select:Mz.optional(),include:jz.optional(),where:Nl,create:t.union([M$,Z$]),update:t.union([v$,O$])}).strict(),kMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),xMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jMt=t.object({select:Mz.optional(),include:jz.optional(),where:Nl}).strict(),MMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([v$,O$]),where:Nl}).strict(),ZMt=t.object({data:t.union([f$,w$]),where:Be.optional(),limit:t.number().optional()}).strict(),vMt=t.object({data:t.union([f$,w$]),where:Be.optional(),limit:t.number().optional()}).strict(),OMt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),fMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([N$,B$])}).strict(),wMt=t.object({select:vz.optional(),include:Zz.optional(),where:We,create:t.union([N$,B$]),update:t.union([q$,F$])}).strict(),NMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),BMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qMt=t.object({select:vz.optional(),include:Zz.optional(),where:We}).strict(),FMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([q$,F$]),where:We}).strict(),DMt=t.object({data:t.union([LN,D$]),where:Wn.optional(),limit:t.number().optional()}).strict(),_Mt=t.object({data:t.union([LN,D$]),where:Wn.optional(),limit:t.number().optional()}).strict(),EMt=t.object({where:Wn.optional(),limit:t.number().optional()}).strict(),LMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([_$,E$])}).strict(),VMt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue,create:t.union([_$,E$]),update:t.union([L$,V$])}).strict(),HMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),QMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YMt=t.object({select:fz.optional(),include:Oz.optional(),where:Ue}).strict(),GMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([L$,V$]),where:Ue}).strict(),$Mt=t.object({data:t.union([VN,H$]),where:Un.optional(),limit:t.number().optional()}).strict(),JMt=t.object({data:t.union([VN,H$]),where:Un.optional(),limit:t.number().optional()}).strict(),KMt=t.object({where:Un.optional(),limit:t.number().optional()}).strict();exports.zodSchemas=Jyt;Object.keys(client).forEach(function(k){if(k!=='default'&&!Object.prototype.hasOwnProperty.call(exports,k))Object.defineProperty(exports,k,{enumerable:true,get:function(){return client[k]}})});