'use strict';var client=require('@prisma/client');var ust=Object.defineProperty;var yst=(c,i)=>{for(var p in i)ust(c,p,{get:i[p],enumerable:true});};var cst={};yst(cst,{AllergenAggregateArgsSchema:()=>TIt,AllergenArgsSchema:()=>FQ,AllergenAvgOrderByAggregateInputSchema:()=>Oot,AllergenCountOrderByAggregateInputSchema:()=>vot,AllergenCountOutputTypeArgsSchema:()=>DQ,AllergenCountOutputTypeSelectSchema:()=>IX,AllergenCreateArgsSchema:()=>QWt,AllergenCreateInputSchema:()=>JG,AllergenCreateManyAndReturnArgsSchema:()=>$Wt,AllergenCreateManyArgsSchema:()=>GWt,AllergenCreateManyInputSchema:()=>kP,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>Z2,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>L6,AllergenCreateWithoutIngredientsInputSchema:()=>Ov,AllergenDeleteArgsSchema:()=>JWt,AllergenDeleteManyArgsSchema:()=>eRt,AllergenFindFirstArgsSchema:()=>CIt,AllergenFindFirstOrThrowArgsSchema:()=>AIt,AllergenFindManyArgsSchema:()=>SIt,AllergenFindUniqueArgsSchema:()=>UIt,AllergenFindUniqueOrThrowArgsSchema:()=>WIt,AllergenGroupByArgsSchema:()=>PIt,AllergenIncludeSchema:()=>Zd,AllergenMaxOrderByAggregateInputSchema:()=>fot,AllergenMinOrderByAggregateInputSchema:()=>wot,AllergenOrderByWithAggregationInputSchema:()=>zV,AllergenOrderByWithRelationInputSchema:()=>vm,AllergenScalarFieldEnumSchema:()=>fg,AllergenScalarRelationFilterSchema:()=>z4,AllergenScalarWhereWithAggregatesInputSchema:()=>cA,AllergenSchema:()=>Jdt,AllergenSelectSchema:()=>vd,AllergenSumOrderByAggregateInputSchema:()=>Not,AllergenUncheckedCreateInputSchema:()=>KG,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>fv,AllergenUncheckedUpdateInputSchema:()=>t1,AllergenUncheckedUpdateManyInputSchema:()=>o1,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>t_,AllergenUpdateArgsSchema:()=>KWt,AllergenUpdateInputSchema:()=>XG,AllergenUpdateManyAndReturnArgsSchema:()=>tRt,AllergenUpdateManyArgsSchema:()=>XWt,AllergenUpdateManyMutationInputSchema:()=>e1,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>O2,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Fpt,AllergenUpdateWithoutIngredientsInputSchema:()=>XE,AllergenUpsertArgsSchema:()=>YWt,AllergenUpsertWithoutIngredientsInputSchema:()=>qpt,AllergenWhereInputSchema:()=>co,AllergenWhereUniqueInputSchema:()=>op,AvailabilityAggregateArgsSchema:()=>aIt,AvailabilityArgsSchema:()=>Vzt,AvailabilityAvgOrderByAggregateInputSchema:()=>hot,AvailabilityCountOrderByAggregateInputSchema:()=>bot,AvailabilityCreateArgsSchema:()=>CWt,AvailabilityCreateInputSchema:()=>wG,AvailabilityCreateManyAndReturnArgsSchema:()=>TWt,AvailabilityCreateManyArgsSchema:()=>SWt,AvailabilityCreateManyInputSchema:()=>UP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>AO,AvailabilityCreateManyUserInputSchema:()=>jH,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>ni,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>hh,AvailabilityCreateWithoutUserInputSchema:()=>Su,AvailabilityDeleteArgsSchema:()=>PWt,AvailabilityDeleteManyArgsSchema:()=>kWt,AvailabilityFindFirstArgsSchema:()=>oIt,AvailabilityFindFirstOrThrowArgsSchema:()=>nIt,AvailabilityFindManyArgsSchema:()=>wK,AvailabilityFindUniqueArgsSchema:()=>lIt,AvailabilityFindUniqueOrThrowArgsSchema:()=>rIt,AvailabilityGroupByArgsSchema:()=>iIt,AvailabilityIncludeSchema:()=>Wd,AvailabilityListRelationFilterSchema:()=>j4,AvailabilityMaxOrderByAggregateInputSchema:()=>Iot,AvailabilityMinOrderByAggregateInputSchema:()=>got,AvailabilityOrderByRelationAggregateInputSchema:()=>Tnt,AvailabilityOrderByWithAggregationInputSchema:()=>yV,AvailabilityOrderByWithRelationInputSchema:()=>db,AvailabilityScalarFieldEnumSchema:()=>Zg,AvailabilityScalarWhereInputSchema:()=>Rp,AvailabilityScalarWhereWithAggregatesInputSchema:()=>lA,AvailabilitySchema:()=>Ydt,AvailabilitySelectSchema:()=>Rd,AvailabilitySumOrderByAggregateInputSchema:()=>Cot,AvailabilityUncheckedCreateInputSchema:()=>NG,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>Ai,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>Tu,AvailabilityUncheckedUpdateInputSchema:()=>qG,AvailabilityUncheckedUpdateManyInputSchema:()=>FG,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>lyt,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>il,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>g7,AvailabilityUpdateArgsSchema:()=>UWt,AvailabilityUpdateInputSchema:()=>BG,AvailabilityUpdateManyAndReturnArgsSchema:()=>RWt,AvailabilityUpdateManyArgsSchema:()=>WWt,AvailabilityUpdateManyMutationInputSchema:()=>qN,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>TR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>Di,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>SR,AvailabilityUpdateWithoutUserInputSchema:()=>I7,AvailabilityUpsertArgsSchema:()=>AWt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>AR,AvailabilityWhereInputSchema:()=>Ia,AvailabilityWhereUniqueInputSchema:()=>Te,BoolFieldUpdateOperationsInputSchema:()=>s,BoolFilterSchema:()=>mt,BoolWithAggregatesFilterSchema:()=>Jn,CategorySchema:()=>U,ChecklistCompleteAggregateArgsSchema:()=>Hbt,ChecklistCompleteArgsSchema:()=>vQ,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>yet,ChecklistCompleteCountOrderByAggregateInputSchema:()=>uet,ChecklistCompleteCountOutputTypeArgsSchema:()=>OQ,ChecklistCompleteCountOutputTypeSelectSchema:()=>zX,ChecklistCompleteCreateArgsSchema:()=>xPt,ChecklistCompleteCreateInputSchema:()=>fY,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>ZPt,ChecklistCompleteCreateManyArgsSchema:()=>MPt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>WZ,ChecklistCompleteCreateManyChecklistInputSchema:()=>KV,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>PO,ChecklistCompleteCreateManyCompletedByInputSchema:()=>vH,ChecklistCompleteCreateManyInputSchema:()=>zP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>VB,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>li,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>T2,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>wb,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>Ch,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>g6,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>lc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>ku,ChecklistCompleteCreateWithoutItemsInputSchema:()=>fZ,ChecklistCompleteDeleteArgsSchema:()=>vPt,ChecklistCompleteDeleteManyArgsSchema:()=>NPt,ChecklistCompleteFindFirstArgsSchema:()=>Lbt,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>Vbt,ChecklistCompleteFindManyArgsSchema:()=>Jw,ChecklistCompleteFindUniqueArgsSchema:()=>Ybt,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>Gbt,ChecklistCompleteGroupByArgsSchema:()=>Qbt,ChecklistCompleteIncludeSchema:()=>ad,ChecklistCompleteListRelationFilterSchema:()=>oM,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>set,ChecklistCompleteMinOrderByAggregateInputSchema:()=>det,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>i4,ChecklistCompleteOrderByWithAggregationInputSchema:()=>tV,ChecklistCompleteOrderByWithRelationInputSchema:()=>jm,ChecklistCompleteScalarFieldEnumSchema:()=>Ag,ChecklistCompleteScalarRelationFilterSchema:()=>r4,ChecklistCompleteScalarWhereInputSchema:()=>gl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>GC,ChecklistCompleteSchema:()=>Ndt,ChecklistCompleteSelectSchema:()=>id,ChecklistCompleteSumOrderByAggregateInputSchema:()=>zet,ChecklistCompleteUncheckedCreateInputSchema:()=>wY,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>QB,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Pi,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>rc,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>xu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>wZ,ChecklistCompleteUncheckedUpdateInputSchema:()=>BY,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>qY,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>Uut,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>KB,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>cyt,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>pl,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>n8,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>U7,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>aE,ChecklistCompleteUpdateArgsSchema:()=>OPt,ChecklistCompleteUpdateInputSchema:()=>NY,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>wPt,ChecklistCompleteUpdateManyArgsSchema:()=>fPt,ChecklistCompleteUpdateManyMutationInputSchema:()=>Bj,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>WU,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>ZR,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>$B,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Li,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>U2,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Lrt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>UU,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>MR,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>o8,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>P7,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>nE,ChecklistCompleteUpsertArgsSchema:()=>jPt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>PU,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>jR,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>_rt,ChecklistCompleteWhereInputSchema:()=>Ye,ChecklistCompleteWhereUniqueInputSchema:()=>it,ChecklistFrequencySchema:()=>Ft,ChecklistItemAggregateArgsSchema:()=>Fbt,ChecklistItemArgsSchema:()=>MQ,ChecklistItemAvgOrderByAggregateInputSchema:()=>aet,ChecklistItemCompleteAggregateArgsSchema:()=>Kbt,ChecklistItemCompleteArgsSchema:()=>Nzt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>bet,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>met,ChecklistItemCompleteCreateArgsSchema:()=>BPt,ChecklistItemCompleteCreateInputSchema:()=>FY,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>DPt,ChecklistItemCompleteCreateManyArgsSchema:()=>FPt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>OZ,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>tH,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>xZ,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>XV,ChecklistItemCompleteCreateManyInputSchema:()=>mP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>eq,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>I2,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>Bb,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>Nb,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>uc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>pc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Vm,ChecklistItemCompleteDeleteArgsSchema:()=>EPt,ChecklistItemCompleteDeleteManyArgsSchema:()=>HPt,ChecklistItemCompleteFindFirstArgsSchema:()=>$bt,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>Jbt,ChecklistItemCompleteFindManyArgsSchema:()=>Kw,ChecklistItemCompleteFindUniqueArgsSchema:()=>tht,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>eht,ChecklistItemCompleteGroupByArgsSchema:()=>Xbt,ChecklistItemCompleteIncludeSchema:()=>ld,ChecklistItemCompleteListRelationFilterSchema:()=>aM,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>het,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>Iet,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>l4,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>eV,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>ib,ChecklistItemCompleteScalarFieldEnumSchema:()=>Sg,ChecklistItemCompleteScalarWhereInputSchema:()=>Cl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>$C,ChecklistItemCompleteSchema:()=>Bdt,ChecklistItemCompleteSelectSchema:()=>rd,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>get,ChecklistItemCompleteUncheckedCreateInputSchema:()=>DY,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>oq,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>g2,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>yc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>cc,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>_Y,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>LY,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Rut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>lq,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>Wut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>S2,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>r8,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>i8,ChecklistItemCompleteUpdateArgsSchema:()=>_Pt,ChecklistItemCompleteUpdateInputSchema:()=>EY,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>VPt,ChecklistItemCompleteUpdateManyArgsSchema:()=>LPt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>qj,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>ZU,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>xU,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>iq,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>A2,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>MU,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>kU,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>l8,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>a8,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>Dz,ChecklistItemCompleteUpsertArgsSchema:()=>qPt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>jU,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>RU,ChecklistItemCompleteWhereInputSchema:()=>ua,ChecklistItemCompleteWhereUniqueInputSchema:()=>It,ChecklistItemCountOrderByAggregateInputSchema:()=>net,ChecklistItemCountOutputTypeArgsSchema:()=>ZQ,ChecklistItemCountOutputTypeSelectSchema:()=>dX,ChecklistItemCreateArgsSchema:()=>CPt,ChecklistItemCreateInputSchema:()=>jY,ChecklistItemCreateManyAndReturnArgsSchema:()=>TPt,ChecklistItemCreateManyArgsSchema:()=>SPt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>UZ,ChecklistItemCreateManyChecklistInputSchema:()=>JV,ChecklistItemCreateManyInputSchema:()=>dP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>LB,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>P2,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>fb,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>C6,ChecklistItemCreateWithoutChecklistInputSchema:()=>ac,ChecklistItemCreateWithoutCompletionsInputSchema:()=>NZ,ChecklistItemDeleteArgsSchema:()=>PPt,ChecklistItemDeleteManyArgsSchema:()=>kPt,ChecklistItemFindFirstArgsSchema:()=>Bbt,ChecklistItemFindFirstOrThrowArgsSchema:()=>qbt,ChecklistItemFindManyArgsSchema:()=>vK,ChecklistItemFindUniqueArgsSchema:()=>Ebt,ChecklistItemFindUniqueOrThrowArgsSchema:()=>_bt,ChecklistItemGroupByArgsSchema:()=>Dbt,ChecklistItemIncludeSchema:()=>od,ChecklistItemListRelationFilterSchema:()=>a4,ChecklistItemMaxOrderByAggregateInputSchema:()=>iet,ChecklistItemMinOrderByAggregateInputSchema:()=>ret,ChecklistItemOrderByRelationAggregateInputSchema:()=>$tt,ChecklistItemOrderByWithAggregationInputSchema:()=>XL,ChecklistItemOrderByWithRelationInputSchema:()=>xm,ChecklistItemScalarFieldEnumSchema:()=>Cg,ChecklistItemScalarRelationFilterSchema:()=>p4,ChecklistItemScalarWhereInputSchema:()=>Ip,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>YC,ChecklistItemSchema:()=>wdt,ChecklistItemSelectSchema:()=>nd,ChecklistItemSumOrderByAggregateInputSchema:()=>pet,ChecklistItemTypeSchema:()=>Vt,ChecklistItemUncheckedCreateInputSchema:()=>MY,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>HB,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>ic,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>BZ,ChecklistItemUncheckedUpdateInputSchema:()=>vY,ChecklistItemUncheckedUpdateManyInputSchema:()=>OY,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>Put,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>JB,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>e8,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>lE,ChecklistItemUpdateArgsSchema:()=>UPt,ChecklistItemUpdateInputSchema:()=>ZY,ChecklistItemUpdateManyAndReturnArgsSchema:()=>RPt,ChecklistItemUpdateManyArgsSchema:()=>WPt,ChecklistItemUpdateManyMutationInputSchema:()=>wN,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>TU,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>GB,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>W2,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Hrt,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>SU,ChecklistItemUpdateWithoutChecklistInputSchema:()=>t8,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>iE,ChecklistItemUpsertArgsSchema:()=>APt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>AU,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>Vrt,ChecklistItemWhereInputSchema:()=>Qe,ChecklistItemWhereUniqueInputSchema:()=>ee,ChecklistStatusSchema:()=>Lt,ConstraintTypeSchema:()=>ye,CookBookAggregateArgsSchema:()=>Wgt,CookBookArgsSchema:()=>HQ,CookBookAvgOrderByAggregateInputSchema:()=>Nnt,CookBookCountOrderByAggregateInputSchema:()=>wnt,CookBookCountOutputTypeArgsSchema:()=>QQ,CookBookCountOutputTypeSelectSchema:()=>TX,CookBookCreateArgsSchema:()=>Ckt,CookBookCreateInputSchema:()=>H1,CookBookCreateManyAndReturnArgsSchema:()=>Tkt,CookBookCreateManyArgsSchema:()=>Skt,CookBookCreateManyInputSchema:()=>NP,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>Yv,CookBookCreateManyRestaurantInputSchema:()=>uH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>Ll,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>yo,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>e3,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>Jb,CookBookCreateWithoutRecipesInputSchema:()=>NO,CookBookCreateWithoutRestaurantInputSchema:()=>wc,CookBookDeleteArgsSchema:()=>Pkt,CookBookDeleteManyArgsSchema:()=>kkt,CookBookFindFirstArgsSchema:()=>Pgt,CookBookFindFirstOrThrowArgsSchema:()=>Ugt,CookBookFindManyArgsSchema:()=>DK,CookBookFindUniqueArgsSchema:()=>kgt,CookBookFindUniqueOrThrowArgsSchema:()=>xgt,CookBookGroupByArgsSchema:()=>Rgt,CookBookIncludeSchema:()=>Yd,CookBookListRelationFilterSchema:()=>g4,CookBookMaxOrderByAggregateInputSchema:()=>Bnt,CookBookMinOrderByAggregateInputSchema:()=>qnt,CookBookOrderByRelationAggregateInputSchema:()=>ynt,CookBookOrderByWithAggregationInputSchema:()=>TV,CookBookOrderByWithRelationInputSchema:()=>Om,CookBookScalarFieldEnumSchema:()=>Lg,CookBookScalarRelationFilterSchema:()=>Z4,CookBookScalarWhereInputSchema:()=>Cp,CookBookScalarWhereWithAggregatesInputSchema:()=>IA,CookBookSchema:()=>lzt,CookBookSelectSchema:()=>Gd,CookBookSumOrderByAggregateInputSchema:()=>Fnt,CookBookUncheckedCreateInputSchema:()=>Q1,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>BO,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,CookBookUncheckedUpdateInputSchema:()=>G1,CookBookUncheckedUpdateManyInputSchema:()=>$1,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Fut,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>I_,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>v8,CookBookUpdateArgsSchema:()=>Ukt,CookBookUpdateInputSchema:()=>Y1,CookBookUpdateManyAndReturnArgsSchema:()=>Rkt,CookBookUpdateManyArgsSchema:()=>Wkt,CookBookUpdateManyMutationInputSchema:()=>LN,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>hW,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>hr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>an,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>act,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>bW,CookBookUpdateWithoutRecipesInputSchema:()=>h_,CookBookUpdateWithoutRestaurantInputSchema:()=>Z8,CookBookUpsertArgsSchema:()=>Akt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>mW,CookBookUpsertWithoutRecipesInputSchema:()=>nct,CookBookWhereInputSchema:()=>$e,CookBookWhereUniqueInputSchema:()=>oe,CountStatusSchema:()=>wt,CustomerFeedbackAggregateArgsSchema:()=>uht,CustomerFeedbackArgsSchema:()=>qzt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>ket,CustomerFeedbackCountOrderByAggregateInputSchema:()=>Ret,CustomerFeedbackCreateArgsSchema:()=>oUt,CustomerFeedbackCreateInputSchema:()=>$Y,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>iUt,CustomerFeedbackCreateManyArgsSchema:()=>aUt,CustomerFeedbackCreateManyInputSchema:()=>hP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>Dw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>TQ,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>UO,CustomerFeedbackCreateManyRespondedByInputSchema:()=>OH,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>iO,CustomerFeedbackCreateManyRestaurantInputSchema:()=>CH,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>$z,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ri,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>er,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>II,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>Ah,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>rh,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>Ps,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>ju,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>ou,CustomerFeedbackCreatetagsInputSchema:()=>ip,CustomerFeedbackDeleteArgsSchema:()=>lUt,CustomerFeedbackDeleteManyArgsSchema:()=>uUt,CustomerFeedbackFindFirstArgsSchema:()=>pht,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>cht,CustomerFeedbackFindManyArgsSchema:()=>lT,CustomerFeedbackFindUniqueArgsSchema:()=>sht,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>dht,CustomerFeedbackGroupByArgsSchema:()=>yht,CustomerFeedbackIncludeSchema:()=>ud,CustomerFeedbackListRelationFilterSchema:()=>WS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>xet,CustomerFeedbackMinOrderByAggregateInputSchema:()=>jet,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>bB,CustomerFeedbackOrderByWithAggregationInputSchema:()=>nV,CustomerFeedbackOrderByWithRelationInputSchema:()=>rb,CustomerFeedbackScalarFieldEnumSchema:()=>Pg,CustomerFeedbackScalarWhereInputSchema:()=>Ea,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>KC,CustomerFeedbackSchema:()=>Fdt,CustomerFeedbackSelectSchema:()=>yd,CustomerFeedbackSumOrderByAggregateInputSchema:()=>Met,CustomerFeedbackUncheckedCreateInputSchema:()=>JY,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>am,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>Ui,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>zr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>Us,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>Mu,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>nu,CustomerFeedbackUncheckedUpdateInputSchema:()=>XY,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>tG,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>rst,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Sm,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>uyt,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>cl,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>$ut,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Dr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>AK,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>R7,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>X8,CustomerFeedbackUpdateArgsSchema:()=>rUt,CustomerFeedbackUpdateInputSchema:()=>KY,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>cUt,CustomerFeedbackUpdateManyArgsSchema:()=>pUt,CustomerFeedbackUpdateManyMutationInputSchema:()=>UT,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Wj,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>fR,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>QW,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>zm,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>Vi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Uj,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>OR,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>HW,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>CK,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>W7,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>K8,CustomerFeedbackUpdatetagsInputSchema:()=>Vr,CustomerFeedbackUpsertArgsSchema:()=>nUt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Pj,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>vR,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>VW,CustomerFeedbackWhereInputSchema:()=>sa,CustomerFeedbackWhereUniqueInputSchema:()=>F,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>z,DateTimeNullableFilterSchema:()=>Jt,DateTimeNullableWithAggregatesFilterSchema:()=>_r,DateTimeWithAggregatesFilterSchema:()=>Z,DayOfWeekSchema:()=>ue,DietaryRestrictionAggregateArgsSchema:()=>bht,DietaryRestrictionArgsSchema:()=>fQ,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>fet,DietaryRestrictionCountOrderByAggregateInputSchema:()=>Oet,DietaryRestrictionCountOutputTypeArgsSchema:()=>wQ,DietaryRestrictionCountOutputTypeSelectSchema:()=>mX,DietaryRestrictionCreateArgsSchema:()=>yUt,DietaryRestrictionCreateInputSchema:()=>eG,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>zUt,DietaryRestrictionCreateManyArgsSchema:()=>dUt,DietaryRestrictionCreateManyInputSchema:()=>IP,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>Jz,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Wo,DietaryRestrictionCreateNestedOneWithoutIngredientsInputSchema:()=>vI,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>p3,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>gI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>Fh,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>bf,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Ws,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>zy,DietaryRestrictionDeleteArgsSchema:()=>mUt,DietaryRestrictionDeleteManyArgsSchema:()=>gUt,DietaryRestrictionFindFirstArgsSchema:()=>zht,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>mht,DietaryRestrictionFindManyArgsSchema:()=>tN,DietaryRestrictionFindUniqueArgsSchema:()=>Iht,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>ght,DietaryRestrictionGroupByArgsSchema:()=>hht,DietaryRestrictionIncludeSchema:()=>sd,DietaryRestrictionListRelationFilterSchema:()=>hM,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>wet,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Net,DietaryRestrictionNullableScalarRelationFilterSchema:()=>Y4,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>H4,DietaryRestrictionOrderByWithAggregationInputSchema:()=>aV,DietaryRestrictionOrderByWithRelationInputSchema:()=>Mm,DietaryRestrictionScalarFieldEnumSchema:()=>Ug,DietaryRestrictionScalarWhereInputSchema:()=>xl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>XC,DietaryRestrictionSchema:()=>Ddt,DietaryRestrictionSelectSchema:()=>dd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>Bet,DietaryRestrictionUncheckedCreateInputSchema:()=>oG,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>im,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Yo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>hf,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Rs,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>my,DietaryRestrictionUncheckedUpdateInputSchema:()=>aG,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>iG,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>pst,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Tm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>xyt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Dn,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>C_,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>TK,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>yJ,DietaryRestrictionUpdateArgsSchema:()=>bUt,DietaryRestrictionUpdateInputSchema:()=>nG,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>IUt,DietaryRestrictionUpdateManyArgsSchema:()=>hUt,DietaryRestrictionUpdateManyMutationInputSchema:()=>Dj,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>xj,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>Bk,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>mm,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>gn,DietaryRestrictionUpdateOneWithoutIngredientsNestedInputSchema:()=>YI,DietaryRestrictionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>lct,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>kj,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Nk,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>g_,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>SK,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>uJ,DietaryRestrictionUpsertArgsSchema:()=>sUt,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Rj,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>wk,DietaryRestrictionUpsertWithoutIngredientsInputSchema:()=>ict,DietaryRestrictionWhereInputSchema:()=>we,DietaryRestrictionWhereUniqueInputSchema:()=>lt,EarlyAccessAggregateArgsSchema:()=>EIt,EarlyAccessAvgOrderByAggregateInputSchema:()=>Got,EarlyAccessCountOrderByAggregateInputSchema:()=>Yot,EarlyAccessCreateArgsSchema:()=>CRt,EarlyAccessCreateInputSchema:()=>d1,EarlyAccessCreateManyAndReturnArgsSchema:()=>TRt,EarlyAccessCreateManyArgsSchema:()=>SRt,EarlyAccessCreateManyInputSchema:()=>MP,EarlyAccessDeleteArgsSchema:()=>PRt,EarlyAccessDeleteManyArgsSchema:()=>kRt,EarlyAccessFindFirstArgsSchema:()=>qIt,EarlyAccessFindFirstOrThrowArgsSchema:()=>FIt,EarlyAccessFindManyArgsSchema:()=>DIt,EarlyAccessFindUniqueArgsSchema:()=>LIt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>VIt,EarlyAccessGroupByArgsSchema:()=>_It,EarlyAccessMaxOrderByAggregateInputSchema:()=>$ot,EarlyAccessMinOrderByAggregateInputSchema:()=>Jot,EarlyAccessOrderByWithAggregationInputSchema:()=>hV,EarlyAccessOrderByWithRelationInputSchema:()=>Ib,EarlyAccessScalarFieldEnumSchema:()=>Bg,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>sA,EarlyAccessSchema:()=>tzt,EarlyAccessSelectSchema:()=>Em,EarlyAccessSumOrderByAggregateInputSchema:()=>Kot,EarlyAccessUncheckedCreateInputSchema:()=>z1,EarlyAccessUncheckedUpdateInputSchema:()=>b1,EarlyAccessUncheckedUpdateManyInputSchema:()=>I1,EarlyAccessUpdateArgsSchema:()=>URt,EarlyAccessUpdateInputSchema:()=>m1,EarlyAccessUpdateManyAndReturnArgsSchema:()=>RRt,EarlyAccessUpdateManyArgsSchema:()=>WRt,EarlyAccessUpdateManyMutationInputSchema:()=>h1,EarlyAccessUpsertArgsSchema:()=>ARt,EarlyAccessWhereInputSchema:()=>zl,EarlyAccessWhereUniqueInputSchema:()=>_m,EnumCategoryFieldUpdateOperationsInputSchema:()=>zt,EnumCategoryFilterSchema:()=>AB,EnumCategoryWithAggregatesFilterSchema:()=>oat,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>mp,EnumChecklistFrequencyFilterSchema:()=>nB,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>oet,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>Lm,EnumChecklistItemTypeFilterSchema:()=>aB,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>cet,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>Fz,EnumChecklistStatusFilterSchema:()=>iB,EnumChecklistStatusWithAggregatesFilterSchema:()=>Cet,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>hC,EnumConstraintTypeFilterSchema:()=>yB,EnumConstraintTypeWithAggregatesFilterSchema:()=>Rot,EnumCountStatusFieldUpdateOperationsInputSchema:()=>pp,EnumCountStatusFilterSchema:()=>PB,EnumCountStatusWithAggregatesFilterSchema:()=>wat,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>bC,EnumDayOfWeekFilterSchema:()=>uB,EnumDayOfWeekWithAggregatesFilterSchema:()=>Aot,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>zp,EnumEquipmentStatusFilterSchema:()=>tB,EnumEquipmentStatusWithAggregatesFilterSchema:()=>Btt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>Lr,EnumFeedbackSourceFilterSchema:()=>lB,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Zet,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Hr,EnumFeedbackStatusFilterSchema:()=>rB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>vet,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>lp,EnumInventoryTypeFilterSchema:()=>h4,EnumInventoryTypeWithAggregatesFilterSchema:()=>unt,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>zC,EnumMaintenanceTypeFilterSchema:()=>oB,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>Gtt,EnumNutritionSourceNullableFilterSchema:()=>SB,EnumNutritionSourceNullableWithAggregatesFilterSchema:()=>cat,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>cp,EnumOrderStatusFilterSchema:()=>UB,EnumOrderStatusWithAggregatesFilterSchema:()=>Kat,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>dC,EnumPhotoTypeFilterSchema:()=>KN,EnumPhotoTypeWithAggregatesFilterSchema:()=>ett,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>ea,EnumPrepStatusFilterSchema:()=>jS,EnumPrepStatusWithAggregatesFilterSchema:()=>e2,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>Hm,EnumShiftStatusFilterSchema:()=>WB,EnumShiftStatusWithAggregatesFilterSchema:()=>mit,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>dt,EnumSkillLevelFilterSchema:()=>CB,EnumSkillLevelWithAggregatesFilterSchema:()=>eat,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>mC,EnumTaskTypeFilterSchema:()=>cB,EnumTaskTypeWithAggregatesFilterSchema:()=>mot,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>Yr,EnumTransactionTypeFilterSchema:()=>TB,EnumTransactionTypeWithAggregatesFilterSchema:()=>jat,EnumUserRoleFieldUpdateOperationsInputSchema:()=>ft,EnumUserRoleFilterSchema:()=>hB,EnumUserRoleWithAggregatesFilterSchema:()=>jnt,EquipmentAggregateArgsSchema:()=>bbt,EquipmentArgsSchema:()=>Zj,EquipmentAvgOrderByAggregateInputSchema:()=>Ott,EquipmentCountOrderByAggregateInputSchema:()=>vtt,EquipmentCountOutputTypeArgsSchema:()=>xQ,EquipmentCountOutputTypeSelectSchema:()=>yX,EquipmentCreateArgsSchema:()=>BTt,EquipmentCreateInputSchema:()=>uY,EquipmentCreateManyAndReturnArgsSchema:()=>DTt,EquipmentCreateManyArgsSchema:()=>FTt,EquipmentCreateManyInputSchema:()=>cP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>nO,EquipmentCreateManyRestaurantInputSchema:()=>IH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>Tlt,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>BB,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>z6,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>s6,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>ih,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>AZ,EquipmentCreateWithoutRecipesInputSchema:()=>hZ,EquipmentCreateWithoutRestaurantInputSchema:()=>Kc,EquipmentDeleteArgsSchema:()=>ETt,EquipmentDeleteManyArgsSchema:()=>HTt,EquipmentFindFirstArgsSchema:()=>zbt,EquipmentFindFirstOrThrowArgsSchema:()=>mbt,EquipmentFindManyArgsSchema:()=>jK,EquipmentFindUniqueArgsSchema:()=>Ibt,EquipmentFindUniqueOrThrowArgsSchema:()=>gbt,EquipmentGroupByArgsSchema:()=>hbt,EquipmentIncludeSchema:()=>Ys,EquipmentListRelationFilterSchema:()=>S4,EquipmentMaxOrderByAggregateInputSchema:()=>ftt,EquipmentMinOrderByAggregateInputSchema:()=>wtt,EquipmentOrderByRelationAggregateInputSchema:()=>dnt,EquipmentOrderByWithAggregationInputSchema:()=>GL,EquipmentOrderByWithRelationInputSchema:()=>_p,EquipmentScalarFieldEnumSchema:()=>bg,EquipmentScalarRelationFilterSchema:()=>eM,EquipmentScalarWhereInputSchema:()=>Sp,EquipmentScalarWhereWithAggregatesInputSchema:()=>LC,EquipmentSchema:()=>Zdt,EquipmentSelectSchema:()=>Gs,EquipmentStatusSchema:()=>qt,EquipmentSumOrderByAggregateInputSchema:()=>Ntt,EquipmentUncheckedCreateInputSchema:()=>yY,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>SZ,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>IZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,EquipmentUncheckedUpdateInputSchema:()=>dY,EquipmentUncheckedUpdateManyInputSchema:()=>zY,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Yut,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>YD,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>LD,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>G8,EquipmentUpdateArgsSchema:()=>_Tt,EquipmentUpdateInputSchema:()=>sY,EquipmentUpdateManyAndReturnArgsSchema:()=>VTt,EquipmentUpdateManyArgsSchema:()=>LTt,EquipmentUpdateManyMutationInputSchema:()=>vN,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>DW,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>Plt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>DB,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Ort,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>jrt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>FW,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>QD,EquipmentUpdateWithoutRecipesInputSchema:()=>_D,EquipmentUpdateWithoutRestaurantInputSchema:()=>Y8,EquipmentUpsertArgsSchema:()=>qTt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>qW,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>vrt,EquipmentUpsertWithoutRecipesInputSchema:()=>xrt,EquipmentWhereInputSchema:()=>Me,EquipmentWhereUniqueInputSchema:()=>Qt,FeedbackSourceSchema:()=>Zt,FeedbackStatusSchema:()=>vt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>R,FloatNullableFilterSchema:()=>et,FloatNullableListFilterSchema:()=>xb,FloatNullableWithAggregatesFilterSchema:()=>Kn,FloatWithAggregatesFilterSchema:()=>Wt,FoodCostHistoryAggregateArgsSchema:()=>HAt,FoodCostHistoryArgsSchema:()=>amt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>tlt,FoodCostHistoryCountOrderByAggregateInputSchema:()=>Xit,FoodCostHistoryCreateArgsSchema:()=>QMt,FoodCostHistoryCreateInputSchema:()=>V$,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>$Mt,FoodCostHistoryCreateManyArgsSchema:()=>GMt,FoodCostHistoryCreateManyInputSchema:()=>aU,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>DO,FoodCostHistoryCreateManyRecipeInputSchema:()=>EH,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>bo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>jh,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>Yu,FoodCostHistoryDeleteArgsSchema:()=>JMt,FoodCostHistoryDeleteManyArgsSchema:()=>eZt,FoodCostHistoryFindFirstArgsSchema:()=>LAt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>VAt,FoodCostHistoryFindManyArgsSchema:()=>QK,FoodCostHistoryFindUniqueArgsSchema:()=>YAt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>GAt,FoodCostHistoryGroupByArgsSchema:()=>QAt,FoodCostHistoryIncludeSchema:()=>wz,FoodCostHistoryListRelationFilterSchema:()=>v4,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>elt,FoodCostHistoryMinOrderByAggregateInputSchema:()=>olt,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>Dnt,FoodCostHistoryOrderByWithAggregationInputSchema:()=>LV,FoodCostHistoryOrderByWithRelationInputSchema:()=>Rb,FoodCostHistoryScalarFieldEnumSchema:()=>yC,FoodCostHistoryScalarWhereInputSchema:()=>xp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>qA,FoodCostHistorySchema:()=>Rzt,FoodCostHistorySelectSchema:()=>Nz,FoodCostHistorySumOrderByAggregateInputSchema:()=>nlt,FoodCostHistoryUncheckedCreateInputSchema:()=>H$,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Gu,FoodCostHistoryUncheckedUpdateInputSchema:()=>Y$,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>G$,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>gyt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Mn,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>V7,FoodCostHistoryUpdateArgsSchema:()=>KMt,FoodCostHistoryUpdateInputSchema:()=>Q$,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>tZt,FoodCostHistoryUpdateManyArgsSchema:()=>XMt,FoodCostHistoryUpdateManyMutationInputSchema:()=>$N,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>pk,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>cn,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>rk,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>L7,FoodCostHistoryUpsertArgsSchema:()=>YMt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>lk,FoodCostHistoryWhereInputSchema:()=>Ma,FoodCostHistoryWhereUniqueInputSchema:()=>ke,IngredientAggregateArgsSchema:()=>Bgt,IngredientAllergenAggregateArgsSchema:()=>xIt,IngredientAllergenArgsSchema:()=>Yzt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>qot,IngredientAllergenCountOrderByAggregateInputSchema:()=>Bot,IngredientAllergenCreateArgsSchema:()=>oRt,IngredientAllergenCreateInputSchema:()=>n1,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>Mv,IngredientAllergenCreateManyAllergenInputSchema:()=>nH,IngredientAllergenCreateManyAndReturnArgsSchema:()=>iRt,IngredientAllergenCreateManyArgsSchema:()=>aRt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>zf,IngredientAllergenCreateManyIngredientInputSchema:()=>iQ,IngredientAllergenCreateManyInputSchema:()=>xP,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>flt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>MI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>Lb,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>Jh,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Sc,IngredientAllergenCreateWithoutIngredientInputSchema:()=>wy,IngredientAllergenDeleteArgsSchema:()=>lRt,IngredientAllergenDeleteManyArgsSchema:()=>uRt,IngredientAllergenFindFirstArgsSchema:()=>RIt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>kIt,IngredientAllergenFindManyArgsSchema:()=>oN,IngredientAllergenFindUniqueArgsSchema:()=>MIt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>ZIt,IngredientAllergenGroupByArgsSchema:()=>jIt,IngredientAllergenIncludeSchema:()=>Od,IngredientAllergenListRelationFilterSchema:()=>pM,IngredientAllergenMaxOrderByAggregateInputSchema:()=>Fot,IngredientAllergenMinOrderByAggregateInputSchema:()=>Dot,IngredientAllergenOrderByRelationAggregateInputSchema:()=>d4,IngredientAllergenOrderByWithAggregationInputSchema:()=>mV,IngredientAllergenOrderByWithRelationInputSchema:()=>bb,IngredientAllergenScalarFieldEnumSchema:()=>wg,IngredientAllergenScalarWhereInputSchema:()=>Sl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>uA,IngredientAllergenSchema:()=>Kdt,IngredientAllergenSelectSchema:()=>fd,IngredientAllergenSumOrderByAggregateInputSchema:()=>Eot,IngredientAllergenUncheckedCreateInputSchema:()=>a1,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>wlt,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>qI,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>Tc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>Ny,IngredientAllergenUncheckedUpdateInputSchema:()=>l1,IngredientAllergenUncheckedUpdateManyInputSchema:()=>r1,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>vut,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Blt,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Fyt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>tg,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>g8,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>vJ,IngredientAllergenUpdateArgsSchema:()=>rRt,IngredientAllergenUpdateInputSchema:()=>i1,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>cRt,IngredientAllergenUpdateManyArgsSchema:()=>pRt,IngredientAllergenUpdateManyMutationInputSchema:()=>_j,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>$U,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>hx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Nlt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>HI,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>GU,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>bx,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>I8,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>ZJ,IngredientAllergenUpsertArgsSchema:()=>nRt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>YU,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>mx,IngredientAllergenWhereInputSchema:()=>Aa,IngredientAllergenWhereUniqueInputSchema:()=>Ct,IngredientArgsSchema:()=>tp,IngredientAvgOrderByAggregateInputSchema:()=>iat,IngredientCountOrderByAggregateInputSchema:()=>aat,IngredientCountOutputTypeArgsSchema:()=>GQ,IngredientCountOutputTypeSelectSchema:()=>UX,IngredientCreateArgsSchema:()=>Bkt,IngredientCreateInputSchema:()=>o9,IngredientCreateManyAndReturnArgsSchema:()=>Dkt,IngredientCreateManyArgsSchema:()=>Fkt,IngredientCreateManyDietaryRestrictionInputEnvelopeSchema:()=>GZ,IngredientCreateManyDietaryRestrictionInputSchema:()=>eH,IngredientCreateManyInputSchema:()=>qP,IngredientCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>mq,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>FF,IngredientCreateNestedOneWithoutIngredientAllergenInputSchema:()=>M2,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>ZS,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>t5,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>aF,IngredientCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>k2,IngredientCreateNestedOneWithoutWasteRecordInputSchema:()=>Zq,IngredientCreateOrConnectWithoutDietaryRestrictionInputSchema:()=>Db,IngredientCreateOrConnectWithoutIngredientAllergenInputSchema:()=>_6,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>m3,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>k3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>u3,IngredientCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>S6,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>lI,IngredientCreateOrConnectWithoutWasteRecordInputSchema:()=>j6,IngredientCreateWithoutDietaryRestrictionInputSchema:()=>bc,IngredientCreateWithoutIngredientAllergenInputSchema:()=>Zv,IngredientCreateWithoutInventoryItemsInputSchema:()=>Mf,IngredientCreateWithoutOrderItemsInputSchema:()=>pw,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>Cf,IngredientCreateWithoutSupplierPriceHistoryInputSchema:()=>DZ,IngredientCreateWithoutVendorsInputSchema:()=>ts,IngredientCreateWithoutWasteRecordInputSchema:()=>av,IngredientDeleteArgsSchema:()=>Ekt,IngredientDeleteManyArgsSchema:()=>Hkt,IngredientFindFirstArgsSchema:()=>wgt,IngredientFindFirstOrThrowArgsSchema:()=>Ngt,IngredientFindManyArgsSchema:()=>aN,IngredientFindUniqueArgsSchema:()=>Fgt,IngredientFindUniqueOrThrowArgsSchema:()=>Dgt,IngredientGroupByArgsSchema:()=>qgt,IngredientIncludeSchema:()=>Kd,IngredientListRelationFilterSchema:()=>rM,IngredientMaxOrderByAggregateInputSchema:()=>lat,IngredientMinOrderByAggregateInputSchema:()=>rat,IngredientOrderByRelationAggregateInputSchema:()=>c4,IngredientOrderByWithAggregationInputSchema:()=>UV,IngredientOrderByWithRelationInputSchema:()=>wl,IngredientScalarFieldEnumSchema:()=>Hg,IngredientScalarRelationFilterSchema:()=>np,IngredientScalarWhereInputSchema:()=>Al,IngredientScalarWhereWithAggregatesInputSchema:()=>CA,IngredientSchema:()=>pzt,IngredientSelectSchema:()=>Xd,IngredientSumOrderByAggregateInputSchema:()=>pat,IngredientUncheckedCreateInputSchema:()=>n9,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>Iq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>_F,IngredientUncheckedCreateWithoutDietaryRestrictionInputSchema:()=>hc,IngredientUncheckedCreateWithoutIngredientAllergenInputSchema:()=>vv,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>Zf,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>cw,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>Af,IngredientUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>EZ,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>es,IngredientUncheckedCreateWithoutWasteRecordInputSchema:()=>iv,IngredientUncheckedUpdateInputSchema:()=>i9,IngredientUncheckedUpdateManyInputSchema:()=>l9,IngredientUncheckedUpdateManyWithoutDietaryRestrictionInputSchema:()=>jut,IngredientUncheckedUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>Pq,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>Gyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>GF,IngredientUncheckedUpdateWithoutDietaryRestrictionInputSchema:()=>d8,IngredientUncheckedUpdateWithoutIngredientAllergenInputSchema:()=>KE,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>O_,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>lL,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>P_,IngredientUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>uE,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>JJ,IngredientUncheckedUpdateWithoutWasteRecordInputSchema:()=>WE,IngredientUpdateArgsSchema:()=>_kt,IngredientUpdateInputSchema:()=>a9,IngredientUpdateManyAndReturnArgsSchema:()=>Vkt,IngredientUpdateManyArgsSchema:()=>Lkt,IngredientUpdateManyMutationInputSchema:()=>Vj,IngredientUpdateManyWithWhereWithoutDietaryRestrictionInputSchema:()=>DU,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Lx,IngredientUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>Aq,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>HF,IngredientUpdateOneRequiredWithoutIngredientAllergenNestedInputSchema:()=>v2,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>DS,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>o5,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>rF,IngredientUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>j2,IngredientUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>fq,IngredientUpdateToOneWithWhereWithoutIngredientAllergenInputSchema:()=>Bpt,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>Cct,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Hct,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>uct,IngredientUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>$rt,IngredientUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>spt,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>FU,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>_x,IngredientUpdateWithoutDietaryRestrictionInputSchema:()=>s8,IngredientUpdateWithoutIngredientAllergenInputSchema:()=>JE,IngredientUpdateWithoutInventoryItemsInputSchema:()=>v_,IngredientUpdateWithoutOrderItemsInputSchema:()=>iL,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>T_,IngredientUpdateWithoutSupplierPriceHistoryInputSchema:()=>cE,IngredientUpdateWithoutVendorsInputSchema:()=>$J,IngredientUpdateWithoutWasteRecordInputSchema:()=>UE,IngredientUpsertArgsSchema:()=>qkt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>qU,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>Ex,IngredientUpsertWithoutIngredientAllergenInputSchema:()=>Npt,IngredientUpsertWithoutInventoryItemsInputSchema:()=>gct,IngredientUpsertWithoutOrderItemsInputSchema:()=>Vct,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>cct,IngredientUpsertWithoutSupplierPriceHistoryInputSchema:()=>Grt,IngredientUpsertWithoutWasteRecordInputSchema:()=>ypt,IngredientWhereInputSchema:()=>Mt,IngredientWhereUniqueInputSchema:()=>$,IntFieldUpdateOperationsInputSchema:()=>n,IntFilterSchema:()=>y,IntNullableFilterSchema:()=>nt,IntNullableListFilterSchema:()=>UI,IntNullableWithAggregatesFilterSchema:()=>va,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>ogt,InventoryArgsSchema:()=>CI,InventoryAvgOrderByAggregateInputSchema:()=>lnt,InventoryCountOrderByAggregateInputSchema:()=>int,InventoryCountOutputTypeArgsSchema:()=>_Q,InventoryCountOutputTypeSelectSchema:()=>CX,InventoryCreateArgsSchema:()=>BRt,InventoryCreateInputSchema:()=>U1,InventoryCreateManyAndReturnArgsSchema:()=>DRt,InventoryCreateManyArgsSchema:()=>FRt,InventoryCreateManyInputSchema:()=>vP,InventoryCreateNestedOneWithoutItemsInputSchema:()=>MS,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Vl,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>TF,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>hF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>z3,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>Gv,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>C3,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>h3,InventoryCreateWithoutItemsInputSchema:()=>xf,InventoryCreateWithoutRestaurantInputSchema:()=>GS,InventoryCreateWithoutStockCountsInputSchema:()=>Lf,InventoryCreateWithoutTransactionsInputSchema:()=>Bf,InventoryDeleteArgsSchema:()=>ERt,InventoryDeleteManyArgsSchema:()=>HRt,InventoryFindFirstArgsSchema:()=>XIt,InventoryFindFirstOrThrowArgsSchema:()=>tgt,InventoryFindManyArgsSchema:()=>egt,InventoryFindUniqueArgsSchema:()=>agt,InventoryFindUniqueOrThrowArgsSchema:()=>igt,InventoryGroupByArgsSchema:()=>ngt,InventoryIncludeSchema:()=>Fd,InventoryItemAggregateArgsSchema:()=>oCt,InventoryItemArgsSchema:()=>mS,InventoryItemAvgOrderByAggregateInputSchema:()=>Aat,InventoryItemCountOrderByAggregateInputSchema:()=>Cat,InventoryItemCountOutputTypeArgsSchema:()=>KQ,InventoryItemCountOutputTypeSelectSchema:()=>RX,InventoryItemCreateArgsSchema:()=>yxt,InventoryItemCreateInputSchema:()=>h9,InventoryItemCreateManyAndReturnArgsSchema:()=>zxt,InventoryItemCreateManyArgsSchema:()=>dxt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>yf,InventoryItemCreateManyIngredientInputSchema:()=>oQ,InventoryItemCreateManyInputSchema:()=>EP,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>Ev,InventoryItemCreateManyInventoryInputSchema:()=>lH,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>zO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>TH,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>RI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>TM,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>$a,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>$2,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>IF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>Jq,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>Qh,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>Qb,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>uh,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>T3,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>I3,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>F6,InventoryItemCreateWithoutIngredientInputSchema:()=>ky,InventoryItemCreateWithoutInventoryInputSchema:()=>kc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>pu,InventoryItemCreateWithoutStockCountsInputSchema:()=>Jf,InventoryItemCreateWithoutTransactionsInputSchema:()=>Ff,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>Uv,InventoryItemDeleteArgsSchema:()=>mxt,InventoryItemDeleteManyArgsSchema:()=>gxt,InventoryItemFindFirstArgsSchema:()=>tCt,InventoryItemFindFirstOrThrowArgsSchema:()=>eCt,InventoryItemFindManyArgsSchema:()=>sT,InventoryItemFindUniqueArgsSchema:()=>aCt,InventoryItemFindUniqueOrThrowArgsSchema:()=>iCt,InventoryItemGroupByArgsSchema:()=>nCt,InventoryItemIncludeSchema:()=>az,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>TN,InventoryItemListRelationFilterSchema:()=>SS,InventoryItemMaxOrderByAggregateInputSchema:()=>Sat,InventoryItemMinOrderByAggregateInputSchema:()=>Tat,InventoryItemOrderByRelationAggregateInputSchema:()=>sB,InventoryItemOrderByWithAggregationInputSchema:()=>kV,InventoryItemOrderByWithRelationInputSchema:()=>dp,InventoryItemScalarFieldEnumSchema:()=>Gg,InventoryItemScalarRelationFilterSchema:()=>AS,InventoryItemScalarWhereInputSchema:()=>Ba,InventoryItemScalarWhereWithAggregatesInputSchema:()=>TA,InventoryItemSchema:()=>yzt,InventoryItemSelectSchema:()=>iz,InventoryItemSumOrderByAggregateInputSchema:()=>Pat,InventoryItemUncheckedCreateInputSchema:()=>I9,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>fI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>WM,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>zi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>xy,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>xc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>cu,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>Kf,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>Df,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>Wv,InventoryItemUncheckedUpdateInputSchema:()=>C9,InventoryItemUncheckedUpdateManyInputSchema:()=>A9,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>wyt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>$I,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>wut,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>vM,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Xut,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Ki,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>UJ,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>U8,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>i7,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>$_,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>F_,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>HE,InventoryItemUpdateArgsSchema:()=>bxt,InventoryItemUpdateInputSchema:()=>g9,InventoryItemUpdateManyAndReturnArgsSchema:()=>Ixt,InventoryItemUpdateManyArgsSchema:()=>hxt,InventoryItemUpdateManyMutationInputSchema:()=>MT,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>ix,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>iW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>oR,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>EI,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>jM,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Oi,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>K2,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>AF,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>tF,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>wct,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Wct,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Zpt,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ax,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>aW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>eR,InventoryItemUpdateWithoutIngredientInputSchema:()=>PJ,InventoryItemUpdateWithoutInventoryInputSchema:()=>P8,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>a7,InventoryItemUpdateWithoutStockCountsInputSchema:()=>G_,InventoryItemUpdateWithoutTransactionsInputSchema:()=>q_,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>VE,InventoryItemUpsertArgsSchema:()=>sxt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>nx,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>nW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>tR,InventoryItemUpsertWithoutStockCountsInputSchema:()=>fct,InventoryItemUpsertWithoutTransactionsInputSchema:()=>Uct,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Mpt,InventoryItemWhereInputSchema:()=>le,InventoryItemWhereUniqueInputSchema:()=>w,InventoryMaxOrderByAggregateInputSchema:()=>rnt,InventoryMinOrderByAggregateInputSchema:()=>pnt,InventoryNullableScalarRelationFilterSchema:()=>C4,InventoryOrderByWithAggregationInputSchema:()=>gV,InventoryOrderByWithRelationInputSchema:()=>Xr,InventoryScalarFieldEnumSchema:()=>Fg,InventoryScalarRelationFilterSchema:()=>xS,InventoryScalarWhereWithAggregatesInputSchema:()=>zA,InventorySchema:()=>ozt,InventorySelectSchema:()=>Dd,InventorySumOrderByAggregateInputSchema:()=>cnt,InventoryTransactionAggregateArgsSchema:()=>pCt,InventoryTransactionArgsSchema:()=>Kzt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>Wat,InventoryTransactionCountOrderByAggregateInputSchema:()=>Uat,InventoryTransactionCreateArgsSchema:()=>Cxt,InventoryTransactionCreateInputSchema:()=>S9,InventoryTransactionCreateManyAndReturnArgsSchema:()=>Txt,InventoryTransactionCreateManyArgsSchema:()=>Sxt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>kO,InventoryTransactionCreateManyCreatedByInputSchema:()=>NH,InventoryTransactionCreateManyInputSchema:()=>_P,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>_v,InventoryTransactionCreateManyInventoryInputSchema:()=>rH,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>ff,InventoryTransactionCreateManyItemInputSchema:()=>pQ,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ui,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>PM,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>OS,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>Ph,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>Yb,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>tI,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>wu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>jc,InventoryTransactionCreateWithoutItemInputSchema:()=>Ey,InventoryTransactionDeleteArgsSchema:()=>Pxt,InventoryTransactionDeleteManyArgsSchema:()=>kxt,InventoryTransactionFindFirstArgsSchema:()=>lCt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>rCt,InventoryTransactionFindManyArgsSchema:()=>dT,InventoryTransactionFindUniqueArgsSchema:()=>uCt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>yCt,InventoryTransactionGroupByArgsSchema:()=>cCt,InventoryTransactionIncludeSchema:()=>lz,InventoryTransactionListRelationFilterSchema:()=>TS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>Rat,InventoryTransactionMinOrderByAggregateInputSchema:()=>kat,InventoryTransactionOrderByRelationAggregateInputSchema:()=>dB,InventoryTransactionOrderByWithAggregationInputSchema:()=>xV,InventoryTransactionOrderByWithRelationInputSchema:()=>Ab,InventoryTransactionScalarFieldEnumSchema:()=>$g,InventoryTransactionScalarWhereInputSchema:()=>qa,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>PA,InventoryTransactionSchema:()=>szt,InventoryTransactionSelectSchema:()=>rz,InventoryTransactionSumOrderByAggregateInputSchema:()=>xat,InventoryTransactionUncheckedCreateInputSchema:()=>T9,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>ki,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>RM,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>NS,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>Nu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>Mc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>_y,InventoryTransactionUncheckedUpdateInputSchema:()=>U9,InventoryTransactionUncheckedUpdateManyInputSchema:()=>W9,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>dyt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>sl,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Nut,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>OM,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>_yt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>HS,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>v7,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>R8,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>qJ,InventoryTransactionUpdateArgsSchema:()=>Uxt,InventoryTransactionUpdateInputSchema:()=>P9,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>Rxt,InventoryTransactionUpdateManyArgsSchema:()=>Wxt,InventoryTransactionUpdateManyMutationInputSchema:()=>ZT,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>LR,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>pW,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>Wx,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>Yi,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>MM,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>_S,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>_R,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>rW,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>Ux,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>Z7,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>W8,InventoryTransactionUpdateWithoutItemInputSchema:()=>BJ,InventoryTransactionUpsertArgsSchema:()=>Axt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>ER,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>lW,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>Px,InventoryTransactionWhereInputSchema:()=>Ua,InventoryTransactionWhereUniqueInputSchema:()=>H,InventoryTypeSchema:()=>Bt,InventoryUncheckedCreateInputSchema:()=>W1,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>ar,InventoryUncheckedCreateWithoutItemsInputSchema:()=>jf,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>$S,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>Vf,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>qf,InventoryUncheckedUpdateInputSchema:()=>k1,InventoryUncheckedUpdateManyInputSchema:()=>j1,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Mr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>Z_,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>rO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>L_,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>B_,InventoryUpdateArgsSchema:()=>_Rt,InventoryUpdateInputSchema:()=>R1,InventoryUpdateManyAndReturnArgsSchema:()=>VRt,InventoryUpdateManyArgsSchema:()=>LRt,InventoryUpdateManyMutationInputSchema:()=>x1,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>FS,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>RF,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>CF,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>Ir,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>Ict,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>G6,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>jct,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Pct,InventoryUpdateWithoutItemsInputSchema:()=>M_,InventoryUpdateWithoutRestaurantInputSchema:()=>lO,InventoryUpdateWithoutStockCountsInputSchema:()=>__,InventoryUpdateWithoutTransactionsInputSchema:()=>N_,InventoryUpsertArgsSchema:()=>qRt,InventoryUpsertWithoutItemsInputSchema:()=>hct,InventoryUpsertWithoutRestaurantInputSchema:()=>Y6,InventoryUpsertWithoutStockCountsInputSchema:()=>xct,InventoryUpsertWithoutTransactionsInputSchema:()=>Tct,InventoryWhereInputSchema:()=>Dt,InventoryWhereUniqueInputSchema:()=>$n,InventoryWithdrawalAggregateArgsSchema:()=>bIt,InventoryWithdrawalArgsSchema:()=>Qzt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>xot,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>kot,InventoryWithdrawalCreateArgsSchema:()=>BWt,InventoryWithdrawalCreateInputSchema:()=>HG,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>DWt,InventoryWithdrawalCreateManyArgsSchema:()=>FWt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>TO,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>ZH,InventoryWithdrawalCreateManyInputSchema:()=>RP,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>wf,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>cQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>HO,InventoryWithdrawalCreateManyRecipeInputSchema:()=>QH,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>ii,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>fS,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>So,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>gh,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>eI,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>wh,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Wu,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>Ly,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>ly,InventoryWithdrawalDeleteArgsSchema:()=>EWt,InventoryWithdrawalDeleteManyArgsSchema:()=>HWt,InventoryWithdrawalFindFirstArgsSchema:()=>zIt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>mIt,InventoryWithdrawalFindManyArgsSchema:()=>uT,InventoryWithdrawalFindUniqueArgsSchema:()=>IIt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>gIt,InventoryWithdrawalGroupByArgsSchema:()=>hIt,InventoryWithdrawalIncludeSchema:()=>jd,InventoryWithdrawalListRelationFilterSchema:()=>kS,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>jot,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Mot,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>gB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>dV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>mb,InventoryWithdrawalScalarFieldEnumSchema:()=>Og,InventoryWithdrawalScalarWhereInputSchema:()=>La,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>pA,InventoryWithdrawalSchema:()=>$dt,InventoryWithdrawalSelectSchema:()=>Md,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Zot,InventoryWithdrawalUncheckedCreateInputSchema:()=>QG,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ti,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>BS,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>Ru,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>Vy,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>ry,InventoryWithdrawalUncheckedUpdateInputSchema:()=>GG,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>$G,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>pyt,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>rl,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Lyt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>QS,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>Uyt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Nn,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>T7,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>DJ,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>nJ,InventoryWithdrawalUpdateArgsSchema:()=>_Wt,InventoryWithdrawalUpdateInputSchema:()=>YG,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>VWt,InventoryWithdrawalUpdateManyArgsSchema:()=>LWt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>xT,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>xR,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>xx,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>Wk,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>_i,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>LS,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>mn,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>kR,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>kx,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Uk,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>S7,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>FJ,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>oJ,InventoryWithdrawalUpsertArgsSchema:()=>qWt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>RR,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>Rx,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Pk,InventoryWithdrawalWhereInputSchema:()=>Ca,InventoryWithdrawalWhereUniqueInputSchema:()=>L,LeftoverItemAggregateArgsSchema:()=>kht,LeftoverItemArgsSchema:()=>Dzt,LeftoverItemAvgOrderByAggregateInputSchema:()=>Vet,LeftoverItemCountOrderByAggregateInputSchema:()=>Let,LeftoverItemCreateArgsSchema:()=>xUt,LeftoverItemCreateInputSchema:()=>yG,LeftoverItemCreateManyAndReturnArgsSchema:()=>ZUt,LeftoverItemCreateManyArgsSchema:()=>MUt,LeftoverItemCreateManyInputSchema:()=>CP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>Fw,LeftoverItemCreateManyMenuItemInputSchema:()=>SQ,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>hO,LeftoverItemCreateManyRecordedByInputSchema:()=>WH,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>tO,LeftoverItemCreateManyRestaurantInputSchema:()=>mH,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Gz,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>Xa,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>$l,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>hI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>dh,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>oh,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Ss,LeftoverItemCreateWithoutRecordedByInputSchema:()=>zu,LeftoverItemCreateWithoutRestaurantInputSchema:()=>Hc,LeftoverItemDeleteArgsSchema:()=>vUt,LeftoverItemDeleteManyArgsSchema:()=>NUt,LeftoverItemFindFirstArgsSchema:()=>Wht,LeftoverItemFindFirstOrThrowArgsSchema:()=>Rht,LeftoverItemFindManyArgsSchema:()=>rT,LeftoverItemFindUniqueArgsSchema:()=>jht,LeftoverItemFindUniqueOrThrowArgsSchema:()=>Mht,LeftoverItemGroupByArgsSchema:()=>xht,LeftoverItemIncludeSchema:()=>bd,LeftoverItemListRelationFilterSchema:()=>PS,LeftoverItemMaxOrderByAggregateInputSchema:()=>Het,LeftoverItemMinOrderByAggregateInputSchema:()=>Qet,LeftoverItemOrderByRelationAggregateInputSchema:()=>zB,LeftoverItemOrderByWithAggregationInputSchema:()=>lV,LeftoverItemOrderByWithRelationInputSchema:()=>cb,LeftoverItemScalarFieldEnumSchema:()=>Rg,LeftoverItemScalarWhereInputSchema:()=>Fa,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>eA,LeftoverItemSchema:()=>_dt,LeftoverItemSelectSchema:()=>hd,LeftoverItemSumOrderByAggregateInputSchema:()=>Yet,LeftoverItemUncheckedCreateInputSchema:()=>sG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>nm,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>hi,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>Ts,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>mu,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,LeftoverItemUncheckedUpdateInputSchema:()=>zG,LeftoverItemUncheckedUpdateManyInputSchema:()=>mG,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>lst,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Am,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>oyt,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>el,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Vut,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>gK,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>y7,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>_8,LeftoverItemUpdateArgsSchema:()=>OUt,LeftoverItemUpdateInputSchema:()=>dG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>wUt,LeftoverItemUpdateManyArgsSchema:()=>fUt,LeftoverItemUpdateManyMutationInputSchema:()=>WT,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Tj,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>yR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>ZW,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>dm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>Ni,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Sj,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>uR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>MW,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>IK,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>u7,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>E8,LeftoverItemUpsertArgsSchema:()=>jUt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Aj,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>cR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>jW,LeftoverItemWhereInputSchema:()=>za,LeftoverItemWhereUniqueInputSchema:()=>D,MaintenanceLogAggregateArgsSchema:()=>kbt,MaintenanceLogArgsSchema:()=>wzt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Vtt,MaintenanceLogCountOrderByAggregateInputSchema:()=>Ltt,MaintenanceLogCreateArgsSchema:()=>oPt,MaintenanceLogCreateInputSchema:()=>CY,MaintenanceLogCreateManyAndReturnArgsSchema:()=>iPt,MaintenanceLogCreateManyArgsSchema:()=>aPt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>zZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>$V,MaintenanceLogCreateManyInputSchema:()=>yP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>xB,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Ob,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>oc,MaintenanceLogDeleteArgsSchema:()=>lPt,MaintenanceLogDeleteManyArgsSchema:()=>uPt,MaintenanceLogFindFirstArgsSchema:()=>Wbt,MaintenanceLogFindFirstOrThrowArgsSchema:()=>Rbt,MaintenanceLogFindManyArgsSchema:()=>MK,MaintenanceLogFindUniqueArgsSchema:()=>jbt,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>Mbt,MaintenanceLogGroupByArgsSchema:()=>xbt,MaintenanceLogIncludeSchema:()=>Ks,MaintenanceLogListRelationFilterSchema:()=>o4,MaintenanceLogMaxOrderByAggregateInputSchema:()=>Htt,MaintenanceLogMinOrderByAggregateInputSchema:()=>Qtt,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Ztt,MaintenanceLogOrderByWithAggregationInputSchema:()=>JL,MaintenanceLogOrderByWithRelationInputSchema:()=>ab,MaintenanceLogScalarFieldEnumSchema:()=>Ig,MaintenanceLogScalarWhereInputSchema:()=>hp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>HC,MaintenanceLogSchema:()=>Odt,MaintenanceLogSelectSchema:()=>Xs,MaintenanceLogSumOrderByAggregateInputSchema:()=>Ytt,MaintenanceLogUncheckedCreateInputSchema:()=>AY,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>MB,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>nc,MaintenanceLogUncheckedUpdateInputSchema:()=>TY,MaintenanceLogUncheckedUpdateManyInputSchema:()=>PY,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>Tut,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>wB,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>X3,MaintenanceLogUpdateArgsSchema:()=>rPt,MaintenanceLogUpdateInputSchema:()=>SY,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>cPt,MaintenanceLogUpdateManyArgsSchema:()=>pPt,MaintenanceLogUpdateManyMutationInputSchema:()=>ON,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>CU,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>OB,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>gU,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>K3,MaintenanceLogUpsertArgsSchema:()=>nPt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>IU,MaintenanceLogWhereInputSchema:()=>ca,MaintenanceLogWhereUniqueInputSchema:()=>Ce,MaintenanceTypeSchema:()=>pe,MenuAggregateArgsSchema:()=>AAt,MenuArgsSchema:()=>wj,MenuAvgOrderByAggregateInputSchema:()=>vit,MenuCategoryAggregateArgsSchema:()=>abt,MenuCategoryArgsSchema:()=>WQ,MenuCategoryAvgOrderByAggregateInputSchema:()=>Ttt,MenuCategoryCountOrderByAggregateInputSchema:()=>Stt,MenuCategoryCountOutputTypeArgsSchema:()=>RQ,MenuCategoryCountOutputTypeSelectSchema:()=>cX,MenuCategoryCreateArgsSchema:()=>CTt,MenuCategoryCreateInputSchema:()=>tY,MenuCategoryCreateManyAndReturnArgsSchema:()=>TTt,MenuCategoryCreateManyArgsSchema:()=>STt,MenuCategoryCreateManyInputSchema:()=>rP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>Rw,MenuCategoryCreateManyMenuInputSchema:()=>IQ,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>iD,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>_z,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>sI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>B3,MenuCategoryCreateWithoutMenuInputSchema:()=>ss,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>Ow,MenuCategoryDeleteArgsSchema:()=>PTt,MenuCategoryDeleteManyArgsSchema:()=>kTt,MenuCategoryFindFirstArgsSchema:()=>obt,MenuCategoryFindFirstOrThrowArgsSchema:()=>nbt,MenuCategoryFindManyArgsSchema:()=>xK,MenuCategoryFindUniqueArgsSchema:()=>lbt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>rbt,MenuCategoryGroupByArgsSchema:()=>ibt,MenuCategoryIncludeSchema:()=>Ls,MenuCategoryListRelationFilterSchema:()=>n2,MenuCategoryMaxOrderByAggregateInputSchema:()=>Ptt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>IN,MenuCategoryMinOrderByAggregateInputSchema:()=>Utt,MenuCategoryNullableScalarRelationFilterSchema:()=>a2,MenuCategoryOrderByRelationAggregateInputSchema:()=>Mit,MenuCategoryOrderByWithAggregationInputSchema:()=>QL,MenuCategoryOrderByWithRelationInputSchema:()=>km,MenuCategoryScalarFieldEnumSchema:()=>zg,MenuCategoryScalarWhereInputSchema:()=>Fp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>EC,MenuCategorySchema:()=>jdt,MenuCategorySelectSchema:()=>Vs,MenuCategorySumOrderByAggregateInputSchema:()=>Wtt,MenuCategoryUncheckedCreateInputSchema:()=>eY,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>rD,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>ds,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>fw,MenuCategoryUncheckedUpdateInputSchema:()=>nY,MenuCategoryUncheckedUpdateManyInputSchema:()=>aY,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>est,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>sD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>cK,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>WL,MenuCategoryUpdateArgsSchema:()=>UTt,MenuCategoryUpdateInputSchema:()=>oY,MenuCategoryUpdateManyAndReturnArgsSchema:()=>RTt,MenuCategoryUpdateManyArgsSchema:()=>WTt,MenuCategoryUpdateManyMutationInputSchema:()=>ZN,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>pj,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>uD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>rm,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>sut,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>rj,MenuCategoryUpdateWithoutMenuInputSchema:()=>pK,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>UL,MenuCategoryUpsertArgsSchema:()=>ATt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>lj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>yut,MenuCategoryWhereInputSchema:()=>fe,MenuCategoryWhereUniqueInputSchema:()=>te,MenuCountOrderByAggregateInputSchema:()=>Zit,MenuCountOutputTypeArgsSchema:()=>c0,MenuCountOutputTypeSelectSchema:()=>vX,MenuCreateArgsSchema:()=>yMt,MenuCreateInputSchema:()=>P$,MenuCreateManyAndReturnArgsSchema:()=>zMt,MenuCreateManyArgsSchema:()=>dMt,MenuCreateManyInputSchema:()=>tU,MenuCreateManyRestaurantInputEnvelopeSchema:()=>Kv,MenuCreateManyRestaurantInputSchema:()=>dH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>Yl,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>y2,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>Ez,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>l6,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>N3,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>th,MenuCreateWithoutMenuCategoryInputSchema:()=>tZ,MenuCreateWithoutMenuItemsInputSchema:()=>Zw,MenuCreateWithoutRestaurantInputSchema:()=>Ec,MenuDeleteArgsSchema:()=>mMt,MenuDeleteManyArgsSchema:()=>gMt,MenuFindFirstArgsSchema:()=>gAt,MenuFindFirstOrThrowArgsSchema:()=>CAt,MenuFindManyArgsSchema:()=>HK,MenuFindUniqueArgsSchema:()=>TAt,MenuFindUniqueOrThrowArgsSchema:()=>PAt,MenuGroupByArgsSchema:()=>SAt,MenuIncludeSchema:()=>kz,MenuItemAggregateArgsSchema:()=>vAt,MenuItemArgsSchema:()=>ep,MenuItemAvgOrderByAggregateInputSchema:()=>Lit,MenuItemCountOrderByAggregateInputSchema:()=>_it,MenuItemCountOutputTypeArgsSchema:()=>u0,MenuItemCountOutputTypeSelectSchema:()=>OX,MenuItemCreateArgsSchema:()=>xMt,MenuItemCreateInputSchema:()=>O$,MenuItemCreateManyAndReturnArgsSchema:()=>ZMt,MenuItemCreateManyArgsSchema:()=>MMt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>oZ,MenuItemCreateManyCategoryInputSchema:()=>HV,MenuItemCreateManyInputSchema:()=>oU,MenuItemCreateManyMenuInputEnvelopeSchema:()=>Ww,MenuItemCreateManyMenuInputSchema:()=>hQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>s2,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>dq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>aD,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>mo,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>pq,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>Wq,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>h5,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Qlt,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>qlt,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>p2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>jb,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>qb,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>P6,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>R6,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>yI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>f3,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>D3,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>xh,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>V6,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>i6,MenuItemCreateWithoutCategoryInputSchema:()=>Yp,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>sc,MenuItemCreateWithoutFeedbackInputSchema:()=>VZ,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>KZ,MenuItemCreateWithoutMenuInputSchema:()=>us,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>kw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>Lw,MenuItemCreateWithoutRecipesInputSchema:()=>Hu,MenuItemCreateWithoutRecommendationsInputSchema:()=>wv,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>KM,MenuItemCreateallergensInputSchema:()=>po,MenuItemCreaterecipeIdsInputSchema:()=>io,MenuItemCreaterecipeServingsAmountInputSchema:()=>lo,MenuItemCreaterecipeServingsCostInputSchema:()=>ro,MenuItemDeleteArgsSchema:()=>vMt,MenuItemDeleteManyArgsSchema:()=>NMt,MenuItemFindFirstArgsSchema:()=>MAt,MenuItemFindFirstOrThrowArgsSchema:()=>ZAt,MenuItemFindManyArgsSchema:()=>og,MenuItemFindUniqueArgsSchema:()=>fAt,MenuItemFindUniqueOrThrowArgsSchema:()=>wAt,MenuItemGroupByArgsSchema:()=>OAt,MenuItemIncludeSchema:()=>Zz,MenuItemListRelationFilterSchema:()=>TI,MenuItemMaxOrderByAggregateInputSchema:()=>Vit,MenuItemMinOrderByAggregateInputSchema:()=>Hit,MenuItemNullableScalarRelationFilterSchema:()=>lM,MenuItemOrderByRelationAggregateInputSchema:()=>Xj,MenuItemOrderByWithAggregationInputSchema:()=>EV,MenuItemOrderByWithRelationInputSchema:()=>Nl,MenuItemRecipeAggregateArgsSchema:()=>RAt,MenuItemRecipeArgsSchema:()=>nmt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Bit,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Nit,MenuItemRecipeCreateArgsSchema:()=>CMt,MenuItemRecipeCreateInputSchema:()=>x$,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>TMt,MenuItemRecipeCreateManyArgsSchema:()=>SMt,MenuItemRecipeCreateManyInputSchema:()=>eU,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>ww,MenuItemRecipeCreateManyMenuItemInputSchema:()=>gQ,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>LO,MenuItemRecipeCreateManyRecipeInputSchema:()=>VH,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Vz,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Co,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>zI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>Oh,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>bs,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>oy,MenuItemRecipeDeleteArgsSchema:()=>PMt,MenuItemRecipeDeleteManyArgsSchema:()=>kMt,MenuItemRecipeFindFirstArgsSchema:()=>UAt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>WAt,MenuItemRecipeFindManyArgsSchema:()=>uN,MenuItemRecipeFindUniqueArgsSchema:()=>xAt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>jAt,MenuItemRecipeGroupByArgsSchema:()=>kAt,MenuItemRecipeIncludeSchema:()=>jz,MenuItemRecipeListRelationFilterSchema:()=>bM,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>qit,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>UN,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Fit,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>V4,MenuItemRecipeOrderByWithAggregationInputSchema:()=>DV,MenuItemRecipeOrderByWithRelationInputSchema:()=>Wb,MenuItemRecipeScalarFieldEnumSchema:()=>pC,MenuItemRecipeScalarWhereInputSchema:()=>kl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>wA,MenuItemRecipeSchema:()=>Pzt,MenuItemRecipeSelectSchema:()=>Mz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>Dit,MenuItemRecipeUncheckedCreateInputSchema:()=>j$,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Xz,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>hs,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>ny,MenuItemRecipeUncheckedUpdateInputSchema:()=>Z$,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>v$,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>nst,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>hm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>Tyt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fn,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>dK,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>X7,MenuItemRecipeUpdateArgsSchema:()=>UMt,MenuItemRecipeUpdateInputSchema:()=>M$,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>RMt,MenuItemRecipeUpdateManyArgsSchema:()=>WMt,MenuItemRecipeUpdateManyMutationInputSchema:()=>Jj,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>zj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ck,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>cm,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>dn,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>dj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>gk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>sK,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>K7,MenuItemRecipeUpsertArgsSchema:()=>AMt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>sj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ik,MenuItemRecipeWhereInputSchema:()=>ja,MenuItemRecipeWhereUniqueInputSchema:()=>Tt,MenuItemScalarFieldEnumSchema:()=>cC,MenuItemScalarRelationFilterSchema:()=>SI,MenuItemScalarWhereInputSchema:()=>ao,MenuItemScalarWhereWithAggregatesInputSchema:()=>NA,MenuItemSchema:()=>Uzt,MenuItemSelectSchema:()=>vz,MenuItemSumOrderByAggregateInputSchema:()=>Qit,MenuItemUncheckedCreateInputSchema:()=>f$,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>d2,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>bq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>lD,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>No,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Gp,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>dc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>HZ,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>XZ,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>ys,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>xw,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>Vw,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Qu,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>Nv,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>XM,MenuItemUncheckedUpdateInputSchema:()=>N$,MenuItemUncheckedUpdateManyInputSchema:()=>B$,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>gut,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>b2,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>kut,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Sq,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>tst,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>yD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>Iyt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>jn,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>V3,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>c8,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>zE,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>CE,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>rK,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>CL,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>kL,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>_7,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>o_,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>jD,MenuItemUpdateArgsSchema:()=>OMt,MenuItemUpdateInputSchema:()=>w$,MenuItemUpdateManyAndReturnArgsSchema:()=>wMt,MenuItemUpdateManyArgsSchema:()=>fMt,MenuItemUpdateManyMutationInputSchema:()=>bS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>pU,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>fU,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>ij,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>ik,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>m2,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>gq,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>cD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>pn,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>xq,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>g5,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Flt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>u2,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>yq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>Ylt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>tpt,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>lpt,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>lut,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>zut,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>Ept,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>brt,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>rU,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>OU,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>aj,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>ak,MenuItemUpdateWithoutCategoryInputSchema:()=>L3,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>p8,MenuItemUpdateWithoutFeedbackInputSchema:()=>dE,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>gE,MenuItemUpdateWithoutMenuInputSchema:()=>lK,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>gL,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>RL,MenuItemUpdateWithoutRecipesInputSchema:()=>E7,MenuItemUpdateWithoutRecommendationsInputSchema:()=>e_,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>xD,MenuItemUpdateallergensInputSchema:()=>He,MenuItemUpdaterecipeIdsInputSchema:()=>_e,MenuItemUpdaterecipeServingsAmountInputSchema:()=>Le,MenuItemUpdaterecipeServingsCostInputSchema:()=>Ve,MenuItemUpsertArgsSchema:()=>jMt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>lU,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>vU,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>nj,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>nk,MenuItemUpsertWithoutFeedbackInputSchema:()=>Xrt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>ipt,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>iut,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>dut,MenuItemUpsertWithoutRecommendationsInputSchema:()=>Dpt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>mrt,MenuItemWhereInputSchema:()=>Pt,MenuItemWhereUniqueInputSchema:()=>x,MenuListRelationFilterSchema:()=>A4,MenuMaxOrderByAggregateInputSchema:()=>Oit,MenuMinOrderByAggregateInputSchema:()=>fit,MenuOrderByRelationAggregateInputSchema:()=>snt,MenuOrderByWithAggregationInputSchema:()=>FV,MenuOrderByWithRelationInputSchema:()=>Qp,MenuScalarFieldEnumSchema:()=>rC,MenuScalarRelationFilterSchema:()=>Kj,MenuScalarWhereInputSchema:()=>Ap,MenuScalarWhereWithAggregatesInputSchema:()=>fA,MenuSchema:()=>Tzt,MenuSelectSchema:()=>xz,MenuSumOrderByAggregateInputSchema:()=>wit,MenuUncheckedCreateInputSchema:()=>U$,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>eZ,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>vw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>_c,MenuUncheckedUpdateInputSchema:()=>R$,MenuUncheckedUpdateManyInputSchema:()=>k$,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>_ut,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>ZD,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>PL,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>q8,MenuUpdateArgsSchema:()=>bMt,MenuUpdateInputSchema:()=>W$,MenuUpdateManyAndReturnArgsSchema:()=>IMt,MenuUpdateManyArgsSchema:()=>hMt,MenuUpdateManyMutationInputSchema:()=>GN,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>WW,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>z2,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>lm,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>Irt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>uut,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>UW,MenuUpdateWithoutMenuCategoryInputSchema:()=>MD,MenuUpdateWithoutMenuItemsInputSchema:()=>TL,MenuUpdateWithoutRestaurantInputSchema:()=>B8,MenuUpsertArgsSchema:()=>sMt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>PW,MenuUpsertWithoutMenuCategoryInputSchema:()=>hrt,MenuUpsertWithoutMenuItemsInputSchema:()=>cut,MenuWhereInputSchema:()=>Oe,MenuWhereUniqueInputSchema:()=>$t,NestedBoolFilterSchema:()=>_A,NestedBoolWithAggregatesFilterSchema:()=>P5,NestedDateTimeFilterSchema:()=>VA,NestedDateTimeNullableFilterSchema:()=>QA,NestedDateTimeNullableWithAggregatesFilterSchema:()=>j5,NestedDateTimeWithAggregatesFilterSchema:()=>R5,NestedEnumCategoryFilterSchema:()=>rS,NestedEnumCategoryWithAggregatesFilterSchema:()=>L5,NestedEnumChecklistFrequencyFilterSchema:()=>$A,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>v5,NestedEnumChecklistItemTypeFilterSchema:()=>JA,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>O5,NestedEnumChecklistStatusFilterSchema:()=>KA,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>f5,NestedEnumConstraintTypeFilterSchema:()=>nS,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>F5,NestedEnumCountStatusFilterSchema:()=>uS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>Q5,NestedEnumDayOfWeekFilterSchema:()=>oS,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>q5,NestedEnumEquipmentStatusFilterSchema:()=>YA,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>M5,NestedEnumFeedbackSourceFilterSchema:()=>XA,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>w5,NestedEnumFeedbackStatusFilterSchema:()=>tS,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>N5,NestedEnumInventoryTypeFilterSchema:()=>aS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>D5,NestedEnumMaintenanceTypeFilterSchema:()=>GA,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>Z5,NestedEnumNutritionSourceNullableFilterSchema:()=>pS,NestedEnumNutritionSourceNullableWithAggregatesFilterSchema:()=>V5,NestedEnumOrderStatusFilterSchema:()=>yS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>Y5,NestedEnumPhotoTypeFilterSchema:()=>HA,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>k5,NestedEnumPrepStatusFilterSchema:()=>dS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>$5,NestedEnumShiftStatusFilterSchema:()=>sS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>G5,NestedEnumSkillLevelFilterSchema:()=>lS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>_5,NestedEnumTaskTypeFilterSchema:()=>eS,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>B5,NestedEnumTransactionTypeFilterSchema:()=>cS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>H5,NestedEnumUserRoleFilterSchema:()=>iS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>E5,NestedFloatFilterSchema:()=>Jr,NestedFloatNullableFilterSchema:()=>Kr,NestedFloatNullableWithAggregatesFilterSchema:()=>U5,NestedFloatWithAggregatesFilterSchema:()=>S5,NestedIntFilterSchema:()=>yt,NestedIntNullableFilterSchema:()=>ml,NestedIntNullableWithAggregatesFilterSchema:()=>x5,NestedIntWithAggregatesFilterSchema:()=>A5,NestedStringFilterSchema:()=>EA,NestedStringNullableFilterSchema:()=>LA,NestedStringNullableWithAggregatesFilterSchema:()=>W5,NestedStringWithAggregatesFilterSchema:()=>T5,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableEnumNutritionSourceFieldUpdateOperationsInputSchema:()=>ta,NullableFloatFieldUpdateOperationsInputSchema:()=>u,NullableIntFieldUpdateOperationsInputSchema:()=>b,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>pX,NutritionSourceSchema:()=>ot,NutritionalInfoAggregateArgsSchema:()=>FAt,NutritionalInfoArgsSchema:()=>y0,NutritionalInfoAvgOrderByAggregateInputSchema:()=>Git,NutritionalInfoCountOrderByAggregateInputSchema:()=>Yit,NutritionalInfoCreateArgsSchema:()=>BMt,NutritionalInfoCreateInputSchema:()=>q$,NutritionalInfoCreateManyAndReturnArgsSchema:()=>DMt,NutritionalInfoCreateManyArgsSchema:()=>FMt,NutritionalInfoCreateManyInputSchema:()=>nU,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>Hz,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>Nw,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>nT,NutritionalInfoDeleteArgsSchema:()=>EMt,NutritionalInfoDeleteManyArgsSchema:()=>HMt,NutritionalInfoFindFirstArgsSchema:()=>NAt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>BAt,NutritionalInfoFindManyArgsSchema:()=>qAt,NutritionalInfoFindUniqueArgsSchema:()=>EAt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>_At,NutritionalInfoGroupByArgsSchema:()=>DAt,NutritionalInfoIncludeSchema:()=>Oz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>$it,NutritionalInfoMinOrderByAggregateInputSchema:()=>Jit,NutritionalInfoNullableScalarRelationFilterSchema:()=>i2,NutritionalInfoOrderByWithAggregationInputSchema:()=>_V,NutritionalInfoOrderByWithRelationInputSchema:()=>Dm,NutritionalInfoScalarFieldEnumSchema:()=>uC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>BA,NutritionalInfoSchema:()=>Wzt,NutritionalInfoSelectSchema:()=>fz,NutritionalInfoSumOrderByAggregateInputSchema:()=>Kit,NutritionalInfoUncheckedCreateInputSchema:()=>F$,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>tm,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>aT,NutritionalInfoUncheckedUpdateInputSchema:()=>E$,NutritionalInfoUncheckedUpdateManyInputSchema:()=>L$,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>Im,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>_w,NutritionalInfoUpdateArgsSchema:()=>_Mt,NutritionalInfoUpdateInputSchema:()=>D$,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>VMt,NutritionalInfoUpdateManyArgsSchema:()=>LMt,NutritionalInfoUpdateManyMutationInputSchema:()=>_$,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>um,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>F3,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>Ew,NutritionalInfoUpsertArgsSchema:()=>qMt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>q3,NutritionalInfoWhereInputSchema:()=>De,NutritionalInfoWhereUniqueInputSchema:()=>Dl,NutritionalRecommendationAggregateArgsSchema:()=>fIt,NutritionalRecommendationArgsSchema:()=>Gzt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>Lot,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>_ot,NutritionalRecommendationCreateArgsSchema:()=>yRt,NutritionalRecommendationCreateInputSchema:()=>p1,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>zRt,NutritionalRecommendationCreateManyArgsSchema:()=>dRt,NutritionalRecommendationCreateManyInputSchema:()=>jP,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>Bw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>CQ,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Qz,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>mI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>Is,NutritionalRecommendationDeleteArgsSchema:()=>mRt,NutritionalRecommendationDeleteManyArgsSchema:()=>gRt,NutritionalRecommendationFindFirstArgsSchema:()=>vIt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>OIt,NutritionalRecommendationFindManyArgsSchema:()=>BK,NutritionalRecommendationFindUniqueArgsSchema:()=>NIt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>BIt,NutritionalRecommendationGroupByArgsSchema:()=>wIt,NutritionalRecommendationIncludeSchema:()=>wd,NutritionalRecommendationListRelationFilterSchema:()=>l2,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>Vot,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>Hot,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>Eit,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>bV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>hb,NutritionalRecommendationScalarFieldEnumSchema:()=>Ng,NutritionalRecommendationScalarWhereInputSchema:()=>Dp,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>yA,NutritionalRecommendationSchema:()=>Xdt,NutritionalRecommendationSelectSchema:()=>Nd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>Qot,NutritionalRecommendationUncheckedCreateInputSchema:()=>c1,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>em,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>gs,NutritionalRecommendationUncheckedUpdateInputSchema:()=>y1,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>s1,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>ast,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>gm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>mK,NutritionalRecommendationUpdateArgsSchema:()=>bRt,NutritionalRecommendationUpdateInputSchema:()=>u1,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>IRt,NutritionalRecommendationUpdateManyArgsSchema:()=>hRt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>DN,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>hj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>ym,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>bj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>zK,NutritionalRecommendationUpsertArgsSchema:()=>sRt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>mj,NutritionalRecommendationWhereInputSchema:()=>Sa,NutritionalRecommendationWhereUniqueInputSchema:()=>Ue,OrderAggregateArgsSchema:()=>vCt,OrderArgsSchema:()=>o0,OrderAvgOrderByAggregateInputSchema:()=>Yat,OrderCountOrderByAggregateInputSchema:()=>Qat,OrderCountOutputTypeArgsSchema:()=>n0,OrderCountOutputTypeSelectSchema:()=>xX,OrderCreateArgsSchema:()=>ojt,OrderCreateInputSchema:()=>_9,OrderCreateManyAndReturnArgsSchema:()=>ijt,OrderCreateManyArgsSchema:()=>ajt,OrderCreateManyInputSchema:()=>QP,OrderCreateManyRestaurantInputEnvelopeSchema:()=>$v,OrderCreateManyRestaurantInputSchema:()=>yH,OrderCreateManyVendorInputEnvelopeSchema:()=>uw,OrderCreateManyVendorInputSchema:()=>dQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>Hl,OrderCreateNestedManyWithoutVendorInputSchema:()=>qF,OrderCreateNestedOneWithoutItemsInputSchema:()=>X2,OrderCreateOrConnectWithoutItemsInputSchema:()=>R3,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>Kb,OrderCreateOrConnectWithoutVendorInputSchema:()=>iI,OrderCreateWithoutItemsInputSchema:()=>lw,OrderCreateWithoutRestaurantInputSchema:()=>Bc,OrderCreateWithoutVendorInputSchema:()=>Ky,OrderDeleteArgsSchema:()=>ljt,OrderDeleteManyArgsSchema:()=>ujt,OrderFindFirstArgsSchema:()=>MCt,OrderFindFirstOrThrowArgsSchema:()=>ZCt,OrderFindManyArgsSchema:()=>pN,OrderFindUniqueArgsSchema:()=>fCt,OrderFindUniqueOrThrowArgsSchema:()=>wCt,OrderGroupByArgsSchema:()=>OCt,OrderIncludeSchema:()=>zz,OrderItemAggregateArgsSchema:()=>qCt,OrderItemArgsSchema:()=>tmt,OrderItemAvgOrderByAggregateInputSchema:()=>tit,OrderItemCountOrderByAggregateInputSchema:()=>Xat,OrderItemCreateArgsSchema:()=>yjt,OrderItemCreateInputSchema:()=>Y9,OrderItemCreateManyAndReturnArgsSchema:()=>zjt,OrderItemCreateManyArgsSchema:()=>djt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>sf,OrderItemCreateManyIngredientInputSchema:()=>nQ,OrderItemCreateManyInputSchema:()=>YP,OrderItemCreateManyOrderInputEnvelopeSchema:()=>iw,OrderItemCreateManyOrderInputSchema:()=>sQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>kI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>vF,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>Yh,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>aI,OrderItemCreateWithoutIngredientInputSchema:()=>jy,OrderItemCreateWithoutOrderInputSchema:()=>$y,OrderItemDeleteArgsSchema:()=>mjt,OrderItemDeleteManyArgsSchema:()=>gjt,OrderItemFindFirstArgsSchema:()=>NCt,OrderItemFindFirstOrThrowArgsSchema:()=>BCt,OrderItemFindManyArgsSchema:()=>cN,OrderItemFindUniqueArgsSchema:()=>DCt,OrderItemFindUniqueOrThrowArgsSchema:()=>ECt,OrderItemGroupByArgsSchema:()=>FCt,OrderItemIncludeSchema:()=>bz,OrderItemListRelationFilterSchema:()=>IM,OrderItemMaxOrderByAggregateInputSchema:()=>eit,OrderItemMinOrderByAggregateInputSchema:()=>oit,OrderItemOrderByRelationAggregateInputSchema:()=>G4,OrderItemOrderByWithAggregationInputSchema:()=>OV,OrderItemOrderByWithRelationInputSchema:()=>Tb,OrderItemScalarFieldEnumSchema:()=>eC,OrderItemScalarWhereInputSchema:()=>jl,OrderItemScalarWhereWithAggregatesInputSchema:()=>xA,OrderItemSchema:()=>hzt,OrderItemSelectSchema:()=>hz,OrderItemSumOrderByAggregateInputSchema:()=>nit,OrderItemUncheckedCreateInputSchema:()=>G9,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>wI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>OF,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>My,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>Jy,OrderItemUncheckedUpdateInputSchema:()=>J9,OrderItemUncheckedUpdateManyInputSchema:()=>K9,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Nyt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>JI,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>Qyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>BF,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>RJ,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>QJ,OrderItemUpdateArgsSchema:()=>bjt,OrderItemUpdateInputSchema:()=>$9,OrderItemUpdateManyAndReturnArgsSchema:()=>Ijt,OrderItemUpdateManyArgsSchema:()=>hjt,OrderItemUpdateManyMutationInputSchema:()=>$j,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>px,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>Bx,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>_I,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>NF,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>rx,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Nx,OrderItemUpdateWithoutIngredientInputSchema:()=>WJ,OrderItemUpdateWithoutOrderInputSchema:()=>HJ,OrderItemUpsertArgsSchema:()=>sjt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>lx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>wx,OrderItemWhereInputSchema:()=>Ra,OrderItemWhereUniqueInputSchema:()=>St,OrderListRelationFilterSchema:()=>sM,OrderMaxOrderByAggregateInputSchema:()=>Gat,OrderMinOrderByAggregateInputSchema:()=>$at,OrderOrderByRelationAggregateInputSchema:()=>P4,OrderOrderByWithAggregationInputSchema:()=>vV,OrderOrderByWithRelationInputSchema:()=>Bm,OrderScalarFieldEnumSchema:()=>tC,OrderScalarRelationFilterSchema:()=>X4,OrderScalarWhereInputSchema:()=>Ul,OrderScalarWhereWithAggregatesInputSchema:()=>kA,OrderSchema:()=>bzt,OrderSelectSchema:()=>mz,OrderStatusSchema:()=>Nt,OrderSumOrderByAggregateInputSchema:()=>Jat,OrderUncheckedCreateInputSchema:()=>L9,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ir,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>EF,OrderUncheckedCreateWithoutItemsInputSchema:()=>rw,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>qc,OrderUncheckedCreateWithoutVendorInputSchema:()=>Xy,OrderUncheckedUpdateInputSchema:()=>H9,OrderUncheckedUpdateManyInputSchema:()=>Q9,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Dut,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>Yyt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>YF,OrderUncheckedUpdateWithoutItemsInputSchema:()=>aL,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>f8,OrderUncheckedUpdateWithoutVendorInputSchema:()=>GJ,OrderUpdateArgsSchema:()=>rjt,OrderUpdateInputSchema:()=>V9,OrderUpdateManyAndReturnArgsSchema:()=>cjt,OrderUpdateManyArgsSchema:()=>pjt,OrderUpdateManyMutationInputSchema:()=>Gj,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>CW,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>Dx,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>gr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>VF,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>e5,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Lct,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>gW,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Fx,OrderUpdateWithoutItemsInputSchema:()=>nL,OrderUpdateWithoutRestaurantInputSchema:()=>O8,OrderUpdateWithoutVendorInputSchema:()=>YJ,OrderUpsertArgsSchema:()=>njt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>IW,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>qx,OrderUpsertWithoutItemsInputSchema:()=>_ct,OrderWhereInputSchema:()=>Ke,OrderWhereUniqueInputSchema:()=>ut,OrganizationAggregateArgsSchema:()=>GIt,OrganizationArgsSchema:()=>Oj,OrganizationAvgOrderByAggregateInputSchema:()=>ent,OrganizationCountOrderByAggregateInputSchema:()=>tnt,OrganizationCountOutputTypeArgsSchema:()=>EQ,OrganizationCountOutputTypeSelectSchema:()=>gX,OrganizationCreateArgsSchema:()=>xRt,OrganizationCreateInputSchema:()=>g1,OrganizationCreateManyAndReturnArgsSchema:()=>ZRt,OrganizationCreateManyArgsSchema:()=>MRt,OrganizationCreateManyInputSchema:()=>ZP,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>El,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Ha,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>Q6,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>$6,OrganizationCreateWithoutRestaurantsInputSchema:()=>Vv,OrganizationCreateWithoutUsersInputSchema:()=>pO,OrganizationDeleteArgsSchema:()=>vRt,OrganizationDeleteManyArgsSchema:()=>NRt,OrganizationFindFirstArgsSchema:()=>HIt,OrganizationFindFirstOrThrowArgsSchema:()=>QIt,OrganizationFindManyArgsSchema:()=>YIt,OrganizationFindUniqueArgsSchema:()=>JIt,OrganizationFindUniqueOrThrowArgsSchema:()=>KIt,OrganizationGroupByArgsSchema:()=>$It,OrganizationIncludeSchema:()=>Bd,OrganizationMaxOrderByAggregateInputSchema:()=>ont,OrganizationMinOrderByAggregateInputSchema:()=>nnt,OrganizationNullableScalarRelationFilterSchema:()=>yM,OrganizationOrderByWithAggregationInputSchema:()=>IV,OrganizationOrderByWithRelationInputSchema:()=>Vp,OrganizationScalarFieldEnumSchema:()=>qg,OrganizationScalarWhereWithAggregatesInputSchema:()=>dA,OrganizationSchema:()=>ezt,OrganizationSelectSchema:()=>qd,OrganizationSumOrderByAggregateInputSchema:()=>ant,OrganizationUncheckedCreateInputSchema:()=>C1,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>Hv,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>cO,OrganizationUncheckedUpdateInputSchema:()=>S1,OrganizationUncheckedUpdateManyInputSchema:()=>P1,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>l_,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>p_,OrganizationUpdateArgsSchema:()=>ORt,OrganizationUpdateInputSchema:()=>A1,OrganizationUpdateManyAndReturnArgsSchema:()=>wRt,OrganizationUpdateManyArgsSchema:()=>fRt,OrganizationUpdateManyMutationInputSchema:()=>T1,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>mr,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>ji,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>Hpt,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>Ypt,OrganizationUpdateWithoutRestaurantsInputSchema:()=>i_,OrganizationUpdateWithoutUsersInputSchema:()=>r_,OrganizationUpsertArgsSchema:()=>jRt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>Vpt,OrganizationUpsertWithoutUsersInputSchema:()=>Qpt,OrganizationWhereInputSchema:()=>je,OrganizationWhereUniqueInputSchema:()=>vl,PasswordResetAggregateArgsSchema:()=>mAt,PasswordResetArgsSchema:()=>omt,PasswordResetAvgOrderByAggregateInputSchema:()=>Rit,PasswordResetCountOrderByAggregateInputSchema:()=>Wit,PasswordResetCreateArgsSchema:()=>oMt,PasswordResetCreateInputSchema:()=>g$,PasswordResetCreateManyAndReturnArgsSchema:()=>iMt,PasswordResetCreateManyArgsSchema:()=>aMt,PasswordResetCreateManyInputSchema:()=>XP,PasswordResetCreateManyUserInputEnvelopeSchema:()=>bO,PasswordResetCreateManyUserInputSchema:()=>UH,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Ka,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>sh,PasswordResetCreateWithoutUserInputSchema:()=>su,PasswordResetDeleteArgsSchema:()=>lMt,PasswordResetDeleteManyArgsSchema:()=>uMt,PasswordResetFindFirstArgsSchema:()=>dAt,PasswordResetFindFirstOrThrowArgsSchema:()=>zAt,PasswordResetFindManyArgsSchema:()=>VK,PasswordResetFindUniqueArgsSchema:()=>hAt,PasswordResetFindUniqueOrThrowArgsSchema:()=>IAt,PasswordResetGroupByArgsSchema:()=>bAt,PasswordResetIncludeSchema:()=>Wz,PasswordResetListRelationFilterSchema:()=>x4,PasswordResetMaxOrderByAggregateInputSchema:()=>kit,PasswordResetMinOrderByAggregateInputSchema:()=>xit,PasswordResetOrderByRelationAggregateInputSchema:()=>Snt,PasswordResetOrderByWithAggregationInputSchema:()=>qV,PasswordResetOrderByWithRelationInputSchema:()=>Ub,PasswordResetScalarFieldEnumSchema:()=>lC,PasswordResetScalarWhereInputSchema:()=>Wp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>OA,PasswordResetSchema:()=>Szt,PasswordResetSelectSchema:()=>Rz,PasswordResetSumOrderByAggregateInputSchema:()=>jit,PasswordResetUncheckedCreateInputSchema:()=>C$,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>bi,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>du,PasswordResetUncheckedUpdateInputSchema:()=>S$,PasswordResetUncheckedUpdateManyInputSchema:()=>T$,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>eyt,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>tl,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>c7,PasswordResetUpdateArgsSchema:()=>rMt,PasswordResetUpdateInputSchema:()=>A$,PasswordResetUpdateManyAndReturnArgsSchema:()=>cMt,PasswordResetUpdateManyArgsSchema:()=>pMt,PasswordResetUpdateManyMutationInputSchema:()=>YN,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>pR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>wi,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>rR,PasswordResetUpdateWithoutUserInputSchema:()=>p7,PasswordResetUpsertArgsSchema:()=>nMt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>lR,PasswordResetWhereInputSchema:()=>xa,PasswordResetWhereUniqueInputSchema:()=>Re,PhotoTypeSchema:()=>se,PrepBoardAggregateArgsSchema:()=>nAt,PrepBoardArgsSchema:()=>r0,PrepBoardAvgOrderByAggregateInputSchema:()=>hit,PrepBoardCountOrderByAggregateInputSchema:()=>bit,PrepBoardCountOutputTypeArgsSchema:()=>p0,PrepBoardCountOutputTypeSelectSchema:()=>ZX,PrepBoardCreateArgsSchema:()=>Bjt,PrepBoardCreateInputSchema:()=>c$,PrepBoardCreateManyAndReturnArgsSchema:()=>Djt,PrepBoardCreateManyArgsSchema:()=>Fjt,PrepBoardCreateManyInputSchema:()=>JP,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>Io,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>JF,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>j3,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>Zh,PrepBoardCreateWithoutPrepItemsInputSchema:()=>bw,PrepBoardCreateWithoutRecipesInputSchema:()=>Ku,PrepBoardDeleteArgsSchema:()=>Ejt,PrepBoardDeleteManyArgsSchema:()=>Hjt,PrepBoardFindFirstArgsSchema:()=>eAt,PrepBoardFindFirstOrThrowArgsSchema:()=>oAt,PrepBoardFindManyArgsSchema:()=>LK,PrepBoardFindUniqueArgsSchema:()=>iAt,PrepBoardFindUniqueOrThrowArgsSchema:()=>lAt,PrepBoardGroupByArgsSchema:()=>aAt,PrepBoardIncludeSchema:()=>Sz,PrepBoardListRelationFilterSchema:()=>f4,PrepBoardMaxOrderByAggregateInputSchema:()=>Iit,PrepBoardMinOrderByAggregateInputSchema:()=>git,PrepBoardOrderByRelationAggregateInputSchema:()=>_nt,PrepBoardOrderByWithAggregationInputSchema:()=>NV,PrepBoardOrderByWithRelationInputSchema:()=>Fm,PrepBoardScalarFieldEnumSchema:()=>aC,PrepBoardScalarRelationFilterSchema:()=>o2,PrepBoardScalarWhereInputSchema:()=>Mp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>ZA,PrepBoardSchema:()=>Czt,PrepBoardSelectSchema:()=>Tz,PrepBoardSumOrderByAggregateInputSchema:()=>Cit,PrepBoardUncheckedCreateInputSchema:()=>u$,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Fo,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>hw,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>Xu,PrepBoardUncheckedUpdateInputSchema:()=>s$,PrepBoardUncheckedUpdateManyInputSchema:()=>d$,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>Ayt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>vn,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>uL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>G7,PrepBoardUpdateArgsSchema:()=>_jt,PrepBoardUpdateInputSchema:()=>y$,PrepBoardUpdateManyAndReturnArgsSchema:()=>Vjt,PrepBoardUpdateManyArgsSchema:()=>Ljt,PrepBoardUpdateManyMutationInputSchema:()=>QN,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>zk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>yn,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>tD,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>$ct,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>dk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>cL,PrepBoardUpdateWithoutRecipesInputSchema:()=>Y7,PrepBoardUpsertArgsSchema:()=>qjt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>sk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>Gct,PrepBoardWhereInputSchema:()=>to,PrepBoardWhereUniqueInputSchema:()=>ae,PrepHistoryAggregateArgsSchema:()=>KAt,PrepHistoryArgsSchema:()=>imt,PrepHistoryAvgOrderByAggregateInputSchema:()=>ilt,PrepHistoryCountOrderByAggregateInputSchema:()=>alt,PrepHistoryCreateArgsSchema:()=>oZt,PrepHistoryCreateInputSchema:()=>$$,PrepHistoryCreateManyAndReturnArgsSchema:()=>iZt,PrepHistoryCreateManyArgsSchema:()=>aZt,PrepHistoryCreateManyInputSchema:()=>iU,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>EO,PrepHistoryCreateManyRecipeInputSchema:()=>_H,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Mh,PrepHistoryCreateWithoutRecipeInputSchema:()=>$u,PrepHistoryDeleteArgsSchema:()=>lZt,PrepHistoryDeleteManyArgsSchema:()=>uZt,PrepHistoryFindFirstArgsSchema:()=>$At,PrepHistoryFindFirstOrThrowArgsSchema:()=>JAt,PrepHistoryFindManyArgsSchema:()=>YK,PrepHistoryFindUniqueArgsSchema:()=>tSt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>eSt,PrepHistoryGroupByArgsSchema:()=>XAt,PrepHistoryIncludeSchema:()=>Bz,PrepHistoryListRelationFilterSchema:()=>O4,PrepHistoryMaxOrderByAggregateInputSchema:()=>llt,PrepHistoryMinOrderByAggregateInputSchema:()=>rlt,PrepHistoryOrderByRelationAggregateInputSchema:()=>Ent,PrepHistoryOrderByWithAggregationInputSchema:()=>VV,PrepHistoryOrderByWithRelationInputSchema:()=>kb,PrepHistoryScalarFieldEnumSchema:()=>sC,PrepHistoryScalarWhereInputSchema:()=>jp,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>FA,PrepHistorySchema:()=>kzt,PrepHistorySelectSchema:()=>qz,PrepHistorySumOrderByAggregateInputSchema:()=>plt,PrepHistoryUncheckedCreateInputSchema:()=>J$,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Ju,PrepHistoryUncheckedUpdateInputSchema:()=>X$,PrepHistoryUncheckedUpdateManyInputSchema:()=>t4,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Cyt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Zn,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>Q7,PrepHistoryUpdateArgsSchema:()=>rZt,PrepHistoryUpdateInputSchema:()=>K$,PrepHistoryUpdateManyAndReturnArgsSchema:()=>cZt,PrepHistoryUpdateManyArgsSchema:()=>pZt,PrepHistoryUpdateManyMutationInputSchema:()=>JN,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>yk,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>un,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>uk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>H7,PrepHistoryUpsertArgsSchema:()=>nZt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ck,PrepHistoryWhereInputSchema:()=>Za,PrepHistoryWhereUniqueInputSchema:()=>xe,PrepItemAggregateArgsSchema:()=>cAt,PrepItemArgsSchema:()=>emt,PrepItemAvgOrderByAggregateInputSchema:()=>Sit,PrepItemCountOrderByAggregateInputSchema:()=>Ait,PrepItemCreateArgsSchema:()=>Qjt,PrepItemCreateInputSchema:()=>z$,PrepItemCreateManyAndReturnArgsSchema:()=>$jt,PrepItemCreateManyArgsSchema:()=>Gjt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>dO,PrepItemCreateManyAssignedToInputSchema:()=>SH,PrepItemCreateManyInputSchema:()=>KP,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>mw,PrepItemCreateManyPrepBoardInputSchema:()=>bQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>_O,PrepItemCreateManyRecipeInputSchema:()=>LH,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ga,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>u5,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>go,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>ch,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>uI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>vh,PrepItemCreateWithoutAssignedToInputSchema:()=>lu,PrepItemCreateWithoutPrepBoardInputSchema:()=>ps,PrepItemCreateWithoutRecipeInputSchema:()=>ty,PrepItemDeleteArgsSchema:()=>Jjt,PrepItemDeleteManyArgsSchema:()=>eMt,PrepItemFindFirstArgsSchema:()=>rAt,PrepItemFindFirstOrThrowArgsSchema:()=>pAt,PrepItemFindManyArgsSchema:()=>zT,PrepItemFindUniqueArgsSchema:()=>yAt,PrepItemFindUniqueOrThrowArgsSchema:()=>sAt,PrepItemGroupByArgsSchema:()=>uAt,PrepItemIncludeSchema:()=>Pz,PrepItemListRelationFilterSchema:()=>RS,PrepItemMaxOrderByAggregateInputSchema:()=>Tit,PrepItemMinOrderByAggregateInputSchema:()=>Pit,PrepItemOrderByRelationAggregateInputSchema:()=>IB,PrepItemOrderByWithAggregationInputSchema:()=>BV,PrepItemOrderByWithRelationInputSchema:()=>Pb,PrepItemScalarFieldEnumSchema:()=>iC,PrepItemScalarWhereInputSchema:()=>_a,PrepItemScalarWhereWithAggregatesInputSchema:()=>vA,PrepItemSchema:()=>Azt,PrepItemSelectSchema:()=>Uz,PrepItemSumOrderByAggregateInputSchema:()=>Uit,PrepItemUncheckedCreateInputSchema:()=>m$,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>di,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>s5,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>ru,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>cs,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>ey,PrepItemUncheckedUpdateInputSchema:()=>h$,PrepItemUncheckedUpdateManyInputSchema:()=>I$,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Kut,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Ji,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>Xyt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>b5,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Syt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>On,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>n7,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>iK,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>J7,PrepItemUpdateArgsSchema:()=>Kjt,PrepItemUpdateInputSchema:()=>b$,PrepItemUpdateManyAndReturnArgsSchema:()=>tMt,PrepItemUpdateManyArgsSchema:()=>Xjt,PrepItemUpdateManyMutationInputSchema:()=>vT,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>XW,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>oj,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>hk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>vi,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>z5,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>sn,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>KW,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>ej,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>bk,PrepItemUpdateWithoutAssignedToInputSchema:()=>o7,PrepItemUpdateWithoutPrepBoardInputSchema:()=>aK,PrepItemUpdateWithoutRecipeInputSchema:()=>$7,PrepItemUpsertArgsSchema:()=>Yjt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>JW,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>tj,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>mk,PrepItemWhereInputSchema:()=>ka,PrepItemWhereUniqueInputSchema:()=>Q,PrepStatusSchema:()=>tt,ProductionPlanAggregateArgsSchema:()=>Fht,ProductionPlanArgsSchema:()=>BQ,ProductionPlanAvgOrderByAggregateInputSchema:()=>eot,ProductionPlanCountOrderByAggregateInputSchema:()=>tot,ProductionPlanCountOutputTypeArgsSchema:()=>qQ,ProductionPlanCountOutputTypeSelectSchema:()=>hX,ProductionPlanCreateArgsSchema:()=>QUt,ProductionPlanCreateInputSchema:()=>AG,ProductionPlanCreateManyAndReturnArgsSchema:()=>$Ut,ProductionPlanCreateManyArgsSchema:()=>GUt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>gO,ProductionPlanCreateManyCreatedByInputSchema:()=>kH,ProductionPlanCreateManyInputSchema:()=>SP,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>oO,ProductionPlanCreateManyRestaurantInputSchema:()=>hH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>ei,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>Vq,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>mh,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>O6,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>ah,ProductionPlanCreateWithoutCreatedByInputSchema:()=>Iu,ProductionPlanCreateWithoutItemsInputSchema:()=>dv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>$c,ProductionPlanDeleteArgsSchema:()=>JUt,ProductionPlanDeleteManyArgsSchema:()=>eWt,ProductionPlanFindFirstArgsSchema:()=>Bht,ProductionPlanFindFirstOrThrowArgsSchema:()=>qht,ProductionPlanFindManyArgsSchema:()=>eN,ProductionPlanFindUniqueArgsSchema:()=>Eht,ProductionPlanFindUniqueOrThrowArgsSchema:()=>_ht,ProductionPlanGroupByArgsSchema:()=>Dht,ProductionPlanIncludeSchema:()=>Cd,ProductionPlanItemAggregateArgsSchema:()=>Hht,ProductionPlanItemArgsSchema:()=>_zt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>lot,ProductionPlanItemCountOrderByAggregateInputSchema:()=>iot,ProductionPlanItemCreateArgsSchema:()=>oWt,ProductionPlanItemCreateInputSchema:()=>WG,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>iWt,ProductionPlanItemCreateManyArgsSchema:()=>aWt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>CO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>xH,ProductionPlanItemCreateManyInputSchema:()=>TP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>sv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>oH,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>VO,ProductionPlanItemCreateManyRecipeInputSchema:()=>HH,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>oi,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>qq,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>Ao,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>bh,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>_b,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>fh,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>Cu,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>Cc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>ay,ProductionPlanItemDeleteArgsSchema:()=>lWt,ProductionPlanItemDeleteManyArgsSchema:()=>uWt,ProductionPlanItemFindFirstArgsSchema:()=>Lht,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>Vht,ProductionPlanItemFindManyArgsSchema:()=>cT,ProductionPlanItemFindUniqueArgsSchema:()=>Yht,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>Ght,ProductionPlanItemGroupByArgsSchema:()=>Qht,ProductionPlanItemIncludeSchema:()=>Sd,ProductionPlanItemListRelationFilterSchema:()=>CS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>rot,ProductionPlanItemMinOrderByAggregateInputSchema:()=>pot,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>pB,ProductionPlanItemOrderByWithAggregationInputSchema:()=>cV,ProductionPlanItemOrderByWithRelationInputSchema:()=>yb,ProductionPlanItemScalarFieldEnumSchema:()=>jg,ProductionPlanItemScalarWhereInputSchema:()=>Na,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>aA,ProductionPlanItemSchema:()=>Hdt,ProductionPlanItemSelectSchema:()=>Td,ProductionPlanItemSumOrderByAggregateInputSchema:()=>cot,ProductionPlanItemUncheckedCreateInputSchema:()=>RG,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>Ci,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>Fq,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>_o,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>Au,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>Ac,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>iy,ProductionPlanItemUncheckedUpdateInputSchema:()=>xG,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>jG,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>iyt,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>al,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Zut,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>Lq,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Pyt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wn,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>h7,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>h8,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>eJ,ProductionPlanItemUpdateArgsSchema:()=>rWt,ProductionPlanItemUpdateInputSchema:()=>kG,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>cWt,ProductionPlanItemUpdateManyArgsSchema:()=>pWt,ProductionPlanItemUpdateManyMutationInputSchema:()=>kT,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>CR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>QU,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>Tk,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Fi,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>_q,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>zn,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>gR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>HU,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Sk,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>b7,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>b8,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>tJ,ProductionPlanItemUpsertArgsSchema:()=>nWt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>IR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>VU,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ak,ProductionPlanItemWhereInputSchema:()=>ba,ProductionPlanItemWhereUniqueInputSchema:()=>_,ProductionPlanListRelationFilterSchema:()=>zM,ProductionPlanMaxOrderByAggregateInputSchema:()=>oot,ProductionPlanMinOrderByAggregateInputSchema:()=>not,ProductionPlanOrderByRelationAggregateInputSchema:()=>W4,ProductionPlanOrderByWithAggregationInputSchema:()=>pV,ProductionPlanOrderByWithRelationInputSchema:()=>Zm,ProductionPlanScalarFieldEnumSchema:()=>xg,ProductionPlanScalarRelationFilterSchema:()=>u4,ProductionPlanScalarWhereInputSchema:()=>Rl,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>nA,ProductionPlanSchema:()=>Vdt,ProductionPlanSelectSchema:()=>Ad,ProductionPlanSumOrderByAggregateInputSchema:()=>aot,ProductionPlanUncheckedCreateInputSchema:()=>SG,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>gi,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>gu,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>zv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,ProductionPlanUncheckedUpdateInputSchema:()=>PG,ProductionPlanUncheckedUpdateManyInputSchema:()=>UG,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>ayt,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>nl,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Qut,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>m7,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>OE,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>Q8,ProductionPlanUpdateArgsSchema:()=>KUt,ProductionPlanUpdateInputSchema:()=>TG,ProductionPlanUpdateManyAndReturnArgsSchema:()=>tWt,ProductionPlanUpdateManyArgsSchema:()=>XUt,ProductionPlanUpdateManyMutationInputSchema:()=>Ej,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>hR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>BW,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>qi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>Yq,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>Cpt,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>bR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>NW,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>z7,ProductionPlanUpdateWithoutItemsInputSchema:()=>vE,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>H8,ProductionPlanUpsertArgsSchema:()=>YUt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>mR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>wW,ProductionPlanUpsertWithoutItemsInputSchema:()=>gpt,ProductionPlanWhereInputSchema:()=>Ge,ProductionPlanWhereUniqueInputSchema:()=>rt,ProductionStatusSchema:()=>Adt,QualityChecklistAggregateArgsSchema:()=>Obt,QualityChecklistArgsSchema:()=>vj,QualityChecklistAvgOrderByAggregateInputSchema:()=>Ktt,QualityChecklistCountOrderByAggregateInputSchema:()=>Jtt,QualityChecklistCountOutputTypeArgsSchema:()=>jQ,QualityChecklistCountOutputTypeSelectSchema:()=>sX,QualityChecklistCreateArgsSchema:()=>yPt,QualityChecklistCreateInputSchema:()=>UY,QualityChecklistCreateManyAndReturnArgsSchema:()=>zPt,QualityChecklistCreateManyArgsSchema:()=>dPt,QualityChecklistCreateManyInputSchema:()=>sP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>aO,QualityChecklistCreateManyRestaurantInputSchema:()=>gH,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>tr,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>XB,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>h2,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>h6,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>b6,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>lh,QualityChecklistCreateWithoutCompletionsInputSchema:()=>jZ,QualityChecklistCreateWithoutItemsInputSchema:()=>RZ,QualityChecklistCreateWithoutRestaurantInputSchema:()=>tu,QualityChecklistDeleteArgsSchema:()=>mPt,QualityChecklistDeleteManyArgsSchema:()=>gPt,QualityChecklistFindFirstArgsSchema:()=>Zbt,QualityChecklistFindFirstOrThrowArgsSchema:()=>vbt,QualityChecklistFindManyArgsSchema:()=>ZK,QualityChecklistFindUniqueArgsSchema:()=>wbt,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Nbt,QualityChecklistGroupByArgsSchema:()=>fbt,QualityChecklistIncludeSchema:()=>td,QualityChecklistListRelationFilterSchema:()=>T4,QualityChecklistMaxOrderByAggregateInputSchema:()=>Xtt,QualityChecklistMinOrderByAggregateInputSchema:()=>tet,QualityChecklistOrderByRelationAggregateInputSchema:()=>znt,QualityChecklistOrderByWithAggregationInputSchema:()=>KL,QualityChecklistOrderByWithRelationInputSchema:()=>Lp,QualityChecklistScalarFieldEnumSchema:()=>gg,QualityChecklistScalarRelationFilterSchema:()=>nM,QualityChecklistScalarWhereInputSchema:()=>Tp,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>QC,QualityChecklistSchema:()=>fdt,QualityChecklistSelectSchema:()=>ed,QualityChecklistSumOrderByAggregateInputSchema:()=>eet,QualityChecklistUncheckedCreateInputSchema:()=>WY,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>dr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>MZ,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>kZ,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>eu,QualityChecklistUncheckedUpdateInputSchema:()=>kY,QualityChecklistUncheckedUpdateManyInputSchema:()=>xY,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Gut,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Fr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>tE,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>KD,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>J8,QualityChecklistUpdateArgsSchema:()=>bPt,QualityChecklistUpdateInputSchema:()=>RY,QualityChecklistUpdateManyAndReturnArgsSchema:()=>IPt,QualityChecklistUpdateManyArgsSchema:()=>hPt,QualityChecklistUpdateManyMutationInputSchema:()=>fN,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>LW,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>nq,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>C2,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Frt,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Brt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>_W,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>XD,QualityChecklistUpdateWithoutItemsInputSchema:()=>JD,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>$8,QualityChecklistUpsertArgsSchema:()=>sPt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>EW,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>qrt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Nrt,QualityChecklistWhereInputSchema:()=>Ze,QualityChecklistWhereUniqueInputSchema:()=>Yt,QueryModeSchema:()=>jj,RecipeAggregateArgsSchema:()=>Zgt,RecipeArgsSchema:()=>Xt,RecipeAvgOrderByAggregateInputSchema:()=>Jnt,RecipeCountOrderByAggregateInputSchema:()=>$nt,RecipeCountOutputTypeArgsSchema:()=>YQ,RecipeCountOutputTypeSelectSchema:()=>PX,RecipeCreateArgsSchema:()=>xkt,RecipeCreateInputSchema:()=>J1,RecipeCreateManyAndReturnArgsSchema:()=>Zkt,RecipeCreateManyArgsSchema:()=>Mkt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>ZO,RecipeCreateManyCookBookInputSchema:()=>qH,RecipeCreateManyInputSchema:()=>BP,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>Jv,RecipeCreateManyRestaurantInputSchema:()=>sH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>_2,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>zq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>Lz,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>c5,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>Ql,RecipeCreateNestedManyWithoutTagsInputSchema:()=>Ult,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>ylt,RecipeCreateNestedOneWithoutEquipmentInputSchema:()=>NB,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>Glt,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>nF,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>cF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>Alt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>I5,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>clt,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>mlt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>Jlt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>KF,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>Hq,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>_lt,RecipeCreateNestedOneWithoutStorageInputSchema:()=>dlt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>hlt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>OT,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>Kq,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>glt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Wh,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>K5,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Fb,RecipeCreateOrConnectWithoutEquipmentInputSchema:()=>y6,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>E3,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>c3,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>s3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>n6,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>w3,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>dI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>J5,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>t6,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>cI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>_3,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>M3,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>f6,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>P3,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Xb,RecipeCreateOrConnectWithoutStorageInputSchema:()=>X5,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Eb,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>e6,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>r6,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>D6,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>o6,RecipeCreateWithoutCookBookInputSchema:()=>Fu,RecipeCreateWithoutCriticalPointsInputSchema:()=>BM,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>zc,RecipeCreateWithoutEquipmentInputSchema:()=>mZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>Hw,RecipeCreateWithoutIngredientsInputSchema:()=>If,RecipeCreateWithoutInstructionsInputSchema:()=>Pf,RecipeCreateWithoutLaborCostsInputSchema:()=>YM,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>jw,RecipeCreateWithoutMenuItemsInputSchema:()=>zs,RecipeCreateWithoutNutritionalInfoInputSchema:()=>wM,RecipeCreateWithoutPhotosInputSchema:()=>EM,RecipeCreateWithoutPrepBoardsInputSchema:()=>ls,RecipeCreateWithoutPrepHistoryInputSchema:()=>Yw,RecipeCreateWithoutPrepItemsInputSchema:()=>Iw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>mv,RecipeCreateWithoutRecipeStatsInputSchema:()=>Xf,RecipeCreateWithoutRestaurantInputSchema:()=>Fc,RecipeCreateWithoutStorageInputSchema:()=>FM,RecipeCreateWithoutTagsInputSchema:()=>Ic,RecipeCreateWithoutTemperaturesInputSchema:()=>LM,RecipeCreateWithoutVersionsInputSchema:()=>nZ,RecipeCreateWithoutWithdrawalsInputSchema:()=>Rv,RecipeCreateWithoutYieldsInputSchema:()=>HM,RecipeCreateimageUrlsInputSchema:()=>Ut,RecipeCriticalPointAggregateArgsSchema:()=>mmt,RecipeCriticalPointArgsSchema:()=>xzt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>DX,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>FX,RecipeCriticalPointCreateArgsSchema:()=>ySt,RecipeCriticalPointCreateInputSchema:()=>I0,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>zSt,RecipeCriticalPointCreateManyArgsSchema:()=>dSt,RecipeCriticalPointCreateManyInputSchema:()=>tP,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>XO,RecipeCriticalPointCreateManyRecipeInputSchema:()=>XH,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>Mo,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>Lh,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Sy,RecipeCriticalPointDeleteArgsSchema:()=>mSt,RecipeCriticalPointDeleteManyArgsSchema:()=>gSt,RecipeCriticalPointFindFirstArgsSchema:()=>dmt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>zmt,RecipeCriticalPointFindManyArgsSchema:()=>PK,RecipeCriticalPointFindUniqueArgsSchema:()=>hmt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>Imt,RecipeCriticalPointGroupByArgsSchema:()=>bmt,RecipeCriticalPointIncludeSchema:()=>js,RecipeCriticalPointListRelationFilterSchema:()=>D4,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>EX,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>_X,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>Ynt,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>FL,RecipeCriticalPointOrderByWithRelationInputSchema:()=>Jm,RecipeCriticalPointScalarFieldEnumSchema:()=>rg,RecipeCriticalPointScalarWhereInputSchema:()=>wp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>fC,RecipeCriticalPointSchema:()=>Tdt,RecipeCriticalPointSelectSchema:()=>Ms,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>LX,RecipeCriticalPointUncheckedCreateInputSchema:()=>g0,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Xo,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>Ty,RecipeCriticalPointUncheckedUpdateInputSchema:()=>A0,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>S0,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>vyt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Hn,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>gJ,RecipeCriticalPointUpdateArgsSchema:()=>bSt,RecipeCriticalPointUpdateInputSchema:()=>C0,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>ISt,RecipeCriticalPointUpdateManyArgsSchema:()=>hSt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>RN,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>$k,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Pn,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Gk,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>IJ,RecipeCriticalPointUpsertArgsSchema:()=>sSt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Yk,RecipeCriticalPointWhereInputSchema:()=>oa,RecipeCriticalPointWhereUniqueInputSchema:()=>me,RecipeDeleteArgsSchema:()=>vkt,RecipeDeleteManyArgsSchema:()=>Nkt,RecipeEquipmentAggregateArgsSchema:()=>Sbt,RecipeEquipmentArgsSchema:()=>fzt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>Ftt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>qtt,RecipeEquipmentCreateArgsSchema:()=>QTt,RecipeEquipmentCreateInputSchema:()=>mY,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>$Tt,RecipeEquipmentCreateManyArgsSchema:()=>GTt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>dZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>GV,RecipeEquipmentCreateManyInputSchema:()=>uP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>YO,RecipeEquipmentCreateManyRecipeInputSchema:()=>GH,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>kf,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>rQ,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>kB,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>yF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>vb,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>qh,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>Xh,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>tc,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>sy,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>Fy,RecipeEquipmentDeleteArgsSchema:()=>JTt,RecipeEquipmentDeleteManyArgsSchema:()=>ePt,RecipeEquipmentFindFirstArgsSchema:()=>Cbt,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>Abt,RecipeEquipmentFindManyArgsSchema:()=>iT,RecipeEquipmentFindUniqueArgsSchema:()=>Pbt,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>Ubt,RecipeEquipmentGroupByArgsSchema:()=>Tbt,RecipeEquipmentIncludeSchema:()=>$s,RecipeEquipmentListRelationFilterSchema:()=>IS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>Dtt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>Ett,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>eB,RecipeEquipmentOrderByWithAggregationInputSchema:()=>$L,RecipeEquipmentOrderByWithRelationInputSchema:()=>nb,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>CN,RecipeEquipmentScalarFieldEnumSchema:()=>hg,RecipeEquipmentScalarWhereInputSchema:()=>wa,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>VC,RecipeEquipmentSchema:()=>vdt,RecipeEquipmentSelectSchema:()=>Js,RecipeEquipmentSumOrderByAggregateInputSchema:()=>_tt,RecipeEquipmentUncheckedCreateInputSchema:()=>bY,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>jB,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>sF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>ec,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>dy,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>Dy,RecipeEquipmentUncheckedUpdateInputSchema:()=>IY,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>gY,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>Sut,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>fB,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>kyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>Eyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>bF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fn,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>J3,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>cJ,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>NJ,RecipeEquipmentUpdateArgsSchema:()=>KTt,RecipeEquipmentUpdateInputSchema:()=>hY,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>tPt,RecipeEquipmentUpdateManyArgsSchema:()=>XTt,RecipeEquipmentUpdateManyMutationInputSchema:()=>PT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>hU,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>fk,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>Tx,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>vB,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>mF,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>In,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>bU,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ok,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>Sx,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>$3,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>pJ,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>wJ,RecipeEquipmentUpsertArgsSchema:()=>YTt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>mU,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>vk,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>Ax,RecipeEquipmentWhereInputSchema:()=>pa,RecipeEquipmentWhereUniqueInputSchema:()=>q,RecipeFindFirstArgsSchema:()=>jgt,RecipeFindFirstOrThrowArgsSchema:()=>Mgt,RecipeFindManyArgsSchema:()=>up,RecipeFindUniqueArgsSchema:()=>Ogt,RecipeFindUniqueOrThrowArgsSchema:()=>fgt,RecipeGroupByArgsSchema:()=>vgt,RecipeIncludeSchema:()=>$d,RecipeIngredientAggregateArgsSchema:()=>Lgt,RecipeIngredientArgsSchema:()=>Jzt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>yat,RecipeIngredientCountOrderByAggregateInputSchema:()=>uat,RecipeIngredientCreateArgsSchema:()=>Qkt,RecipeIngredientCreateInputSchema:()=>r9,RecipeIngredientCreateManyAndReturnArgsSchema:()=>$kt,RecipeIngredientCreateManyArgsSchema:()=>Gkt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>uf,RecipeIngredientCreateManyIngredientInputSchema:()=>eQ,RecipeIngredientCreateManyInputSchema:()=>FP,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>qO,RecipeIngredientCreateManyRecipeInputSchema:()=>FH,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>iZ,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>QV,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>WI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>so,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>fT,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>Hh,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Rh,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>Mb,RecipeIngredientCreateWithoutIngredientInputSchema:()=>Wy,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Eu,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>$p,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>rp,RecipeIngredientDeleteArgsSchema:()=>Jkt,RecipeIngredientDeleteManyArgsSchema:()=>ext,RecipeIngredientFindFirstArgsSchema:()=>Egt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>_gt,RecipeIngredientFindManyArgsSchema:()=>yT,RecipeIngredientFindUniqueArgsSchema:()=>Hgt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>Qgt,RecipeIngredientGroupByArgsSchema:()=>Vgt,RecipeIngredientIncludeSchema:()=>tz,RecipeIngredientListRelationFilterSchema:()=>hS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>sat,RecipeIngredientMinOrderByAggregateInputSchema:()=>dat,RecipeIngredientOrderByRelationAggregateInputSchema:()=>XN,RecipeIngredientOrderByWithAggregationInputSchema:()=>WV,RecipeIngredientOrderByWithRelationInputSchema:()=>Cb,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>AN,RecipeIngredientScalarFieldEnumSchema:()=>Qg,RecipeIngredientScalarWhereInputSchema:()=>fa,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>AA,RecipeIngredientSchema:()=>czt,RecipeIngredientSelectSchema:()=>ez,RecipeIngredientSumOrderByAggregateInputSchema:()=>zat,RecipeIngredientUncheckedCreateInputSchema:()=>p9,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>OI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>fo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>qT,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Ry,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>_u,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>Jp,RecipeIngredientUncheckedUpdateInputSchema:()=>u9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>y9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>fyt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>GI,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>byt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>kn,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Cut,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>HT,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>TJ,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>q7,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>Q3,RecipeIngredientUpdateArgsSchema:()=>Kkt,RecipeIngredientUpdateInputSchema:()=>c9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>txt,RecipeIngredientUpdateManyArgsSchema:()=>Xkt,RecipeIngredientUpdateManyMutationInputSchema:()=>jT,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>ox,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>XR,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>yU,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>DI,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>ln,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>ET,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ex,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>KR,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>uU,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>SJ,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>B7,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>H3,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>Qr,RecipeIngredientUpsertArgsSchema:()=>Ykt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>tx,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>JR,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>cU,RecipeIngredientWhereInputSchema:()=>Pa,RecipeIngredientWhereUniqueInputSchema:()=>V,RecipeInstructionAggregateArgsSchema:()=>$gt,RecipeInstructionArgsSchema:()=>$Q,RecipeInstructionAvgOrderByAggregateInputSchema:()=>bat,RecipeInstructionCountOrderByAggregateInputSchema:()=>mat,RecipeInstructionCountOutputTypeArgsSchema:()=>JQ,RecipeInstructionCountOutputTypeSelectSchema:()=>WX,RecipeInstructionCreateArgsSchema:()=>oxt,RecipeInstructionCreateInputSchema:()=>s9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>ixt,RecipeInstructionCreateManyArgsSchema:()=>axt,RecipeInstructionCreateManyInputSchema:()=>DP,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>FO,RecipeInstructionCreateManyRecipeInputSchema:()=>DH,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>lZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>YV,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>zo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>wT,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>qB,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>d6,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>kh,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>Zb,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>gZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>Lu,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>Kp,RecipeInstructionDeleteArgsSchema:()=>lxt,RecipeInstructionDeleteManyArgsSchema:()=>uxt,RecipeInstructionFindFirstArgsSchema:()=>Ygt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>Ggt,RecipeInstructionFindManyArgsSchema:()=>iN,RecipeInstructionFindUniqueArgsSchema:()=>Kgt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>Xgt,RecipeInstructionGroupByArgsSchema:()=>Jgt,RecipeInstructionIncludeSchema:()=>oz,RecipeInstructionListRelationFilterSchema:()=>tM,RecipeInstructionMaxOrderByAggregateInputSchema:()=>hat,RecipeInstructionMinOrderByAggregateInputSchema:()=>Iat,RecipeInstructionNullableScalarRelationFilterSchema:()=>n4,RecipeInstructionOrderByRelationAggregateInputSchema:()=>e4,RecipeInstructionOrderByWithAggregationInputSchema:()=>RV,RecipeInstructionOrderByWithRelationInputSchema:()=>fm,RecipeInstructionRecipeIdStepNumberCompoundUniqueInputSchema:()=>SN,RecipeInstructionScalarFieldEnumSchema:()=>Yg,RecipeInstructionScalarWhereInputSchema:()=>Il,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>SA,RecipeInstructionSchema:()=>uzt,RecipeInstructionSelectSchema:()=>nz,RecipeInstructionSumOrderByAggregateInputSchema:()=>gat,RecipeInstructionUncheckedCreateInputSchema:()=>d9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>FT,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>CZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Vu,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>Xp,RecipeInstructionUncheckedUpdateInputSchema:()=>m9,RecipeInstructionUncheckedUpdateManyInputSchema:()=>b9,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>hyt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>xn,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Aut,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>QT,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>HD,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>D7,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>G3,RecipeInstructionUpdateArgsSchema:()=>rxt,RecipeInstructionUpdateInputSchema:()=>z9,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>cxt,RecipeInstructionUpdateManyArgsSchema:()=>pxt,RecipeInstructionUpdateManyMutationInputSchema:()=>Hj,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>ok,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>zU,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>rn,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>_T,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>EB,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Zrt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ek,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>dU,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>VD,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>F7,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>Y3,RecipeInstructionUpsertArgsSchema:()=>nxt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>tk,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>sU,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Mrt,RecipeInstructionWhereInputSchema:()=>Ne,RecipeInstructionWhereUniqueInputSchema:()=>pt,RecipeLaborCostAggregateArgsSchema:()=>Hmt,RecipeLaborCostArgsSchema:()=>vzt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>dtt,RecipeLaborCostCountOrderByAggregateInputSchema:()=>stt,RecipeLaborCostCreateArgsSchema:()=>oTt,RecipeLaborCostCreateInputSchema:()=>L0,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>iTt,RecipeLaborCostCreateManyArgsSchema:()=>aTt,RecipeLaborCostCreateManyInputSchema:()=>iP,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>JO,RecipeLaborCostCreateManyRecipeInputSchema:()=>KH,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>xo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>_h,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>Cy,RecipeLaborCostDeleteArgsSchema:()=>lTt,RecipeLaborCostDeleteManyArgsSchema:()=>uTt,RecipeLaborCostFindFirstArgsSchema:()=>Lmt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>Vmt,RecipeLaborCostFindManyArgsSchema:()=>kK,RecipeLaborCostFindUniqueArgsSchema:()=>Ymt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>Gmt,RecipeLaborCostGroupByArgsSchema:()=>Qmt,RecipeLaborCostIncludeSchema:()=>Fs,RecipeLaborCostListRelationFilterSchema:()=>q4,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>ztt,RecipeLaborCostMinOrderByAggregateInputSchema:()=>mtt,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>Qnt,RecipeLaborCostOrderByWithAggregationInputSchema:()=>VL,RecipeLaborCostOrderByWithRelationInputSchema:()=>eb,RecipeLaborCostScalarFieldEnumSchema:()=>sg,RecipeLaborCostScalarWhereInputSchema:()=>fp,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>FC,RecipeLaborCostSchema:()=>kdt,RecipeLaborCostSelectSchema:()=>Ds,RecipeLaborCostSumOrderByAggregateInputSchema:()=>btt,RecipeLaborCostUncheckedCreateInputSchema:()=>V0,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Jo,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>Ay,RecipeLaborCostUncheckedUpdateInputSchema:()=>Q0,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>Y0,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>Zyt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ln,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>hJ,RecipeLaborCostUpdateArgsSchema:()=>rTt,RecipeLaborCostUpdateInputSchema:()=>H0,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>cTt,RecipeLaborCostUpdateManyArgsSchema:()=>pTt,RecipeLaborCostUpdateManyMutationInputSchema:()=>MN,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Qk,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Sn,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>bJ,RecipeLaborCostUpsertArgsSchema:()=>nTt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Vk,RecipeLaborCostWhereInputSchema:()=>la,RecipeLaborCostWhereUniqueInputSchema:()=>ge,RecipeListRelationFilterSchema:()=>ap,RecipeMaxOrderByAggregateInputSchema:()=>Knt,RecipeMinOrderByAggregateInputSchema:()=>Xnt,RecipeNullableScalarRelationFilterSchema:()=>s4,RecipeNutritionAggregateArgsSchema:()=>cmt,RecipeNutritionArgsSchema:()=>PQ,RecipeNutritionAvgOrderByAggregateInputSchema:()=>wX,RecipeNutritionCountOrderByAggregateInputSchema:()=>fX,RecipeNutritionCreateArgsSchema:()=>oSt,RecipeNutritionCreateInputSchema:()=>s0,RecipeNutritionCreateManyAndReturnArgsSchema:()=>iSt,RecipeNutritionCreateManyArgsSchema:()=>aSt,RecipeNutritionCreateManyInputSchema:()=>XT,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>jo,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>KO,RecipeNutritionCreateWithoutRecipeInputSchema:()=>JS,RecipeNutritionDeleteArgsSchema:()=>lSt,RecipeNutritionDeleteManyArgsSchema:()=>uSt,RecipeNutritionFindFirstArgsSchema:()=>lmt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>rmt,RecipeNutritionFindManyArgsSchema:()=>pmt,RecipeNutritionFindUniqueArgsSchema:()=>ymt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>smt,RecipeNutritionGroupByArgsSchema:()=>umt,RecipeNutritionIncludeSchema:()=>ks,RecipeNutritionMaxOrderByAggregateInputSchema:()=>NX,RecipeNutritionMinOrderByAggregateInputSchema:()=>BX,RecipeNutritionNullableScalarRelationFilterSchema:()=>F4,RecipeNutritionOrderByWithAggregationInputSchema:()=>qL,RecipeNutritionOrderByWithRelationInputSchema:()=>Wm,RecipeNutritionScalarFieldEnumSchema:()=>lg,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>OC,RecipeNutritionSchema:()=>Sdt,RecipeNutritionSelectSchema:()=>xs,RecipeNutritionSumOrderByAggregateInputSchema:()=>qX,RecipeNutritionUncheckedCreateInputSchema:()=>d0,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Ko,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>KS,RecipeNutritionUncheckedUpdateInputSchema:()=>m0,RecipeNutritionUncheckedUpdateManyInputSchema:()=>h0,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Vn,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>af,RecipeNutritionUpdateArgsSchema:()=>rSt,RecipeNutritionUpdateInputSchema:()=>z0,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>cSt,RecipeNutritionUpdateManyArgsSchema:()=>pSt,RecipeNutritionUpdateManyMutationInputSchema:()=>b0,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>Tn,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>n3,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>nf,RecipeNutritionUpsertArgsSchema:()=>nSt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>o3,RecipeNutritionWhereInputSchema:()=>Be,RecipeNutritionWhereUniqueInputSchema:()=>Bl,RecipeOrderByRelationAggregateInputSchema:()=>gS,RecipeOrderByWithAggregationInputSchema:()=>PV,RecipeOrderByWithRelationInputSchema:()=>oo,RecipePhotoAggregateArgsSchema:()=>kmt,RecipePhotoArgsSchema:()=>jzt,RecipePhotoAvgOrderByAggregateInputSchema:()=>JX,RecipePhotoCountOrderByAggregateInputSchema:()=>$X,RecipePhotoCreateArgsSchema:()=>xSt,RecipePhotoCreateInputSchema:()=>x0,RecipePhotoCreateManyAndReturnArgsSchema:()=>ZSt,RecipePhotoCreateManyArgsSchema:()=>MSt,RecipePhotoCreateManyInputSchema:()=>oP,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>ef,RecipePhotoCreateManyRecipeInputSchema:()=>tQ,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>Vh,RecipePhotoCreateWithoutRecipeInputSchema:()=>Py,RecipePhotoDeleteArgsSchema:()=>vSt,RecipePhotoDeleteManyArgsSchema:()=>NSt,RecipePhotoFindFirstArgsSchema:()=>Wmt,RecipePhotoFindFirstOrThrowArgsSchema:()=>Rmt,RecipePhotoFindManyArgsSchema:()=>UK,RecipePhotoFindUniqueArgsSchema:()=>jmt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>Mmt,RecipePhotoGroupByArgsSchema:()=>xmt,RecipePhotoIncludeSchema:()=>Os,RecipePhotoListRelationFilterSchema:()=>_4,RecipePhotoMaxOrderByAggregateInputSchema:()=>KX,RecipePhotoMinOrderByAggregateInputSchema:()=>XX,RecipePhotoOrderByRelationAggregateInputSchema:()=>Gnt,RecipePhotoOrderByWithAggregationInputSchema:()=>EL,RecipePhotoOrderByWithRelationInputSchema:()=>Km,RecipePhotoScalarFieldEnumSchema:()=>cg,RecipePhotoScalarWhereInputSchema:()=>Np,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>NC,RecipePhotoSchema:()=>Udt,RecipePhotoSelectSchema:()=>fs,RecipePhotoSumOrderByAggregateInputSchema:()=>ttt,RecipePhotoUncheckedCreateInputSchema:()=>j0,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>en,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Uy,RecipePhotoUncheckedUpdateInputSchema:()=>Z0,RecipePhotoUncheckedUpdateManyInputSchema:()=>v0,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>Oyt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Yn,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>AJ,RecipePhotoUpdateArgsSchema:()=>OSt,RecipePhotoUpdateInputSchema:()=>M0,RecipePhotoUpdateManyAndReturnArgsSchema:()=>wSt,RecipePhotoUpdateManyArgsSchema:()=>fSt,RecipePhotoUpdateManyMutationInputSchema:()=>kN,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>Xk,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Wn,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Kk,RecipePhotoUpdateWithoutRecipeInputSchema:()=>CJ,RecipePhotoUpsertArgsSchema:()=>jSt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Jk,RecipePhotoWhereInputSchema:()=>na,RecipePhotoWhereUniqueInputSchema:()=>be,RecipeScalarFieldEnumSchema:()=>Vg,RecipeScalarRelationFilterSchema:()=>de,RecipeScalarWhereInputSchema:()=>re,RecipeScalarWhereWithAggregatesInputSchema:()=>gA,RecipeSchema:()=>rzt,RecipeSelectSchema:()=>Jd,RecipeStatsAggregateArgsSchema:()=>RCt,RecipeStatsArgsSchema:()=>e0,RecipeStatsAvgOrderByAggregateInputSchema:()=>_at,RecipeStatsCountOrderByAggregateInputSchema:()=>Eat,RecipeStatsCreateArgsSchema:()=>Qxt,RecipeStatsCreateInputSchema:()=>N9,RecipeStatsCreateManyAndReturnArgsSchema:()=>$xt,RecipeStatsCreateManyArgsSchema:()=>Gxt,RecipeStatsCreateManyInputSchema:()=>HP,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Oo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>of,RecipeStatsCreateWithoutRecipeInputSchema:()=>eT,RecipeStatsDeleteArgsSchema:()=>Jxt,RecipeStatsDeleteManyArgsSchema:()=>ejt,RecipeStatsFindFirstArgsSchema:()=>PCt,RecipeStatsFindFirstOrThrowArgsSchema:()=>UCt,RecipeStatsFindManyArgsSchema:()=>WCt,RecipeStatsFindUniqueArgsSchema:()=>xCt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>jCt,RecipeStatsGroupByArgsSchema:()=>kCt,RecipeStatsIncludeSchema:()=>sz,RecipeStatsMaxOrderByAggregateInputSchema:()=>Lat,RecipeStatsMinOrderByAggregateInputSchema:()=>Vat,RecipeStatsNullableScalarRelationFilterSchema:()=>L4,RecipeStatsOrderByWithAggregationInputSchema:()=>ZV,RecipeStatsOrderByWithRelationInputSchema:()=>Nm,RecipeStatsScalarFieldEnumSchema:()=>Xg,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>RA,RecipeStatsSchema:()=>mzt,RecipeStatsSelectSchema:()=>dz,RecipeStatsSumOrderByAggregateInputSchema:()=>Hat,RecipeStatsUncheckedCreateInputSchema:()=>B9,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>on,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>oT,RecipeStatsUncheckedUpdateInputSchema:()=>F9,RecipeStatsUncheckedUpdateManyInputSchema:()=>E9,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Gn,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>cf,RecipeStatsUpdateArgsSchema:()=>Kxt,RecipeStatsUpdateInputSchema:()=>q9,RecipeStatsUpdateManyAndReturnArgsSchema:()=>tjt,RecipeStatsUpdateManyArgsSchema:()=>Xxt,RecipeStatsUpdateManyMutationInputSchema:()=>D9,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Rn,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>r3,RecipeStatsUpdateWithoutRecipeInputSchema:()=>pf,RecipeStatsUpsertArgsSchema:()=>Yxt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>l3,RecipeStatsWhereInputSchema:()=>Fe,RecipeStatsWhereUniqueInputSchema:()=>Fl,RecipeStorageAggregateArgsSchema:()=>Smt,RecipeStorageArgsSchema:()=>UQ,RecipeStorageAvgOrderByAggregateInputSchema:()=>HX,RecipeStorageCountOrderByAggregateInputSchema:()=>VX,RecipeStorageCreateArgsSchema:()=>CSt,RecipeStorageCreateInputSchema:()=>T0,RecipeStorageCreateManyAndReturnArgsSchema:()=>TSt,RecipeStorageCreateManyArgsSchema:()=>SSt,RecipeStorageCreateManyInputSchema:()=>eP,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>Zo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>tf,RecipeStorageCreateWithoutRecipeInputSchema:()=>XS,RecipeStorageDeleteArgsSchema:()=>PSt,RecipeStorageDeleteManyArgsSchema:()=>kSt,RecipeStorageFindFirstArgsSchema:()=>gmt,RecipeStorageFindFirstOrThrowArgsSchema:()=>Cmt,RecipeStorageFindManyArgsSchema:()=>Amt,RecipeStorageFindUniqueArgsSchema:()=>Pmt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>Umt,RecipeStorageGroupByArgsSchema:()=>Tmt,RecipeStorageIncludeSchema:()=>Zs,RecipeStorageMaxOrderByAggregateInputSchema:()=>QX,RecipeStorageMinOrderByAggregateInputSchema:()=>YX,RecipeStorageNullableScalarRelationFilterSchema:()=>E4,RecipeStorageOrderByWithAggregationInputSchema:()=>DL,RecipeStorageOrderByWithRelationInputSchema:()=>Rm,RecipeStorageScalarFieldEnumSchema:()=>pg,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>wC,RecipeStorageSchema:()=>Pdt,RecipeStorageSelectSchema:()=>vs,RecipeStorageSumOrderByAggregateInputSchema:()=>GX,RecipeStorageUncheckedCreateInputSchema:()=>P0,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>tn,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>tT,RecipeStorageUncheckedUpdateInputSchema:()=>W0,RecipeStorageUncheckedUpdateManyInputSchema:()=>k0,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Qn,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>rf,RecipeStorageUpdateArgsSchema:()=>USt,RecipeStorageUpdateInputSchema:()=>U0,RecipeStorageUpdateManyAndReturnArgsSchema:()=>RSt,RecipeStorageUpdateManyArgsSchema:()=>WSt,RecipeStorageUpdateManyMutationInputSchema:()=>R0,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Un,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>i3,RecipeStorageUpdateWithoutRecipeInputSchema:()=>lf,RecipeStorageUpsertArgsSchema:()=>ASt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>a3,RecipeStorageWhereInputSchema:()=>qe,RecipeStorageWhereUniqueInputSchema:()=>ql,RecipeSumOrderByAggregateInputSchema:()=>tat,RecipeTagAggregateArgsSchema:()=>Sht,RecipeTagArgsSchema:()=>Fzt,RecipeTagAvgOrderByAggregateInputSchema:()=>Fet,RecipeTagCountOrderByAggregateInputSchema:()=>qet,RecipeTagCountOutputTypeArgsSchema:()=>NQ,RecipeTagCountOutputTypeSelectSchema:()=>bX,RecipeTagCreateArgsSchema:()=>CUt,RecipeTagCreateInputSchema:()=>lG,RecipeTagCreateManyAndReturnArgsSchema:()=>TUt,RecipeTagCreateManyArgsSchema:()=>SUt,RecipeTagCreateManyInputSchema:()=>gP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>To,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>Nh,RecipeTagCreateWithoutRecipesInputSchema:()=>py,RecipeTagDeleteArgsSchema:()=>PUt,RecipeTagDeleteManyArgsSchema:()=>kUt,RecipeTagFindFirstArgsSchema:()=>Cht,RecipeTagFindFirstOrThrowArgsSchema:()=>Aht,RecipeTagFindManyArgsSchema:()=>OK,RecipeTagFindUniqueArgsSchema:()=>Pht,RecipeTagFindUniqueOrThrowArgsSchema:()=>Uht,RecipeTagGroupByArgsSchema:()=>Tht,RecipeTagIncludeSchema:()=>zd,RecipeTagListRelationFilterSchema:()=>w4,RecipeTagMaxOrderByAggregateInputSchema:()=>Det,RecipeTagMinOrderByAggregateInputSchema:()=>Eet,RecipeTagOrderByRelationAggregateInputSchema:()=>Lnt,RecipeTagOrderByWithAggregationInputSchema:()=>iV,RecipeTagOrderByWithRelationInputSchema:()=>pb,RecipeTagScalarFieldEnumSchema:()=>Wg,RecipeTagScalarWhereInputSchema:()=>Zp,RecipeTagScalarWhereWithAggregatesInputSchema:()=>tA,RecipeTagSchema:()=>Edt,RecipeTagSelectSchema:()=>md,RecipeTagSumOrderByAggregateInputSchema:()=>_et,RecipeTagUncheckedCreateInputSchema:()=>rG,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Vo,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>cy,RecipeTagUncheckedUpdateInputSchema:()=>cG,RecipeTagUncheckedUpdateManyInputSchema:()=>uG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>Wyt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Bn,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>iJ,RecipeTagUpdateArgsSchema:()=>UUt,RecipeTagUpdateInputSchema:()=>pG,RecipeTagUpdateManyAndReturnArgsSchema:()=>RUt,RecipeTagUpdateManyArgsSchema:()=>WUt,RecipeTagUpdateManyMutationInputSchema:()=>NN,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>xk,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>bn,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>kk,RecipeTagUpdateWithoutRecipesInputSchema:()=>aJ,RecipeTagUpsertArgsSchema:()=>AUt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Rk,RecipeTagWhereInputSchema:()=>da,RecipeTagWhereUniqueInputSchema:()=>Ae,RecipeTemperatureAggregateArgsSchema:()=>Omt,RecipeTemperatureArgsSchema:()=>Mzt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>ntt,RecipeTemperatureCountOrderByAggregateInputSchema:()=>ott,RecipeTemperatureCreateArgsSchema:()=>BSt,RecipeTemperatureCreateInputSchema:()=>O0,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>DSt,RecipeTemperatureCreateManyArgsSchema:()=>FSt,RecipeTemperatureCreateManyInputSchema:()=>nP,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>GO,RecipeTemperatureCreateManyRecipeInputSchema:()=>$H,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Ro,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>Dh,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>by,RecipeTemperatureDeleteArgsSchema:()=>ESt,RecipeTemperatureDeleteManyArgsSchema:()=>HSt,RecipeTemperatureFindFirstArgsSchema:()=>Zmt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>vmt,RecipeTemperatureFindManyArgsSchema:()=>WK,RecipeTemperatureFindUniqueArgsSchema:()=>wmt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Nmt,RecipeTemperatureGroupByArgsSchema:()=>fmt,RecipeTemperatureIncludeSchema:()=>ws,RecipeTemperatureListRelationFilterSchema:()=>N4,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>att,RecipeTemperatureMinOrderByAggregateInputSchema:()=>itt,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>Vnt,RecipeTemperatureOrderByWithAggregationInputSchema:()=>_L,RecipeTemperatureOrderByWithRelationInputSchema:()=>Xm,RecipeTemperatureScalarFieldEnumSchema:()=>ug,RecipeTemperatureScalarWhereInputSchema:()=>vp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>BC,RecipeTemperatureSchema:()=>Wdt,RecipeTemperatureSelectSchema:()=>Ns,RecipeTemperatureSumOrderByAggregateInputSchema:()=>ltt,RecipeTemperatureUncheckedCreateInputSchema:()=>f0,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Go,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>hy,RecipeTemperatureUncheckedUpdateInputSchema:()=>N0,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>B0,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>jyt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>En,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>dJ,RecipeTemperatureUpdateArgsSchema:()=>_St,RecipeTemperatureUpdateInputSchema:()=>w0,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>VSt,RecipeTemperatureUpdateManyArgsSchema:()=>LSt,RecipeTemperatureUpdateManyMutationInputSchema:()=>xN,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>Dk,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>Cn,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Fk,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>sJ,RecipeTemperatureUpsertArgsSchema:()=>qSt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>qk,RecipeTemperatureWhereInputSchema:()=>aa,RecipeTemperatureWhereUniqueInputSchema:()=>he,RecipeUncheckedCreateInputSchema:()=>K1,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>V2,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>hq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>Kz,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>y5,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>Wlt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Du,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>qM,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>mc,RecipeUncheckedCreateWithoutEquipmentInputSchema:()=>bZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>Qw,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>gf,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>Uf,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>GM,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Mw,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>ms,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>NM,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>_M,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>rs,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>Gw,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>gw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>bv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>tw,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>DM,RecipeUncheckedCreateWithoutTagsInputSchema:()=>gc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>VM,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>aZ,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>kv,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>QM,RecipeUncheckedUpdateInputSchema:()=>t9,RecipeUncheckedUpdateManyInputSchema:()=>e9,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>myt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>Y2,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>xut,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Tq,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>ost,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>bm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>Kyt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>m5,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Eut,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Mut,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>klt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>N7,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>bD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>y8,RecipeUncheckedUpdateWithoutEquipmentInputSchema:()=>ED,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>jL,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>S_,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>k_,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>WD,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>SL,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>yK,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>zD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>CD,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>nK,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>ZL,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>sL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>wE,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>K_,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>N8,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>ID,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>m8,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>SD,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>OD,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>YE,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>PD,RecipeUpdateArgsSchema:()=>Okt,RecipeUpdateInputSchema:()=>X1,RecipeUpdateManyAndReturnArgsSchema:()=>wkt,RecipeUpdateManyArgsSchema:()=>fkt,RecipeUpdateManyMutationInputSchema:()=>AI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>$R,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>BU,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>yj,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>Xx,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>TW,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>LU,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>H2,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Cq,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>pm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>d5,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>Rlt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>slt,RecipeUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>FB,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>$lt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>lF,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>dF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>Slt,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>C5,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>ult,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>blt,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>Klt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>eD,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>Gq,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Llt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>zlt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>Ilt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>DT,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>Clt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>eF,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>ort,RecipeUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>krt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>but,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>pct,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>zct,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>srt,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>put,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>trt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>lrt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>Iut,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Kct,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>Spt,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Bct,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>art,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>prt,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>Crt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Opt,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>urt,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>GR,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>NU,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>uj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Kx,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SW,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>_U,RecipeUpdateWithoutCookBookInputSchema:()=>w7,RecipeUpdateWithoutCriticalPointsInputSchema:()=>mD,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>u8,RecipeUpdateWithoutEquipmentInputSchema:()=>DD,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>xL,RecipeUpdateWithoutIngredientsInputSchema:()=>A_,RecipeUpdateWithoutInstructionsInputSchema:()=>R_,RecipeUpdateWithoutLaborCostsInputSchema:()=>UD,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>AL,RecipeUpdateWithoutMenuItemsInputSchema:()=>uK,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>dD,RecipeUpdateWithoutPhotosInputSchema:()=>gD,RecipeUpdateWithoutPrepBoardsInputSchema:()=>oK,RecipeUpdateWithoutPrepHistoryInputSchema:()=>ML,RecipeUpdateWithoutPrepItemsInputSchema:()=>yL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>fE,RecipeUpdateWithoutRecipeStatsInputSchema:()=>J_,RecipeUpdateWithoutRestaurantInputSchema:()=>w8,RecipeUpdateWithoutStorageInputSchema:()=>hD,RecipeUpdateWithoutTagsInputSchema:()=>z8,RecipeUpdateWithoutTemperaturesInputSchema:()=>AD,RecipeUpdateWithoutVersionsInputSchema:()=>vD,RecipeUpdateWithoutWithdrawalsInputSchema:()=>QE,RecipeUpdateWithoutYieldsInputSchema:()=>TD,RecipeUpdateimageUrlsInputSchema:()=>st,RecipeUpsertArgsSchema:()=>jkt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>YR,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>wU,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>cj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Jx,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AW,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>EU,RecipeUpsertWithoutCriticalPointsInputSchema:()=>ert,RecipeUpsertWithoutEquipmentInputSchema:()=>Rrt,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>mut,RecipeUpsertWithoutIngredientsInputSchema:()=>rct,RecipeUpsertWithoutInstructionsInputSchema:()=>dct,RecipeUpsertWithoutLaborCostsInputSchema:()=>yrt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>rut,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>Xlt,RecipeUpsertWithoutPhotosInputSchema:()=>irt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>hut,RecipeUpsertWithoutPrepItemsInputSchema:()=>Jct,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>Apt,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Nct,RecipeUpsertWithoutStorageInputSchema:()=>nrt,RecipeUpsertWithoutTemperaturesInputSchema:()=>rrt,RecipeUpsertWithoutVersionsInputSchema:()=>grt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>vpt,RecipeUpsertWithoutYieldsInputSchema:()=>crt,RecipeVersionAggregateArgsSchema:()=>ubt,RecipeVersionArgsSchema:()=>Mj,RecipeVersionAvgOrderByAggregateInputSchema:()=>ktt,RecipeVersionCountOrderByAggregateInputSchema:()=>Rtt,RecipeVersionCountOutputTypeArgsSchema:()=>kQ,RecipeVersionCountOutputTypeSelectSchema:()=>uX,RecipeVersionCreateArgsSchema:()=>xTt,RecipeVersionCreateInputSchema:()=>iY,RecipeVersionCreateManyAndReturnArgsSchema:()=>ZTt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>RO,RecipeVersionCreateManyApprovedByInputSchema:()=>wH,RecipeVersionCreateManyArgsSchema:()=>MTt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>WO,RecipeVersionCreateManyCreatedByInputSchema:()=>fH,RecipeVersionCreateManyInputSchema:()=>pP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>QO,RecipeVersionCreateManyRecipeInputSchema:()=>YH,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>ci,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>pi,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Po,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>iF,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>uF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Th,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Sh,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>y3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>d3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>Bh,RecipeVersionCreateWithoutApprovedByInputSchema:()=>Ou,RecipeVersionCreateWithoutCreatedByInputSchema:()=>Zu,RecipeVersionCreateWithoutIngredientsInputSchema:()=>Sf,RecipeVersionCreateWithoutInstructionsInputSchema:()=>Wf,RecipeVersionCreateWithoutRecipeInputSchema:()=>uy,RecipeVersionDeleteArgsSchema:()=>vTt,RecipeVersionDeleteManyArgsSchema:()=>NTt,RecipeVersionFindFirstArgsSchema:()=>pbt,RecipeVersionFindFirstOrThrowArgsSchema:()=>cbt,RecipeVersionFindManyArgsSchema:()=>zS,RecipeVersionFindUniqueArgsSchema:()=>sbt,RecipeVersionFindUniqueOrThrowArgsSchema:()=>dbt,RecipeVersionGroupByArgsSchema:()=>ybt,RecipeVersionIncludeSchema:()=>Hs,RecipeVersionListRelationFilterSchema:()=>DA,RecipeVersionMaxOrderByAggregateInputSchema:()=>xtt,RecipeVersionMinOrderByAggregateInputSchema:()=>jtt,RecipeVersionNullableScalarRelationFilterSchema:()=>CM,RecipeVersionOrderByRelationAggregateInputSchema:()=>WN,RecipeVersionOrderByWithAggregationInputSchema:()=>YL,RecipeVersionOrderByWithRelationInputSchema:()=>Ep,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>gN,RecipeVersionScalarFieldEnumSchema:()=>mg,RecipeVersionScalarWhereInputSchema:()=>Va,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>_C,RecipeVersionSchema:()=>Mdt,RecipeVersionSelectSchema:()=>Qs,RecipeVersionSumOrderByAggregateInputSchema:()=>Mtt,RecipeVersionUncheckedCreateInputSchema:()=>lY,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>Ri,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Wi,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>fu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>vu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>Tf,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>Rf,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>yy,RecipeVersionUncheckedUpdateInputSchema:()=>pY,RecipeVersionUncheckedUpdateManyInputSchema:()=>cY,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>syt,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>yl,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>yyt,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ul,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ryt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>qn,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>M7,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>x7,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>W_,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>j_,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>rJ,RecipeVersionUpdateArgsSchema:()=>OTt,RecipeVersionUpdateInputSchema:()=>rY,RecipeVersionUpdateManyAndReturnArgsSchema:()=>wTt,RecipeVersionUpdateManyArgsSchema:()=>fTt,RecipeVersionUpdateManyMutationInputSchema:()=>TT,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>DR,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>BR,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Zk,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Qi,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Hi,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>hn,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>pF,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>zF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>sct,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>bct,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>FR,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>NR,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Mk,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>j7,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>k7,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>U_,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>x_,RecipeVersionUpdateWithoutRecipeInputSchema:()=>lJ,RecipeVersionUpsertArgsSchema:()=>jTt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>qR,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>wR,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>jk,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>yct,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>mct,RecipeVersionWhereInputSchema:()=>ie,RecipeVersionWhereUniqueInputSchema:()=>N,RecipeWhereInputSchema:()=>O,RecipeWhereUniqueInputSchema:()=>C,RecipeYieldAggregateArgsSchema:()=>Fmt,RecipeYieldArgsSchema:()=>Zzt,RecipeYieldAvgOrderByAggregateInputSchema:()=>ptt,RecipeYieldCountOrderByAggregateInputSchema:()=>rtt,RecipeYieldCreateArgsSchema:()=>QSt,RecipeYieldCreateInputSchema:()=>q0,RecipeYieldCreateManyAndReturnArgsSchema:()=>$St,RecipeYieldCreateManyArgsSchema:()=>GSt,RecipeYieldCreateManyInputSchema:()=>aP,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>$O,RecipeYieldCreateManyRecipeInputSchema:()=>JH,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>Eh,RecipeYieldCreateWithoutRecipeInputSchema:()=>Iy,RecipeYieldDeleteArgsSchema:()=>JSt,RecipeYieldDeleteManyArgsSchema:()=>eTt,RecipeYieldFindFirstArgsSchema:()=>Bmt,RecipeYieldFindFirstOrThrowArgsSchema:()=>qmt,RecipeYieldFindManyArgsSchema:()=>RK,RecipeYieldFindUniqueArgsSchema:()=>Emt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>_mt,RecipeYieldGroupByArgsSchema:()=>Dmt,RecipeYieldIncludeSchema:()=>Bs,RecipeYieldListRelationFilterSchema:()=>B4,RecipeYieldMaxOrderByAggregateInputSchema:()=>ctt,RecipeYieldMinOrderByAggregateInputSchema:()=>utt,RecipeYieldOrderByRelationAggregateInputSchema:()=>Hnt,RecipeYieldOrderByWithAggregationInputSchema:()=>LL,RecipeYieldOrderByWithRelationInputSchema:()=>tb,RecipeYieldScalarFieldEnumSchema:()=>yg,RecipeYieldScalarWhereInputSchema:()=>Op,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>qC,RecipeYieldSchema:()=>Rdt,RecipeYieldSelectSchema:()=>qs,RecipeYieldSumOrderByAggregateInputSchema:()=>ytt,RecipeYieldUncheckedCreateInputSchema:()=>F0,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>gy,RecipeYieldUncheckedUpdateInputSchema:()=>E0,RecipeYieldUncheckedUpdateManyInputSchema:()=>_0,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Myt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_n,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>mJ,RecipeYieldUpdateArgsSchema:()=>KSt,RecipeYieldUpdateInputSchema:()=>D0,RecipeYieldUpdateManyAndReturnArgsSchema:()=>tTt,RecipeYieldUpdateManyArgsSchema:()=>XSt,RecipeYieldUpdateManyMutationInputSchema:()=>jN,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>Lk,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>An,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>_k,RecipeYieldUpdateWithoutRecipeInputSchema:()=>zJ,RecipeYieldUpsertArgsSchema:()=>YSt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ek,RecipeYieldWhereInputSchema:()=>ia,RecipeYieldWhereUniqueInputSchema:()=>Ie,RestaurantAggregateArgsSchema:()=>pgt,RestaurantArgsSchema:()=>no,RestaurantAvgOrderByAggregateInputSchema:()=>bnt,RestaurantCountOrderByAggregateInputSchema:()=>mnt,RestaurantCountOutputTypeArgsSchema:()=>LQ,RestaurantCountOutputTypeSelectSchema:()=>AX,RestaurantCreateArgsSchema:()=>QRt,RestaurantCreateInputSchema:()=>M1,RestaurantCreateManyAndReturnArgsSchema:()=>$Rt,RestaurantCreateManyArgsSchema:()=>GRt,RestaurantCreateManyInputSchema:()=>OP,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>Bv,RestaurantCreateManyOrganizationInputSchema:()=>aH,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>f2,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>L2,RestaurantCreateNestedOneWithoutEquipmentInputSchema:()=>RB,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>SM,RestaurantCreateNestedOneWithoutLeftoverItemInputSchema:()=>Uq,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>nD,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>MF,RestaurantCreateNestedOneWithoutProductionPlanInputSchema:()=>Nq,RestaurantCreateNestedOneWithoutQualityChecklistInputSchema:()=>_B,RestaurantCreateNestedOneWithoutQustomerFeedbackInputSchema:()=>rq,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>uo,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>r2,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Qa,RestaurantCreateNestedOneWithoutWasteRecordInputSchema:()=>Mq,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>X6,RestaurantCreateOrConnectWithoutEquipmentInputSchema:()=>u6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>H6,RestaurantCreateOrConnectWithoutLeftoverItemInputSchema:()=>W6,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>O3,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>U3,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Vb,RestaurantCreateOrConnectWithoutProductionPlanInputSchema:()=>Z6,RestaurantCreateOrConnectWithoutQualityChecklistInputSchema:()=>m6,RestaurantCreateOrConnectWithoutQustomerFeedbackInputSchema:()=>T6,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>t3,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>a6,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>J6,RestaurantCreateOrConnectWithoutWasteRecordInputSchema:()=>x6,RestaurantCreateWithoutCookbooksInputSchema:()=>vO,RestaurantCreateWithoutEquipmentInputSchema:()=>yZ,RestaurantCreateWithoutInventoryInputSchema:()=>Fv,RestaurantCreateWithoutLeftoverItemInputSchema:()=>$Z,RestaurantCreateWithoutMenusInputSchema:()=>Pw,RestaurantCreateWithoutOrdersInputSchema:()=>ew,RestaurantCreateWithoutOrganizationInputSchema:()=>Pc,RestaurantCreateWithoutProductionPlanInputSchema:()=>pv,RestaurantCreateWithoutQualityChecklistInputSchema:()=>TZ,RestaurantCreateWithoutQustomerFeedbackInputSchema:()=>_Z,RestaurantCreateWithoutRecipesInputSchema:()=>fO,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>$M,RestaurantCreateWithoutUsersInputSchema:()=>uO,RestaurantCreateWithoutWasteRecordInputSchema:()=>ov,RestaurantDeleteArgsSchema:()=>JRt,RestaurantDeleteManyArgsSchema:()=>ekt,RestaurantFindFirstArgsSchema:()=>lgt,RestaurantFindFirstOrThrowArgsSchema:()=>rgt,RestaurantFindManyArgsSchema:()=>qK,RestaurantFindUniqueArgsSchema:()=>ugt,RestaurantFindUniqueOrThrowArgsSchema:()=>ygt,RestaurantGroupByArgsSchema:()=>cgt,RestaurantIncludeSchema:()=>Ed,RestaurantListRelationFilterSchema:()=>m4,RestaurantMaxOrderByAggregateInputSchema:()=>hnt,RestaurantMinOrderByAggregateInputSchema:()=>Int,RestaurantNullableScalarRelationFilterSchema:()=>mM,RestaurantOrderByRelationAggregateInputSchema:()=>Xot,RestaurantOrderByWithAggregationInputSchema:()=>CV,RestaurantOrderByWithRelationInputSchema:()=>Oa,RestaurantScalarFieldEnumSchema:()=>Dg,RestaurantScalarRelationFilterSchema:()=>Xn,RestaurantScalarWhereInputSchema:()=>gp,RestaurantScalarWhereWithAggregatesInputSchema:()=>mA,RestaurantSchema:()=>nzt,RestaurantSelectSchema:()=>_d,RestaurantSumOrderByAggregateInputSchema:()=>gnt,RestaurantUncheckedCreateInputSchema:()=>Z1,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>N2,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>OO,RestaurantUncheckedCreateWithoutEquipmentInputSchema:()=>sZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>Dv,RestaurantUncheckedCreateWithoutLeftoverItemInputSchema:()=>JZ,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>Uw,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>ow,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>Uc,RestaurantUncheckedCreateWithoutProductionPlanInputSchema:()=>cv,RestaurantUncheckedCreateWithoutQualityChecklistInputSchema:()=>PZ,RestaurantUncheckedCreateWithoutQustomerFeedbackInputSchema:()=>LZ,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>wO,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>JM,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>yO,RestaurantUncheckedCreateWithoutWasteRecordInputSchema:()=>nv,RestaurantUncheckedUpdateInputSchema:()=>O1,RestaurantUncheckedUpdateManyInputSchema:()=>f1,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Out,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>D2,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>z_,RestaurantUncheckedUpdateWithoutEquipmentInputSchema:()=>FD,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>a_,RestaurantUncheckedUpdateWithoutLeftoverItemInputSchema:()=>IE,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>IL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>tL,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>A8,RestaurantUncheckedUpdateWithoutProductionPlanInputSchema:()=>jE,RestaurantUncheckedUpdateWithoutQualityChecklistInputSchema:()=>$D,RestaurantUncheckedUpdateWithoutQustomerFeedbackInputSchema:()=>sE,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>b_,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>kD,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>u_,RestaurantUncheckedUpdateWithoutWasteRecordInputSchema:()=>PE,RestaurantUpdateArgsSchema:()=>KRt,RestaurantUpdateInputSchema:()=>v1,RestaurantUpdateManyAndReturnArgsSchema:()=>tkt,RestaurantUpdateManyArgsSchema:()=>XRt,RestaurantUpdateManyMutationInputSchema:()=>EN,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>XU,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>q2,RestaurantUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>ZB,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>xM,RestaurantUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>kq,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>pD,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>fF,RestaurantUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Dq,RestaurantUpdateOneRequiredWithoutQualityChecklistNestedInputSchema:()=>YB,RestaurantUpdateOneRequiredWithoutQustomerFeedbackNestedInputSchema:()=>uq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>nn,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>c2,RestaurantUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Oq,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>Q2,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>Mi,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>tct,RestaurantUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Wrt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Lpt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>apt,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>aut,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Fct,RestaurantUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>bpt,RestaurantUpdateToOneWithWhereWithoutQualityChecklistInputSchema:()=>wrt,RestaurantUpdateToOneWithWhereWithoutQustomerFeedbackInputSchema:()=>Krt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>oct,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>zrt,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>$pt,RestaurantUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>upt,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>KU,RestaurantUpdateWithoutCookbooksInputSchema:()=>d_,RestaurantUpdateWithoutEquipmentInputSchema:()=>qD,RestaurantUpdateWithoutInventoryInputSchema:()=>n_,RestaurantUpdateWithoutLeftoverItemInputSchema:()=>hE,RestaurantUpdateWithoutMenusInputSchema:()=>hL,RestaurantUpdateWithoutOrdersInputSchema:()=>X_,RestaurantUpdateWithoutOrganizationInputSchema:()=>C8,RestaurantUpdateWithoutProductionPlanInputSchema:()=>xE,RestaurantUpdateWithoutQualityChecklistInputSchema:()=>GD,RestaurantUpdateWithoutQustomerFeedbackInputSchema:()=>yE,RestaurantUpdateWithoutRecipesInputSchema:()=>m_,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>RD,RestaurantUpdateWithoutUsersInputSchema:()=>c_,RestaurantUpdateWithoutWasteRecordInputSchema:()=>TE,RestaurantUpsertArgsSchema:()=>YRt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>JU,RestaurantUpsertWithoutCookbooksInputSchema:()=>Xpt,RestaurantUpsertWithoutEquipmentInputSchema:()=>Urt,RestaurantUpsertWithoutInventoryInputSchema:()=>_pt,RestaurantUpsertWithoutLeftoverItemInputSchema:()=>npt,RestaurantUpsertWithoutMenusInputSchema:()=>nut,RestaurantUpsertWithoutOrdersInputSchema:()=>qct,RestaurantUpsertWithoutProductionPlanInputSchema:()=>mpt,RestaurantUpsertWithoutQualityChecklistInputSchema:()=>frt,RestaurantUpsertWithoutQustomerFeedbackInputSchema:()=>Jrt,RestaurantUpsertWithoutRecipesInputSchema:()=>ect,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>drt,RestaurantUpsertWithoutUsersInputSchema:()=>Gpt,RestaurantUpsertWithoutWasteRecordInputSchema:()=>cpt,RestaurantWhereInputSchema:()=>B,RestaurantWhereUniqueInputSchema:()=>K,SalesTransactionsAggregateArgsSchema:()=>Kmt,SalesTransactionsArgsSchema:()=>Ozt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>Itt,SalesTransactionsCountOrderByAggregateInputSchema:()=>htt,SalesTransactionsCreateArgsSchema:()=>yTt,SalesTransactionsCreateInputSchema:()=>G0,SalesTransactionsCreateManyAndReturnArgsSchema:()=>zTt,SalesTransactionsCreateManyArgsSchema:()=>dTt,SalesTransactionsCreateManyInputSchema:()=>lP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>qw,SalesTransactionsCreateManyMenuItemInputSchema:()=>AQ,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>Xv,SalesTransactionsCreateManyRestaurantInputSchema:()=>zH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Yz,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>bI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>eh,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>Cs,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Lc,SalesTransactionsDeleteArgsSchema:()=>mTt,SalesTransactionsDeleteManyArgsSchema:()=>gTt,SalesTransactionsFindFirstArgsSchema:()=>$mt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>Jmt,SalesTransactionsFindManyArgsSchema:()=>$w,SalesTransactionsFindUniqueArgsSchema:()=>tbt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>ebt,SalesTransactionsGroupByArgsSchema:()=>Xmt,SalesTransactionsIncludeSchema:()=>Es,SalesTransactionsListRelationFilterSchema:()=>dM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>gtt,SalesTransactionsMinOrderByAggregateInputSchema:()=>Ctt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>U4,SalesTransactionsOrderByWithAggregationInputSchema:()=>HL,SalesTransactionsOrderByWithRelationInputSchema:()=>ob,SalesTransactionsScalarFieldEnumSchema:()=>dg,SalesTransactionsScalarWhereInputSchema:()=>Wl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>DC,SalesTransactionsSchema:()=>xdt,SalesTransactionsSelectSchema:()=>_s,SalesTransactionsSumOrderByAggregateInputSchema:()=>Att,SalesTransactionsUncheckedCreateInputSchema:()=>$0,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>om,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>As,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,SalesTransactionsUncheckedUpdateInputSchema:()=>K0,SalesTransactionsUncheckedUpdateManyInputSchema:()=>X0,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>ist,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Cm,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Lut,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>hK,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>D8,SalesTransactionsUpdateArgsSchema:()=>bTt,SalesTransactionsUpdateInputSchema:()=>J0,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>ITt,SalesTransactionsUpdateManyArgsSchema:()=>hTt,SalesTransactionsUpdateManyMutationInputSchema:()=>Nj,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Cj,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>xW,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>sm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>gj,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kW,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>bK,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>F8,SalesTransactionsUpsertArgsSchema:()=>sTt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ij,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>RW,SalesTransactionsWhereInputSchema:()=>ra,SalesTransactionsWhereUniqueInputSchema:()=>ht,SchedulingConstraintAggregateArgsSchema:()=>uIt,SchedulingConstraintArgsSchema:()=>Hzt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>Tot,SchedulingConstraintCountOrderByAggregateInputSchema:()=>Sot,SchedulingConstraintCreateArgsSchema:()=>xWt,SchedulingConstraintCreateInputSchema:()=>DG,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>ZWt,SchedulingConstraintCreateManyArgsSchema:()=>MWt,SchedulingConstraintCreateManyInputSchema:()=>WP,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>SO,SchedulingConstraintCreateManyUserInputSchema:()=>MH,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>ai,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>Ih,SchedulingConstraintCreateWithoutUserInputSchema:()=>Pu,SchedulingConstraintDeleteArgsSchema:()=>vWt,SchedulingConstraintDeleteManyArgsSchema:()=>NWt,SchedulingConstraintFindFirstArgsSchema:()=>pIt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>cIt,SchedulingConstraintFindManyArgsSchema:()=>NK,SchedulingConstraintFindUniqueArgsSchema:()=>sIt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>dIt,SchedulingConstraintGroupByArgsSchema:()=>yIt,SchedulingConstraintIncludeSchema:()=>kd,SchedulingConstraintListRelationFilterSchema:()=>M4,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>Pot,SchedulingConstraintMinOrderByAggregateInputSchema:()=>Uot,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>Pnt,SchedulingConstraintOrderByWithAggregationInputSchema:()=>sV,SchedulingConstraintOrderByWithRelationInputSchema:()=>zb,SchedulingConstraintScalarFieldEnumSchema:()=>vg,SchedulingConstraintScalarWhereInputSchema:()=>kp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>rA,SchedulingConstraintSchema:()=>Gdt,SchedulingConstraintSelectSchema:()=>xd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>Wot,SchedulingConstraintUncheckedCreateInputSchema:()=>EG,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>Si,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>Uu,SchedulingConstraintUncheckedUpdateInputSchema:()=>LG,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>VG,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>ryt,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>ll,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>A7,SchedulingConstraintUpdateArgsSchema:()=>OWt,SchedulingConstraintUpdateInputSchema:()=>_G,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>wWt,SchedulingConstraintUpdateManyArgsSchema:()=>fWt,SchedulingConstraintUpdateManyMutationInputSchema:()=>FN,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>WR,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>Ei,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>UR,SchedulingConstraintUpdateWithoutUserInputSchema:()=>C7,SchedulingConstraintUpsertArgsSchema:()=>jWt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>PR,SchedulingConstraintWhereInputSchema:()=>ga,SchedulingConstraintWhereUniqueInputSchema:()=>Pe,SessionAggregateArgsSchema:()=>Cgt,SessionArgsSchema:()=>$zt,SessionAvgOrderByAggregateInputSchema:()=>Znt,SessionCountOrderByAggregateInputSchema:()=>Mnt,SessionCreateArgsSchema:()=>ykt,SessionCreateInputSchema:()=>D1,SessionCreateManyAndReturnArgsSchema:()=>zkt,SessionCreateManyArgsSchema:()=>dkt,SessionCreateManyInputSchema:()=>wP,SessionCreateManyUserInputEnvelopeSchema:()=>mO,SessionCreateManyUserInputSchema:()=>PH,SessionCreateNestedManyWithoutUserInputSchema:()=>Ja,SessionCreateOrConnectWithoutUserInputSchema:()=>yh,SessionCreateWithoutUserInputSchema:()=>uu,SessionDeleteArgsSchema:()=>mkt,SessionDeleteManyArgsSchema:()=>gkt,SessionFindFirstArgsSchema:()=>Igt,SessionFindFirstOrThrowArgsSchema:()=>ggt,SessionFindManyArgsSchema:()=>FK,SessionFindUniqueArgsSchema:()=>Sgt,SessionFindUniqueOrThrowArgsSchema:()=>Tgt,SessionGroupByArgsSchema:()=>Agt,SessionIncludeSchema:()=>Hd,SessionListRelationFilterSchema:()=>k4,SessionMaxOrderByAggregateInputSchema:()=>vnt,SessionMinOrderByAggregateInputSchema:()=>Ont,SessionOrderByRelationAggregateInputSchema:()=>Ant,SessionOrderByWithAggregationInputSchema:()=>SV,SessionOrderByWithRelationInputSchema:()=>gb,SessionScalarFieldEnumSchema:()=>_g,SessionScalarWhereInputSchema:()=>Up,SessionScalarWhereWithAggregatesInputSchema:()=>hA,SessionSchema:()=>izt,SessionSelectSchema:()=>Qd,SessionSumOrderByAggregateInputSchema:()=>fnt,SessionUncheckedCreateInputSchema:()=>E1,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>mi,SessionUncheckedCreateWithoutUserInputSchema:()=>yu,SessionUncheckedUpdateInputSchema:()=>L1,SessionUncheckedUpdateManyInputSchema:()=>V1,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>tyt,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Xi,SessionUncheckedUpdateWithoutUserInputSchema:()=>r7,SessionUpdateArgsSchema:()=>bkt,SessionUpdateInputSchema:()=>_1,SessionUpdateManyAndReturnArgsSchema:()=>Ikt,SessionUpdateManyArgsSchema:()=>hkt,SessionUpdateManyMutationInputSchema:()=>_N,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>iR,SessionUpdateManyWithoutUserNestedInputSchema:()=>fi,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>aR,SessionUpdateWithoutUserInputSchema:()=>l7,SessionUpsertArgsSchema:()=>skt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>nR,SessionWhereInputSchema:()=>Ta,SessionWhereUniqueInputSchema:()=>We,ShiftAggregateArgsSchema:()=>JCt,ShiftArgsSchema:()=>i0,ShiftAvgOrderByAggregateInputSchema:()=>yit,ShiftCountOrderByAggregateInputSchema:()=>uit,ShiftCountOutputTypeArgsSchema:()=>l0,ShiftCountOutputTypeSelectSchema:()=>MX,ShiftCreateArgsSchema:()=>xjt,ShiftCreateInputSchema:()=>a$,ShiftCreateManyAndReturnArgsSchema:()=>Zjt,ShiftCreateManyArgsSchema:()=>Mjt,ShiftCreateManyInputSchema:()=>$P,ShiftCreateManyUserInputEnvelopeSchema:()=>sO,ShiftCreateManyUserInputSchema:()=>AH,ShiftCreateNestedManyWithoutUserInputSchema:()=>Ya,ShiftCreateNestedOneWithoutShiftTaskInputSchema:()=>xlt,ShiftCreateOrConnectWithoutShiftTaskInputSchema:()=>N6,ShiftCreateOrConnectWithoutUserInputSchema:()=>ph,ShiftCreateWithoutShiftTaskInputSchema:()=>gv,ShiftCreateWithoutUserInputSchema:()=>au,ShiftDeleteArgsSchema:()=>vjt,ShiftDeleteManyArgsSchema:()=>Njt,ShiftFindFirstArgsSchema:()=>GCt,ShiftFindFirstOrThrowArgsSchema:()=>$Ct,ShiftFindManyArgsSchema:()=>_K,ShiftFindUniqueArgsSchema:()=>XCt,ShiftFindUniqueOrThrowArgsSchema:()=>tAt,ShiftGroupByArgsSchema:()=>KCt,ShiftIncludeSchema:()=>Cz,ShiftListRelationFilterSchema:()=>R4,ShiftMaxOrderByAggregateInputSchema:()=>sit,ShiftMinOrderByAggregateInputSchema:()=>dit,ShiftOrderByRelationAggregateInputSchema:()=>Cnt,ShiftOrderByWithAggregationInputSchema:()=>wV,ShiftOrderByWithRelationInputSchema:()=>qm,ShiftScalarFieldEnumSchema:()=>nC,ShiftScalarRelationFilterSchema:()=>y4,ShiftScalarWhereInputSchema:()=>Pp,ShiftScalarWhereWithAggregatesInputSchema:()=>MA,ShiftSchema:()=>gzt,ShiftSelectSchema:()=>Az,ShiftStatusSchema:()=>Ht,ShiftSumOrderByAggregateInputSchema:()=>zit,ShiftTaskAggregateArgsSchema:()=>Kht,ShiftTaskArgsSchema:()=>Lzt,ShiftTaskAvgOrderByAggregateInputSchema:()=>yot,ShiftTaskCountOrderByAggregateInputSchema:()=>uot,ShiftTaskCreateArgsSchema:()=>yWt,ShiftTaskCreateInputSchema:()=>MG,ShiftTaskCreateManyAndReturnArgsSchema:()=>zWt,ShiftTaskCreateManyArgsSchema:()=>dWt,ShiftTaskCreateManyInputSchema:()=>PP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>zw,ShiftTaskCreateManyShiftInputSchema:()=>mQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>a5,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>pI,ShiftTaskCreateWithoutShiftInputSchema:()=>as,ShiftTaskDeleteArgsSchema:()=>mWt,ShiftTaskDeleteManyArgsSchema:()=>gWt,ShiftTaskFindFirstArgsSchema:()=>$ht,ShiftTaskFindFirstOrThrowArgsSchema:()=>Jht,ShiftTaskFindManyArgsSchema:()=>fK,ShiftTaskFindUniqueArgsSchema:()=>tIt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>eIt,ShiftTaskGroupByArgsSchema:()=>Xht,ShiftTaskIncludeSchema:()=>Pd,ShiftTaskListRelationFilterSchema:()=>t2,ShiftTaskMaxOrderByAggregateInputSchema:()=>sot,ShiftTaskMinOrderByAggregateInputSchema:()=>dot,ShiftTaskOrderByRelationAggregateInputSchema:()=>cit,ShiftTaskOrderByWithAggregationInputSchema:()=>uV,ShiftTaskOrderByWithRelationInputSchema:()=>sb,ShiftTaskScalarFieldEnumSchema:()=>Mg,ShiftTaskScalarWhereInputSchema:()=>qp,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>iA,ShiftTaskSchema:()=>Qdt,ShiftTaskSelectSchema:()=>Ud,ShiftTaskSumOrderByAggregateInputSchema:()=>zot,ShiftTaskUncheckedCreateInputSchema:()=>ZG,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>i5,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>is,ShiftTaskUncheckedUpdateInputSchema:()=>OG,ShiftTaskUncheckedUpdateManyInputSchema:()=>fG,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>Jyt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>p5,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>eK,ShiftTaskUpdateArgsSchema:()=>bWt,ShiftTaskUpdateInputSchema:()=>vG,ShiftTaskUpdateManyAndReturnArgsSchema:()=>IWt,ShiftTaskUpdateManyArgsSchema:()=>hWt,ShiftTaskUpdateManyMutationInputSchema:()=>BN,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>$x,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>r5,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>Gx,ShiftTaskUpdateWithoutShiftInputSchema:()=>tK,ShiftTaskUpsertArgsSchema:()=>sWt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>Yx,ShiftTaskWhereInputSchema:()=>ha,ShiftTaskWhereUniqueInputSchema:()=>Se,ShiftUncheckedCreateInputSchema:()=>i$,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>si,ShiftUncheckedCreateWithoutShiftTaskInputSchema:()=>Cv,ShiftUncheckedCreateWithoutUserInputSchema:()=>iu,ShiftUncheckedUpdateInputSchema:()=>r$,ShiftUncheckedUpdateManyInputSchema:()=>p$,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>Jut,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>$i,ShiftUncheckedUpdateWithoutShiftTaskInputSchema:()=>FE,ShiftUncheckedUpdateWithoutUserInputSchema:()=>e7,ShiftUpdateArgsSchema:()=>Ojt,ShiftUpdateInputSchema:()=>l$,ShiftUpdateManyAndReturnArgsSchema:()=>wjt,ShiftUpdateManyArgsSchema:()=>fjt,ShiftUpdateManyMutationInputSchema:()=>HN,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>$W,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Zi,ShiftUpdateOneRequiredWithoutShiftTaskNestedInputSchema:()=>jlt,ShiftUpdateToOneWithWhereWithoutShiftTaskInputSchema:()=>Wpt,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>GW,ShiftUpdateWithoutShiftTaskInputSchema:()=>qE,ShiftUpdateWithoutUserInputSchema:()=>t7,ShiftUpsertArgsSchema:()=>jjt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>YW,ShiftUpsertWithoutShiftTaskInputSchema:()=>Upt,ShiftWhereInputSchema:()=>Xe,ShiftWhereUniqueInputSchema:()=>ne,SkillLevelSchema:()=>W,SortOrderInputSchema:()=>g,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>zCt,StockCountArgsSchema:()=>XQ,StockCountAvgOrderByAggregateInputSchema:()=>Zat,StockCountCountOrderByAggregateInputSchema:()=>Mat,StockCountCountOutputTypeArgsSchema:()=>t0,StockCountCountOutputTypeSelectSchema:()=>kX,StockCountCreateArgsSchema:()=>xxt,StockCountCreateInputSchema:()=>R9,StockCountCreateManyAndReturnArgsSchema:()=>Zxt,StockCountCreateManyArgsSchema:()=>Mxt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>xO,StockCountCreateManyCreatedByInputSchema:()=>BH,StockCountCreateManyInputSchema:()=>LP,StockCountCreateManyInventoryInputEnvelopeSchema:()=>Lv,StockCountCreateManyInventoryInputSchema:()=>pH,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>yi,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>UM,StockCountCreateNestedOneWithoutItemsInputSchema:()=>G2,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Uh,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>Gb,StockCountCreateOrConnectWithoutItemsInputSchema:()=>S3,StockCountCreateWithoutCreatedByInputSchema:()=>Bu,StockCountCreateWithoutInventoryInputSchema:()=>Zc,StockCountCreateWithoutItemsInputSchema:()=>Gf,StockCountDeleteArgsSchema:()=>vxt,StockCountDeleteManyArgsSchema:()=>Nxt,StockCountFindFirstArgsSchema:()=>sCt,StockCountFindFirstOrThrowArgsSchema:()=>dCt,StockCountFindManyArgsSchema:()=>lN,StockCountFindUniqueArgsSchema:()=>bCt,StockCountFindUniqueOrThrowArgsSchema:()=>hCt,StockCountGroupByArgsSchema:()=>mCt,StockCountIncludeSchema:()=>pz,StockCountItemAggregateArgsSchema:()=>CCt,StockCountItemArgsSchema:()=>Xzt,StockCountItemAvgOrderByAggregateInputSchema:()=>Bat,StockCountItemCountOrderByAggregateInputSchema:()=>Nat,StockCountItemCreateArgsSchema:()=>Bxt,StockCountItemCreateInputSchema:()=>Z9,StockCountItemCreateManyAndReturnArgsSchema:()=>Dxt,StockCountItemCreateManyArgsSchema:()=>Fxt,StockCountItemCreateManyInputSchema:()=>VP,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Nf,StockCountItemCreateManyItemInputSchema:()=>uQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>Yf,StockCountItemCreateManyStockCountInputSchema:()=>yQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>wS,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>UF,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>oI,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>nI,StockCountItemCreateWithoutItemInputSchema:()=>Hy,StockCountItemCreateWithoutStockCountInputSchema:()=>Yy,StockCountItemDeleteArgsSchema:()=>Ext,StockCountItemDeleteManyArgsSchema:()=>Hxt,StockCountItemFindFirstArgsSchema:()=>ICt,StockCountItemFindFirstOrThrowArgsSchema:()=>gCt,StockCountItemFindManyArgsSchema:()=>rN,StockCountItemFindUniqueArgsSchema:()=>SCt,StockCountItemFindUniqueOrThrowArgsSchema:()=>TCt,StockCountItemGroupByArgsSchema:()=>ACt,StockCountItemIncludeSchema:()=>uz,StockCountItemListRelationFilterSchema:()=>AM,StockCountItemMaxOrderByAggregateInputSchema:()=>qat,StockCountItemMinOrderByAggregateInputSchema:()=>Fat,StockCountItemOrderByRelationAggregateInputSchema:()=>J4,StockCountItemOrderByWithAggregationInputSchema:()=>MV,StockCountItemOrderByWithRelationInputSchema:()=>Sb,StockCountItemScalarFieldEnumSchema:()=>Kg,StockCountItemScalarWhereInputSchema:()=>Zl,StockCountItemScalarWhereWithAggregatesInputSchema:()=>WA,StockCountItemSchema:()=>zzt,StockCountItemSelectSchema:()=>yz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>PN,StockCountItemSumOrderByAggregateInputSchema:()=>Dat,StockCountItemUncheckedCreateInputSchema:()=>v9,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>qS,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>WF,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>Qy,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>Gy,StockCountItemUncheckedUpdateInputSchema:()=>f9,StockCountItemUncheckedUpdateManyInputSchema:()=>w9,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>Vyt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>YS,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>Hyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>jF,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>_J,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>VJ,StockCountItemUpdateArgsSchema:()=>_xt,StockCountItemUpdateInputSchema:()=>O9,StockCountItemUpdateManyAndReturnArgsSchema:()=>Vxt,StockCountItemUpdateManyArgsSchema:()=>Lxt,StockCountItemUpdateManyMutationInputSchema:()=>Yj,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>Zx,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>fx,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>VS,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>xF,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>Mx,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>Ox,StockCountItemUpdateWithoutItemInputSchema:()=>EJ,StockCountItemUpdateWithoutStockCountInputSchema:()=>LJ,StockCountItemUpsertArgsSchema:()=>qxt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>jx,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>vx,StockCountItemWhereInputSchema:()=>Wa,StockCountItemWhereUniqueInputSchema:()=>At,StockCountListRelationFilterSchema:()=>uM,StockCountMaxOrderByAggregateInputSchema:()=>vat,StockCountMinOrderByAggregateInputSchema:()=>Oat,StockCountOrderByRelationAggregateInputSchema:()=>I4,StockCountOrderByWithAggregationInputSchema:()=>jV,StockCountOrderByWithRelationInputSchema:()=>wm,StockCountScalarFieldEnumSchema:()=>Jg,StockCountScalarRelationFilterSchema:()=>K4,StockCountScalarWhereInputSchema:()=>Pl,StockCountScalarWhereWithAggregatesInputSchema:()=>UA,StockCountSchema:()=>dzt,StockCountSelectSchema:()=>cz,StockCountSumOrderByAggregateInputSchema:()=>fat,StockCountUncheckedCreateInputSchema:()=>k9,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>xi,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>kM,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>qu,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>vc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>$f,StockCountUncheckedUpdateInputSchema:()=>j9,StockCountUncheckedUpdateManyInputSchema:()=>M9,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>zyt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>dl,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>But,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>fM,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>f7,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>x8,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>Y_,StockCountUpdateArgsSchema:()=>Oxt,StockCountUpdateInputSchema:()=>x9,StockCountUpdateManyAndReturnArgsSchema:()=>wxt,StockCountUpdateManyArgsSchema:()=>fxt,StockCountUpdateManyMutationInputSchema:()=>Qj,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>QR,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>yW,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Gi,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>ZM,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>J2,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Oct,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>HR,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>uW,StockCountUpdateWithoutCreatedByInputSchema:()=>O7,StockCountUpdateWithoutInventoryInputSchema:()=>k8,StockCountUpdateWithoutItemsInputSchema:()=>Q_,StockCountUpsertArgsSchema:()=>jxt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>VR,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>cW,StockCountUpsertWithoutItemsInputSchema:()=>vct,StockCountWhereInputSchema:()=>Je,StockCountWhereUniqueInputSchema:()=>ct,StringFieldUpdateOperationsInputSchema:()=>a,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>bl,StringNullableWithAggregatesFilterSchema:()=>kt,StringWithAggregatesFilterSchema:()=>bt,SupplierPriceHistoryAggregateArgsSchema:()=>aht,SupplierPriceHistoryArgsSchema:()=>Bzt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>Tet,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>Aet,SupplierPriceHistoryCreateArgsSchema:()=>QPt,SupplierPriceHistoryCreateInputSchema:()=>VY,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>$Pt,SupplierPriceHistoryCreateManyArgsSchema:()=>GPt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>mf,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>lQ,SupplierPriceHistoryCreateManyInputSchema:()=>bP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>yw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>zQ,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>ZI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>DF,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>Kh,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>rI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>By,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>os,SupplierPriceHistoryDeleteArgsSchema:()=>JPt,SupplierPriceHistoryDeleteManyArgsSchema:()=>eUt,SupplierPriceHistoryFindFirstArgsSchema:()=>oht,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>nht,SupplierPriceHistoryFindManyArgsSchema:()=>Xw,SupplierPriceHistoryFindUniqueArgsSchema:()=>lht,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>rht,SupplierPriceHistoryGroupByArgsSchema:()=>iht,SupplierPriceHistoryIncludeSchema:()=>pd,SupplierPriceHistoryListRelationFilterSchema:()=>gM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>Pet,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>Uet,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>$4,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>oV,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>lb,SupplierPriceHistoryScalarFieldEnumSchema:()=>Tg,SupplierPriceHistoryScalarWhereInputSchema:()=>Ml,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>JC,SupplierPriceHistorySchema:()=>qdt,SupplierPriceHistorySelectSchema:()=>cd,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>Wet,SupplierPriceHistoryUncheckedCreateInputSchema:()=>HY,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>FI,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>LF,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>qy,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>ns,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>YY,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>GY,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>Dyt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>eg,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>$yt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>$F,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>fJ,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>XJ,SupplierPriceHistoryUpdateArgsSchema:()=>KPt,SupplierPriceHistoryUpdateInputSchema:()=>QY,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>tUt,SupplierPriceHistoryUpdateManyArgsSchema:()=>XPt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>Fj,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>Cx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>Qx,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>QI,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>QF,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>gx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Hx,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>OJ,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>KJ,SupplierPriceHistoryUpsertArgsSchema:()=>YPt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Ix,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>Vx,SupplierPriceHistoryWhereInputSchema:()=>ya,SupplierPriceHistoryWhereUniqueInputSchema:()=>gt,TaskTypeSchema:()=>ce,TransactionIsolationLevelSchema:()=>Cdt,TransactionTypeSchema:()=>Ot,UserAggregateArgsSchema:()=>zgt,UserArgsSchema:()=>Kt,UserAvgOrderByAggregateInputSchema:()=>Wnt,UserCountOrderByAggregateInputSchema:()=>Unt,UserCountOutputTypeArgsSchema:()=>VQ,UserCountOutputTypeSelectSchema:()=>SX,UserCreateArgsSchema:()=>okt,UserCreateInputSchema:()=>w1,UserCreateManyAndReturnArgsSchema:()=>ikt,UserCreateManyArgsSchema:()=>akt,UserCreateManyInputSchema:()=>fP,UserCreateManyOrganizationInputEnvelopeSchema:()=>qv,UserCreateManyOrganizationInputSchema:()=>iH,UserCreateManyRestaurantInputEnvelopeSchema:()=>Qv,UserCreateManyRestaurantInputSchema:()=>cH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>w2,UserCreateNestedManyWithoutRestaurantInputSchema:()=>_l,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>Mlt,UserCreateNestedOneWithoutChecklistCompleteInputSchema:()=>tq,UserCreateNestedOneWithoutCustomerFeedbackInputSchema:()=>cq,UserCreateNestedOneWithoutInventoryTransactionInputSchema:()=>gF,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>vS,UserCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>Xq,UserCreateNestedOneWithoutLeftoverItemInputSchema:()=>Rq,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>Vlt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>XF,UserCreateNestedOneWithoutProductionPlanInputSchema:()=>Bq,UserCreateNestedOneWithoutProductionPlanItemInputSchema:()=>Qq,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>BT,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>NT,UserCreateNestedOneWithoutSchedulingConstraintInputSchema:()=>vlt,UserCreateNestedOneWithoutSessionsInputSchema:()=>Dlt,UserCreateNestedOneWithoutShiftsInputSchema:()=>n5,UserCreateNestedOneWithoutStockCountInputSchema:()=>PF,UserCreateNestedOneWithoutWasteRecordInputSchema:()=>vq,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>B6,UserCreateOrConnectWithoutChecklistCompleteInputSchema:()=>I6,UserCreateOrConnectWithoutCustomerFeedbackInputSchema:()=>U6,UserCreateOrConnectWithoutInventoryTransactionInputSchema:()=>g3,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>b3,UserCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>E6,UserCreateOrConnectWithoutLeftoverItemInputSchema:()=>k6,UserCreateOrConnectWithoutOrganizationInputSchema:()=>Hb,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>v3,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>Z3,UserCreateOrConnectWithoutProductionPlanInputSchema:()=>v6,UserCreateOrConnectWithoutProductionPlanItemInputSchema:()=>w6,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>c6,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>p6,UserCreateOrConnectWithoutRestaurantInputSchema:()=>$b,UserCreateOrConnectWithoutSchedulingConstraintInputSchema:()=>q6,UserCreateOrConnectWithoutSessionsInputSchema:()=>K6,UserCreateOrConnectWithoutShiftsInputSchema:()=>x3,UserCreateOrConnectWithoutStockCountInputSchema:()=>A3,UserCreateOrConnectWithoutWasteRecordInputSchema:()=>M6,UserCreateWithoutAvailabilityInputSchema:()=>Av,UserCreateWithoutChecklistCompleteInputSchema:()=>ZZ,UserCreateWithoutCustomerFeedbackInputSchema:()=>QZ,UserCreateWithoutInventoryTransactionInputSchema:()=>Ef,UserCreateWithoutInventoryUpdatesInputSchema:()=>vf,UserCreateWithoutInventoryWithdrawalInputSchema:()=>xv,UserCreateWithoutLeftoverItemInputSchema:()=>tv,UserCreateWithoutOrganizationInputSchema:()=>Wc,UserCreateWithoutPasswordResetsInputSchema:()=>Sw,UserCreateWithoutPrepItemsInputSchema:()=>Cw,UserCreateWithoutProductionPlanInputSchema:()=>uv,UserCreateWithoutProductionPlanItemInputSchema:()=>hv,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>cZ,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>rZ,UserCreateWithoutRestaurantInputSchema:()=>Oc,UserCreateWithoutSchedulingConstraintInputSchema:()=>Tv,UserCreateWithoutSessionsInputSchema:()=>jO,UserCreateWithoutShiftsInputSchema:()=>sw,UserCreateWithoutStockCountInputSchema:()=>Hf,UserCreateWithoutWasteRecordInputSchema:()=>lv,UserDeleteArgsSchema:()=>lkt,UserDeleteManyArgsSchema:()=>ukt,UserFindFirstArgsSchema:()=>sgt,UserFindFirstOrThrowArgsSchema:()=>dgt,UserFindManyArgsSchema:()=>nN,UserFindUniqueArgsSchema:()=>bgt,UserFindUniqueOrThrowArgsSchema:()=>hgt,UserGroupByArgsSchema:()=>mgt,UserIncludeSchema:()=>Ld,UserListRelationFilterSchema:()=>cM,UserMaxOrderByAggregateInputSchema:()=>Rnt,UserMinOrderByAggregateInputSchema:()=>knt,UserNullableScalarRelationFilterSchema:()=>PI,UserOrderByRelationAggregateInputSchema:()=>b4,UserOrderByWithAggregationInputSchema:()=>AV,UserOrderByWithRelationInputSchema:()=>eo,UserRoleSchema:()=>j,UserScalarFieldEnumSchema:()=>Eg,UserScalarRelationFilterSchema:()=>Ee,UserScalarWhereInputSchema:()=>Tl,UserScalarWhereWithAggregatesInputSchema:()=>bA,UserSchema:()=>azt,UserSelectSchema:()=>Vd,UserSumOrderByAggregateInputSchema:()=>xnt,UserUncheckedCreateInputSchema:()=>N1,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>B2,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>or,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>Sv,UserUncheckedCreateWithoutChecklistCompleteInputSchema:()=>vZ,UserUncheckedCreateWithoutCustomerFeedbackInputSchema:()=>YZ,UserUncheckedCreateWithoutInventoryTransactionInputSchema:()=>_f,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>Of,UserUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>jv,UserUncheckedCreateWithoutLeftoverItemInputSchema:()=>ev,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Rc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>Tw,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>Aw,UserUncheckedCreateWithoutProductionPlanInputSchema:()=>yv,UserUncheckedCreateWithoutProductionPlanItemInputSchema:()=>Iv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>uZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>pZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>fc,UserUncheckedCreateWithoutSchedulingConstraintInputSchema:()=>Pv,UserUncheckedCreateWithoutSessionsInputSchema:()=>MO,UserUncheckedCreateWithoutShiftsInputSchema:()=>dw,UserUncheckedCreateWithoutStockCountInputSchema:()=>Qf,UserUncheckedCreateWithoutWasteRecordInputSchema:()=>rv,UserUncheckedUpdateInputSchema:()=>q1,UserUncheckedUpdateManyInputSchema:()=>F1,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>fut,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>E2,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>qut,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>EE,UserUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>oE,UserUncheckedUpdateWithoutCustomerFeedbackInputSchema:()=>bE,UserUncheckedUpdateWithoutInventoryTransactionInputSchema:()=>E_,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>w_,UserUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>$E,UserUncheckedUpdateWithoutLeftoverItemInputSchema:()=>SE,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>T8,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>bL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>zL,UserUncheckedUpdateWithoutProductionPlanInputSchema:()=>ZE,UserUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>BE,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>BD,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>wD,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>M8,UserUncheckedUpdateWithoutSchedulingConstraintInputSchema:()=>LE,UserUncheckedUpdateWithoutSessionsInputSchema:()=>s_,UserUncheckedUpdateWithoutShiftsInputSchema:()=>pL,UserUncheckedUpdateWithoutStockCountInputSchema:()=>H_,UserUncheckedUpdateWithoutWasteRecordInputSchema:()=>kE,UserUpdateArgsSchema:()=>rkt,UserUpdateInputSchema:()=>B1,UserUpdateManyAndReturnArgsSchema:()=>ckt,UserUpdateManyArgsSchema:()=>pkt,UserUpdateManyMutationInputSchema:()=>Lj,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>oW,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zW,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>F2,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>br,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>Zlt,UserUpdateOneRequiredWithoutChecklistCompleteNestedInputSchema:()=>aq,UserUpdateOneRequiredWithoutInventoryTransactionNestedInputSchema:()=>SF,UserUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>oF,UserUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>jq,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>Hlt,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>oD,UserUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Eq,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>LT,UserUpdateOneRequiredWithoutSchedulingConstraintNestedInputSchema:()=>Olt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>Elt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>l5,UserUpdateOneRequiredWithoutStockCountNestedInputSchema:()=>kF,UserUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>wq,UserUpdateOneWithoutCustomerFeedbackNestedInputSchema:()=>sq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>ES,UserUpdateOneWithoutProductionPlanItemNestedInputSchema:()=>$q,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>VT,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>kpt,UserUpdateToOneWithWhereWithoutChecklistCompleteInputSchema:()=>Ert,UserUpdateToOneWithWhereWithoutCustomerFeedbackInputSchema:()=>opt,UserUpdateToOneWithWhereWithoutInventoryTransactionInputSchema:()=>kct,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>Sct,UserUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>wpt,UserUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>ppt,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>out,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>tut,UserUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>Ipt,UserUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>Ppt,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>Prt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>Srt,UserUpdateToOneWithWhereWithoutSchedulingConstraintInputSchema:()=>jpt,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>Kpt,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>Yct,UserUpdateToOneWithWhereWithoutStockCountInputSchema:()=>Zct,UserUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>zpt,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>eW,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>dW,UserUpdateWithoutAvailabilityInputSchema:()=>DE,UserUpdateWithoutChecklistCompleteInputSchema:()=>eE,UserUpdateWithoutCustomerFeedbackInputSchema:()=>mE,UserUpdateWithoutInventoryTransactionInputSchema:()=>D_,UserUpdateWithoutInventoryUpdatesInputSchema:()=>f_,UserUpdateWithoutInventoryWithdrawalInputSchema:()=>GE,UserUpdateWithoutLeftoverItemInputSchema:()=>AE,UserUpdateWithoutOrganizationInputSchema:()=>S8,UserUpdateWithoutPasswordResetsInputSchema:()=>mL,UserUpdateWithoutPrepItemsInputSchema:()=>dL,UserUpdateWithoutProductionPlanInputSchema:()=>ME,UserUpdateWithoutProductionPlanItemInputSchema:()=>NE,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>ND,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>fD,UserUpdateWithoutRestaurantInputSchema:()=>j8,UserUpdateWithoutSchedulingConstraintInputSchema:()=>_E,UserUpdateWithoutSessionsInputSchema:()=>y_,UserUpdateWithoutShiftsInputSchema:()=>rL,UserUpdateWithoutStockCountInputSchema:()=>V_,UserUpdateWithoutWasteRecordInputSchema:()=>RE,UserUpsertArgsSchema:()=>nkt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>tW,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>sW,UserUpsertWithoutAvailabilityInputSchema:()=>Rpt,UserUpsertWithoutChecklistCompleteInputSchema:()=>Drt,UserUpsertWithoutCustomerFeedbackInputSchema:()=>ept,UserUpsertWithoutInventoryTransactionInputSchema:()=>Rct,UserUpsertWithoutInventoryUpdatesInputSchema:()=>Act,UserUpsertWithoutInventoryWithdrawalInputSchema:()=>fpt,UserUpsertWithoutLeftoverItemInputSchema:()=>rpt,UserUpsertWithoutPasswordResetsInputSchema:()=>eut,UserUpsertWithoutPrepItemsInputSchema:()=>Xct,UserUpsertWithoutProductionPlanInputSchema:()=>hpt,UserUpsertWithoutProductionPlanItemInputSchema:()=>Tpt,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>Trt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>Art,UserUpsertWithoutSchedulingConstraintInputSchema:()=>xpt,UserUpsertWithoutSessionsInputSchema:()=>Jpt,UserUpsertWithoutShiftsInputSchema:()=>Qct,UserUpsertWithoutStockCountInputSchema:()=>Mct,UserUpsertWithoutWasteRecordInputSchema:()=>dpt,UserWhereInputSchema:()=>v,UserWhereUniqueInputSchema:()=>M,VendorAggregateArgsSchema:()=>VCt,VendorArgsSchema:()=>fj,VendorAvgOrderByAggregateInputSchema:()=>iit,VendorCountOrderByAggregateInputSchema:()=>ait,VendorCountOutputTypeArgsSchema:()=>a0,VendorCountOutputTypeSelectSchema:()=>jX,VendorCreateArgsSchema:()=>Cjt,VendorCreateInputSchema:()=>X9,VendorCreateManyAndReturnArgsSchema:()=>Tjt,VendorCreateManyArgsSchema:()=>Sjt,VendorCreateManyInputSchema:()=>GP,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>xI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>ZF,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>R2,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>Gh,VendorCreateOrConnectWithoutOrdersInputSchema:()=>W3,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>A6,VendorCreateWithoutIngredientsInputSchema:()=>Zy,VendorCreateWithoutOrdersInputSchema:()=>nw,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>qZ,VendorDeleteArgsSchema:()=>Pjt,VendorDeleteManyArgsSchema:()=>kjt,VendorFindFirstArgsSchema:()=>_Ct,VendorFindFirstOrThrowArgsSchema:()=>LCt,VendorFindManyArgsSchema:()=>EK,VendorFindUniqueArgsSchema:()=>QCt,VendorFindUniqueOrThrowArgsSchema:()=>YCt,VendorGroupByArgsSchema:()=>HCt,VendorIncludeSchema:()=>Iz,VendorListRelationFilterSchema:()=>Q4,VendorMaxOrderByAggregateInputSchema:()=>lit,VendorMinOrderByAggregateInputSchema:()=>rit,VendorOrderByRelationAggregateInputSchema:()=>nat,VendorOrderByWithAggregationInputSchema:()=>fV,VendorOrderByWithRelationInputSchema:()=>Hp,VendorScalarFieldEnumSchema:()=>oC,VendorScalarRelationFilterSchema:()=>iM,VendorScalarWhereInputSchema:()=>Bp,VendorScalarWhereWithAggregatesInputSchema:()=>jA,VendorSchema:()=>Izt,VendorSelectSchema:()=>gz,VendorSumOrderByAggregateInputSchema:()=>pit,VendorUncheckedCreateInputSchema:()=>t$,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>NI,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>vy,VendorUncheckedCreateWithoutOrdersInputSchema:()=>aw,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>FZ,VendorUncheckedUpdateInputSchema:()=>o$,VendorUncheckedUpdateManyInputSchema:()=>n$,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Byt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>KI,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>xJ,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>oL,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>pE,VendorUpdateArgsSchema:()=>Ujt,VendorUpdateInputSchema:()=>e$,VendorUpdateManyAndReturnArgsSchema:()=>Rjt,VendorUpdateManyArgsSchema:()=>Wjt,VendorUpdateManyMutationInputSchema:()=>VN,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>yx,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>LI,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>wF,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>x2,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Ect,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>Yrt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>ux,VendorUpdateWithoutIngredientsInputSchema:()=>kJ,VendorUpdateWithoutOrdersInputSchema:()=>eL,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>rE,VendorUpsertArgsSchema:()=>Ajt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>cx,VendorUpsertWithoutOrdersInputSchema:()=>Dct,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>Qrt,VendorWhereInputSchema:()=>ve,VendorWhereUniqueInputSchema:()=>Gt,WasteRecordAggregateArgsSchema:()=>Oht,WasteRecordArgsSchema:()=>Ezt,WasteRecordAvgOrderByAggregateInputSchema:()=>$et,WasteRecordCountOrderByAggregateInputSchema:()=>Get,WasteRecordCreateArgsSchema:()=>BUt,WasteRecordCreateInputSchema:()=>bG,WasteRecordCreateManyAndReturnArgsSchema:()=>DUt,WasteRecordCreateManyArgsSchema:()=>FUt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>df,WasteRecordCreateManyIngredienteInputSchema:()=>aQ,WasteRecordCreateManyInputSchema:()=>AP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>IO,WasteRecordCreateManyRecordedByInputSchema:()=>RH,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>eO,WasteRecordCreateManyRestaurantInputSchema:()=>bH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>jI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>ti,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Jl,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>$h,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>zh,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>nh,WasteRecordCreateWithoutIngredienteInputSchema:()=>Oy,WasteRecordCreateWithoutRecordedByInputSchema:()=>bu,WasteRecordCreateWithoutRestaurantInputSchema:()=>Yc,WasteRecordDeleteArgsSchema:()=>EUt,WasteRecordDeleteManyArgsSchema:()=>HUt,WasteRecordFindFirstArgsSchema:()=>Zht,WasteRecordFindFirstOrThrowArgsSchema:()=>vht,WasteRecordFindManyArgsSchema:()=>pT,WasteRecordFindUniqueArgsSchema:()=>wht,WasteRecordFindUniqueOrThrowArgsSchema:()=>Nht,WasteRecordGroupByArgsSchema:()=>fht,WasteRecordIncludeSchema:()=>Id,WasteRecordListRelationFilterSchema:()=>US,WasteRecordMaxOrderByAggregateInputSchema:()=>Jet,WasteRecordMinOrderByAggregateInputSchema:()=>Ket,WasteRecordOrderByRelationAggregateInputSchema:()=>mB,WasteRecordOrderByWithAggregationInputSchema:()=>rV,WasteRecordOrderByWithRelationInputSchema:()=>ub,WasteRecordScalarFieldEnumSchema:()=>kg,WasteRecordScalarWhereInputSchema:()=>Da,WasteRecordScalarWhereWithAggregatesInputSchema:()=>oA,WasteRecordSchema:()=>Ldt,WasteRecordSelectSchema:()=>gd,WasteRecordSumOrderByAggregateInputSchema:()=>Xet,WasteRecordUncheckedCreateInputSchema:()=>hG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>BI,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>Ii,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ur,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>fy,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>hu,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,WasteRecordUncheckedUpdateInputSchema:()=>gG,WasteRecordUncheckedUpdateManyInputSchema:()=>CG,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>qyt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>XI,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>nyt,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>ol,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Hut,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>MJ,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>d7,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>V8,WasteRecordUpdateArgsSchema:()=>_Ut,WasteRecordUpdateInputSchema:()=>IG,WasteRecordUpdateManyAndReturnArgsSchema:()=>VUt,WasteRecordUpdateManyArgsSchema:()=>LUt,WasteRecordUpdateManyMutationInputSchema:()=>RT,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>zx,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>zR,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>fW,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>VI,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>Bi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>dx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>dR,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>OW,WasteRecordUpdateWithoutIngredienteInputSchema:()=>jJ,WasteRecordUpdateWithoutRecordedByInputSchema:()=>s7,WasteRecordUpdateWithoutRestaurantInputSchema:()=>L8,WasteRecordUpsertArgsSchema:()=>qUt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>sx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>sR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>vW,WasteRecordWhereInputSchema:()=>ma,WasteRecordWhereUniqueInputSchema:()=>E});var ze;(function(c){c.assertEqual=m=>m;function i(m){}c.assertIs=i;function p(m){throw new Error}c.assertNever=p,c.arrayToEnum=m=>{let h={};for(let P of m)h[P]=P;return h},c.getValidEnumValues=m=>{let h=c.objectKeys(m).filter(k=>typeof m[m[k]]!="number"),P={};for(let k of h)P[k]=m[k];return c.objectValues(P)},c.objectValues=m=>c.objectKeys(m).map(function(h){return m[h]}),c.objectKeys=typeof Object.keys=="function"?m=>Object.keys(m):m=>{let h=[];for(let P in m)Object.prototype.hasOwnProperty.call(m,P)&&h.push(P);return h},c.find=(m,h)=>{for(let P of m)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?m=>Number.isInteger(m):m=>typeof m=="number"&&isFinite(m)&&Math.floor(m)===m;function d(m,h=" | "){return m.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=d,c.jsonStringifyReplacer=(m,h)=>typeof h=="bigint"?h.toString():h;})(ze||(ze={}));var fL;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(fL||(fL={}));var X=ze.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Ym=c=>{switch(typeof c){case "undefined":return X.undefined;case "string":return X.string;case "number":return isNaN(c)?X.nan:X.number;case "boolean":return X.boolean;case "function":return X.function;case "bigint":return X.bigint;case "symbol":return X.symbol;case "object":return Array.isArray(c)?X.array:c===null?X.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?X.promise:typeof Map<"u"&&c instanceof Map?X.map:typeof Set<"u"&&c instanceof Set?X.set:typeof Date<"u"&&c instanceof Date?X.date:X.object;default:return X.unknown}},f=ze.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),sst=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),Gr=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=d=>{this.issues=[...this.issues,d];},this.addIssues=(d=[])=>{this.issues=[...this.issues,...d];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(h){return h.message},d={_errors:[]},m=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(m);else if(P.code==="invalid_return_type")m(P.returnTypeError);else if(P.code==="invalid_arguments")m(P.argumentsError);else if(P.path.length===0)d._errors.push(p(P));else {let k=d,J=0;for(;J<P.path.length;){let Y=P.path[J];J===P.path.length-1?(k[Y]=k[Y]||{_errors:[]},k[Y]._errors.push(p(P))):k[Y]=k[Y]||{_errors:[]},k=k[Y],J++;}}};return m(this),d}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ze.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},d=[];for(let m of this.issues)m.path.length>0?(p[m.path[0]]=p[m.path[0]]||[],p[m.path[0]].push(i(m))):d.push(i(m));return {formErrors:d,fieldErrors:p}}get formErrors(){return this.flatten()}};Gr.create=c=>new Gr(c);var hT=(c,i)=>{let p;switch(c.code){case f.invalid_type:c.received===X.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case f.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,ze.jsonStringifyReplacer)}`;break;case f.unrecognized_keys:p=`Unrecognized key(s) in object: ${ze.joinValues(c.keys,", ")}`;break;case f.invalid_union:p="Invalid input";break;case f.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${ze.joinValues(c.options)}`;break;case f.invalid_enum_value:p=`Invalid enum value. Expected ${ze.joinValues(c.options)}, received '${c.received}'`;break;case f.invalid_arguments:p="Invalid function arguments";break;case f.invalid_return_type:p="Invalid function return type";break;case f.invalid_date:p="Invalid date";break;case f.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:ze.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case f.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case f.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case f.custom:p="Invalid input";break;case f.invalid_intersection_types:p="Intersection results could not be merged";break;case f.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case f.not_finite:p="Number must be finite";break;default:p=i.defaultError,ze.assertNever(c);}return {message:p}},KK=hT;function dst(c){KK=c;}function sN(){return KK}var dN=c=>{let{data:i,path:p,errorMaps:d,issueData:m}=c,h=[...p,...m.path||[]],P={...m,path:h};if(m.message!==void 0)return {...m,path:h,message:m.message};let k="",J=d.filter(Y=>!!Y).slice().reverse();for(let Y of J)k=Y(P,{data:i,defaultError:k}).message;return {...m,path:h,message:k}},zst=[];function G(c,i){let p=sN(),d=dN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===hT?void 0:hT].filter(m=>!!m)});c.common.issues.push(d);}var hl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let d=[];for(let m of p){if(m.status==="aborted")return jt;m.status==="dirty"&&i.dirty(),d.push(m.value);}return {status:i.value,value:d}}static async mergeObjectAsync(i,p){let d=[];for(let m of p){let h=await m.key,P=await m.value;d.push({key:h,value:P});}return c.mergeObjectSync(i,d)}static mergeObjectSync(i,p){let d={};for(let m of p){let{key:h,value:P}=m;if(h.status==="aborted"||P.status==="aborted")return jt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||m.alwaysSet)&&(d[h.value]=P.value);}return {status:i.value,value:d}}},jt=Object.freeze({status:"aborted"}),bT=c=>({status:"dirty",value:c}),fl=c=>({status:"valid",value:c}),wL=c=>c.status==="aborted",NL=c=>c.status==="dirty",IC=c=>c.status==="valid",$T=c=>typeof Promise<"u"&&c instanceof Promise;function zN(c,i,p,d){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function XK(c,i,p,d,m){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var at;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(at||(at={}));var YT,GT,sp=class{constructor(i,p,d,m){this._cachedPath=[],this.parent=i,this.data=p,this._path=d,this._key=m;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},GK=(c,i)=>{if(IC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new Gr(c.common.issues);return this._error=p,this._error}}};function Et(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:d,description:m}=c;if(i&&(p||d))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:m}:{errorMap:(P,k)=>{var J,Y;let{message:Rt}=c;return P.code==="invalid_enum_value"?{message:Rt??k.defaultError}:typeof k.data>"u"?{message:(J=Rt??d)!==null&&J!==void 0?J:k.defaultError}:P.code!=="invalid_type"?{message:k.defaultError}:{message:(Y=Rt??p)!==null&&Y!==void 0?Y:k.defaultError}},description:m}}var _t=class{get description(){return this._def.description}_getType(i){return Ym(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:Ym(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new hl,ctx:{common:i.parent.common,data:i.data,parsedType:Ym(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if($T(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let d=this.safeParse(i,p);if(d.success)return d.data;throw d.error}safeParse(i,p){var d;let m={common:{issues:[],async:(d=p?.async)!==null&&d!==void 0?d:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Ym(i)},h=this._parseSync({data:i,path:m.path,parent:m});return GK(m,h)}"~validate"(i){var p,d;let m={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Ym(i)};if(!this["~standard"].async)try{let h=this._parseSync({data:i,path:[],parent:m});return IC(h)?{value:h.value}:{issues:m.common.issues}}catch(h){!((d=(p=h?.message)===null||p===void 0?void 0:p.toLowerCase())===null||d===void 0)&&d.includes("encountered")&&(this["~standard"].async=true),m.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:m}).then(h=>IC(h)?{value:h.value}:{issues:m.common.issues})}async parseAsync(i,p){let d=await this.safeParseAsync(i,p);if(d.success)return d.data;throw d.error}async safeParseAsync(i,p){let d={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Ym(i)},m=this._parse({data:i,path:d.path,parent:d}),h=await($T(m)?m:Promise.resolve(m));return GK(d,h)}refine(i,p){let d=m=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(m):p;return this._refinement((m,h)=>{let P=i(m),k=()=>h.addIssue({code:f.custom,...d(m)});return typeof Promise<"u"&&P instanceof Promise?P.then(J=>J?true:(k(),false)):P?true:(k(),false)})}refinement(i,p){return this._refinement((d,m)=>i(d)?true:(m.addIssue(typeof p=="function"?p(d,m):p),false))}_refinement(i){return new $r({schema:this,typeName:xt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return yp.create(this,this._def)}nullable(){return Um.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return $m.create(this)}promise(){return ig.create(this,this._def)}or(i){return UC.create([this,i],this._def)}and(i){return WC.create(this,i,this._def)}transform(i){return new $r({...Et(this._def),schema:this,typeName:xt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new MC({...Et(this._def),innerType:this,defaultValue:p,typeName:xt.ZodDefault})}brand(){return new JT({typeName:xt.ZodBranded,type:this,...Et(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new ZC({...Et(this._def),innerType:this,catchValue:p,typeName:xt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return KT.create(this,i)}readonly(){return vC.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},mst=/^c[^\s-]{8,}$/i,bst=/^[0-9a-z]+$/,hst=/^[0-9A-HJKMNP-TV-Z]{26}$/i,Ist=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,gst=/^[a-z0-9_-]{21}$/i,Cst=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,Ast=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Sst=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Tst="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",OL,Pst=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Ust=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,Wst=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,Rst=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,kst=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,xst=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,tX="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",jst=new RegExp(`^${tX}$`);function eX(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function Mst(c){return new RegExp(`^${eX(c)}$`)}function oX(c){let i=`${tX}T${eX(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Zst(c,i){return !!((i==="v4"||!i)&&Pst.test(c)||(i==="v6"||!i)&&Wst.test(c))}function vst(c,i){if(!Cst.test(c))return  false;try{let[p]=c.split("."),d=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),m=JSON.parse(atob(d));return !(typeof m!="object"||m===null||!m.typ||!m.alg||i&&m.alg!==i)}catch{return  false}}function Ost(c,i){return !!((i==="v4"||!i)&&Ust.test(c)||(i==="v6"||!i)&&Rst.test(c))}var ng=class c extends _t{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==X.string){let h=this._getOrReturnCtx(i);return G(h,{code:f.invalid_type,expected:X.string,received:h.parsedType}),jt}let d=new hl,m;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:f.too_small,minimum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),d.dirty());else if(h.kind==="max")i.data.length>h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:f.too_big,maximum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),d.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,k=i.data.length<h.value;(P||k)&&(m=this._getOrReturnCtx(i,m),P?G(m,{code:f.too_big,maximum:h.value,type:"string",inclusive:true,exact:true,message:h.message}):k&&G(m,{code:f.too_small,minimum:h.value,type:"string",inclusive:true,exact:true,message:h.message}),d.dirty());}else if(h.kind==="email")Sst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"email",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="emoji")OL||(OL=new RegExp(Tst,"u")),OL.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"emoji",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="uuid")Ist.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"uuid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="nanoid")gst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"nanoid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="cuid")mst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="cuid2")bst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid2",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="ulid")hst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ulid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{m=this._getOrReturnCtx(i,m),G(m,{validation:"url",code:f.invalid_string,message:h.message}),d.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"regex",code:f.invalid_string,message:h.message}),d.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),d.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:{startsWith:h.value},message:h.message}),d.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:{endsWith:h.value},message:h.message}),d.dirty()):h.kind==="datetime"?oX(h).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:"datetime",message:h.message}),d.dirty()):h.kind==="date"?jst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:"date",message:h.message}),d.dirty()):h.kind==="time"?Mst(h).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:f.invalid_string,validation:"time",message:h.message}),d.dirty()):h.kind==="duration"?Ast.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"duration",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="ip"?Zst(i.data,h.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ip",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="jwt"?vst(i.data,h.alg)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"jwt",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="cidr"?Ost(i.data,h.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cidr",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="base64"?kst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="base64url"?xst.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64url",code:f.invalid_string,message:h.message}),d.dirty()):ze.assertNever(h);return {status:d.value,value:i.data}}_regex(i,p,d){return this.refinement(m=>i.test(m),{validation:p,code:f.invalid_string,...at.errToObj(d)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...at.errToObj(i)})}url(i){return this._addCheck({kind:"url",...at.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...at.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...at.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...at.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...at.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...at.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...at.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...at.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...at.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...at.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...at.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...at.errToObj(i)})}datetime(i){var p,d;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(d=i?.local)!==null&&d!==void 0?d:false,...at.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...at.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...at.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...at.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...at.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...at.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...at.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...at.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...at.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...at.errToObj(p)})}nonempty(i){return this.min(1,at.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};ng.create=c=>{var i;return new ng({checks:[],typeName:xt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Et(c)})};function fst(c,i){let p=(c.toString().split(".")[1]||"").length,d=(i.toString().split(".")[1]||"").length,m=p>d?p:d,h=parseInt(c.toFixed(m).replace(".","")),P=parseInt(i.toFixed(m).replace(".",""));return h%P/Math.pow(10,m)}var gC=class c extends _t{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==X.number){let h=this._getOrReturnCtx(i);return G(h,{code:f.invalid_type,expected:X.number,received:h.parsedType}),jt}let d,m=new hl;for(let h of this._def.checks)h.kind==="int"?ze.isInteger(i.data)||(d=this._getOrReturnCtx(i,d),G(d,{code:f.invalid_type,expected:"integer",received:"float",message:h.message}),m.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="multipleOf"?fst(i.data,h.value)!==0&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(d=this._getOrReturnCtx(i,d),G(d,{code:f.not_finite,message:h.message}),m.dirty()):ze.assertNever(h);return {status:m.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,at.toString(p))}gt(i,p){return this.setLimit("min",i,false,at.toString(p))}lte(i,p){return this.setLimit("max",i,true,at.toString(p))}lt(i,p){return this.setLimit("max",i,false,at.toString(p))}setLimit(i,p,d,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:d,message:at.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:at.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:at.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:at.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:at.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:at.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:at.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:at.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:at.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:at.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&ze.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let d of this._def.checks){if(d.kind==="finite"||d.kind==="int"||d.kind==="multipleOf")return  true;d.kind==="min"?(p===null||d.value>p)&&(p=d.value):d.kind==="max"&&(i===null||d.value<i)&&(i=d.value);}return Number.isFinite(p)&&Number.isFinite(i)}};gC.create=c=>new gC({checks:[],typeName:xt.ZodNumber,coerce:c?.coerce||false,...Et(c)});var CC=class c extends _t{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==X.bigint)return this._getInvalidInput(i);let d,m=new hl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(d=this._getOrReturnCtx(i,d),G(d,{code:f.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):ze.assertNever(h);return {status:m.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return G(p,{code:f.invalid_type,expected:X.bigint,received:p.parsedType}),jt}gte(i,p){return this.setLimit("min",i,true,at.toString(p))}gt(i,p){return this.setLimit("min",i,false,at.toString(p))}lte(i,p){return this.setLimit("max",i,true,at.toString(p))}lt(i,p){return this.setLimit("max",i,false,at.toString(p))}setLimit(i,p,d,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:d,message:at.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:at.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:at.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:at.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:at.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:at.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};CC.create=c=>{var i;return new CC({checks:[],typeName:xt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Et(c)})};var AC=class extends _t{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==X.boolean){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.boolean,received:d.parsedType}),jt}return fl(i.data)}};AC.create=c=>new AC({typeName:xt.ZodBoolean,coerce:c?.coerce||false,...Et(c)});var SC=class c extends _t{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==X.date){let h=this._getOrReturnCtx(i);return G(h,{code:f.invalid_type,expected:X.date,received:h.parsedType}),jt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return G(h,{code:f.invalid_date}),jt}let d=new hl,m;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:f.too_small,message:h.message,inclusive:true,exact:false,minimum:h.value,type:"date"}),d.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:f.too_big,message:h.message,inclusive:true,exact:false,maximum:h.value,type:"date"}),d.dirty()):ze.assertNever(h);return {status:d.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:at.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:at.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};SC.create=c=>new SC({checks:[],coerce:c?.coerce||false,typeName:xt.ZodDate,...Et(c)});var IT=class extends _t{_parse(i){if(this._getType(i)!==X.symbol){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.symbol,received:d.parsedType}),jt}return fl(i.data)}};IT.create=c=>new IT({typeName:xt.ZodSymbol,...Et(c)});var TC=class extends _t{_parse(i){if(this._getType(i)!==X.undefined){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.undefined,received:d.parsedType}),jt}return fl(i.data)}};TC.create=c=>new TC({typeName:xt.ZodUndefined,...Et(c)});var PC=class extends _t{_parse(i){if(this._getType(i)!==X.null){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.null,received:d.parsedType}),jt}return fl(i.data)}};PC.create=c=>new PC({typeName:xt.ZodNull,...Et(c)});var ag=class extends _t{constructor(){super(...arguments),this._any=true;}_parse(i){return fl(i.data)}};ag.create=c=>new ag({typeName:xt.ZodAny,...Et(c)});var Gm=class extends _t{constructor(){super(...arguments),this._unknown=true;}_parse(i){return fl(i.data)}};Gm.create=c=>new Gm({typeName:xt.ZodUnknown,...Et(c)});var bp=class extends _t{_parse(i){let p=this._getOrReturnCtx(i);return G(p,{code:f.invalid_type,expected:X.never,received:p.parsedType}),jt}};bp.create=c=>new bp({typeName:xt.ZodNever,...Et(c)});var gT=class extends _t{_parse(i){if(this._getType(i)!==X.undefined){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.void,received:d.parsedType}),jt}return fl(i.data)}};gT.create=c=>new gT({typeName:xt.ZodVoid,...Et(c)});var $m=class c extends _t{_parse(i){let{ctx:p,status:d}=this._processInputParams(i),m=this._def;if(p.parsedType!==X.array)return G(p,{code:f.invalid_type,expected:X.array,received:p.parsedType}),jt;if(m.exactLength!==null){let P=p.data.length>m.exactLength.value,k=p.data.length<m.exactLength.value;(P||k)&&(G(p,{code:P?f.too_big:f.too_small,minimum:k?m.exactLength.value:void 0,maximum:P?m.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:m.exactLength.message}),d.dirty());}if(m.minLength!==null&&p.data.length<m.minLength.value&&(G(p,{code:f.too_small,minimum:m.minLength.value,type:"array",inclusive:true,exact:false,message:m.minLength.message}),d.dirty()),m.maxLength!==null&&p.data.length>m.maxLength.value&&(G(p,{code:f.too_big,maximum:m.maxLength.value,type:"array",inclusive:true,exact:false,message:m.maxLength.message}),d.dirty()),p.common.async)return Promise.all([...p.data].map((P,k)=>m.type._parseAsync(new sp(p,P,p.path,k)))).then(P=>hl.mergeArray(d,P));let h=[...p.data].map((P,k)=>m.type._parseSync(new sp(p,P,p.path,k)));return hl.mergeArray(d,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:at.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:at.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:at.toString(p)}})}nonempty(i){return this.min(1,i)}};$m.create=(c,i)=>new $m({type:c,minLength:null,maxLength:null,exactLength:null,typeName:xt.ZodArray,...Et(i)});function mT(c){if(c instanceof Er){let i={};for(let p in c.shape){let d=c.shape[p];i[p]=yp.create(mT(d));}return new Er({...c._def,shape:()=>i})}else return c instanceof $m?new $m({...c._def,type:mT(c.element)}):c instanceof yp?yp.create(mT(c.unwrap())):c instanceof Um?Um.create(mT(c.unwrap())):c instanceof Pm?Pm.create(c.items.map(i=>mT(i))):c}var Er=class c extends _t{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=ze.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==X.object){let Y=this._getOrReturnCtx(i);return G(Y,{code:f.invalid_type,expected:X.object,received:Y.parsedType}),jt}let{status:d,ctx:m}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),k=[];if(!(this._def.catchall instanceof bp&&this._def.unknownKeys==="strip"))for(let Y in m.data)P.includes(Y)||k.push(Y);let J=[];for(let Y of P){let Rt=h[Y],Ol=m.data[Y];J.push({key:{status:"valid",value:Y},value:Rt._parse(new sp(m,Ol,m.path,Y)),alwaysSet:Y in m.data});}if(this._def.catchall instanceof bp){let Y=this._def.unknownKeys;if(Y==="passthrough")for(let Rt of k)J.push({key:{status:"valid",value:Rt},value:{status:"valid",value:m.data[Rt]}});else if(Y==="strict")k.length>0&&(G(m,{code:f.unrecognized_keys,keys:k}),d.dirty());else if(Y!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Y=this._def.catchall;for(let Rt of k){let Ol=m.data[Rt];J.push({key:{status:"valid",value:Rt},value:Y._parse(new sp(m,Ol,m.path,Rt)),alwaysSet:Rt in m.data});}}return m.common.async?Promise.resolve().then(async()=>{let Y=[];for(let Rt of J){let Ol=await Rt.key,yN=await Rt.value;Y.push({key:Ol,value:yN,alwaysSet:Rt.alwaysSet});}return Y}).then(Y=>hl.mergeObjectSync(d,Y)):hl.mergeObjectSync(d,J)}get shape(){return this._def.shape()}strict(i){return at.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,d)=>{var m,h,P,k;let J=(P=(h=(m=this._def).errorMap)===null||h===void 0?void 0:h.call(m,p,d).message)!==null&&P!==void 0?P:d.defaultError;return p.code==="unrecognized_keys"?{message:(k=at.errToObj(i).message)!==null&&k!==void 0?k:J}:{message:J}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:xt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return ze.objectKeys(i).forEach(d=>{i[d]&&this.shape[d]&&(p[d]=this.shape[d]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return ze.objectKeys(this.shape).forEach(d=>{i[d]||(p[d]=this.shape[d]);}),new c({...this._def,shape:()=>p})}deepPartial(){return mT(this)}partial(i){let p={};return ze.objectKeys(this.shape).forEach(d=>{let m=this.shape[d];i&&!i[d]?p[d]=m:p[d]=m.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return ze.objectKeys(this.shape).forEach(d=>{if(i&&!i[d])p[d]=this.shape[d];else {let h=this.shape[d];for(;h instanceof yp;)h=h._def.innerType;p[d]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return nX(ze.objectKeys(this.shape))}};Er.create=(c,i)=>new Er({shape:()=>c,unknownKeys:"strip",catchall:bp.create(),typeName:xt.ZodObject,...Et(i)});Er.strictCreate=(c,i)=>new Er({shape:()=>c,unknownKeys:"strict",catchall:bp.create(),typeName:xt.ZodObject,...Et(i)});Er.lazycreate=(c,i)=>new Er({shape:c,unknownKeys:"strip",catchall:bp.create(),typeName:xt.ZodObject,...Et(i)});var UC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),d=this._def.options;function m(h){for(let k of h)if(k.result.status==="valid")return k.result;for(let k of h)if(k.result.status==="dirty")return p.common.issues.push(...k.ctx.common.issues),k.result;let P=h.map(k=>new Gr(k.ctx.common.issues));return G(p,{code:f.invalid_union,unionErrors:P}),jt}if(p.common.async)return Promise.all(d.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(m);{let h,P=[];for(let J of d){let Y={...p,common:{...p.common,issues:[]},parent:null},Rt=J._parseSync({data:p.data,path:p.path,parent:Y});if(Rt.status==="valid")return Rt;Rt.status==="dirty"&&!h&&(h={result:Rt,ctx:Y}),Y.common.issues.length&&P.push(Y.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let k=P.map(J=>new Gr(J));return G(p,{code:f.invalid_union,unionErrors:k}),jt}}get options(){return this._def.options}};UC.create=(c,i)=>new UC({options:c,typeName:xt.ZodUnion,...Et(i)});var Qm=c=>c instanceof RC?Qm(c.schema):c instanceof $r?Qm(c.innerType()):c instanceof kC?[c.value]:c instanceof xC?c.options:c instanceof jC?ze.objectValues(c.enum):c instanceof MC?Qm(c._def.innerType):c instanceof TC?[void 0]:c instanceof PC?[null]:c instanceof yp?[void 0,...Qm(c.unwrap())]:c instanceof Um?[null,...Qm(c.unwrap())]:c instanceof JT||c instanceof vC?Qm(c.unwrap()):c instanceof ZC?Qm(c._def.innerType):[],mN=class c extends _t{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.object)return G(p,{code:f.invalid_type,expected:X.object,received:p.parsedType}),jt;let d=this.discriminator,m=p.data[d],h=this.optionsMap.get(m);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):(G(p,{code:f.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[d]}),jt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,d){let m=new Map;for(let h of p){let P=Qm(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let k of P){if(m.has(k))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(k)}`);m.set(k,h);}}return new c({typeName:xt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:m,...Et(d)})}};function BL(c,i){let p=Ym(c),d=Ym(i);if(c===i)return {valid:true,data:c};if(p===X.object&&d===X.object){let m=ze.objectKeys(i),h=ze.objectKeys(c).filter(k=>m.indexOf(k)!==-1),P={...c,...i};for(let k of h){let J=BL(c[k],i[k]);if(!J.valid)return {valid:false};P[k]=J.data;}return {valid:true,data:P}}else if(p===X.array&&d===X.array){if(c.length!==i.length)return {valid:false};let m=[];for(let h=0;h<c.length;h++){let P=c[h],k=i[h],J=BL(P,k);if(!J.valid)return {valid:false};m.push(J.data);}return {valid:true,data:m}}else return p===X.date&&d===X.date&&+c==+i?{valid:true,data:c}:{valid:false}}var WC=class extends _t{_parse(i){let{status:p,ctx:d}=this._processInputParams(i),m=(h,P)=>{if(wL(h)||wL(P))return jt;let k=BL(h.value,P.value);return k.valid?((NL(h)||NL(P))&&p.dirty(),{status:p.value,value:k.data}):(G(d,{code:f.invalid_intersection_types}),jt)};return d.common.async?Promise.all([this._def.left._parseAsync({data:d.data,path:d.path,parent:d}),this._def.right._parseAsync({data:d.data,path:d.path,parent:d})]).then(([h,P])=>m(h,P)):m(this._def.left._parseSync({data:d.data,path:d.path,parent:d}),this._def.right._parseSync({data:d.data,path:d.path,parent:d}))}};WC.create=(c,i,p)=>new WC({left:c,right:i,typeName:xt.ZodIntersection,...Et(p)});var Pm=class c extends _t{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==X.array)return G(d,{code:f.invalid_type,expected:X.array,received:d.parsedType}),jt;if(d.data.length<this._def.items.length)return G(d,{code:f.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),jt;!this._def.rest&&d.data.length>this._def.items.length&&(G(d,{code:f.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let h=[...d.data].map((P,k)=>{let J=this._def.items[k]||this._def.rest;return J?J._parse(new sp(d,P,d.path,k)):null}).filter(P=>!!P);return d.common.async?Promise.all(h).then(P=>hl.mergeArray(p,P)):hl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Pm.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Pm({items:c,typeName:xt.ZodTuple,rest:null,...Et(i)})};var bN=class c extends _t{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==X.object)return G(d,{code:f.invalid_type,expected:X.object,received:d.parsedType}),jt;let m=[],h=this._def.keyType,P=this._def.valueType;for(let k in d.data)m.push({key:h._parse(new sp(d,k,d.path,k)),value:P._parse(new sp(d,d.data[k],d.path,k)),alwaysSet:k in d.data});return d.common.async?hl.mergeObjectAsync(p,m):hl.mergeObjectSync(p,m)}get element(){return this._def.valueType}static create(i,p,d){return p instanceof _t?new c({keyType:i,valueType:p,typeName:xt.ZodRecord,...Et(d)}):new c({keyType:ng.create(),valueType:i,typeName:xt.ZodRecord,...Et(p)})}},CT=class extends _t{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==X.map)return G(d,{code:f.invalid_type,expected:X.map,received:d.parsedType}),jt;let m=this._def.keyType,h=this._def.valueType,P=[...d.data.entries()].map(([k,J],Y)=>({key:m._parse(new sp(d,k,d.path,[Y,"key"])),value:h._parse(new sp(d,J,d.path,[Y,"value"]))}));if(d.common.async){let k=new Map;return Promise.resolve().then(async()=>{for(let J of P){let Y=await J.key,Rt=await J.value;if(Y.status==="aborted"||Rt.status==="aborted")return jt;(Y.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(Y.value,Rt.value);}return {status:p.value,value:k}})}else {let k=new Map;for(let J of P){let Y=J.key,Rt=J.value;if(Y.status==="aborted"||Rt.status==="aborted")return jt;(Y.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(Y.value,Rt.value);}return {status:p.value,value:k}}}};CT.create=(c,i,p)=>new CT({valueType:i,keyType:c,typeName:xt.ZodMap,...Et(p)});var AT=class c extends _t{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==X.set)return G(d,{code:f.invalid_type,expected:X.set,received:d.parsedType}),jt;let m=this._def;m.minSize!==null&&d.data.size<m.minSize.value&&(G(d,{code:f.too_small,minimum:m.minSize.value,type:"set",inclusive:true,exact:false,message:m.minSize.message}),p.dirty()),m.maxSize!==null&&d.data.size>m.maxSize.value&&(G(d,{code:f.too_big,maximum:m.maxSize.value,type:"set",inclusive:true,exact:false,message:m.maxSize.message}),p.dirty());let h=this._def.valueType;function P(J){let Y=new Set;for(let Rt of J){if(Rt.status==="aborted")return jt;Rt.status==="dirty"&&p.dirty(),Y.add(Rt.value);}return {status:p.value,value:Y}}let k=[...d.data.values()].map((J,Y)=>h._parse(new sp(d,J,d.path,Y)));return d.common.async?Promise.all(k).then(J=>P(J)):P(k)}min(i,p){return new c({...this._def,minSize:{value:i,message:at.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:at.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};AT.create=(c,i)=>new AT({valueType:c,minSize:null,maxSize:null,typeName:xt.ZodSet,...Et(i)});var hN=class c extends _t{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.function)return G(p,{code:f.invalid_type,expected:X.function,received:p.parsedType}),jt;function d(k,J){return dN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,sN(),hT].filter(Y=>!!Y),issueData:{code:f.invalid_arguments,argumentsError:J}})}function m(k,J){return dN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,sN(),hT].filter(Y=>!!Y),issueData:{code:f.invalid_return_type,returnTypeError:J}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof ig){let k=this;return fl(async function(...J){let Y=new Gr([]),Rt=await k._def.args.parseAsync(J,h).catch(vL=>{throw Y.addIssue(d(J,vL)),Y}),Ol=await Reflect.apply(P,this,Rt);return await k._def.returns._def.type.parseAsync(Ol,h).catch(vL=>{throw Y.addIssue(m(Ol,vL)),Y})})}else {let k=this;return fl(function(...J){let Y=k._def.args.safeParse(J,h);if(!Y.success)throw new Gr([d(J,Y.error)]);let Rt=Reflect.apply(P,this,Y.data),Ol=k._def.returns.safeParse(Rt,h);if(!Ol.success)throw new Gr([m(Rt,Ol.error)]);return Ol.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Pm.create(i).rest(Gm.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,d){return new c({args:i||Pm.create([]).rest(Gm.create()),returns:p||Gm.create(),typeName:xt.ZodFunction,...Et(d)})}},RC=class extends _t{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};RC.create=(c,i)=>new RC({getter:c,typeName:xt.ZodLazy,...Et(i)});var kC=class extends _t{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return G(p,{received:p.data,code:f.invalid_literal,expected:this._def.value}),jt}return {status:"valid",value:i.data}}get value(){return this._def.value}};kC.create=(c,i)=>new kC({value:c,typeName:xt.ZodLiteral,...Et(i)});function nX(c,i){return new xC({values:c,typeName:xt.ZodEnum,...Et(i)})}var xC=class c extends _t{constructor(){super(...arguments),YT.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),d=this._def.values;return G(p,{expected:ze.joinValues(d),received:p.parsedType,code:f.invalid_type}),jt}if(zN(this,YT)||XK(this,YT,new Set(this._def.values)),!zN(this,YT).has(i.data)){let p=this._getOrReturnCtx(i),d=this._def.values;return G(p,{received:p.data,code:f.invalid_enum_value,options:d}),jt}return fl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(d=>!i.includes(d)),{...this._def,...p})}};YT=new WeakMap;xC.create=nX;var jC=class extends _t{constructor(){super(...arguments),GT.set(this,void 0);}_parse(i){let p=ze.getValidEnumValues(this._def.values),d=this._getOrReturnCtx(i);if(d.parsedType!==X.string&&d.parsedType!==X.number){let m=ze.objectValues(p);return G(d,{expected:ze.joinValues(m),received:d.parsedType,code:f.invalid_type}),jt}if(zN(this,GT)||XK(this,GT,new Set(ze.getValidEnumValues(this._def.values))),!zN(this,GT).has(i.data)){let m=ze.objectValues(p);return G(d,{received:d.data,code:f.invalid_enum_value,options:m}),jt}return fl(i.data)}get enum(){return this._def.values}};GT=new WeakMap;jC.create=(c,i)=>new jC({values:c,typeName:xt.ZodNativeEnum,...Et(i)});var ig=class extends _t{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.promise&&p.common.async===false)return G(p,{code:f.invalid_type,expected:X.promise,received:p.parsedType}),jt;let d=p.parsedType===X.promise?p.data:Promise.resolve(p.data);return fl(d.then(m=>this._def.type.parseAsync(m,{path:p.path,errorMap:p.common.contextualErrorMap})))}};ig.create=(c,i)=>new ig({type:c,typeName:xt.ZodPromise,...Et(i)});var $r=class extends _t{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===xt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:d}=this._processInputParams(i),m=this._def.effect||null,h={addIssue:P=>{G(d,P),P.fatal?p.abort():p.dirty();},get path(){return d.path}};if(h.addIssue=h.addIssue.bind(h),m.type==="preprocess"){let P=m.transform(d.data,h);if(d.common.async)return Promise.resolve(P).then(async k=>{if(p.value==="aborted")return jt;let J=await this._def.schema._parseAsync({data:k,path:d.path,parent:d});return J.status==="aborted"?jt:J.status==="dirty"||p.value==="dirty"?bT(J.value):J});{if(p.value==="aborted")return jt;let k=this._def.schema._parseSync({data:P,path:d.path,parent:d});return k.status==="aborted"?jt:k.status==="dirty"||p.value==="dirty"?bT(k.value):k}}if(m.type==="refinement"){let P=k=>{let J=m.refinement(k,h);if(d.common.async)return Promise.resolve(J);if(J instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return k};if(d.common.async===false){let k=this._def.schema._parseSync({data:d.data,path:d.path,parent:d});return k.status==="aborted"?jt:(k.status==="dirty"&&p.dirty(),P(k.value),{status:p.value,value:k.value})}else return this._def.schema._parseAsync({data:d.data,path:d.path,parent:d}).then(k=>k.status==="aborted"?jt:(k.status==="dirty"&&p.dirty(),P(k.value).then(()=>({status:p.value,value:k.value}))))}if(m.type==="transform")if(d.common.async===false){let P=this._def.schema._parseSync({data:d.data,path:d.path,parent:d});if(!IC(P))return P;let k=m.transform(P.value,h);if(k instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:k}}else return this._def.schema._parseAsync({data:d.data,path:d.path,parent:d}).then(P=>IC(P)?Promise.resolve(m.transform(P.value,h)).then(k=>({status:p.value,value:k})):P);ze.assertNever(m);}};$r.create=(c,i,p)=>new $r({schema:c,typeName:xt.ZodEffects,effect:i,...Et(p)});$r.createWithPreprocess=(c,i,p)=>new $r({schema:i,effect:{type:"preprocess",transform:c},typeName:xt.ZodEffects,...Et(p)});var yp=class extends _t{_parse(i){return this._getType(i)===X.undefined?fl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};yp.create=(c,i)=>new yp({innerType:c,typeName:xt.ZodOptional,...Et(i)});var Um=class extends _t{_parse(i){return this._getType(i)===X.null?fl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Um.create=(c,i)=>new Um({innerType:c,typeName:xt.ZodNullable,...Et(i)});var MC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),d=p.data;return p.parsedType===X.undefined&&(d=this._def.defaultValue()),this._def.innerType._parse({data:d,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};MC.create=(c,i)=>new MC({innerType:c,typeName:xt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Et(i)});var ZC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),d={...p,common:{...p.common,issues:[]}},m=this._def.innerType._parse({data:d.data,path:d.path,parent:{...d}});return $T(m)?m.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new Gr(d.common.issues)},input:d.data})})):{status:"valid",value:m.status==="valid"?m.value:this._def.catchValue({get error(){return new Gr(d.common.issues)},input:d.data})}}removeCatch(){return this._def.innerType}};ZC.create=(c,i)=>new ZC({innerType:c,typeName:xt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Et(i)});var ST=class extends _t{_parse(i){if(this._getType(i)!==X.nan){let d=this._getOrReturnCtx(i);return G(d,{code:f.invalid_type,expected:X.nan,received:d.parsedType}),jt}return {status:"valid",value:i.data}}};ST.create=c=>new ST({typeName:xt.ZodNaN,...Et(c)});var wst=Symbol("zod_brand"),JT=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),d=p.data;return this._def.type._parse({data:d,path:p.path,parent:p})}unwrap(){return this._def.type}},KT=class c extends _t{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:d.data,path:d.path,parent:d});return h.status==="aborted"?jt:h.status==="dirty"?(p.dirty(),bT(h.value)):this._def.out._parseAsync({data:h.value,path:d.path,parent:d})})();{let m=this._def.in._parseSync({data:d.data,path:d.path,parent:d});return m.status==="aborted"?jt:m.status==="dirty"?(p.dirty(),{status:"dirty",value:m.value}):this._def.out._parseSync({data:m.value,path:d.path,parent:d})}}static create(i,p){return new c({in:i,out:p,typeName:xt.ZodPipeline})}},vC=class extends _t{_parse(i){let p=this._def.innerType._parse(i),d=m=>(IC(m)&&(m.value=Object.freeze(m.value)),m);return $T(p)?p.then(m=>d(m)):d(p)}unwrap(){return this._def.innerType}};vC.create=(c,i)=>new vC({innerType:c,typeName:xt.ZodReadonly,...Et(i)});function $K(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function aX(c,i={},p){return c?ag.create().superRefine((d,m)=>{var h,P;let k=c(d);if(k instanceof Promise)return k.then(J=>{var Y,Rt;if(!J){let Ol=$K(i,d),yN=(Rt=(Y=Ol.fatal)!==null&&Y!==void 0?Y:p)!==null&&Rt!==void 0?Rt:true;m.addIssue({code:"custom",...Ol,fatal:yN});}});if(!k){let J=$K(i,d),Y=(P=(h=J.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:true;m.addIssue({code:"custom",...J,fatal:Y});}}):ag.create()}var Nst={object:Er.lazycreate},xt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(xt||(xt={}));var Bst=(c,i={message:`Input not instance of ${c.name}`})=>aX(p=>p instanceof c,i),iX=ng.create,lX=gC.create,qst=ST.create,Fst=CC.create,rX=AC.create,Dst=SC.create,Est=IT.create,_st=TC.create,Lst=PC.create,Vst=ag.create,Hst=Gm.create,Qst=bp.create,Yst=gT.create,Gst=$m.create,$st=Er.create,Jst=Er.strictCreate,Kst=UC.create,Xst=mN.create,tdt=WC.create,edt=Pm.create,odt=bN.create,ndt=CT.create,adt=AT.create,idt=hN.create,ldt=RC.create,rdt=kC.create,pdt=xC.create,cdt=jC.create,udt=ig.create,JK=$r.create,ydt=yp.create,sdt=Um.create,ddt=$r.createWithPreprocess,zdt=KT.create,mdt=()=>iX().optional(),bdt=()=>lX().optional(),hdt=()=>rX().optional(),Idt={string:c=>ng.create({...c,coerce:true}),number:c=>gC.create({...c,coerce:true}),boolean:c=>AC.create({...c,coerce:true}),bigint:c=>CC.create({...c,coerce:true}),date:c=>SC.create({...c,coerce:true})},gdt=jt,t=Object.freeze({__proto__:null,defaultErrorMap:hT,setErrorMap:dst,getErrorMap:sN,makeIssue:dN,EMPTY_PATH:zst,addIssueToContext:G,ParseStatus:hl,INVALID:jt,DIRTY:bT,OK:fl,isAborted:wL,isDirty:NL,isValid:IC,isAsync:$T,get util(){return ze},get objectUtil(){return fL},ZodParsedType:X,getParsedType:Ym,ZodType:_t,datetimeRegex:oX,ZodString:ng,ZodNumber:gC,ZodBigInt:CC,ZodBoolean:AC,ZodDate:SC,ZodSymbol:IT,ZodUndefined:TC,ZodNull:PC,ZodAny:ag,ZodUnknown:Gm,ZodNever:bp,ZodVoid:gT,ZodArray:$m,ZodObject:Er,ZodUnion:UC,ZodDiscriminatedUnion:mN,ZodIntersection:WC,ZodTuple:Pm,ZodRecord:bN,ZodMap:CT,ZodSet:AT,ZodFunction:hN,ZodLazy:RC,ZodLiteral:kC,ZodEnum:xC,ZodNativeEnum:jC,ZodPromise:ig,ZodEffects:$r,ZodTransformer:$r,ZodOptional:yp,ZodNullable:Um,ZodDefault:MC,ZodCatch:ZC,ZodNaN:ST,BRAND:wst,ZodBranded:JT,ZodPipeline:KT,ZodReadonly:vC,custom:aX,Schema:_t,ZodSchema:_t,late:Nst,get ZodFirstPartyTypeKind(){return xt},coerce:Idt,any:Vst,array:Gst,bigint:Fst,boolean:rX,date:Dst,discriminatedUnion:Xst,effect:JK,enum:pdt,function:idt,instanceof:Bst,intersection:tdt,lazy:ldt,literal:rdt,map:ndt,nan:qst,nativeEnum:cdt,never:Qst,null:Lst,nullable:sdt,number:lX,object:$st,oboolean:hdt,onumber:bdt,optional:ydt,ostring:mdt,pipeline:zdt,preprocess:ddt,promise:udt,record:odt,set:adt,strictObject:Jst,string:iX,symbol:Est,transformer:JK,tuple:edt,undefined:_st,union:Kst,unknown:Hst,void:Yst,NEVER:gdt,ZodIssueCode:f,quotelessJson:sst,ZodError:Gr});var Cdt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),lg=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium","containsGluten","containsDairy","containsNuts","containsEggs","containsSoy","containsFish","containsShellfish","containsSesame"]),rg=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),pg=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),cg=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),ug=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),yg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),sg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),dg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),zg=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),mg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),bg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),hg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),Ig=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),gg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),Cg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),Ag=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Sg=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),Tg=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Pg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Ug=t.enum(["id","name","description","icon","createdAt","updatedAt"]),Wg=t.enum(["id","name","description","createdAt","updatedAt"]),Rg=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),kg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),xg=t.enum(["id","restaurantId","date","createdById","createdAt","updatedAt"]),jg=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),Mg=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),Zg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),vg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),Og=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),fg=t.enum(["id","name","description"]),wg=t.enum(["id","ingredientId","allergenId"]),Ng=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),Bg=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),qg=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),Fg=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),Dg=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),Eg=t.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),_g=t.enum(["id","userId","code","token","expiresAt","createdAt"]),Lg=t.enum(["id","name","imageUrl","category","restaurantId"]),Vg=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel","category"]),Hg=t.enum(["id","name","category","price","density","dietaryRestrictionId","calories","protein","carbohydrates","fat","fiber","sugar","sodium","usdaFoodId","nutritionSource","nutritionUpdatedAt"]),Qg=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),Yg=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),Gg=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),$g=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),Jg=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),Kg=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),Xg=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),tC=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),eC=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),oC=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),nC=t.enum(["id","userId","startTime","endTime","status"]),aC=t.enum(["id","name","status","createdAt","updatedAt"]),iC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),lC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),rC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),pC=t.enum(["id","menuItemId","recipeId","joinAt"]),cC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),uC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),yC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),sC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),jj=t.enum(["default","insensitive"]),pX=t.enum(["first","last"]),Vt=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),qt=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),pe=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),Ft=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),Lt=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Zt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),vt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),Adt=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED"]),ce=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),ue=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ye=t.enum(["UNAVAILABLE","PREFERRED"]),U=t.enum(["APPETIZER","SOUP","SALAD","MAIN_COURSE","SIDE_DISH","DESSERT","BEVERAGE","BREAKFAST","BRUNCH","LUNCH","DINNER","SNACK","BAKED_GOOD","SAUCE","CONDIMENT","SPECIAL"]),Bt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),Ot=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),wt=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),j=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Nt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Ht=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),tt=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),W=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),se=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),ot=t.enum(["MANUAL","USDA","CUSTOM","ESTIMATED"]),Sdt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean(),containsDairy:t.boolean(),containsNuts:t.boolean(),containsEggs:t.boolean(),containsSoy:t.boolean(),containsFish:t.boolean(),containsShellfish:t.boolean(),containsSesame:t.boolean()}),Tdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pdt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Udt=t.object({type:se,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rdt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kdt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xdt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mdt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zdt=t.object({status:qt,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vdt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),Odt=t.object({type:pe,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fdt=t.object({frequency:Ft,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wdt=t.object({type:Vt,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ndt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bdt=t.object({status:Lt,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),qdt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fdt=t.object({source:Zt,status:vt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ddt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Edt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_dt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ldt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Vdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Hdt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Qdt=t.object({taskType:ce,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ydt=t.object({dayOfWeek:ue,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Gdt=t.object({constraintsType:ye,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),$dt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Jdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),Kdt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),Xdt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),tzt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ezt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ozt=t.object({type:Bt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),nzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),azt=t.object({role:j,id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),verified:t.boolean(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),izt=t.object({id:t.string().uuid(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),lzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),rzt=t.object({skillLevel:W,category:U,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),pzt=t.object({nutritionSource:ot.nullable(),id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),density:t.number().nullable(),dietaryRestrictionId:t.number().int().nullable(),calories:t.number().nullable(),protein:t.number().nullable(),carbohydrates:t.number().nullable(),fat:t.number().nullable(),fiber:t.number().nullable(),sugar:t.number().nullable(),sodium:t.number().nullable(),usdaFoodId:t.string().nullable(),nutritionUpdatedAt:t.coerce.date().nullable()}),czt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),uzt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),yzt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),szt=t.object({type:Ot,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),dzt=t.object({status:wt,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),zzt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),mzt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),bzt=t.object({status:Nt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hzt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),Izt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gzt=t.object({status:Ht,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),Czt=t.object({status:tt,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Azt=t.object({status:tt,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),Szt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Tzt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pzt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),Uzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),Wzt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rzt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kzt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ks=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),PQ=t.object({select:t.lazy(()=>xs).optional(),include:t.lazy(()=>ks).optional()}).strict(),xs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),js=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),xzt=t.object({select:t.lazy(()=>Ms).optional(),include:t.lazy(()=>js).optional()}).strict(),Ms=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Zs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),UQ=t.object({select:t.lazy(()=>vs).optional(),include:t.lazy(()=>Zs).optional()}).strict(),vs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Os=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),jzt=t.object({select:t.lazy(()=>fs).optional(),include:t.lazy(()=>Os).optional()}).strict(),fs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),ws=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Mzt=t.object({select:t.lazy(()=>Ns).optional(),include:t.lazy(()=>ws).optional()}).strict(),Ns=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Bs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Zzt=t.object({select:t.lazy(()=>qs).optional(),include:t.lazy(()=>Bs).optional()}).strict(),qs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Fs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),vzt=t.object({select:t.lazy(()=>Ds).optional(),include:t.lazy(()=>Fs).optional()}).strict(),Ds=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Es=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Ozt=t.object({select:t.lazy(()=>_s).optional(),include:t.lazy(()=>Es).optional()}).strict(),_s=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Ls=t.object({menu:t.union([t.boolean(),t.lazy(()=>wj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),WQ=t.object({select:t.lazy(()=>Vs).optional(),include:t.lazy(()=>Ls).optional()}).strict(),RQ=t.object({select:t.lazy(()=>cX).nullish()}).strict(),cX=t.object({menuItems:t.boolean().optional()}).strict(),Vs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>wj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),Hs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),Mj=t.object({select:t.lazy(()=>Qs).optional(),include:t.lazy(()=>Hs).optional()}).strict(),kQ=t.object({select:t.lazy(()=>uX).nullish()}).strict(),uX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),Qs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),Ys=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xQ)]).optional()}).strict(),Zj=t.object({select:t.lazy(()=>Gs).optional(),include:t.lazy(()=>Ys).optional()}).strict(),xQ=t.object({select:t.lazy(()=>yX).nullish()}).strict(),yX=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),Gs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xQ)]).optional()}).strict(),$s=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),fzt=t.object({select:t.lazy(()=>Js).optional(),include:t.lazy(()=>$s).optional()}).strict(),Js=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),Ks=t.object({equipment:t.union([t.boolean(),t.lazy(()=>Zj)]).optional()}).strict(),wzt=t.object({select:t.lazy(()=>Xs).optional(),include:t.lazy(()=>Ks).optional()}).strict(),Xs=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>Zj)]).optional()}).strict(),td=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),vj=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),jQ=t.object({select:t.lazy(()=>sX).nullish()}).strict(),sX=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),ed=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),od=t.object({checklist:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),MQ=t.object({select:t.lazy(()=>nd).optional(),include:t.lazy(()=>od).optional()}).strict(),ZQ=t.object({select:t.lazy(()=>dX).nullish()}).strict(),dX=t.object({completions:t.boolean().optional()}).strict(),nd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),ad=t.object({checklist:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),vQ=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>ad).optional()}).strict(),OQ=t.object({select:t.lazy(()=>zX).nullish()}).strict(),zX=t.object({items:t.boolean().optional()}).strict(),id=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>OQ)]).optional()}).strict(),ld=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>vQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),Nzt=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),rd=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>vQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>MQ)]).optional()}).strict(),pd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>fj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional()}).strict(),Bzt=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),cd=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>fj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional()}).strict(),ud=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),qzt=t.object({select:t.lazy(()=>yd).optional(),include:t.lazy(()=>ud).optional()}).strict(),yd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),sd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),fQ=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>sd).optional()}).strict(),wQ=t.object({select:t.lazy(()=>mX).nullish()}).strict(),mX=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),dd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),zd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),Fzt=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),NQ=t.object({select:t.lazy(()=>bX).nullish()}).strict(),bX=t.object({recipes:t.boolean().optional()}).strict(),md=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),bd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Dzt=t.object({select:t.lazy(()=>hd).optional(),include:t.lazy(()=>bd).optional()}).strict(),hd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Id=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Ezt=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),gd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Cd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),BQ=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),qQ=t.object({select:t.lazy(()=>hX).nullish()}).strict(),hX=t.object({items:t.boolean().optional()}).strict(),Ad=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Sd=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>BQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),_zt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>BQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Pd=t.object({shift:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),Lzt=t.object({select:t.lazy(()=>Ud).optional(),include:t.lazy(()=>Pd).optional()}).strict(),Ud=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),Wd=t.object({user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Vzt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Wd).optional()}).strict(),Rd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),kd=t.object({user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Hzt=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),xd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),jd=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>mS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Qzt=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),Md=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>mS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Zd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),FQ=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),DQ=t.object({select:t.lazy(()=>IX).nullish()}).strict(),IX=t.object({ingredients:t.boolean().optional()}).strict(),vd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),Od=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),Yzt=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),fd=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),wd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Gzt=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),Nd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Em=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),Bd=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),Oj=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),EQ=t.object({select:t.lazy(()=>gX).nullish()}).strict(),gX=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),Fd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),CI=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),_Q=t.object({select:t.lazy(()=>CX).nullish()}).strict(),CX=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Dd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>_Q)]).optional()}).strict(),Ed=t.object({organization:t.union([t.boolean(),t.lazy(()=>Oj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>HK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),no=t.object({select:t.lazy(()=>_d).optional(),include:t.lazy(()=>Ed).optional()}).strict(),LQ=t.object({select:t.lazy(()=>AX).nullish()}).strict(),AX=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),equipment:t.boolean().optional(),qualityChecklist:t.boolean().optional(),qustomerFeedback:t.boolean().optional()}).strict(),_d=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>Oj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>HK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),Ld=t.object({organization:t.union([t.boolean(),t.lazy(()=>Oj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>VK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Kt=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),VQ=t.object({select:t.lazy(()=>SX).nullish()}).strict(),SX=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),productionPlanItem:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraint:t.boolean().optional(),inventoryWithdrawal:t.boolean().optional(),checklistComplete:t.boolean().optional(),customerFeedback:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransaction:t.boolean().optional(),StockCount:t.boolean().optional()}).strict(),Vd=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),passwordHash:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),verified:t.boolean().optional(),role:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>Oj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>VK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Hd=t.object({user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),$zt=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),Qd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),code:t.boolean().optional(),token:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Yd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),HQ=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),QQ=t.object({select:t.lazy(()=>TX).nullish()}).strict(),TX=t.object({recipes:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),$d=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>QK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>YK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>LK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>PQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>UQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>e0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),Xt=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),YQ=t.object({select:t.lazy(()=>PX).nullish()}).strict(),PX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipment:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),Jd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),category:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>QK)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>YK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>LK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>zS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>PQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>UQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>e0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),Kd=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>fQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),tp=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),GQ=t.object({select:t.lazy(()=>UX).nullish()}).strict(),UX=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecord:t.boolean().optional(),IngredientAllergen:t.boolean().optional(),SupplierPriceHistory:t.boolean().optional()}).strict(),Xd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),density:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),usdaFoodId:t.boolean().optional(),nutritionSource:t.boolean().optional(),nutritionUpdatedAt:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>sT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>fQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),tz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Mj)]).optional()}).strict(),Jzt=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),ez=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Mj)]).optional()}).strict(),oz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),$Q=t.object({select:t.lazy(()=>nz).optional(),include:t.lazy(()=>oz).optional()}).strict(),JQ=t.object({select:t.lazy(()=>WX).nullish()}).strict(),WX=t.object({equipment:t.boolean().optional()}).strict(),nz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),az=t.object({inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),mS=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>az).optional()}).strict(),KQ=t.object({select:t.lazy(()=>RX).nullish()}).strict(),RX=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),iz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>dT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),lz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>mS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Kzt=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),rz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>mS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),pz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),XQ=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),t0=t.object({select:t.lazy(()=>kX).nullish()}).strict(),kX=t.object({items:t.boolean().optional()}).strict(),cz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>CI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),uz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>XQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>mS)]).optional()}).strict(),Xzt=t.object({select:t.lazy(()=>yz).optional(),include:t.lazy(()=>uz).optional()}).strict(),yz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>XQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>mS)]).optional()}).strict(),sz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),e0=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>sz).optional()}).strict(),dz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),zz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>fj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>n0)]).optional()}).strict(),o0=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),n0=t.object({select:t.lazy(()=>xX).nullish()}).strict(),xX=t.object({items:t.boolean().optional()}).strict(),mz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>fj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>n0)]).optional()}).strict(),bz=t.object({order:t.union([t.boolean(),t.lazy(()=>o0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional()}).strict(),tmt=t.object({select:t.lazy(()=>hz).optional(),include:t.lazy(()=>bz).optional()}).strict(),hz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>o0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>tp)]).optional()}).strict(),Iz=t.object({orders:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),fj=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),a0=t.object({select:t.lazy(()=>jX).nullish()}).strict(),jX=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),Cz=t.object({user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),i0=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),l0=t.object({select:t.lazy(()=>MX).nullish()}).strict(),MX=t.object({ShiftTask:t.boolean().optional()}).strict(),Az=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),Sz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>p0)]).optional()}).strict(),r0=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),p0=t.object({select:t.lazy(()=>ZX).nullish()}).strict(),ZX=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),Tz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>p0)]).optional()}).strict(),Pz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),emt=t.object({select:t.lazy(()=>Uz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),Uz=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Wz=t.object({user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),omt=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Wz).optional()}).strict(),Rz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),kz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>c0)]).optional()}).strict(),wj=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),c0=t.object({select:t.lazy(()=>vX).nullish()}).strict(),vX=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),xz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>og)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>c0)]).optional()}).strict(),jz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),nmt=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Zz=t.object({menu:t.union([t.boolean(),t.lazy(()=>wj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>WQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>y0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>u0)]).optional()}).strict(),ep=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),u0=t.object({select:t.lazy(()=>OX).nullish()}).strict(),OX=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),vz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>wj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>WQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>up)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>y0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>u0)]).optional()}).strict(),Oz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),y0=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),wz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),amt=t.object({select:t.lazy(()=>Nz).optional(),include:t.lazy(()=>wz).optional()}).strict(),Nz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Bz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),imt=t.object({select:t.lazy(()=>qz).optional(),include:t.lazy(()=>Bz).optional()}).strict(),qz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Wm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Bl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),qL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),_count:t.lazy(()=>fX).optional(),_avg:t.lazy(()=>wX).optional(),_max:t.lazy(()=>NX).optional(),_min:t.lazy(()=>BX).optional(),_sum:t.lazy(()=>qX).optional()}).strict(),OC=t.object({AND:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),OR:t.lazy(()=>OC).array().optional(),NOT:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>Wt),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>bt),t.string()]).optional(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>Jn),t.boolean()]).optional()}).strict(),oa=t.object({AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),FL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>FX).optional(),_avg:t.lazy(()=>DX).optional(),_max:t.lazy(()=>EX).optional(),_min:t.lazy(()=>_X).optional(),_sum:t.lazy(()=>LX).optional()}).strict(),fC=t.object({AND:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),OR:t.lazy(()=>fC).array().optional(),NOT:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),threshold:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),qe=t.object({AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>y),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Rm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ql=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>y),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),DL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>VX).optional(),_avg:t.lazy(()=>HX).optional(),_max:t.lazy(()=>QX).optional(),_min:t.lazy(()=>YX).optional(),_sum:t.lazy(()=>GX).optional()}).strict(),wC=t.object({AND:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),OR:t.lazy(()=>wC).array().optional(),NOT:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>bt),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),na=t.object({AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>se)]).optional(),stepNumber:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>se)]).optional(),stepNumber:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),EL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>$X).optional(),_avg:t.lazy(()=>JX).optional(),_max:t.lazy(()=>KX).optional(),_min:t.lazy(()=>XX).optional(),_sum:t.lazy(()=>ttt).optional()}).strict(),NC=t.object({AND:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),OR:t.lazy(()=>NC).array().optional(),NOT:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>bt),t.string()]).optional(),type:t.union([t.lazy(()=>ett),t.lazy(()=>se)]).optional(),stepNumber:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),aa=t.object({AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),_L=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ott).optional(),_avg:t.lazy(()=>ntt).optional(),_max:t.lazy(()=>att).optional(),_min:t.lazy(()=>itt).optional(),_sum:t.lazy(()=>ltt).optional()}).strict(),BC=t.object({AND:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),OR:t.lazy(()=>BC).array().optional(),NOT:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ia=t.object({AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),tb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),LL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>rtt).optional(),_avg:t.lazy(()=>ptt).optional(),_max:t.lazy(()=>ctt).optional(),_min:t.lazy(()=>utt).optional(),_sum:t.lazy(()=>ytt).optional()}).strict(),qC=t.object({AND:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),OR:t.lazy(()=>qC).array().optional(),NOT:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),la=t.object({AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),eb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),VL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>stt).optional(),_avg:t.lazy(()=>dtt).optional(),_max:t.lazy(()=>ztt).optional(),_min:t.lazy(()=>mtt).optional(),_sum:t.lazy(()=>btt).optional()}).strict(),FC=t.object({AND:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),OR:t.lazy(()=>FC).array().optional(),NOT:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>Wt),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ra=t.object({AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional()}).strict(),ob=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),menuItem:t.lazy(()=>Nl).optional()}).strict(),ht=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional()}).strict()),HL=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>htt).optional(),_avg:t.lazy(()=>Itt).optional(),_max:t.lazy(()=>gtt).optional(),_min:t.lazy(()=>Ctt).optional(),_sum:t.lazy(()=>Att).optional()}).strict(),DC=t.object({AND:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),OR:t.lazy(()=>DC).array().optional(),NOT:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),total:t.union([t.lazy(()=>Wt),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number()]).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Kj),t.lazy(()=>Oe)]).optional(),menuItems:t.lazy(()=>TI).optional()}).strict(),km=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>Qp).optional(),menuItems:t.lazy(()=>Xj).optional()}).strict(),te=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>IN)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>IN)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>IN).optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>y),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Kj),t.lazy(()=>Oe)]).optional(),menuItems:t.lazy(()=>TI).optional()}).strict()),QL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Stt).optional(),_avg:t.lazy(()=>Ttt).optional(),_max:t.lazy(()=>Ptt).optional(),_min:t.lazy(()=>Utt).optional(),_sum:t.lazy(()=>Wtt).optional()}).strict(),EC=t.object({AND:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),OR:t.lazy(()=>EC).array().optional(),NOT:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ie=t.object({AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),approvedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),ingredients:t.lazy(()=>hS).optional(),instructions:t.lazy(()=>tM).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),approvedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict(),Ep=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional(),ingredients:t.lazy(()=>XN).optional(),instructions:t.lazy(()=>e4).optional(),createdBy:t.lazy(()=>eo).optional(),approvedBy:t.lazy(()=>eo).optional()}).strict(),N=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>gN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>gN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>gN).optional(),AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),ingredients:t.lazy(()=>hS).optional(),instructions:t.lazy(()=>tM).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),approvedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict()),YL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Rtt).optional(),_avg:t.lazy(()=>ktt).optional(),_max:t.lazy(()=>xtt).optional(),_min:t.lazy(()=>jtt).optional(),_sum:t.lazy(()=>Mtt).optional()}).strict(),_C=t.object({AND:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),OR:t.lazy(()=>_C).array().optional(),NOT:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>tB),t.lazy(()=>qt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),recipes:t.lazy(()=>IS).optional(),maintenanceLogs:t.lazy(()=>o4).optional()}).strict(),_p=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),recipes:t.lazy(()=>eB).optional(),maintenanceLogs:t.lazy(()=>Ztt).optional()}).strict(),Qt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>tB),t.lazy(()=>qt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),recipes:t.lazy(()=>IS).optional(),maintenanceLogs:t.lazy(()=>o4).optional()}).strict()),GL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vtt).optional(),_avg:t.lazy(()=>Ott).optional(),_max:t.lazy(()=>ftt).optional(),_min:t.lazy(()=>wtt).optional(),_sum:t.lazy(()=>Ntt).optional()}).strict(),LC=t.object({AND:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),OR:t.lazy(()=>LC).array().optional(),NOT:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>Btt),t.lazy(()=>qt)]).optional(),location:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),pa=t.object({AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),equipment:t.union([t.lazy(()=>eM),t.lazy(()=>Me)]).optional(),RecipeInstruction:t.union([t.lazy(()=>n4),t.lazy(()=>Ne)]).optional().nullable()}).strict(),nb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),equipment:t.lazy(()=>_p).optional(),RecipeInstruction:t.lazy(()=>fm).optional()}).strict(),q=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>CN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>CN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>CN).optional(),AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),equipment:t.union([t.lazy(()=>eM),t.lazy(()=>Me)]).optional(),RecipeInstruction:t.union([t.lazy(()=>n4),t.lazy(()=>Ne)]).optional().nullable()}).strict()),$L=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>qtt).optional(),_avg:t.lazy(()=>Ftt).optional(),_max:t.lazy(()=>Dtt).optional(),_min:t.lazy(()=>Ett).optional(),_sum:t.lazy(()=>_tt).optional()}).strict(),VC=t.object({AND:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),OR:t.lazy(()=>VC).array().optional(),NOT:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>va),t.number()]).optional().nullable()}).strict(),ca=t.object({AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>oB),t.lazy(()=>pe)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>eM),t.lazy(()=>Me)]).optional()}).strict(),ab=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>_p).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>oB),t.lazy(()=>pe)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>eM),t.lazy(()=>Me)]).optional()}).strict()),JL=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ltt).optional(),_avg:t.lazy(()=>Vtt).optional(),_max:t.lazy(()=>Htt).optional(),_min:t.lazy(()=>Qtt).optional(),_sum:t.lazy(()=>Ytt).optional()}).strict(),HC=t.object({AND:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),OR:t.lazy(()=>HC).array().optional(),NOT:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>Gtt),t.lazy(()=>pe)]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>bt),t.string()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>nB),t.lazy(()=>Ft)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>a4).optional(),completions:t.lazy(()=>oM).optional()}).strict(),Lp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),items:t.lazy(()=>$tt).optional(),completions:t.lazy(()=>i4).optional()}).strict(),Yt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>nB),t.lazy(()=>Ft)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>a4).optional(),completions:t.lazy(()=>oM).optional()}).strict()),KL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jtt).optional(),_avg:t.lazy(()=>Ktt).optional(),_max:t.lazy(()=>Xtt).optional(),_min:t.lazy(()=>tet).optional(),_sum:t.lazy(()=>eet).optional()}).strict(),QC=t.object({AND:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),OR:t.lazy(()=>QC).array().optional(),NOT:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>oet),t.lazy(()=>Ft)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>aB),t.lazy(()=>Vt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>nM),t.lazy(()=>Ze)]).optional(),completions:t.lazy(()=>aM).optional()}).strict(),xm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Lp).optional(),completions:t.lazy(()=>l4).optional()}).strict(),ee=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number().int()]).optional(),type:t.union([t.lazy(()=>aB),t.lazy(()=>Vt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>nM),t.lazy(()=>Ze)]).optional(),completions:t.lazy(()=>aM).optional()}).strict()),XL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>net).optional(),_avg:t.lazy(()=>aet).optional(),_max:t.lazy(()=>iet).optional(),_min:t.lazy(()=>ret).optional(),_sum:t.lazy(()=>pet).optional()}).strict(),YC=t.object({AND:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),OR:t.lazy(()=>YC).array().optional(),NOT:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>cet),t.lazy(()=>Vt)]).optional(),requiredPhotos:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),completedById:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>nM),t.lazy(()=>Ze)]).optional(),completedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>aM).optional()}).strict(),jm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Lp).optional(),completedBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>l4).optional()}).strict(),it=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>nM),t.lazy(()=>Ze)]).optional(),completedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>aM).optional()}).strict()),tV=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uet).optional(),_avg:t.lazy(()=>yet).optional(),_max:t.lazy(()=>set).optional(),_min:t.lazy(()=>det).optional(),_sum:t.lazy(()=>zet).optional()}).strict(),GC=t.object({AND:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),OR:t.lazy(()=>GC).array().optional(),NOT:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ua=t.object({AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>iB),t.lazy(()=>Lt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>bl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>r4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>p4),t.lazy(()=>Qe)]).optional()}).strict(),ib=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>jm).optional(),checklistItem:t.lazy(()=>xm).optional()}).strict(),It=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>iB),t.lazy(()=>Lt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>bl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>r4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>p4),t.lazy(()=>Qe)]).optional()}).strict()),eV=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>met).optional(),_avg:t.lazy(()=>bet).optional(),_max:t.lazy(()=>het).optional(),_min:t.lazy(()=>Iet).optional(),_sum:t.lazy(()=>get).optional()}).strict(),$C=t.object({AND:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),OR:t.lazy(()=>$C).array().optional(),NOT:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Cet),t.lazy(()=>Lt)]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>bl).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ya=t.object({AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>iM),t.lazy(()=>ve)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional()}).strict(),lb=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>Hp).optional(),ingredient:t.lazy(()=>wl).optional()}).strict(),gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>iM),t.lazy(()=>ve)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional()}).strict()),oV=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Aet).optional(),_avg:t.lazy(()=>Tet).optional(),_max:t.lazy(()=>Pet).optional(),_min:t.lazy(()=>Uet).optional(),_sum:t.lazy(()=>Wet).optional()}).strict(),JC=t.object({AND:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),OR:t.lazy(()=>JC).array().optional(),NOT:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),startDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),sa=t.object({AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>lB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>bl).optional(),status:t.union([t.lazy(()=>rB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>lM),t.lazy(()=>Pt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict(),rb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),menuItem:t.lazy(()=>Nl).optional(),respondedBy:t.lazy(()=>eo).optional()}).strict(),F=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>lB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>bl).optional(),status:t.union([t.lazy(()=>rB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>lM),t.lazy(()=>Pt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict()),nV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ret).optional(),_avg:t.lazy(()=>ket).optional(),_max:t.lazy(()=>xet).optional(),_min:t.lazy(()=>jet).optional(),_sum:t.lazy(()=>Met).optional()}).strict(),KC=t.object({AND:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),OR:t.lazy(()=>KC).array().optional(),NOT:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Zet),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>bl).optional(),status:t.union([t.lazy(()=>vet),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),we=t.object({AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>TI).optional(),recipes:t.lazy(()=>ap).optional(),ingredients:t.lazy(()=>rM).optional()}).strict(),Mm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>Xj).optional(),recipes:t.lazy(()=>gS).optional(),ingredients:t.lazy(()=>c4).optional()}).strict(),lt=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>TI).optional(),recipes:t.lazy(()=>ap).optional(),ingredients:t.lazy(()=>rM).optional()}).strict()),aV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Oet).optional(),_avg:t.lazy(()=>fet).optional(),_max:t.lazy(()=>wet).optional(),_min:t.lazy(()=>Net).optional(),_sum:t.lazy(()=>Bet).optional()}).strict(),XC=t.object({AND:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),OR:t.lazy(()=>XC).array().optional(),NOT:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),da=t.object({AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ap).optional()}).strict(),pb=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>gS).optional()}).strict(),Ae=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ap).optional()}).strict()),iV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qet).optional(),_avg:t.lazy(()=>Fet).optional(),_max:t.lazy(()=>Det).optional(),_min:t.lazy(()=>Eet).optional(),_sum:t.lazy(()=>_et).optional()}).strict(),tA=t.object({AND:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),OR:t.lazy(()=>tA).array().optional(),NOT:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),za=t.object({AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional(),recordedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),cb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),menuItem:t.lazy(()=>Nl).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional(),recordedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),lV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Let).optional(),_avg:t.lazy(()=>Vet).optional(),_max:t.lazy(()=>Het).optional(),_min:t.lazy(()=>Qet).optional(),_sum:t.lazy(()=>Yet).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>bt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ma=t.object({AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),ingrediente:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),recordedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),ub=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),ingrediente:t.lazy(()=>wl).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),ingrediente:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),recordedBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),rV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Get).optional(),_avg:t.lazy(()=>$et).optional(),_max:t.lazy(()=>Jet).optional(),_min:t.lazy(()=>Ket).optional(),_sum:t.lazy(()=>Xet).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),reason:t.union([t.lazy(()=>bt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>CS).optional()}).strict(),Zm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>pB).optional()}).strict(),rt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>CS).optional()}).strict()),pV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>tot).optional(),_avg:t.lazy(()=>eot).optional(),_max:t.lazy(()=>oot).optional(),_min:t.lazy(()=>not).optional(),_sum:t.lazy(()=>aot).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ba=t.object({AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>u4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict(),yb=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>Zm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>u4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable()}).strict()),cV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>iot).optional(),_avg:t.lazy(()=>lot).optional(),_max:t.lazy(()=>rot).optional(),_min:t.lazy(()=>pot).optional(),_sum:t.lazy(()=>cot).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ha=t.object({AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number()]).optional(),taskType:t.union([t.lazy(()=>cB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>y4),t.lazy(()=>Xe)]).optional()}).strict(),sb=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>qm).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>cB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>y4),t.lazy(()=>Xe)]).optional()}).strict()),uV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uot).optional(),_avg:t.lazy(()=>yot).optional(),_max:t.lazy(()=>sot).optional(),_min:t.lazy(()=>dot).optional(),_sum:t.lazy(()=>zot).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>mot),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ia=t.object({AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>uB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),db=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>uB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),yV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>bot).optional(),_avg:t.lazy(()=>hot).optional(),_max:t.lazy(()=>Iot).optional(),_min:t.lazy(()=>got).optional(),_sum:t.lazy(()=>Cot).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>Aot),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ga=t.object({AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>yB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),zb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Pe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>yB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),sV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Sot).optional(),_avg:t.lazy(()=>Tot).optional(),_max:t.lazy(()=>Pot).optional(),_min:t.lazy(()=>Uot).optional(),_sum:t.lazy(()=>Wot).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>Rot),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ca=t.object({AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional(),recipe:t.union([t.lazy(()=>s4),t.lazy(()=>O)]).optional().nullable(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),mb=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>dp).optional(),recipe:t.lazy(()=>oo).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),L=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional(),recipe:t.union([t.lazy(()=>s4),t.lazy(()=>O)]).optional().nullable(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),dV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>kot).optional(),_avg:t.lazy(()=>xot).optional(),_max:t.lazy(()=>jot).optional(),_min:t.lazy(()=>Mot).optional(),_sum:t.lazy(()=>Zot).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),recipeId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),co=t.object({AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>pM).optional()}).strict(),vm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),ingredients:t.lazy(()=>d4).optional()}).strict(),op=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>pM).optional()}).strict()),zV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>vot).optional(),_avg:t.lazy(()=>Oot).optional(),_max:t.lazy(()=>fot).optional(),_min:t.lazy(()=>wot).optional(),_sum:t.lazy(()=>Not).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Aa=t.object({AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),allergen:t.union([t.lazy(()=>z4),t.lazy(()=>co)]).optional()}).strict(),bb=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>wl).optional(),allergen:t.lazy(()=>vm).optional()}).strict(),Ct=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),allergen:t.union([t.lazy(()=>z4),t.lazy(()=>co)]).optional()}).strict()),mV=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>Bot).optional(),_avg:t.lazy(()=>qot).optional(),_max:t.lazy(()=>Fot).optional(),_min:t.lazy(()=>Dot).optional(),_sum:t.lazy(()=>Eot).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Sa=t.object({AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional()}).strict(),hb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Nl).optional()}).strict(),Ue=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional()}).strict()),bV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>_ot).optional(),_avg:t.lazy(()=>Lot).optional(),_max:t.lazy(()=>Vot).optional(),_min:t.lazy(()=>Hot).optional(),_sum:t.lazy(()=>Qot).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),zl=t.object({AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ib=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_m=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict()),hV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yot).optional(),_avg:t.lazy(()=>Got).optional(),_max:t.lazy(()=>$ot).optional(),_min:t.lazy(()=>Jot).optional(),_sum:t.lazy(()=>Kot).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),je=t.object({AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>m4).optional(),users:t.lazy(()=>cM).optional()}).strict(),Vp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>Xot).optional(),users:t.lazy(()=>b4).optional()}).strict(),vl=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>m4).optional(),users:t.lazy(()=>cM).optional()}).strict()),IV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>tnt).optional(),_avg:t.lazy(()=>ent).optional(),_max:t.lazy(()=>ont).optional(),_min:t.lazy(()=>nnt).optional(),_sum:t.lazy(()=>ant).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Dt=t.object({AND:t.union([t.lazy(()=>Dt),t.lazy(()=>Dt).array()]).optional(),OR:t.lazy(()=>Dt).array().optional(),NOT:t.union([t.lazy(()=>Dt),t.lazy(()=>Dt).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>h4),t.lazy(()=>Bt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>SS).optional(),transactions:t.lazy(()=>TS).optional(),stockCounts:t.lazy(()=>uM).optional()}).strict(),Xr=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),items:t.lazy(()=>sB).optional(),transactions:t.lazy(()=>dB).optional(),stockCounts:t.lazy(()=>I4).optional()}).strict(),$n=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>Dt),t.lazy(()=>Dt).array()]).optional(),OR:t.lazy(()=>Dt).array().optional(),NOT:t.union([t.lazy(()=>Dt),t.lazy(()=>Dt).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>h4),t.lazy(()=>Bt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>SS).optional(),transactions:t.lazy(()=>TS).optional(),stockCounts:t.lazy(()=>uM).optional()}).strict()),gV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>int).optional(),_avg:t.lazy(()=>lnt).optional(),_max:t.lazy(()=>rnt).optional(),_min:t.lazy(()=>pnt).optional(),_sum:t.lazy(()=>cnt).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>unt),t.lazy(()=>Bt)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),B=t.object({AND:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),OR:t.lazy(()=>B).array().optional(),NOT:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>yM),t.lazy(()=>je)]).optional().nullable(),users:t.lazy(()=>cM).optional(),cookbooks:t.lazy(()=>g4).optional(),inventory:t.union([t.lazy(()=>C4),t.lazy(()=>Dt)]).optional().nullable(),orders:t.lazy(()=>sM).optional(),recipes:t.lazy(()=>ap).optional(),menus:t.lazy(()=>A4).optional(),salesTransactions:t.lazy(()=>dM).optional(),leftoverItem:t.lazy(()=>PS).optional(),wasteRecord:t.lazy(()=>US).optional(),productionPlan:t.lazy(()=>zM).optional(),equipment:t.lazy(()=>S4).optional(),qualityChecklist:t.lazy(()=>T4).optional(),qustomerFeedback:t.lazy(()=>WS).optional()}).strict(),Oa=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organization:t.lazy(()=>Vp).optional(),users:t.lazy(()=>b4).optional(),cookbooks:t.lazy(()=>ynt).optional(),inventory:t.lazy(()=>Xr).optional(),orders:t.lazy(()=>P4).optional(),recipes:t.lazy(()=>gS).optional(),menus:t.lazy(()=>snt).optional(),salesTransactions:t.lazy(()=>U4).optional(),leftoverItem:t.lazy(()=>zB).optional(),wasteRecord:t.lazy(()=>mB).optional(),productionPlan:t.lazy(()=>W4).optional(),equipment:t.lazy(()=>dnt).optional(),qualityChecklist:t.lazy(()=>znt).optional(),qustomerFeedback:t.lazy(()=>bB).optional()}).strict(),K=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),OR:t.lazy(()=>B).array().optional(),NOT:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>yM),t.lazy(()=>je)]).optional().nullable(),users:t.lazy(()=>cM).optional(),cookbooks:t.lazy(()=>g4).optional(),inventory:t.union([t.lazy(()=>C4),t.lazy(()=>Dt)]).optional().nullable(),orders:t.lazy(()=>sM).optional(),recipes:t.lazy(()=>ap).optional(),menus:t.lazy(()=>A4).optional(),salesTransactions:t.lazy(()=>dM).optional(),leftoverItem:t.lazy(()=>PS).optional(),wasteRecord:t.lazy(()=>US).optional(),productionPlan:t.lazy(()=>zM).optional(),equipment:t.lazy(()=>S4).optional(),qualityChecklist:t.lazy(()=>T4).optional(),qustomerFeedback:t.lazy(()=>WS).optional()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>mnt).optional(),_avg:t.lazy(()=>bnt).optional(),_max:t.lazy(()=>hnt).optional(),_min:t.lazy(()=>Int).optional(),_sum:t.lazy(()=>gnt).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>bt),t.string()]).optional(),city:t.union([t.lazy(()=>bt),t.string()]).optional(),zipCode:t.union([t.lazy(()=>bt),t.string()]).optional(),state:t.union([t.lazy(()=>bt),t.string()]).optional(),owner:t.union([t.lazy(()=>bt),t.string()]).optional(),organizationId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>hB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>yM),t.lazy(()=>je)]).optional().nullable(),restaurant:t.union([t.lazy(()=>mM),t.lazy(()=>B)]).optional().nullable(),shifts:t.lazy(()=>R4).optional(),prepItems:t.lazy(()=>RS).optional(),inventoryUpdates:t.lazy(()=>SS).optional(),sessions:t.lazy(()=>k4).optional(),passwordResets:t.lazy(()=>x4).optional(),leftoverItem:t.lazy(()=>PS).optional(),wasteRecord:t.lazy(()=>US).optional(),productionPlan:t.lazy(()=>zM).optional(),productionPlanItem:t.lazy(()=>CS).optional(),availability:t.lazy(()=>j4).optional(),schedulingConstraint:t.lazy(()=>M4).optional(),inventoryWithdrawal:t.lazy(()=>kS).optional(),checklistComplete:t.lazy(()=>oM).optional(),customerFeedback:t.lazy(()=>WS).optional(),recipeVersionsCreated:t.lazy(()=>DA).optional(),recipeVersionsApproved:t.lazy(()=>DA).optional(),InventoryTransaction:t.lazy(()=>TS).optional(),StockCount:t.lazy(()=>uM).optional()}).strict(),eo=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Vp).optional(),restaurant:t.lazy(()=>Oa).optional(),shifts:t.lazy(()=>Cnt).optional(),prepItems:t.lazy(()=>IB).optional(),inventoryUpdates:t.lazy(()=>sB).optional(),sessions:t.lazy(()=>Ant).optional(),passwordResets:t.lazy(()=>Snt).optional(),leftoverItem:t.lazy(()=>zB).optional(),wasteRecord:t.lazy(()=>mB).optional(),productionPlan:t.lazy(()=>W4).optional(),productionPlanItem:t.lazy(()=>pB).optional(),availability:t.lazy(()=>Tnt).optional(),schedulingConstraint:t.lazy(()=>Pnt).optional(),inventoryWithdrawal:t.lazy(()=>gB).optional(),checklistComplete:t.lazy(()=>i4).optional(),customerFeedback:t.lazy(()=>bB).optional(),recipeVersionsCreated:t.lazy(()=>WN).optional(),recipeVersionsApproved:t.lazy(()=>WN).optional(),InventoryTransaction:t.lazy(()=>dB).optional(),StockCount:t.lazy(()=>I4).optional()}).strict(),M=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>hB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>yM),t.lazy(()=>je)]).optional().nullable(),restaurant:t.union([t.lazy(()=>mM),t.lazy(()=>B)]).optional().nullable(),shifts:t.lazy(()=>R4).optional(),prepItems:t.lazy(()=>RS).optional(),inventoryUpdates:t.lazy(()=>SS).optional(),sessions:t.lazy(()=>k4).optional(),passwordResets:t.lazy(()=>x4).optional(),leftoverItem:t.lazy(()=>PS).optional(),wasteRecord:t.lazy(()=>US).optional(),productionPlan:t.lazy(()=>zM).optional(),productionPlanItem:t.lazy(()=>CS).optional(),availability:t.lazy(()=>j4).optional(),schedulingConstraint:t.lazy(()=>M4).optional(),inventoryWithdrawal:t.lazy(()=>kS).optional(),checklistComplete:t.lazy(()=>oM).optional(),customerFeedback:t.lazy(()=>WS).optional(),recipeVersionsCreated:t.lazy(()=>DA).optional(),recipeVersionsApproved:t.lazy(()=>DA).optional(),InventoryTransaction:t.lazy(()=>TS).optional(),StockCount:t.lazy(()=>uM).optional()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Unt).optional(),_avg:t.lazy(()=>Wnt).optional(),_max:t.lazy(()=>Rnt).optional(),_min:t.lazy(()=>knt).optional(),_sum:t.lazy(()=>xnt).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),sub:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>bt),t.string()]).optional(),firstName:t.union([t.lazy(()=>bt),t.string()]).optional(),lastName:t.union([t.lazy(()=>bt),t.string()]).optional(),profileImage:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),role:t.union([t.lazy(()=>jnt),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ta=t.object({AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),gb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),We=t.union([t.object({id:t.string().uuid(),code:t.string(),token:t.string()}),t.object({id:t.string().uuid(),code:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({code:t.string(),token:t.string()}),t.object({code:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),code:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mnt).optional(),_avg:t.lazy(()=>Znt).optional(),_max:t.lazy(()=>vnt).optional(),_min:t.lazy(()=>Ont).optional(),_sum:t.lazy(()=>fnt).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>bt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),code:t.union([t.lazy(()=>bt),t.string()]).optional(),token:t.union([t.lazy(()=>bt),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),recipes:t.lazy(()=>ap).optional(),restaurant:t.union([t.lazy(()=>mM),t.lazy(()=>B)]).optional().nullable()}).strict(),Om=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipes:t.lazy(()=>gS).optional(),restaurant:t.lazy(()=>Oa).optional()}).strict(),oe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>ap).optional(),restaurant:t.union([t.lazy(()=>mM),t.lazy(()=>B)]).optional().nullable()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>wnt).optional(),_avg:t.lazy(()=>Nnt).optional(),_max:t.lazy(()=>Bnt).optional(),_min:t.lazy(()=>qnt).optional(),_sum:t.lazy(()=>Fnt).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>bt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>va),t.number()]).optional().nullable()}).strict(),O=t.object({AND:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),OR:t.lazy(()=>O).array().optional(),NOT:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>bl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>CB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>AB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),cookBook:t.union([t.lazy(()=>Z4),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>hS).optional(),instructions:t.lazy(()=>tM).optional(),menuItems:t.lazy(()=>TI).optional(),foodCostHistory:t.lazy(()=>v4).optional(),prepHistory:t.lazy(()=>O4).optional(),prepBoards:t.lazy(()=>f4).optional(),prepItems:t.lazy(()=>RS).optional(),menuItemRecipes:t.lazy(()=>bM).optional(),productionPlanItems:t.lazy(()=>CS).optional(),withdrawals:t.lazy(()=>kS).optional(),tags:t.lazy(()=>w4).optional(),versions:t.lazy(()=>DA).optional(),equipment:t.lazy(()=>IS).optional(),dietaryRestrictions:t.lazy(()=>hM).optional(),temperatures:t.lazy(()=>N4).optional(),yields:t.lazy(()=>B4).optional(),laborCosts:t.lazy(()=>q4).optional(),nutritionalInfo:t.union([t.lazy(()=>F4),t.lazy(()=>Be)]).optional().nullable(),criticalPoints:t.lazy(()=>D4).optional(),storage:t.union([t.lazy(()=>E4),t.lazy(()=>qe)]).optional().nullable(),photos:t.lazy(()=>_4).optional(),recipeStats:t.union([t.lazy(()=>L4),t.lazy(()=>Fe)]).optional().nullable()}).strict(),oo=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),cookBook:t.lazy(()=>Om).optional(),ingredients:t.lazy(()=>XN).optional(),instructions:t.lazy(()=>e4).optional(),menuItems:t.lazy(()=>Xj).optional(),foodCostHistory:t.lazy(()=>Dnt).optional(),prepHistory:t.lazy(()=>Ent).optional(),prepBoards:t.lazy(()=>_nt).optional(),prepItems:t.lazy(()=>IB).optional(),menuItemRecipes:t.lazy(()=>V4).optional(),productionPlanItems:t.lazy(()=>pB).optional(),withdrawals:t.lazy(()=>gB).optional(),tags:t.lazy(()=>Lnt).optional(),versions:t.lazy(()=>WN).optional(),equipment:t.lazy(()=>eB).optional(),dietaryRestrictions:t.lazy(()=>H4).optional(),temperatures:t.lazy(()=>Vnt).optional(),yields:t.lazy(()=>Hnt).optional(),laborCosts:t.lazy(()=>Qnt).optional(),nutritionalInfo:t.lazy(()=>Wm).optional(),criticalPoints:t.lazy(()=>Ynt).optional(),storage:t.lazy(()=>Rm).optional(),photos:t.lazy(()=>Gnt).optional(),recipeStats:t.lazy(()=>Nm).optional()}).strict(),C=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),OR:t.lazy(()=>O).array().optional(),NOT:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>bl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>CB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>AB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),cookBook:t.union([t.lazy(()=>Z4),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>hS).optional(),instructions:t.lazy(()=>tM).optional(),menuItems:t.lazy(()=>TI).optional(),foodCostHistory:t.lazy(()=>v4).optional(),prepHistory:t.lazy(()=>O4).optional(),prepBoards:t.lazy(()=>f4).optional(),prepItems:t.lazy(()=>RS).optional(),menuItemRecipes:t.lazy(()=>bM).optional(),productionPlanItems:t.lazy(()=>CS).optional(),withdrawals:t.lazy(()=>kS).optional(),tags:t.lazy(()=>w4).optional(),versions:t.lazy(()=>DA).optional(),equipment:t.lazy(()=>IS).optional(),dietaryRestrictions:t.lazy(()=>hM).optional(),temperatures:t.lazy(()=>N4).optional(),yields:t.lazy(()=>B4).optional(),laborCosts:t.lazy(()=>q4).optional(),nutritionalInfo:t.union([t.lazy(()=>F4),t.lazy(()=>Be)]).optional().nullable(),criticalPoints:t.lazy(()=>D4).optional(),storage:t.union([t.lazy(()=>E4),t.lazy(()=>qe)]).optional().nullable(),photos:t.lazy(()=>_4).optional(),recipeStats:t.union([t.lazy(()=>L4),t.lazy(()=>Fe)]).optional().nullable()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),_count:t.lazy(()=>$nt).optional(),_avg:t.lazy(()=>Jnt).optional(),_max:t.lazy(()=>Knt).optional(),_min:t.lazy(()=>Xnt).optional(),_sum:t.lazy(()=>tat).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrls:t.lazy(()=>bl).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>bt),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>eat),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>oat),t.lazy(()=>U)]).optional()}).strict(),Mt=t.object({AND:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),OR:t.lazy(()=>Mt).array().optional(),NOT:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>SB),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>hS).optional(),inventoryItems:t.lazy(()=>SS).optional(),orderItems:t.lazy(()=>IM).optional(),vendors:t.lazy(()=>Q4).optional(),WasteRecord:t.lazy(()=>US).optional(),IngredientAllergen:t.lazy(()=>pM).optional(),SupplierPriceHistory:t.lazy(()=>gM).optional(),DietaryRestriction:t.union([t.lazy(()=>Y4),t.lazy(()=>we)]).optional().nullable()}).strict(),wl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeIngredients:t.lazy(()=>XN).optional(),inventoryItems:t.lazy(()=>sB).optional(),orderItems:t.lazy(()=>G4).optional(),vendors:t.lazy(()=>nat).optional(),WasteRecord:t.lazy(()=>mB).optional(),IngredientAllergen:t.lazy(()=>d4).optional(),SupplierPriceHistory:t.lazy(()=>$4).optional(),DietaryRestriction:t.lazy(()=>Mm).optional()}).strict(),$=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),OR:t.lazy(()=>Mt).array().optional(),NOT:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>SB),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>hS).optional(),inventoryItems:t.lazy(()=>SS).optional(),orderItems:t.lazy(()=>IM).optional(),vendors:t.lazy(()=>Q4).optional(),WasteRecord:t.lazy(()=>US).optional(),IngredientAllergen:t.lazy(()=>pM).optional(),SupplierPriceHistory:t.lazy(()=>gM).optional(),DietaryRestriction:t.union([t.lazy(()=>Y4),t.lazy(()=>we)]).optional().nullable()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>aat).optional(),_avg:t.lazy(()=>iat).optional(),_max:t.lazy(()=>lat).optional(),_min:t.lazy(()=>rat).optional(),_sum:t.lazy(()=>pat).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),category:t.union([t.lazy(()=>bt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>cat),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable()}).strict(),Pa=t.object({AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>UI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),recipeVersion:t.union([t.lazy(()=>CM),t.lazy(()=>ie)]).optional().nullable()}).strict(),Cb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),ingredient:t.lazy(()=>wl).optional(),recipeVersion:t.lazy(()=>Ep).optional()}).strict(),V=t.union([t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>AN)}),t.object({id:t.number().int()}),t.object({recipeId_ingredientId:t.lazy(()=>AN)})]).and(t.object({id:t.number().int().optional(),recipeId_ingredientId:t.lazy(()=>AN).optional(),AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>UI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),recipeVersion:t.union([t.lazy(()=>CM),t.lazy(()=>ie)]).optional().nullable()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>uat).optional(),_avg:t.lazy(()=>yat).optional(),_max:t.lazy(()=>sat).optional(),_min:t.lazy(()=>dat).optional(),_sum:t.lazy(()=>zat).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>UI).optional(),isOptional:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>va),t.number()]).optional().nullable()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),RecipeVersion:t.union([t.lazy(()=>CM),t.lazy(()=>ie)]).optional().nullable(),equipment:t.lazy(()=>IS).optional()}).strict(),fm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),RecipeVersion:t.lazy(()=>Ep).optional(),equipment:t.lazy(()=>eB).optional()}).strict(),pt=t.union([t.object({id:t.number().int(),recipeId_stepNumber:t.lazy(()=>SN)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber:t.lazy(()=>SN)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber:t.lazy(()=>SN).optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),RecipeVersion:t.union([t.lazy(()=>CM),t.lazy(()=>ie)]).optional().nullable(),equipment:t.lazy(()=>IS).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>mat).optional(),_avg:t.lazy(()=>bat).optional(),_max:t.lazy(()=>hat).optional(),_min:t.lazy(()=>Iat).optional(),_sum:t.lazy(()=>gat).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),le=t.object({AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable(),transactions:t.lazy(()=>TS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>AM).optional()}).strict(),dp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>Xr).optional(),ingredient:t.lazy(()=>wl).optional(),lastUpdatedBy:t.lazy(()=>eo).optional(),transactions:t.lazy(()=>dB).optional(),withdrawals:t.lazy(()=>gB).optional(),stockCounts:t.lazy(()=>J4).optional()}).strict(),w=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>TN)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>TN)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>TN).optional(),AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>PI),t.lazy(()=>v)]).optional().nullable(),transactions:t.lazy(()=>TS).optional(),withdrawals:t.lazy(()=>kS).optional(),stockCounts:t.lazy(()=>AM).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Cat).optional(),_avg:t.lazy(()=>Aat).optional(),_max:t.lazy(()=>Sat).optional(),_min:t.lazy(()=>Tat).optional(),_sum:t.lazy(()=>Pat).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>Wt),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable()}).strict(),Ua=t.object({AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>TB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),item:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),Ab=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>Xr).optional(),item:t.lazy(()=>dp).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),type:t.union([t.lazy(()=>TB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),item:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Uat).optional(),_avg:t.lazy(()=>Wat).optional(),_max:t.lazy(()=>Rat).optional(),_min:t.lazy(()=>kat).optional(),_sum:t.lazy(()=>xat).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>jat),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),previousQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),newQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>PB),t.lazy(()=>wt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>AM).optional()}).strict(),wm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>Xr).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>J4).optional()}).strict(),ct=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>PB),t.lazy(()=>wt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>xS),t.lazy(()=>Dt)]).optional(),createdBy:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),items:t.lazy(()=>AM).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Mat).optional(),_avg:t.lazy(()=>Zat).optional(),_max:t.lazy(()=>vat).optional(),_min:t.lazy(()=>Oat).optional(),_sum:t.lazy(()=>fat).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>wat),t.lazy(()=>wt)]).optional(),startedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Wa=t.object({AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>K4),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional()}).strict(),Sb=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),stockCount:t.lazy(()=>wm).optional(),item:t.lazy(()=>dp).optional()}).strict(),At=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>PN)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>PN)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>PN).optional(),AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>K4),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>AS),t.lazy(()=>le)]).optional()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Nat).optional(),_avg:t.lazy(()=>Bat).optional(),_max:t.lazy(()=>qat).optional(),_min:t.lazy(()=>Fat).optional(),_sum:t.lazy(()=>Dat).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),difference:t.union([t.lazy(()=>Wt),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Fe=t.object({AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>y),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Nm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Fl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>y),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Eat).optional(),_avg:t.lazy(()=>_at).optional(),_max:t.lazy(()=>Lat).optional(),_min:t.lazy(()=>Vat).optional(),_sum:t.lazy(()=>Hat).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageRating:t.union([t.lazy(()=>Wt),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>_r),t.coerce.date()]).optional().nullable()}).strict(),Ke=t.object({AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>UB),t.lazy(()=>Nt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),vendor:t.union([t.lazy(()=>iM),t.lazy(()=>ve)]).optional(),items:t.lazy(()=>IM).optional()}).strict(),Bm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),vendor:t.lazy(()=>Hp).optional(),items:t.lazy(()=>G4).optional()}).strict(),ut=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>UB),t.lazy(()=>Nt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),vendor:t.union([t.lazy(()=>iM),t.lazy(()=>ve)]).optional(),items:t.lazy(()=>IM).optional()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qat).optional(),_avg:t.lazy(()=>Yat).optional(),_max:t.lazy(()=>Gat).optional(),_min:t.lazy(()=>$at).optional(),_sum:t.lazy(()=>Jat).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Kat),t.lazy(()=>Nt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ra=t.object({AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),orderId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>X4),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional()}).strict(),Tb=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>Bm).optional(),ingredient:t.lazy(()=>wl).optional()}).strict(),St=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),orderId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>X4),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>np),t.lazy(()=>Mt)]).optional()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xat).optional(),_avg:t.lazy(()=>tit).optional(),_max:t.lazy(()=>eit).optional(),_min:t.lazy(()=>oit).optional(),_sum:t.lazy(()=>nit).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>sM).optional(),ingredients:t.lazy(()=>rM).optional(),supplierPriceHistory:t.lazy(()=>gM).optional()}).strict(),Hp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>P4).optional(),ingredients:t.lazy(()=>c4).optional(),supplierPriceHistory:t.lazy(()=>$4).optional()}).strict(),Gt=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>sM).optional(),ingredients:t.lazy(()=>rM).optional(),supplierPriceHistory:t.lazy(()=>gM).optional()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ait).optional(),_avg:t.lazy(()=>iit).optional(),_max:t.lazy(()=>lit).optional(),_min:t.lazy(()=>rit).optional(),_sum:t.lazy(()=>pit).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),contact:t.union([t.lazy(()=>bt),t.string()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),phone:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Xe=t.object({AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>WB),t.lazy(()=>Ht)]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),ShiftTask:t.lazy(()=>t2).optional()}).strict(),qm=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional(),ShiftTask:t.lazy(()=>cit).optional()}).strict(),ne=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>WB),t.lazy(()=>Ht)]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional(),ShiftTask:t.lazy(()=>t2).optional()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>uit).optional(),_avg:t.lazy(()=>yit).optional(),_max:t.lazy(()=>sit).optional(),_min:t.lazy(()=>dit).optional(),_sum:t.lazy(()=>zit).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>mit),t.lazy(()=>Ht)]).optional()}).strict(),to=t.object({AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ap).optional(),prepItems:t.lazy(()=>RS).optional()}).strict(),Fm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>gS).optional(),prepItems:t.lazy(()=>IB).optional()}).strict(),ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ap).optional(),prepItems:t.lazy(()=>RS).optional()}).strict()),NV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>bit).optional(),_avg:t.lazy(()=>hit).optional(),_max:t.lazy(()=>Iit).optional(),_min:t.lazy(()=>git).optional(),_sum:t.lazy(()=>Cit).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),status:t.union([t.lazy(()=>e2),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ka=t.object({AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>o2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),Pb=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>Fm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),Q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>o2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),BV=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ait).optional(),_avg:t.lazy(()=>Sit).optional(),_max:t.lazy(()=>Tit).optional(),_min:t.lazy(()=>Pit).optional(),_sum:t.lazy(()=>Uit).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>e2),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),xa=t.object({AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict(),Ub=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Re=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Ee),t.lazy(()=>v)]).optional()}).strict()),qV=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wit).optional(),_avg:t.lazy(()=>Rit).optional(),_max:t.lazy(()=>kit).optional(),_min:t.lazy(()=>xit).optional(),_sum:t.lazy(()=>jit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>bt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItems:t.lazy(()=>TI).optional(),MenuCategory:t.lazy(()=>n2).optional()}).strict(),Qp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Oa).optional(),menuItems:t.lazy(()=>Xj).optional(),MenuCategory:t.lazy(()=>Mit).optional()}).strict(),$t=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItems:t.lazy(()=>TI).optional(),MenuCategory:t.lazy(()=>n2).optional()}).strict()),FV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Zit).optional(),_avg:t.lazy(()=>vit).optional(),_max:t.lazy(()=>Oit).optional(),_min:t.lazy(()=>fit).optional(),_sum:t.lazy(()=>wit).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ja=t.object({AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Wb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Nl).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Tt=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>UN)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>UN)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>UN).optional(),AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>SI),t.lazy(()=>Pt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),DV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Nit).optional(),_avg:t.lazy(()=>Bit).optional(),_max:t.lazy(()=>qit).optional(),_min:t.lazy(()=>Fit).optional(),_sum:t.lazy(()=>Dit).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Pt=t.object({AND:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),OR:t.lazy(()=>Pt).array().optional(),NOT:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>UI).optional(),recipeServingsAmount:t.lazy(()=>xb).optional(),recipeServingsCost:t.lazy(()=>xb).optional(),allergens:t.lazy(()=>bl).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),categoryId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>Kj),t.lazy(()=>Oe)]).optional(),category:t.union([t.lazy(()=>a2),t.lazy(()=>fe)]).optional().nullable(),recipes:t.lazy(()=>ap).optional(),menuItemRecipes:t.lazy(()=>bM).optional(),nutritionalInfo:t.union([t.lazy(()=>i2),t.lazy(()=>De)]).optional().nullable(),recommendations:t.lazy(()=>l2).optional(),salesTransactions:t.lazy(()=>dM).optional(),leftoverItems:t.lazy(()=>PS).optional(),feedback:t.lazy(()=>WS).optional(),dietaryRestrictions:t.lazy(()=>hM).optional()}).strict(),Nl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),menu:t.lazy(()=>Qp).optional(),category:t.lazy(()=>km).optional(),recipes:t.lazy(()=>gS).optional(),menuItemRecipes:t.lazy(()=>V4).optional(),nutritionalInfo:t.lazy(()=>Dm).optional(),recommendations:t.lazy(()=>Eit).optional(),salesTransactions:t.lazy(()=>U4).optional(),leftoverItems:t.lazy(()=>zB).optional(),feedback:t.lazy(()=>bB).optional(),dietaryRestrictions:t.lazy(()=>H4).optional()}).strict(),x=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),OR:t.lazy(()=>Pt).array().optional(),NOT:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>UI).optional(),recipeServingsAmount:t.lazy(()=>xb).optional(),recipeServingsCost:t.lazy(()=>xb).optional(),allergens:t.lazy(()=>bl).optional(),menuId:t.union([t.lazy(()=>y),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>nt),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>Kj),t.lazy(()=>Oe)]).optional(),category:t.union([t.lazy(()=>a2),t.lazy(()=>fe)]).optional().nullable(),recipes:t.lazy(()=>ap).optional(),menuItemRecipes:t.lazy(()=>bM).optional(),nutritionalInfo:t.union([t.lazy(()=>i2),t.lazy(()=>De)]).optional().nullable(),recommendations:t.lazy(()=>l2).optional(),salesTransactions:t.lazy(()=>dM).optional(),leftoverItems:t.lazy(()=>PS).optional(),feedback:t.lazy(()=>WS).optional(),dietaryRestrictions:t.lazy(()=>hM).optional()}).strict()),EV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>_it).optional(),_avg:t.lazy(()=>Lit).optional(),_max:t.lazy(()=>Vit).optional(),_min:t.lazy(()=>Hit).optional(),_sum:t.lazy(()=>Qit).optional()}).strict(),NA=t.object({AND:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),OR:t.lazy(()=>NA).array().optional(),NOT:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),recipeIds:t.lazy(()=>UI).optional(),recipeServingsAmount:t.lazy(()=>xb).optional(),recipeServingsCost:t.lazy(()=>xb).optional(),allergens:t.lazy(()=>bl).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>va),t.number()]).optional().nullable()}).strict(),De=t.object({AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>lM),t.lazy(()=>Pt)]).optional().nullable()}).strict(),Dm=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Nl).optional()}).strict(),Dl=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>lM),t.lazy(()=>Pt)]).optional().nullable()}).strict()),_V=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yit).optional(),_avg:t.lazy(()=>Git).optional(),_max:t.lazy(()=>$it).optional(),_min:t.lazy(()=>Jit).optional(),_sum:t.lazy(()=>Kit).optional()}).strict(),BA=t.object({AND:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),OR:t.lazy(()=>BA).array().optional(),NOT:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>va),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),transFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ma=t.object({AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),Rb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ke=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),LV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xit).optional(),_avg:t.lazy(()=>tlt).optional(),_max:t.lazy(()=>elt).optional(),_min:t.lazy(()=>olt).optional(),_sum:t.lazy(()=>nlt).optional()}).strict(),qA=t.object({AND:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),OR:t.lazy(()=>qA).array().optional(),NOT:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>Wt),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Za=t.object({AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict(),kb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),xe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>O)]).optional()}).strict()),VV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>alt).optional(),_avg:t.lazy(()=>ilt).optional(),_max:t.lazy(()=>llt).optional(),_min:t.lazy(()=>rlt).optional(),_sum:t.lazy(()=>plt).optional()}).strict(),FA=t.object({AND:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),OR:t.lazy(()=>FA).array().optional(),NOT:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),s0=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.lazy(()=>clt)}).strict(),d0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),z0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipe:t.lazy(()=>ult).optional()}).strict(),m0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional()}).strict(),XT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),b0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional()}).strict(),h0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional()}).strict(),I0=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>ylt)}).strict(),g0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>slt).optional()}).strict(),A0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T0=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>dlt)}).strict(),P0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),U0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>zlt).optional()}).strict(),W0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x0=t.object({url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mlt)}).strict(),j0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),M0=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>blt).optional()}).strict(),Z0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kN=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O0=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>hlt)}).strict(),f0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),w0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Ilt).optional()}).strict(),N0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q0=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>glt)}).strict(),F0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),D0=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Clt).optional()}).strict(),E0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jN=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L0=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Alt)}).strict(),V0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),H0=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Slt).optional()}).strict(),Q0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MN=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G0=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>r2),menuItem:t.lazy(()=>p2)}).strict(),$0=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),J0=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>c2).optional(),menuItem:t.lazy(()=>u2).optional()}).strict(),K0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nj=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tY=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>y2),menuItems:t.lazy(()=>s2).optional()}).strict(),eY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>d2).optional()}).strict(),oY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>z2).optional(),menuItems:t.lazy(()=>m2).optional()}).strict(),nY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>b2).optional()}).strict(),rP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iY=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>OT),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT),approvedBy:t.lazy(()=>BT).optional()}).strict(),lY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),rY=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DT).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>_T).optional(),createdBy:t.lazy(()=>LT).optional(),approvedBy:t.lazy(()=>VT).optional()}).strict(),pY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HT).optional(),instructions:t.lazy(()=>QT).optional()}).strict(),pP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TT=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uY=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RB),recipes:t.lazy(()=>kB).optional(),maintenanceLogs:t.lazy(()=>xB).optional()}).strict(),yY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>jB).optional(),maintenanceLogs:t.lazy(()=>MB).optional()}).strict(),sY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ZB).optional(),recipes:t.lazy(()=>vB).optional(),maintenanceLogs:t.lazy(()=>OB).optional()}).strict(),dY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>fB).optional(),maintenanceLogs:t.lazy(()=>wB).optional()}).strict(),cP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mY=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>NB),equipment:t.lazy(()=>BB),RecipeInstruction:t.lazy(()=>qB).optional()}).strict(),bY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),hY=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>FB).optional(),equipment:t.lazy(()=>DB).optional(),RecipeInstruction:t.lazy(()=>EB).optional()}).strict(),IY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),uP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),PT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),gY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),CY=t.object({date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>Tlt)}).strict(),AY=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>Plt).optional()}).strict(),TY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ON=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UY=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_B),items:t.lazy(()=>LB).optional(),completions:t.lazy(()=>VB).optional()}).strict(),WY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HB).optional(),completions:t.lazy(()=>QB).optional()}).strict(),RY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YB).optional(),items:t.lazy(()=>GB).optional(),completions:t.lazy(()=>$B).optional()}).strict(),kY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional(),completions:t.lazy(()=>KB).optional()}).strict(),sP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jY=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>h2),completions:t.lazy(()=>I2).optional()}).strict(),MY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>g2).optional()}).strict(),ZY=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>C2).optional(),completions:t.lazy(()=>A2).optional()}).strict(),vY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>S2).optional()}).strict(),dP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wN=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fY=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>XB),completedBy:t.lazy(()=>tq),items:t.lazy(()=>eq).optional()}).strict(),wY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>oq).optional()}).strict(),NY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>nq).optional(),completedBy:t.lazy(()=>aq).optional(),items:t.lazy(()=>iq).optional()}).strict(),BY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>lq).optional()}).strict(),zP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FY=t.object({status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>T2),checklistItem:t.lazy(()=>P2)}).strict(),DY=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EY=t.object({status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>U2).optional(),checklistItem:t.lazy(()=>W2).optional()}).strict(),_Y=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qj=t.object({status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VY=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>R2),ingredient:t.lazy(()=>k2)}).strict(),HY=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QY=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>x2).optional(),ingredient:t.lazy(()=>j2).optional()}).strict(),YY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fj=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$Y=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>rq),menuItem:t.lazy(()=>pq).optional(),respondedBy:t.lazy(()=>cq).optional()}).strict(),JY=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KY=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>uq).optional(),menuItem:t.lazy(()=>yq).optional(),respondedBy:t.lazy(()=>sq).optional()}).strict(),XY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UT=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eG=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),oG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>bq).optional(),recipes:t.lazy(()=>hq).optional(),ingredients:t.lazy(()=>Iq).optional()}).strict(),nG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>gq).optional(),recipes:t.lazy(()=>Cq).optional(),ingredients:t.lazy(()=>Aq).optional()}).strict(),aG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Sq).optional(),recipes:t.lazy(()=>Tq).optional(),ingredients:t.lazy(()=>Pq).optional()}).strict(),IP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Dj=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lG=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Ult).optional()}).strict(),rG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Wlt).optional()}).strict(),pG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Rlt).optional()}).strict(),cG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>klt).optional()}).strict(),gP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Uq),menuItem:t.lazy(()=>Wq),recordedBy:t.lazy(()=>Rq)}).strict(),sG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kq).optional(),menuItem:t.lazy(()=>xq).optional(),recordedBy:t.lazy(()=>jq).optional()}).strict(),zG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Mq),ingrediente:t.lazy(()=>Zq),recordedBy:t.lazy(()=>vq)}).strict(),hG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Oq).optional(),ingrediente:t.lazy(()=>fq).optional(),recordedBy:t.lazy(()=>wq).optional()}).strict(),gG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AG=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),createdBy:t.lazy(()=>Bq),items:t.lazy(()=>qq).optional()}).strict(),SG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Fq).optional()}).strict(),TG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Dq).optional(),createdBy:t.lazy(()=>Eq).optional(),items:t.lazy(()=>_q).optional()}).strict(),PG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Lq).optional()}).strict(),SP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ej=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WG=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Vq),recipe:t.lazy(()=>Hq),assignedTo:t.lazy(()=>Qq).optional()}).strict(),RG=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kG=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Yq).optional(),recipe:t.lazy(()=>Gq).optional(),assignedTo:t.lazy(()=>$q).optional()}).strict(),xG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MG=t.object({taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>xlt)}).strict(),ZG=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vG=t.object({taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>jlt).optional()}).strict(),OG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BN=t.object({taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wG=t.object({dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Mlt)}).strict(),NG=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BG=t.object({dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Zlt).optional()}).strict(),qG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qN=t.object({dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DG=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>vlt)}).strict(),EG=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_G=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Olt).optional()}).strict(),LG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WP=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HG=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Jq),recipe:t.lazy(()=>Kq).optional(),createdBy:t.lazy(()=>Xq)}).strict(),QG=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YG=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>tF).optional(),recipe:t.lazy(()=>eF).optional(),createdBy:t.lazy(()=>oF).optional()}).strict(),GG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RP=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xT=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$G=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JG=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>flt).optional()}).strict(),KG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>wlt).optional()}).strict(),XG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Nlt).optional()}).strict(),t1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Blt).optional()}).strict(),kP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),e1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),o1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),n1=t.object({ingredient:t.lazy(()=>M2),allergen:t.lazy(()=>Z2)}).strict(),a1=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),i1=t.object({ingredient:t.lazy(()=>v2).optional(),allergen:t.lazy(()=>O2).optional()}).strict(),l1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),xP=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),_j=t.object({}).strict(),r1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),p1=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>qlt)}).strict(),c1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u1=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Flt).optional()}).strict(),y1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DN=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),d1=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z1=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),m1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MP=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),h1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>f2).optional(),users:t.lazy(()=>w2).optional()}).strict(),C1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>N2).optional(),users:t.lazy(()=>B2).optional()}).strict(),A1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>q2).optional(),users:t.lazy(()=>F2).optional()}).strict(),S1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>D2).optional(),users:t.lazy(()=>E2).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U1=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SM),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),W1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WM).optional(),transactions:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>kM).optional()}).strict(),R1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xM).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),k1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>vM).optional(),transactions:t.lazy(()=>OM).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict(),vP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),Z1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),v1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),O1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),OP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),EN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),f1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),w1=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),N1=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),B1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),q1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),fP=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Lj=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D1=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>Dlt)}).strict(),E1=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),_1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Elt).optional()}).strict(),L1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wP=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),_N=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>_2).optional(),restaurant:t.lazy(()=>L2).optional()}).strict(),Q1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>V2).optional()}).strict(),Y1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>H2).optional(),restaurant:t.lazy(()=>Q2).optional()}).strict(),G1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Y2).optional()}).strict(),NP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),LN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),$1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),J1=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),K1=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),X1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),t9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),BP=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),AI=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),e9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),o9=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),n9=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),a9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),i9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),qP=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),Vj=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),l9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),r9=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>nF),ingredient:t.lazy(()=>aF),recipeVersion:t.lazy(()=>iF).optional()}).strict(),p9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),c9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>lF).optional(),ingredient:t.lazy(()=>rF).optional(),recipeVersion:t.lazy(()=>pF).optional()}).strict(),u9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),FP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),jT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),s9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>cF),RecipeVersion:t.lazy(()=>uF).optional(),equipment:t.lazy(()=>yF).optional()}).strict(),d9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),z9=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>dF).optional(),RecipeVersion:t.lazy(()=>zF).optional(),equipment:t.lazy(()=>mF).optional()}).strict(),m9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>bF).optional()}).strict(),DP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),Hj=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),b9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),h9=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),ingredient:t.lazy(()=>ZS),lastUpdatedBy:t.lazy(()=>vS).optional(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),I9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),g9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),ingredient:t.lazy(()=>DS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),transactions:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),C9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),EP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),MT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),A9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),S9=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>hF),item:t.lazy(()=>IF),createdBy:t.lazy(()=>gF)}).strict(),T9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),P9=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>CF).optional(),item:t.lazy(()=>AF).optional(),createdBy:t.lazy(()=>SF).optional()}).strict(),U9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_P=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),ZT=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R9=t.object({status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>TF),createdBy:t.lazy(()=>PF),items:t.lazy(()=>UF).optional()}).strict(),k9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),x9=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>RF).optional(),createdBy:t.lazy(()=>kF).optional(),items:t.lazy(()=>xF).optional()}).strict(),j9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>jF).optional()}).strict(),LP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),Qj=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),M9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Z9=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>G2),item:t.lazy(()=>$2)}).strict(),v9=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),O9=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>J2).optional(),item:t.lazy(()=>K2).optional()}).strict(),f9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),VP=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Yj=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),w9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),N9=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>_lt)}).strict(),B9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),q9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Llt).optional()}).strict(),F9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),HP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),D9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),_9=t.object({status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>MF),vendor:t.lazy(()=>ZF),items:t.lazy(()=>vF).optional()}).strict(),L9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>OF).optional()}).strict(),V9=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),vendor:t.lazy(()=>wF).optional(),items:t.lazy(()=>NF).optional()}).strict(),H9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>BF).optional()}).strict(),QP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Gj=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y9=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>X2),ingredient:t.lazy(()=>t5)}).strict(),G9=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),$9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>e5).optional(),ingredient:t.lazy(()=>o5).optional()}).strict(),J9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),YP=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),$j=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),K9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),X9=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>qF).optional(),ingredients:t.lazy(()=>FF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),t$=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>EF).optional(),ingredients:t.lazy(()=>_F).optional(),supplierPriceHistory:t.lazy(()=>LF).optional()}).strict(),e$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>VF).optional(),ingredients:t.lazy(()=>HF).optional(),supplierPriceHistory:t.lazy(()=>QF).optional()}).strict(),o$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>YF).optional(),ingredients:t.lazy(()=>GF).optional(),supplierPriceHistory:t.lazy(()=>$F).optional()}).strict(),GP=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a$=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht),user:t.lazy(()=>n5),ShiftTask:t.lazy(()=>a5).optional()}).strict(),i$=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht),ShiftTask:t.lazy(()=>i5).optional()}).strict(),l$=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional(),user:t.lazy(()=>l5).optional(),ShiftTask:t.lazy(()=>r5).optional()}).strict(),r$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional(),ShiftTask:t.lazy(()=>p5).optional()}).strict(),$P=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht)}).strict(),HN=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional()}).strict(),p$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional()}).strict(),c$=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>c5).optional(),prepItems:t.lazy(()=>u5).optional()}).strict(),u$=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>y5).optional(),prepItems:t.lazy(()=>s5).optional()}).strict(),y$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>d5).optional(),prepItems:t.lazy(()=>z5).optional()}).strict(),s$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>m5).optional(),prepItems:t.lazy(()=>b5).optional()}).strict(),JP=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),d$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z$=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>JF),recipe:t.lazy(()=>KF),assignedTo:t.lazy(()=>XF)}).strict(),m$=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),b$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>tD).optional(),recipe:t.lazy(()=>eD).optional(),assignedTo:t.lazy(()=>oD).optional()}).strict(),h$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),vT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),I$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),g$=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Vlt)}).strict(),C$=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),A$=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Hlt).optional()}).strict(),S$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XP=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YN=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P$=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nD),menuItems:t.lazy(()=>aD).optional(),MenuCategory:t.lazy(()=>iD).optional()}).strict(),U$=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>lD).optional(),MenuCategory:t.lazy(()=>rD).optional()}).strict(),W$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pD).optional(),menuItems:t.lazy(()=>cD).optional(),MenuCategory:t.lazy(()=>uD).optional()}).strict(),R$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yD).optional(),MenuCategory:t.lazy(()=>sD).optional()}).strict(),tU=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x$=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>h5),recipe:t.lazy(()=>I5)}).strict(),j$=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),M$=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>g5).optional(),recipe:t.lazy(()=>C5).optional()}).strict(),Z$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eU=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Jj=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O$=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),f$=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),w$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),N$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),oU=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),bS=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional()}).strict(),B$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),q$=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Qlt).optional()}).strict(),F$=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),D$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Ylt).optional()}).strict(),E$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nU=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V$=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Glt)}).strict(),H$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Q$=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>$lt).optional()}).strict(),Y$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$N=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$$=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Jlt)}).strict(),J$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),K$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Klt).optional()}).strict(),X$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JN=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),R=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Jr)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>jj).optional(),not:t.union([t.string(),t.lazy(()=>EA)]).optional()}).strict(),mt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>_A)]).optional()}).strict(),de=t.object({is:t.lazy(()=>O).optional(),isNot:t.lazy(()=>O).optional()}).strict(),fX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),wX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),NX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),BX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),qX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>A5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Jr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),Wt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>S5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Jr).optional(),_sum:t.lazy(()=>Jr).optional(),_min:t.lazy(()=>Jr).optional(),_max:t.lazy(()=>Jr).optional()}).strict(),bt=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>jj).optional(),not:t.union([t.string(),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),Jn=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>P5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),et=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Kr)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>jj).optional(),not:t.union([t.string(),t.lazy(()=>LA)]).optional().nullable()}).strict(),z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>VA)]).optional()}).strict(),g=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>pX).optional()}).strict(),FX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),DX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),EX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),LX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Kn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>U5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>Kr).optional(),_min:t.lazy(()=>Kr).optional(),_max:t.lazy(()=>Kr).optional()}).strict(),kt=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>jj).optional(),not:t.union([t.string(),t.lazy(()=>W5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),Z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),VX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),HX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),QX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),YX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),GX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),KN=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>HA)]).optional()}).strict(),nt=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>ml)]).optional().nullable()}).strict(),$X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),JX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),KX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),XX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),ett=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),va=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>x5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>ml).optional(),_min:t.lazy(()=>ml).optional(),_max:t.lazy(()=>ml).optional()}).strict(),ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ltt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),rtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ptt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),ctt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),utt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ytt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),stt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),ztt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Xn=t.object({is:t.lazy(()=>B).optional(),isNot:t.lazy(()=>B).optional()}).strict(),SI=t.object({is:t.lazy(()=>Pt).optional(),isNot:t.lazy(()=>Pt).optional()}).strict(),htt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Itt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),gtt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ctt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Att=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Kj=t.object({is:t.lazy(()=>Oe).optional(),isNot:t.lazy(()=>Oe).optional()}).strict(),TI=t.object({every:t.lazy(()=>Pt).optional(),some:t.lazy(()=>Pt).optional(),none:t.lazy(()=>Pt).optional()}).strict(),Xj=t.object({_count:t.lazy(()=>e).optional()}).strict(),IN=t.object({menuId:t.number(),name:t.string()}).strict(),Stt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ttt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),Ptt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Utt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),Jt=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>QA)]).optional().nullable()}).strict(),hS=t.object({every:t.lazy(()=>Pa).optional(),some:t.lazy(()=>Pa).optional(),none:t.lazy(()=>Pa).optional()}).strict(),tM=t.object({every:t.lazy(()=>Ne).optional(),some:t.lazy(()=>Ne).optional(),none:t.lazy(()=>Ne).optional()}).strict(),Ee=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),PI=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),XN=t.object({_count:t.lazy(()=>e).optional()}).strict(),e4=t.object({_count:t.lazy(()=>e).optional()}).strict(),gN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),Rtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ktt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),_r=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>j5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),tB=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>YA)]).optional()}).strict(),IS=t.object({every:t.lazy(()=>pa).optional(),some:t.lazy(()=>pa).optional(),none:t.lazy(()=>pa).optional()}).strict(),o4=t.object({every:t.lazy(()=>ca).optional(),some:t.lazy(()=>ca).optional(),none:t.lazy(()=>ca).optional()}).strict(),eB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({_count:t.lazy(()=>e).optional()}).strict(),vtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Btt=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),eM=t.object({is:t.lazy(()=>Me).optional(),isNot:t.lazy(()=>Me).optional()}).strict(),n4=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),CN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),qtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ftt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),oB=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>GA)]).optional()}).strict(),Ltt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Htt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),nB=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>$A)]).optional()}).strict(),a4=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),oM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),$tt=t.object({_count:t.lazy(()=>e).optional()}).strict(),i4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ktt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),oet=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),aB=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>JA)]).optional()}).strict(),nM=t.object({is:t.lazy(()=>Ze).optional(),isNot:t.lazy(()=>Ze).optional()}).strict(),aM=t.object({every:t.lazy(()=>ua).optional(),some:t.lazy(()=>ua).optional(),none:t.lazy(()=>ua).optional()}).strict(),l4=t.object({_count:t.lazy(()=>e).optional()}).strict(),net=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),cet=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),uet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),set=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),iB=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>KA)]).optional()}).strict(),bl=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),r4=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),p4=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),met=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),het=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),Cet=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),iM=t.object({is:t.lazy(()=>ve).optional(),isNot:t.lazy(()=>ve).optional()}).strict(),np=t.object({is:t.lazy(()=>Mt).optional(),isNot:t.lazy(()=>Mt).optional()}).strict(),Aet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),lB=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>XA)]).optional()}).strict(),rB=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>tS)]).optional()}).strict(),lM=t.object({is:t.lazy(()=>Pt).optional().nullable(),isNot:t.lazy(()=>Pt).optional().nullable()}).strict(),Ret=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ket=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),xet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Met=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Zet=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),vet=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),ap=t.object({every:t.lazy(()=>O).optional(),some:t.lazy(()=>O).optional(),none:t.lazy(()=>O).optional()}).strict(),rM=t.object({every:t.lazy(()=>Mt).optional(),some:t.lazy(()=>Mt).optional(),none:t.lazy(()=>Mt).optional()}).strict(),gS=t.object({_count:t.lazy(()=>e).optional()}).strict(),c4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fet=t.object({id:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fet=t.object({id:t.lazy(()=>e).optional()}).strict(),Det=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_et=t.object({id:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Get=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),CS=t.object({every:t.lazy(()=>ba).optional(),some:t.lazy(()=>ba).optional(),none:t.lazy(()=>ba).optional()}).strict(),pB=t.object({_count:t.lazy(()=>e).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),not=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),u4=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),iot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),cB=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>eS)]).optional()}).strict(),y4=t.object({is:t.lazy(()=>Xe).optional(),isNot:t.lazy(()=>Xe).optional()}).strict(),uot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),mot=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),uB=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>oS)]).optional()}).strict(),bot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Aot=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),yB=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>nS)]).optional()}).strict(),Sot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Pot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Rot=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),AS=t.object({is:t.lazy(()=>le).optional(),isNot:t.lazy(()=>le).optional()}).strict(),s4=t.object({is:t.lazy(()=>O).optional().nullable(),isNot:t.lazy(()=>O).optional().nullable()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),jot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),pM=t.object({every:t.lazy(()=>Aa).optional(),some:t.lazy(()=>Aa).optional(),none:t.lazy(()=>Aa).optional()}).strict(),d4=t.object({_count:t.lazy(()=>e).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),wot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Not=t.object({id:t.lazy(()=>e).optional()}).strict(),z4=t.object({is:t.lazy(()=>co).optional(),isNot:t.lazy(()=>co).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional()}).strict(),m4=t.object({every:t.lazy(()=>B).optional(),some:t.lazy(()=>B).optional(),none:t.lazy(()=>B).optional()}).strict(),cM=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),Xot=t.object({_count:t.lazy(()=>e).optional()}).strict(),b4=t.object({_count:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional()}).strict(),h4=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>aS)]).optional()}).strict(),SS=t.object({every:t.lazy(()=>le).optional(),some:t.lazy(()=>le).optional(),none:t.lazy(()=>le).optional()}).strict(),TS=t.object({every:t.lazy(()=>Ua).optional(),some:t.lazy(()=>Ua).optional(),none:t.lazy(()=>Ua).optional()}).strict(),uM=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),dB=t.object({_count:t.lazy(()=>e).optional()}).strict(),I4=t.object({_count:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),rnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),unt=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),yM=t.object({is:t.lazy(()=>je).optional().nullable(),isNot:t.lazy(()=>je).optional().nullable()}).strict(),g4=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),C4=t.object({is:t.lazy(()=>Dt).optional().nullable(),isNot:t.lazy(()=>Dt).optional().nullable()}).strict(),sM=t.object({every:t.lazy(()=>Ke).optional(),some:t.lazy(()=>Ke).optional(),none:t.lazy(()=>Ke).optional()}).strict(),A4=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),dM=t.object({every:t.lazy(()=>ra).optional(),some:t.lazy(()=>ra).optional(),none:t.lazy(()=>ra).optional()}).strict(),PS=t.object({every:t.lazy(()=>za).optional(),some:t.lazy(()=>za).optional(),none:t.lazy(()=>za).optional()}).strict(),US=t.object({every:t.lazy(()=>ma).optional(),some:t.lazy(()=>ma).optional(),none:t.lazy(()=>ma).optional()}).strict(),zM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),S4=t.object({every:t.lazy(()=>Me).optional(),some:t.lazy(()=>Me).optional(),none:t.lazy(()=>Me).optional()}).strict(),T4=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),WS=t.object({every:t.lazy(()=>sa).optional(),some:t.lazy(()=>sa).optional(),none:t.lazy(()=>sa).optional()}).strict(),ynt=t.object({_count:t.lazy(()=>e).optional()}).strict(),P4=t.object({_count:t.lazy(()=>e).optional()}).strict(),snt=t.object({_count:t.lazy(()=>e).optional()}).strict(),U4=t.object({_count:t.lazy(()=>e).optional()}).strict(),zB=t.object({_count:t.lazy(()=>e).optional()}).strict(),mB=t.object({_count:t.lazy(()=>e).optional()}).strict(),W4=t.object({_count:t.lazy(()=>e).optional()}).strict(),dnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),znt=t.object({_count:t.lazy(()=>e).optional()}).strict(),bB=t.object({_count:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),bnt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Int=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),gnt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),hB=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>iS)]).optional()}).strict(),mM=t.object({is:t.lazy(()=>B).optional().nullable(),isNot:t.lazy(()=>B).optional().nullable()}).strict(),R4=t.object({every:t.lazy(()=>Xe).optional(),some:t.lazy(()=>Xe).optional(),none:t.lazy(()=>Xe).optional()}).strict(),RS=t.object({every:t.lazy(()=>ka).optional(),some:t.lazy(()=>ka).optional(),none:t.lazy(()=>ka).optional()}).strict(),k4=t.object({every:t.lazy(()=>Ta).optional(),some:t.lazy(()=>Ta).optional(),none:t.lazy(()=>Ta).optional()}).strict(),x4=t.object({every:t.lazy(()=>xa).optional(),some:t.lazy(()=>xa).optional(),none:t.lazy(()=>xa).optional()}).strict(),j4=t.object({every:t.lazy(()=>Ia).optional(),some:t.lazy(()=>Ia).optional(),none:t.lazy(()=>Ia).optional()}).strict(),M4=t.object({every:t.lazy(()=>ga).optional(),some:t.lazy(()=>ga).optional(),none:t.lazy(()=>ga).optional()}).strict(),kS=t.object({every:t.lazy(()=>Ca).optional(),some:t.lazy(()=>Ca).optional(),none:t.lazy(()=>Ca).optional()}).strict(),DA=t.object({every:t.lazy(()=>ie).optional(),some:t.lazy(()=>ie).optional(),none:t.lazy(()=>ie).optional()}).strict(),Cnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),IB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ant=t.object({_count:t.lazy(()=>e).optional()}).strict(),Snt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),gB=t.object({_count:t.lazy(()=>e).optional()}).strict(),WN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),jnt=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Znt=t.object({userId:t.lazy(()=>e).optional()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),fnt=t.object({userId:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),qnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Fnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),CB=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>lS)]).optional()}).strict(),AB=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>rS)]).optional()}).strict(),Z4=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),v4=t.object({every:t.lazy(()=>Ma).optional(),some:t.lazy(()=>Ma).optional(),none:t.lazy(()=>Ma).optional()}).strict(),O4=t.object({every:t.lazy(()=>Za).optional(),some:t.lazy(()=>Za).optional(),none:t.lazy(()=>Za).optional()}).strict(),f4=t.object({every:t.lazy(()=>to).optional(),some:t.lazy(()=>to).optional(),none:t.lazy(()=>to).optional()}).strict(),bM=t.object({every:t.lazy(()=>ja).optional(),some:t.lazy(()=>ja).optional(),none:t.lazy(()=>ja).optional()}).strict(),w4=t.object({every:t.lazy(()=>da).optional(),some:t.lazy(()=>da).optional(),none:t.lazy(()=>da).optional()}).strict(),hM=t.object({every:t.lazy(()=>we).optional(),some:t.lazy(()=>we).optional(),none:t.lazy(()=>we).optional()}).strict(),N4=t.object({every:t.lazy(()=>aa).optional(),some:t.lazy(()=>aa).optional(),none:t.lazy(()=>aa).optional()}).strict(),B4=t.object({every:t.lazy(()=>ia).optional(),some:t.lazy(()=>ia).optional(),none:t.lazy(()=>ia).optional()}).strict(),q4=t.object({every:t.lazy(()=>la).optional(),some:t.lazy(()=>la).optional(),none:t.lazy(()=>la).optional()}).strict(),F4=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),D4=t.object({every:t.lazy(()=>oa).optional(),some:t.lazy(()=>oa).optional(),none:t.lazy(()=>oa).optional()}).strict(),E4=t.object({is:t.lazy(()=>qe).optional().nullable(),isNot:t.lazy(()=>qe).optional().nullable()}).strict(),_4=t.object({every:t.lazy(()=>na).optional(),some:t.lazy(()=>na).optional(),none:t.lazy(()=>na).optional()}).strict(),L4=t.object({is:t.lazy(()=>Fe).optional().nullable(),isNot:t.lazy(()=>Fe).optional().nullable()}).strict(),Dnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ent=t.object({_count:t.lazy(()=>e).optional()}).strict(),_nt=t.object({_count:t.lazy(()=>e).optional()}).strict(),V4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),H4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Vnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),$nt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),tat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),eat=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),oat=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),SB=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>pS)]).optional().nullable()}).strict(),IM=t.object({every:t.lazy(()=>Ra).optional(),some:t.lazy(()=>Ra).optional(),none:t.lazy(()=>Ra).optional()}).strict(),Q4=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),gM=t.object({every:t.lazy(()=>ya).optional(),some:t.lazy(()=>ya).optional(),none:t.lazy(()=>ya).optional()}).strict(),Y4=t.object({is:t.lazy(()=>we).optional().nullable(),isNot:t.lazy(()=>we).optional().nullable()}).strict(),G4=t.object({_count:t.lazy(()=>e).optional()}).strict(),nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),$4=t.object({_count:t.lazy(()=>e).optional()}).strict(),aat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),cat=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>V5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),UI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),CM=t.object({is:t.lazy(()=>ie).optional().nullable(),isNot:t.lazy(()=>ie).optional().nullable()}).strict(),AN=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),uat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),yat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),sat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),dat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),zat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),SN=t.object({recipeId:t.number(),stepNumber:t.number()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),xS=t.object({is:t.lazy(()=>Dt).optional(),isNot:t.lazy(()=>Dt).optional()}).strict(),AM=t.object({every:t.lazy(()=>Wa).optional(),some:t.lazy(()=>Wa).optional(),none:t.lazy(()=>Wa).optional()}).strict(),J4=t.object({_count:t.lazy(()=>e).optional()}).strict(),TN=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Pat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),TB=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>cS)]).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Wat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),jat=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>H5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),PB=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>uS)]).optional()}).strict(),Mat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Zat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),vat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Oat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),fat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),wat=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>Q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),K4=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),PN=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Nat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Bat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),qat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Lat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Vat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Hat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),UB=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>yS)]).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Kat=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>Y5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),X4=t.object({is:t.lazy(()=>Ke).optional(),isNot:t.lazy(()=>Ke).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional()}).strict(),WB=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>sS)]).optional()}).strict(),t2=t.object({every:t.lazy(()=>ha).optional(),some:t.lazy(()=>ha).optional(),none:t.lazy(()=>ha).optional()}).strict(),cit=t.object({_count:t.lazy(()=>e).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),mit=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>G5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),jS=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>dS)]).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional()}).strict(),Iit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional()}).strict(),e2=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>$5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),o2=t.object({is:t.lazy(()=>to).optional(),isNot:t.lazy(()=>to).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),n2=t.object({every:t.lazy(()=>fe).optional(),some:t.lazy(()=>fe).optional(),none:t.lazy(()=>fe).optional()}).strict(),Mit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),UN=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),xb=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),a2=t.object({is:t.lazy(()=>fe).optional().nullable(),isNot:t.lazy(()=>fe).optional().nullable()}).strict(),i2=t.object({is:t.lazy(()=>De).optional().nullable(),isNot:t.lazy(()=>De).optional().nullable()}).strict(),l2=t.object({every:t.lazy(()=>Sa).optional(),some:t.lazy(()=>Sa).optional(),none:t.lazy(()=>Sa).optional()}).strict(),Eit=t.object({_count:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),$it=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Xit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),elt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),olt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),alt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ilt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),llt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),plt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),clt=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),connect:t.lazy(()=>C).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),a=t.object({set:t.string().optional()}).strict(),s=t.object({set:t.boolean().optional()}).strict(),ult=t.object({create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),upsert:t.lazy(()=>Xlt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>trt),t.lazy(()=>dD),t.lazy(()=>zD)]).optional()}).strict(),n=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),ylt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),connect:t.lazy(()=>C).optional()}).strict(),u=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),slt=t.object({create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),upsert:t.lazy(()=>ert).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>ort),t.lazy(()=>mD),t.lazy(()=>bD)]).optional()}).strict(),dlt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),connect:t.lazy(()=>C).optional()}).strict(),zlt=t.object({create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),upsert:t.lazy(()=>nrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>art),t.lazy(()=>hD),t.lazy(()=>ID)]).optional()}).strict(),mlt=t.object({create:t.union([t.lazy(()=>EM),t.lazy(()=>_M)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),connect:t.lazy(()=>C).optional()}).strict(),dC=t.object({set:t.lazy(()=>se).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),blt=t.object({create:t.union([t.lazy(()=>EM),t.lazy(()=>_M)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),upsert:t.lazy(()=>irt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>lrt),t.lazy(()=>gD),t.lazy(()=>CD)]).optional()}).strict(),hlt=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Ilt=t.object({create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),upsert:t.lazy(()=>rrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>prt),t.lazy(()=>AD),t.lazy(()=>SD)]).optional()}).strict(),glt=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Clt=t.object({create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),upsert:t.lazy(()=>crt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>urt),t.lazy(()=>TD),t.lazy(()=>PD)]).optional()}).strict(),Alt=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Slt=t.object({create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),upsert:t.lazy(()=>yrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>srt),t.lazy(()=>UD),t.lazy(()=>WD)]).optional()}).strict(),r2=t.object({create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),connect:t.lazy(()=>K).optional()}).strict(),p2=t.object({create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),connect:t.lazy(()=>x).optional()}).strict(),c2=t.object({create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),upsert:t.lazy(()=>drt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>zrt),t.lazy(()=>RD),t.lazy(()=>kD)]).optional()}).strict(),u2=t.object({create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),upsert:t.lazy(()=>mrt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>brt),t.lazy(()=>xD),t.lazy(()=>jD)]).optional()}).strict(),y2=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),connect:t.lazy(()=>$t).optional()}).strict(),s2=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),d2=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),z2=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),upsert:t.lazy(()=>hrt).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>Irt),t.lazy(()=>MD),t.lazy(()=>ZD)]).optional()}).strict(),m2=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),b2=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),OT=t.object({create:t.union([t.lazy(()=>nZ),t.lazy(()=>aZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),connect:t.lazy(()=>C).optional()}).strict(),fT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>iZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),wT=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>lZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),NT=t.object({create:t.union([t.lazy(()=>rZ),t.lazy(()=>pZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),connect:t.lazy(()=>M).optional()}).strict(),BT=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),connect:t.lazy(()=>M).optional()}).strict(),qT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>iZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),FT=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>lZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),DT=t.object({create:t.union([t.lazy(()=>nZ),t.lazy(()=>aZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),upsert:t.lazy(()=>grt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Crt),t.lazy(()=>vD),t.lazy(()=>OD)]).optional()}).strict(),ET=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>iZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),_T=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>lZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),LT=t.object({create:t.union([t.lazy(()=>rZ),t.lazy(()=>pZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),upsert:t.lazy(()=>Art).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Srt),t.lazy(()=>fD),t.lazy(()=>wD)]).optional()}).strict(),VT=t.object({create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),upsert:t.lazy(()=>Trt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Prt),t.lazy(()=>ND),t.lazy(()=>BD)]).optional()}).strict(),HT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>iZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),QT=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>lZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),RB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),connect:t.lazy(()=>K).optional()}).strict(),kB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>dZ).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),xB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>zZ).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),jB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>dZ).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),MB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>zZ).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),zp=t.object({set:t.lazy(()=>qt).optional()}).strict(),ZB=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),upsert:t.lazy(()=>Urt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Wrt),t.lazy(()=>qD),t.lazy(()=>FD)]).optional()}).strict(),vB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>dZ).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),updateMany:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),OB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>zZ).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),fB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>dZ).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),updateMany:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),wB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>zZ).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),NB=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),connect:t.lazy(()=>C).optional()}).strict(),BB=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),qB=t.object({create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),connect:t.lazy(()=>pt).optional()}).strict(),FB=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),upsert:t.lazy(()=>Rrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>krt),t.lazy(()=>DD),t.lazy(()=>ED)]).optional()}).strict(),DB=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),upsert:t.lazy(()=>xrt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>jrt),t.lazy(()=>_D),t.lazy(()=>LD)]).optional()}).strict(),EB=t.object({create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),upsert:t.lazy(()=>Mrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>pt).optional(),update:t.union([t.lazy(()=>Zrt),t.lazy(()=>VD),t.lazy(()=>HD)]).optional()}).strict(),Tlt=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),zC=t.object({set:t.lazy(()=>pe).optional()}).strict(),Plt=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),upsert:t.lazy(()=>vrt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Ort),t.lazy(()=>QD),t.lazy(()=>YD)]).optional()}).strict(),_B=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),connect:t.lazy(()=>K).optional()}).strict(),LB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>UZ).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),VB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),HB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>UZ).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),QB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),mp=t.object({set:t.lazy(()=>Ft).optional()}).strict(),YB=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),upsert:t.lazy(()=>frt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>wrt),t.lazy(()=>GD),t.lazy(()=>$D)]).optional()}).strict(),GB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>UZ).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),$B=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),updateMany:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),JB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>UZ).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),KB=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),updateMany:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),h2=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),I2=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>xZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),g2=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>xZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Lm=t.object({set:t.lazy(()=>Vt).optional()}).strict(),C2=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),upsert:t.lazy(()=>Nrt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>Brt),t.lazy(()=>JD),t.lazy(()=>KD)]).optional()}).strict(),A2=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>xZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),S2=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>xZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),XB=t.object({create:t.union([t.lazy(()=>jZ),t.lazy(()=>MZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),tq=t.object({create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),connect:t.lazy(()=>M).optional()}).strict(),eq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>OZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),oq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>OZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),nq=t.object({create:t.union([t.lazy(()=>jZ),t.lazy(()=>MZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),upsert:t.lazy(()=>qrt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>Frt),t.lazy(()=>XD),t.lazy(()=>tE)]).optional()}).strict(),aq=t.object({create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),upsert:t.lazy(()=>Drt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Ert),t.lazy(()=>eE),t.lazy(()=>oE)]).optional()}).strict(),iq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>OZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),lq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>OZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Vm=t.object({set:t.string().array()}).strict(),T2=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),connect:t.lazy(()=>it).optional()}).strict(),P2=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),connect:t.lazy(()=>ee).optional()}).strict(),Fz=t.object({set:t.lazy(()=>Lt).optional()}).strict(),Dz=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),U2=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),upsert:t.lazy(()=>_rt).optional(),connect:t.lazy(()=>it).optional(),update:t.union([t.lazy(()=>Lrt),t.lazy(()=>nE),t.lazy(()=>aE)]).optional()}).strict(),W2=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),upsert:t.lazy(()=>Vrt).optional(),connect:t.lazy(()=>ee).optional(),update:t.union([t.lazy(()=>Hrt),t.lazy(()=>iE),t.lazy(()=>lE)]).optional()}).strict(),R2=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),k2=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),connect:t.lazy(()=>$).optional()}).strict(),x2=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),upsert:t.lazy(()=>Qrt).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Yrt),t.lazy(()=>rE),t.lazy(()=>pE)]).optional()}).strict(),j2=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),upsert:t.lazy(()=>Grt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>$rt),t.lazy(()=>cE),t.lazy(()=>uE)]).optional()}).strict(),ip=t.object({set:t.string().array()}).strict(),rq=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>LZ)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),connect:t.lazy(()=>K).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>VZ),t.lazy(()=>HZ)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),connect:t.lazy(()=>x).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Lr=t.object({set:t.lazy(()=>Zt).optional()}).strict(),Vr=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Hr=t.object({set:t.lazy(()=>vt).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>LZ)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),upsert:t.lazy(()=>Jrt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Krt),t.lazy(()=>yE),t.lazy(()=>sE)]).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>VZ),t.lazy(()=>HZ)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),upsert:t.lazy(()=>Xrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>tpt),t.lazy(()=>dE),t.lazy(()=>zE)]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),upsert:t.lazy(()=>ept).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>opt),t.lazy(()=>mE),t.lazy(()=>bE)]).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>GZ).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>GZ).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),gq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>GZ).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>GZ).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Ult=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Wlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Rlt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),klt=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),connect:t.lazy(()=>K).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),connect:t.lazy(()=>x).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),connect:t.lazy(()=>M).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),upsert:t.lazy(()=>npt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>apt),t.lazy(()=>hE),t.lazy(()=>IE)]).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),upsert:t.lazy(()=>ipt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>lpt),t.lazy(()=>gE),t.lazy(()=>CE)]).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),upsert:t.lazy(()=>rpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>ppt),t.lazy(()=>AE),t.lazy(()=>SE)]).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),connect:t.lazy(()=>K).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),connect:t.lazy(()=>$).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),upsert:t.lazy(()=>cpt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>upt),t.lazy(()=>TE),t.lazy(()=>PE)]).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),upsert:t.lazy(()=>ypt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>spt),t.lazy(()=>UE),t.lazy(()=>WE)]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),upsert:t.lazy(()=>dpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>zpt),t.lazy(()=>RE),t.lazy(()=>kE)]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),connect:t.lazy(()=>K).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),connect:t.lazy(()=>M).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>sv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>sv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),upsert:t.lazy(()=>mpt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>bpt),t.lazy(()=>xE),t.lazy(()=>jE)]).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),upsert:t.lazy(()=>hpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Ipt),t.lazy(()=>ME),t.lazy(()=>ZE)]).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>sv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>sv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),connect:t.lazy(()=>rt).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),upsert:t.lazy(()=>gpt).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>Cpt),t.lazy(()=>vE),t.lazy(()=>OE)]).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),upsert:t.lazy(()=>Apt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Spt),t.lazy(()=>fE),t.lazy(()=>wE)]).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),upsert:t.lazy(()=>Tpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Ppt),t.lazy(()=>NE),t.lazy(()=>BE)]).optional()}).strict(),xlt=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),connect:t.lazy(()=>ne).optional()}).strict(),mC=t.object({set:t.lazy(()=>ce).optional()}).strict(),jlt=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),upsert:t.lazy(()=>Upt).optional(),connect:t.lazy(()=>ne).optional(),update:t.union([t.lazy(()=>Wpt),t.lazy(()=>qE),t.lazy(()=>FE)]).optional()}).strict(),Mlt=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),connect:t.lazy(()=>M).optional()}).strict(),bC=t.object({set:t.lazy(()=>ue).optional()}).strict(),Zlt=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),upsert:t.lazy(()=>Rpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>kpt),t.lazy(()=>DE),t.lazy(()=>EE)]).optional()}).strict(),vlt=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),connect:t.lazy(()=>M).optional()}).strict(),hC=t.object({set:t.lazy(()=>ye).optional()}).strict(),Olt=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),upsert:t.lazy(()=>xpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>jpt),t.lazy(()=>_E),t.lazy(()=>LE)]).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Wv)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>w).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>Rv),t.lazy(()=>kv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),connect:t.lazy(()=>M).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>Uv),t.lazy(()=>Wv)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>Mpt).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Zpt),t.lazy(()=>VE),t.lazy(()=>HE)]).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>Rv),t.lazy(()=>kv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>vpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>O)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>O)]).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Opt),t.lazy(()=>QE),t.lazy(()=>YE)]).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),upsert:t.lazy(()=>fpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>wpt),t.lazy(()=>GE),t.lazy(()=>$E)]).optional()}).strict(),flt=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>Mv).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),wlt=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>Mv).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Nlt=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>Mv).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Blt=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>Mv).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),M2=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>$).optional()}).strict(),Z2=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),connect:t.lazy(()=>op).optional()}).strict(),v2=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>Npt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Bpt),t.lazy(()=>JE),t.lazy(()=>KE)]).optional()}).strict(),O2=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),upsert:t.lazy(()=>qpt).optional(),connect:t.lazy(()=>op).optional(),update:t.union([t.lazy(()=>Fpt),t.lazy(()=>XE),t.lazy(()=>t_)]).optional()}).strict(),qlt=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>x).optional()}).strict(),Flt=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>Dpt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>Ept),t.lazy(()=>e_),t.lazy(()=>o_)]).optional()}).strict(),f2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),w2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>qv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),N2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),B2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>qv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),q2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),F2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>qv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),D2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>Bv).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),E2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>qv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),SM=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),connect:t.lazy(()=>K).optional()}).strict(),TM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Ev).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),PM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),UM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),WM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Ev).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),RM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>_v).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),kM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),lp=t.object({set:t.lazy(()=>Bt).optional()}).strict(),xM=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),upsert:t.lazy(()=>_pt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Lpt),t.lazy(()=>n_),t.lazy(()=>a_)]).optional()}).strict(),jM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),createMany:t.lazy(()=>Ev).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),MM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),ZM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),vM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),createMany:t.lazy(()=>Ev).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),OM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>_v).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),fM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),El=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),connect:t.lazy(()=>vl).optional()}).strict(),_l=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),Ll=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),Vl=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>Gv).optional(),connect:t.lazy(()=>$n).optional()}).strict(),Hl=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),Ql=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>Ec),t.lazy(()=>Ec).array(),t.lazy(()=>_c),t.lazy(()=>_c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>tO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>nO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>aO).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>iO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>Gv).optional(),connect:t.lazy(()=>$n).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>Ec),t.lazy(()=>Ec).array(),t.lazy(()=>_c),t.lazy(()=>_c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>tO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>nO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>aO).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>iO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),upsert:t.lazy(()=>Vpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>je)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>je)]).optional(),connect:t.lazy(()=>vl).optional(),update:t.union([t.lazy(()=>Hpt),t.lazy(()=>i_),t.lazy(()=>l_)]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),updateMany:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>Gv).optional(),upsert:t.lazy(()=>Y6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Dt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Dt)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>G6),t.lazy(()=>lO),t.lazy(()=>rO)]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>Ec),t.lazy(()=>Ec).array(),t.lazy(()=>_c),t.lazy(()=>_c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),updateMany:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),createMany:t.lazy(()=>tO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>nO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>aO).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>iO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),updateMany:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]).optional(),connectOrCreate:t.lazy(()=>Gv).optional(),upsert:t.lazy(()=>Y6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Dt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Dt)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>G6),t.lazy(()=>lO),t.lazy(()=>rO)]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>Ec),t.lazy(()=>Ec).array(),t.lazy(()=>_c),t.lazy(()=>_c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),updateMany:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),createMany:t.lazy(()=>tO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Br=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),qr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>nO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Fr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>aO).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),Dr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>iO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Ha=t.object({create:t.union([t.lazy(()=>pO),t.lazy(()=>cO)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),connect:t.lazy(()=>vl).optional()}).strict(),Qa=t.object({create:t.union([t.lazy(()=>uO),t.lazy(()=>yO)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),connect:t.lazy(()=>K).optional()}).strict(),Ya=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),Ga=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),$a=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ja=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),Ka=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),Xa=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>RO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>RO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),ft=t.object({set:t.lazy(()=>j).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>pO),t.lazy(()=>cO)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),upsert:t.lazy(()=>Qpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>je)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>je)]).optional(),connect:t.lazy(()=>vl).optional(),update:t.union([t.lazy(()=>Ypt),t.lazy(()=>r_),t.lazy(()=>p_)]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>uO),t.lazy(()=>yO)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),upsert:t.lazy(()=>Gpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>B)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>B)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>$pt),t.lazy(()=>c_),t.lazy(()=>u_)]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),updateMany:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),updateMany:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>RO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),updateMany:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),updateMany:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),pl=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),cl=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),ul=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),yl=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>RO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),sl=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),dl=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),Dlt=t.object({create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Elt=t.object({create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),upsert:t.lazy(()=>Jpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Kpt),t.lazy(()=>y_),t.lazy(()=>s_)]).optional()}).strict(),_2=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),L2=t.object({create:t.union([t.lazy(()=>vO),t.lazy(()=>OO)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),connect:t.lazy(()=>K).optional()}).strict(),V2=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),H2=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Q2=t.object({create:t.union([t.lazy(()=>vO),t.lazy(()=>OO)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),upsert:t.lazy(()=>Xpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>B)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>B)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>tct),t.lazy(()=>d_),t.lazy(()=>z_)]).optional()}).strict(),Y2=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),Ut=t.object({set:t.string().array()}).strict(),uo=t.object({create:t.union([t.lazy(()=>fO),t.lazy(()=>wO)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),connect:t.lazy(()=>K).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>NO),t.lazy(()=>BO)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),connect:t.lazy(()=>oe).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>Eu),t.lazy(()=>Eu).array(),t.lazy(()=>_u),t.lazy(()=>_u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>JO).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>KO).optional(),connect:t.lazy(()=>Bl).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)]).optional(),connectOrCreate:t.lazy(()=>tf).optional(),connect:t.lazy(()=>ql).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)]).optional(),connectOrCreate:t.lazy(()=>of).optional(),connect:t.lazy(()=>Fl).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Eu),t.lazy(()=>Eu).array(),t.lazy(()=>_u),t.lazy(()=>_u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>JO).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>KO).optional(),connect:t.lazy(()=>Bl).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),tn=t.object({create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)]).optional(),connectOrCreate:t.lazy(()=>tf).optional(),connect:t.lazy(()=>ql).optional()}).strict(),en=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),on=t.object({create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)]).optional(),connectOrCreate:t.lazy(()=>of).optional(),connect:t.lazy(()=>Fl).optional()}).strict(),st=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),dt=t.object({set:t.lazy(()=>W).optional()}).strict(),zt=t.object({set:t.lazy(()=>U).optional()}).strict(),nn=t.object({create:t.union([t.lazy(()=>fO),t.lazy(()=>wO)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),upsert:t.lazy(()=>ect).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>oct),t.lazy(()=>m_),t.lazy(()=>b_)]).optional()}).strict(),an=t.object({create:t.union([t.lazy(()=>NO),t.lazy(()=>BO)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),upsert:t.lazy(()=>nct).optional(),connect:t.lazy(()=>oe).optional(),update:t.union([t.lazy(()=>act),t.lazy(()=>h_),t.lazy(()=>I_)]).optional()}).strict(),ln=t.object({create:t.union([t.lazy(()=>Eu),t.lazy(()=>Eu).array(),t.lazy(()=>_u),t.lazy(()=>_u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),rn=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),pn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),cn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),un=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),yn=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),set:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),disconnect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),delete:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),sn=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),updateMany:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),dn=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),zn=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),mn=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),updateMany:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),bn=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),hn=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),In=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),gn=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),Cn=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),An=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),Sn=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>JO).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),Tn=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>KO).optional(),upsert:t.lazy(()=>o3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Bl).optional(),update:t.union([t.lazy(()=>n3),t.lazy(()=>nf),t.lazy(()=>af)]).optional()}).strict(),Pn=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Un=t.object({create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)]).optional(),connectOrCreate:t.lazy(()=>tf).optional(),upsert:t.lazy(()=>a3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>i3),t.lazy(()=>lf),t.lazy(()=>rf)]).optional()}).strict(),Wn=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Rn=t.object({create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)]).optional(),connectOrCreate:t.lazy(()=>of).optional(),upsert:t.lazy(()=>l3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Fl).optional(),update:t.union([t.lazy(()=>r3),t.lazy(()=>pf),t.lazy(()=>cf)]).optional()}).strict(),kn=t.object({create:t.union([t.lazy(()=>Eu),t.lazy(()=>Eu).array(),t.lazy(()=>_u),t.lazy(()=>_u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),xn=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),jn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Mn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),Zn=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),vn=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),set:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),disconnect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),delete:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),On=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),updateMany:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),fn=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),wn=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Nn=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),updateMany:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),Bn=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),qn=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>JO).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]).optional(),connectOrCreate:t.lazy(()=>KO).optional(),upsert:t.lazy(()=>o3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Bl).optional(),update:t.union([t.lazy(()=>n3),t.lazy(()=>nf),t.lazy(()=>af)]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)]).optional(),connectOrCreate:t.lazy(()=>tf).optional(),upsert:t.lazy(()=>a3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>i3),t.lazy(()=>lf),t.lazy(()=>rf)]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)]).optional(),connectOrCreate:t.lazy(()=>of).optional(),upsert:t.lazy(()=>l3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Fl).optional(),update:t.union([t.lazy(()=>r3),t.lazy(()=>pf),t.lazy(()=>cf)]).optional()}).strict(),WI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),RI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),kI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),xI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),jI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),MI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),ZI=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),vI=t.object({create:t.union([t.lazy(()=>bf),t.lazy(()=>hf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>lt).optional()}).strict(),OI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),fI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),wI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),NI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),BI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),qI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),FI=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),ta=t.object({set:t.lazy(()=>ot).optional().nullable()}).strict(),DI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),_I=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),updateMany:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),QI=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>bf),t.lazy(()=>hf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>ict).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>lct),t.lazy(()=>g_),t.lazy(()=>C_)]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),KI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),XI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),tg=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),updateMany:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),eg=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),rp=t.object({set:t.number().array()}).strict(),nF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),connect:t.lazy(()=>C).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),connect:t.lazy(()=>$).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>Sf),t.lazy(()=>Tf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),connect:t.lazy(()=>N).optional()}).strict(),Qr=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),upsert:t.lazy(()=>rct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>pct),t.lazy(()=>A_),t.lazy(()=>S_)]).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),upsert:t.lazy(()=>cct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>uct),t.lazy(()=>T_),t.lazy(()=>P_)]).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>Sf),t.lazy(()=>Tf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),upsert:t.lazy(()=>yct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ie)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ie)]).optional(),connect:t.lazy(()=>N).optional(),update:t.union([t.lazy(()=>sct),t.lazy(()=>U_),t.lazy(()=>W_)]).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Pf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),connect:t.lazy(()=>C).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),connect:t.lazy(()=>N).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>Pf),t.lazy(()=>Uf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),upsert:t.lazy(()=>dct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>zct),t.lazy(()=>R_),t.lazy(()=>k_)]).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),upsert:t.lazy(()=>mct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ie)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ie)]).optional(),connect:t.lazy(()=>N).optional(),update:t.union([t.lazy(()=>bct),t.lazy(()=>x_),t.lazy(()=>j_)]).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),MS=t.object({create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),ZS=t.object({create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>$).optional()}).strict(),vS=t.object({create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>M).optional()}).strict(),OS=t.object({create:t.union([t.lazy(()=>Ey),t.lazy(()=>Ey).array(),t.lazy(()=>_y),t.lazy(()=>_y).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),fS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>wf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),wS=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),NS=t.object({create:t.union([t.lazy(()=>Ey),t.lazy(()=>Ey).array(),t.lazy(()=>_y),t.lazy(()=>_y).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),BS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>wf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),qS=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),FS=t.object({create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),upsert:t.lazy(()=>hct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Ict),t.lazy(()=>M_),t.lazy(()=>Z_)]).optional()}).strict(),DS=t.object({create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>gct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Cct),t.lazy(()=>v_),t.lazy(()=>O_)]).optional()}).strict(),ES=t.object({create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>Act).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Sct),t.lazy(()=>f_),t.lazy(()=>w_)]).optional()}).strict(),_S=t.object({create:t.union([t.lazy(()=>Ey),t.lazy(()=>Ey).array(),t.lazy(()=>_y),t.lazy(()=>_y).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),updateMany:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),LS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>wf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),VS=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),HS=t.object({create:t.union([t.lazy(()=>Ey),t.lazy(()=>Ey).array(),t.lazy(()=>_y),t.lazy(()=>_y).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),updateMany:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),QS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>wf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),YS=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>w).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>_f)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>M).optional()}).strict(),Yr=t.object({set:t.lazy(()=>Ot).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>Tct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Pct),t.lazy(()=>N_),t.lazy(()=>B_)]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>Uct).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Wct),t.lazy(()=>q_),t.lazy(()=>F_)]).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>_f)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>Rct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>kct),t.lazy(()=>D_),t.lazy(()=>E_)]).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>M).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),pp=t.object({set:t.lazy(()=>wt).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>xct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>jct),t.lazy(()=>__),t.lazy(()=>L_)]).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>Mct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Zct),t.lazy(()=>V_),t.lazy(()=>H_)]).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),G2=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>ct).optional()}).strict(),$2=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>w).optional()}).strict(),J2=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>vct).optional(),connect:t.lazy(()=>ct).optional(),update:t.union([t.lazy(()=>Oct),t.lazy(()=>Q_),t.lazy(()=>Y_)]).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>fct).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>wct),t.lazy(()=>G_),t.lazy(()=>$_)]).optional()}).strict(),_lt=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Llt=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Nct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Bct),t.lazy(()=>J_),t.lazy(()=>K_)]).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>K).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),cp=t.object({set:t.lazy(()=>Nt).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>qct).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Fct),t.lazy(()=>X_),t.lazy(()=>tL)]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Dct).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Ect),t.lazy(()=>eL),t.lazy(()=>oL)]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>ut).optional()}).strict(),t5=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>$).optional()}).strict(),e5=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>_ct).optional(),connect:t.lazy(()=>ut).optional(),update:t.union([t.lazy(()=>Lct),t.lazy(()=>nL),t.lazy(()=>aL)]).optional()}).strict(),o5=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>Vct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Hct),t.lazy(()=>iL),t.lazy(()=>lL)]).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>uw).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>yw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>uw).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>yw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>uw).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>yw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>uw).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>yw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),n5=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),connect:t.lazy(()=>M).optional()}).strict(),a5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),i5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>zw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Hm=t.object({set:t.lazy(()=>Ht).optional()}).strict(),l5=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),upsert:t.lazy(()=>Qct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Yct),t.lazy(()=>rL),t.lazy(()=>pL)]).optional()}).strict(),r5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),p5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),createMany:t.lazy(()=>zw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),c5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),u5=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),y5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),s5=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),ea=t.object({set:t.lazy(()=>tt).optional()}).strict(),d5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),z5=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),m5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),b5=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>bw),t.lazy(()=>hw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>ae).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>C).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>M).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>bw),t.lazy(()=>hw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>Gct).optional(),connect:t.lazy(()=>ae).optional(),update:t.union([t.lazy(()=>$ct),t.lazy(()=>cL),t.lazy(()=>uL)]).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>Jct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Kct),t.lazy(()=>yL),t.lazy(()=>sL)]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>Xct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>tut),t.lazy(()=>dL),t.lazy(()=>zL)]).optional()}).strict(),Vlt=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>M).optional()}).strict(),Hlt=t.object({create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>eut).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>out),t.lazy(()=>mL),t.lazy(()=>bL)]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Uw)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),connect:t.lazy(()=>K).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),iD=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),lD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),rD=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),pD=t.object({create:t.union([t.lazy(()=>Pw),t.lazy(()=>Uw)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),upsert:t.lazy(()=>nut).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>aut),t.lazy(()=>hL),t.lazy(()=>IL)]).optional()}).strict(),cD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),uD=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),yD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),sD=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),h5=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),connect:t.lazy(()=>x).optional()}).strict(),I5=t.object({create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),connect:t.lazy(()=>C).optional()}).strict(),g5=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),upsert:t.lazy(()=>iut).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>lut),t.lazy(()=>gL),t.lazy(()=>CL)]).optional()}).strict(),C5=t.object({create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),upsert:t.lazy(()=>rut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>put),t.lazy(()=>AL),t.lazy(()=>SL)]).optional()}).strict(),io=t.object({set:t.number().array()}).strict(),lo=t.object({set:t.number().array()}).strict(),ro=t.object({set:t.number().array()}).strict(),po=t.object({set:t.string().array()}).strict(),Ez=t.object({create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),connect:t.lazy(()=>$t).optional()}).strict(),_z=t.object({create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),connect:t.lazy(()=>te).optional()}).strict(),Lz=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Vz=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ww).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),Hz=t.object({create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)]).optional(),connectOrCreate:t.lazy(()=>Nw).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),Qz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),Yz=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>qw).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Gz=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>Fw).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),$z=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>Dw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Jz=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Kz=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Xz=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ww).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),tm=t.object({create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)]).optional(),connectOrCreate:t.lazy(()=>Nw).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),em=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),om=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>qw).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>Fw).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>Dw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),_e=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Le=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ve=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),He=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),upsert:t.lazy(()=>cut).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>uut),t.lazy(()=>TL),t.lazy(()=>PL)]).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),upsert:t.lazy(()=>yut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>sut),t.lazy(()=>UL),t.lazy(()=>WL)]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>ww).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)]).optional(),connectOrCreate:t.lazy(()=>Nw).optional(),upsert:t.lazy(()=>q3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>F3),t.lazy(()=>Ew),t.lazy(()=>_w)]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),updateMany:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>qw).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>Fw).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),createMany:t.lazy(()=>Dw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),updateMany:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),updateMany:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>ww).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)]).optional(),connectOrCreate:t.lazy(()=>Nw).optional(),upsert:t.lazy(()=>q3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>F3),t.lazy(()=>Ew),t.lazy(()=>_w)]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),updateMany:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),Cm=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>qw).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Am=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>Fw).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Sm=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),createMany:t.lazy(()=>Dw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),updateMany:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Tm=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),updateMany:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),Qlt=t.object({create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),connect:t.lazy(()=>x).optional()}).strict(),Ylt=t.object({create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),upsert:t.lazy(()=>dut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>zut),t.lazy(()=>RL),t.lazy(()=>kL)]).optional()}).strict(),Glt=t.object({create:t.union([t.lazy(()=>Hw),t.lazy(()=>Qw)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),connect:t.lazy(()=>C).optional()}).strict(),$lt=t.object({create:t.union([t.lazy(()=>Hw),t.lazy(()=>Qw)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),upsert:t.lazy(()=>mut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>but),t.lazy(()=>xL),t.lazy(()=>jL)]).optional()}).strict(),Jlt=t.object({create:t.union([t.lazy(()=>Yw),t.lazy(()=>Gw)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Klt=t.object({create:t.union([t.lazy(()=>Yw),t.lazy(()=>Gw)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),upsert:t.lazy(()=>hut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Iut),t.lazy(()=>ML),t.lazy(()=>ZL)]).optional()}).strict(),yt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>yt)]).optional()}).strict(),Jr=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Jr)]).optional()}).strict(),EA=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>EA)]).optional()}).strict(),_A=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>_A)]).optional()}).strict(),A5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>A5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Jr).optional(),_sum:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yt).optional(),_max:t.lazy(()=>yt).optional()}).strict(),S5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>S5)]).optional(),_count:t.lazy(()=>yt).optional(),_avg:t.lazy(()=>Jr).optional(),_sum:t.lazy(()=>Jr).optional(),_min:t.lazy(()=>Jr).optional(),_max:t.lazy(()=>Jr).optional()}).strict(),T5=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),P5=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>P5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),Kr=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Kr)]).optional().nullable()}).strict(),LA=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>LA)]).optional().nullable()}).strict(),VA=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>VA)]).optional()}).strict(),U5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>U5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>Kr).optional(),_min:t.lazy(()=>Kr).optional(),_max:t.lazy(()=>Kr).optional()}).strict(),ml=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>ml)]).optional().nullable()}).strict(),W5=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>W5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),R5=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),HA=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>HA)]).optional()}).strict(),k5=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),x5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>x5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>ml).optional(),_min:t.lazy(()=>ml).optional(),_max:t.lazy(()=>ml).optional()}).strict(),QA=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>QA)]).optional().nullable()}).strict(),j5=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>j5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),YA=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>YA)]).optional()}).strict(),M5=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),GA=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>GA)]).optional()}).strict(),Z5=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),$A=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>$A)]).optional()}).strict(),v5=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),JA=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>JA)]).optional()}).strict(),O5=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),KA=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>KA)]).optional()}).strict(),f5=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XA=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>XA)]).optional()}).strict(),tS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>tS)]).optional()}).strict(),w5=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),N5=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),eS=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>eS)]).optional()}).strict(),B5=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),oS=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>oS)]).optional()}).strict(),q5=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),nS=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>nS)]).optional()}).strict(),F5=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),aS=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>aS)]).optional()}).strict(),D5=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),iS=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>iS)]).optional()}).strict(),E5=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),lS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>lS)]).optional()}).strict(),rS=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>rS)]).optional()}).strict(),_5=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),L5=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),pS=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>pS)]).optional().nullable()}).strict(),V5=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>V5)]).optional().nullable(),_count:t.lazy(()=>ml).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),cS=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>cS)]).optional()}).strict(),H5=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>H5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),uS=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>uS)]).optional()}).strict(),Q5=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>Q5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),yS=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>yS)]).optional()}).strict(),Y5=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>Y5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),sS=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>sS)]).optional()}).strict(),G5=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>G5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),dS=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>dS)]).optional()}).strict(),$5=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>$5)]).optional(),_count:t.lazy(()=>yt).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),wM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),NM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),J5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)])}).strict(),Xlt=t.object({update:t.union([t.lazy(()=>dD),t.lazy(()=>zD)]),create:t.union([t.lazy(()=>wM),t.lazy(()=>NM)]),where:t.lazy(()=>O).optional()}).strict(),trt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>dD),t.lazy(()=>zD)])}).strict(),dD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),zD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),BM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),qM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),K5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)])}).strict(),ert=t.object({update:t.union([t.lazy(()=>mD),t.lazy(()=>bD)]),create:t.union([t.lazy(()=>BM),t.lazy(()=>qM)]),where:t.lazy(()=>O).optional()}).strict(),ort=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>mD),t.lazy(()=>bD)])}).strict(),mD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),bD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),FM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),DM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),X5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)])}).strict(),nrt=t.object({update:t.union([t.lazy(()=>hD),t.lazy(()=>ID)]),create:t.union([t.lazy(()=>FM),t.lazy(()=>DM)]),where:t.lazy(()=>O).optional()}).strict(),art=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>hD),t.lazy(()=>ID)])}).strict(),hD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ID=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),EM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),_M=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),t6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>EM),t.lazy(()=>_M)])}).strict(),irt=t.object({update:t.union([t.lazy(()=>gD),t.lazy(()=>CD)]),create:t.union([t.lazy(()=>EM),t.lazy(()=>_M)]),where:t.lazy(()=>O).optional()}).strict(),lrt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>gD),t.lazy(()=>CD)])}).strict(),gD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),CD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),LM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),VM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),e6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)])}).strict(),rrt=t.object({update:t.union([t.lazy(()=>AD),t.lazy(()=>SD)]),create:t.union([t.lazy(()=>LM),t.lazy(()=>VM)]),where:t.lazy(()=>O).optional()}).strict(),prt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>AD),t.lazy(()=>SD)])}).strict(),AD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),SD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),HM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),QM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),o6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)])}).strict(),crt=t.object({update:t.union([t.lazy(()=>TD),t.lazy(()=>PD)]),create:t.union([t.lazy(()=>HM),t.lazy(()=>QM)]),where:t.lazy(()=>O).optional()}).strict(),urt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>TD),t.lazy(()=>PD)])}).strict(),TD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),PD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),YM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),GM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),n6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)])}).strict(),yrt=t.object({update:t.union([t.lazy(()=>UD),t.lazy(()=>WD)]),create:t.union([t.lazy(()=>YM),t.lazy(()=>GM)]),where:t.lazy(()=>O).optional()}).strict(),srt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>UD),t.lazy(()=>WD)])}).strict(),UD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),WD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),$M=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),JM=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),a6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)])}).strict(),KM=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),XM=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),i6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)])}).strict(),drt=t.object({update:t.union([t.lazy(()=>RD),t.lazy(()=>kD)]),create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]),where:t.lazy(()=>B).optional()}).strict(),zrt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>RD),t.lazy(()=>kD)])}).strict(),RD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),kD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),mrt=t.object({update:t.union([t.lazy(()=>xD),t.lazy(()=>jD)]),create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]),where:t.lazy(()=>Pt).optional()}).strict(),brt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>xD),t.lazy(()=>jD)])}).strict(),xD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),jD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),tZ=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nD),menuItems:t.lazy(()=>aD).optional()}).strict(),eZ=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>lD).optional()}).strict(),l6=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)])}).strict(),Yp=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),Gp=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),jb=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),oZ=t.object({data:t.union([t.lazy(()=>HV),t.lazy(()=>HV).array()]),skipDuplicates:t.boolean().optional()}).strict(),hrt=t.object({update:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)]),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]),where:t.lazy(()=>Oe).optional()}).strict(),Irt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)])}).strict(),MD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pD).optional(),menuItems:t.lazy(()=>cD).optional()}).strict(),ZD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yD).optional()}).strict(),lU=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>L3),t.lazy(()=>V3)]),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),rU=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>L3),t.lazy(()=>V3)])}).strict(),pU=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>bS),t.lazy(()=>gut)])}).strict(),ao=t.object({AND:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),OR:t.lazy(()=>ao).array().optional(),NOT:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>UI).optional(),recipeServingsAmount:t.lazy(()=>xb).optional(),recipeServingsCost:t.lazy(()=>xb).optional(),allergens:t.lazy(()=>bl).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),categoryId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable()}).strict(),nZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),aZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),r6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>nZ),t.lazy(()=>aZ)])}).strict(),$p=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>nF),ingredient:t.lazy(()=>aF)}).strict(),Jp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),Mb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),iZ=t.object({data:t.union([t.lazy(()=>QV),t.lazy(()=>QV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kp=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>cF),equipment:t.lazy(()=>yF).optional()}).strict(),Xp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),Zb=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),lZ=t.object({data:t.union([t.lazy(()=>YV),t.lazy(()=>YV).array()]),skipDuplicates:t.boolean().optional()}).strict(),rZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),pZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),p6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>rZ),t.lazy(()=>pZ)])}).strict(),cZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),uZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),c6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)])}).strict(),grt=t.object({update:t.union([t.lazy(()=>vD),t.lazy(()=>OD)]),create:t.union([t.lazy(()=>nZ),t.lazy(()=>aZ)]),where:t.lazy(()=>O).optional()}).strict(),Crt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>vD),t.lazy(()=>OD)])}).strict(),vD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),OD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),cU=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>H3),t.lazy(()=>Q3)]),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),uU=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>H3),t.lazy(()=>Q3)])}).strict(),yU=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>Cut)])}).strict(),fa=t.object({AND:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),OR:t.lazy(()=>fa).array().optional(),NOT:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>UI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable()}).strict(),sU=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>Y3),t.lazy(()=>G3)]),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),dU=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>Y3),t.lazy(()=>G3)])}).strict(),zU=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Hj),t.lazy(()=>Aut)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Art=t.object({update:t.union([t.lazy(()=>fD),t.lazy(()=>wD)]),create:t.union([t.lazy(()=>rZ),t.lazy(()=>pZ)]),where:t.lazy(()=>v).optional()}).strict(),Srt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>fD),t.lazy(()=>wD)])}).strict(),fD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),wD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Trt=t.object({update:t.union([t.lazy(()=>ND),t.lazy(()=>BD)]),create:t.union([t.lazy(()=>cZ),t.lazy(()=>uZ)]),where:t.lazy(()=>v).optional()}).strict(),Prt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ND),t.lazy(()=>BD)])}).strict(),ND=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),BD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),yZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),sZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),u6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)])}).strict(),tc=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>NB),RecipeInstruction:t.lazy(()=>qB).optional()}).strict(),ec=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),vb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),dZ=t.object({data:t.union([t.lazy(()=>GV),t.lazy(()=>GV).array()]),skipDuplicates:t.boolean().optional()}).strict(),oc=t.object({date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nc=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ob=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),zZ=t.object({data:t.union([t.lazy(()=>$V),t.lazy(()=>$V).array()]),skipDuplicates:t.boolean().optional()}).strict(),Urt=t.object({update:t.union([t.lazy(()=>qD),t.lazy(()=>FD)]),create:t.union([t.lazy(()=>yZ),t.lazy(()=>sZ)]),where:t.lazy(()=>B).optional()}).strict(),Wrt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>qD),t.lazy(()=>FD)])}).strict(),qD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),FD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),mU=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>$3),t.lazy(()=>J3)]),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),bU=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>$3),t.lazy(()=>J3)])}).strict(),hU=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>PT),t.lazy(()=>Sut)])}).strict(),wa=t.object({AND:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),OR:t.lazy(()=>wa).array().optional(),NOT:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable()}).strict(),IU=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>K3),t.lazy(()=>X3)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),gU=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>K3),t.lazy(()=>X3)])}).strict(),CU=t.object({where:t.lazy(()=>hp),data:t.union([t.lazy(()=>ON),t.lazy(()=>Tut)])}).strict(),hp=t.object({AND:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),OR:t.lazy(()=>hp).array().optional(),NOT:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>oB),t.lazy(()=>pe)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),mZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),bZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),y6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)])}).strict(),hZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RB),maintenanceLogs:t.lazy(()=>xB).optional()}).strict(),IZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>MB).optional()}).strict(),s6=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)])}).strict(),gZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>cF),RecipeVersion:t.lazy(()=>uF).optional()}).strict(),CZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),d6=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)])}).strict(),Rrt=t.object({update:t.union([t.lazy(()=>DD),t.lazy(()=>ED)]),create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]),where:t.lazy(()=>O).optional()}).strict(),krt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>DD),t.lazy(()=>ED)])}).strict(),DD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ED=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),xrt=t.object({update:t.union([t.lazy(()=>_D),t.lazy(()=>LD)]),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]),where:t.lazy(()=>Me).optional()}).strict(),jrt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>_D),t.lazy(()=>LD)])}).strict(),_D=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ZB).optional(),maintenanceLogs:t.lazy(()=>OB).optional()}).strict(),LD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>wB).optional()}).strict(),Mrt=t.object({update:t.union([t.lazy(()=>VD),t.lazy(()=>HD)]),create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]),where:t.lazy(()=>Ne).optional()}).strict(),Zrt=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>VD),t.lazy(()=>HD)])}).strict(),VD=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>dF).optional(),RecipeVersion:t.lazy(()=>zF).optional()}).strict(),HD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),AZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RB),recipes:t.lazy(()=>kB).optional()}).strict(),SZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>jB).optional()}).strict(),z6=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)])}).strict(),vrt=t.object({update:t.union([t.lazy(()=>QD),t.lazy(()=>YD)]),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]),where:t.lazy(()=>Me).optional()}).strict(),Ort=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>QD),t.lazy(()=>YD)])}).strict(),QD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ZB).optional(),recipes:t.lazy(()=>vB).optional()}).strict(),YD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>fB).optional()}).strict(),TZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),PZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),m6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)])}).strict(),ac=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>I2).optional()}).strict(),ic=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>g2).optional()}).strict(),fb=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),UZ=t.object({data:t.union([t.lazy(()=>JV),t.lazy(()=>JV).array()]),skipDuplicates:t.boolean().optional()}).strict(),lc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>tq),items:t.lazy(()=>eq).optional()}).strict(),rc=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>oq).optional()}).strict(),wb=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),WZ=t.object({data:t.union([t.lazy(()=>KV),t.lazy(()=>KV).array()]),skipDuplicates:t.boolean().optional()}).strict(),frt=t.object({update:t.union([t.lazy(()=>GD),t.lazy(()=>$D)]),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]),where:t.lazy(()=>B).optional()}).strict(),wrt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>GD),t.lazy(()=>$D)])}).strict(),GD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),$D=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),AU=t.object({where:t.lazy(()=>ee),update:t.union([t.lazy(()=>t8),t.lazy(()=>e8)]),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),SU=t.object({where:t.lazy(()=>ee),data:t.union([t.lazy(()=>t8),t.lazy(()=>e8)])}).strict(),TU=t.object({where:t.lazy(()=>Ip),data:t.union([t.lazy(()=>wN),t.lazy(()=>Put)])}).strict(),Ip=t.object({AND:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),OR:t.lazy(()=>Ip).array().optional(),NOT:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>aB),t.lazy(()=>Vt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),PU=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>o8),t.lazy(()=>n8)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),UU=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>o8),t.lazy(()=>n8)])}).strict(),WU=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Uut)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),completedById:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),RZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_B),completions:t.lazy(()=>VB).optional()}).strict(),kZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>QB).optional()}).strict(),b6=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)])}).strict(),pc=t.object({status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>T2)}).strict(),cc=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nb=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),xZ=t.object({data:t.union([t.lazy(()=>XV),t.lazy(()=>XV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Nrt=t.object({update:t.union([t.lazy(()=>JD),t.lazy(()=>KD)]),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]),where:t.lazy(()=>Ze).optional()}).strict(),Brt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>JD),t.lazy(()=>KD)])}).strict(),JD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YB).optional(),completions:t.lazy(()=>$B).optional()}).strict(),KD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>KB).optional()}).strict(),RU=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>a8),t.lazy(()=>i8)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),kU=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>a8),t.lazy(()=>i8)])}).strict(),xU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>qj),t.lazy(()=>Wut)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>iB),t.lazy(()=>Lt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>bl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),jZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_B),items:t.lazy(()=>LB).optional()}).strict(),MZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HB).optional()}).strict(),h6=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>jZ),t.lazy(()=>MZ)])}).strict(),ZZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),vZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),I6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)])}).strict(),uc=t.object({status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>P2)}).strict(),yc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bb=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),OZ=t.object({data:t.union([t.lazy(()=>tH),t.lazy(()=>tH).array()]),skipDuplicates:t.boolean().optional()}).strict(),qrt=t.object({update:t.union([t.lazy(()=>XD),t.lazy(()=>tE)]),create:t.union([t.lazy(()=>jZ),t.lazy(()=>MZ)]),where:t.lazy(()=>Ze).optional()}).strict(),Frt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>XD),t.lazy(()=>tE)])}).strict(),XD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YB).optional(),items:t.lazy(()=>GB).optional()}).strict(),tE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional()}).strict(),Drt=t.object({update:t.union([t.lazy(()=>eE),t.lazy(()=>oE)]),create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]),where:t.lazy(()=>v).optional()}).strict(),Ert=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>eE),t.lazy(()=>oE)])}).strict(),eE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),oE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),jU=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>l8),t.lazy(()=>r8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),MU=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>l8),t.lazy(()=>r8)])}).strict(),ZU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>qj),t.lazy(()=>Rut)])}).strict(),fZ=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>XB),completedBy:t.lazy(()=>tq)}).strict(),wZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),g6=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)])}).strict(),NZ=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>h2)}).strict(),BZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C6=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)])}).strict(),_rt=t.object({update:t.union([t.lazy(()=>nE),t.lazy(()=>aE)]),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]),where:t.lazy(()=>Ye).optional()}).strict(),Lrt=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>nE),t.lazy(()=>aE)])}).strict(),nE=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>nq).optional(),completedBy:t.lazy(()=>aq).optional()}).strict(),aE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vrt=t.object({update:t.union([t.lazy(()=>iE),t.lazy(()=>lE)]),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]),where:t.lazy(()=>Qe).optional()}).strict(),Hrt=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>iE),t.lazy(()=>lE)])}).strict(),iE=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>C2).optional()}).strict(),lE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qZ=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>qF).optional(),ingredients:t.lazy(()=>FF).optional()}).strict(),FZ=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>EF).optional(),ingredients:t.lazy(()=>_F).optional()}).strict(),A6=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)])}).strict(),DZ=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),EZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional()}).strict(),S6=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)])}).strict(),Qrt=t.object({update:t.union([t.lazy(()=>rE),t.lazy(()=>pE)]),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]),where:t.lazy(()=>ve).optional()}).strict(),Yrt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>rE),t.lazy(()=>pE)])}).strict(),rE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>VF).optional(),ingredients:t.lazy(()=>HF).optional()}).strict(),pE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>YF).optional(),ingredients:t.lazy(()=>GF).optional()}).strict(),Grt=t.object({update:t.union([t.lazy(()=>cE),t.lazy(()=>uE)]),create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]),where:t.lazy(()=>Mt).optional()}).strict(),$rt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>cE),t.lazy(()=>uE)])}).strict(),cE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),uE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional()}).strict(),_Z=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional()}).strict(),LZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional()}).strict(),T6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>_Z),t.lazy(()=>LZ)])}).strict(),VZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),HZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),P6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>VZ),t.lazy(()=>HZ)])}).strict(),QZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),YZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),U6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)])}).strict(),Jrt=t.object({update:t.union([t.lazy(()=>yE),t.lazy(()=>sE)]),create:t.union([t.lazy(()=>_Z),t.lazy(()=>LZ)]),where:t.lazy(()=>B).optional()}).strict(),Krt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>yE),t.lazy(()=>sE)])}).strict(),yE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional()}).strict(),sE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional()}).strict(),Xrt=t.object({update:t.union([t.lazy(()=>dE),t.lazy(()=>zE)]),create:t.union([t.lazy(()=>VZ),t.lazy(()=>HZ)]),where:t.lazy(()=>Pt).optional()}).strict(),tpt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>dE),t.lazy(()=>zE)])}).strict(),dE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),zE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),ept=t.object({update:t.union([t.lazy(()=>mE),t.lazy(()=>bE)]),create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]),where:t.lazy(()=>v).optional()}).strict(),opt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>mE),t.lazy(()=>bE)])}).strict(),mE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),bE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),sc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional()}).strict(),dc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional()}).strict(),qb=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),zc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),mc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Fb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),bc=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional()}).strict(),hc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),Db=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),GZ=t.object({data:t.union([t.lazy(()=>eH),t.lazy(()=>eH).array()]),skipDuplicates:t.boolean().optional()}).strict(),vU=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>p8),t.lazy(()=>c8)]),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),OU=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>p8),t.lazy(()=>c8)])}).strict(),fU=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>bS),t.lazy(()=>kut)])}).strict(),wU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>u8),t.lazy(()=>y8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),NU=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>u8),t.lazy(()=>y8)])}).strict(),BU=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>xut)])}).strict(),re=t.object({AND:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),OR:t.lazy(()=>re).array().optional(),NOT:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>bl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>CB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>AB),t.lazy(()=>U)]).optional()}).strict(),qU=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>s8),t.lazy(()=>d8)]),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),FU=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>s8),t.lazy(()=>d8)])}).strict(),DU=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>Vj),t.lazy(()=>jut)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>SB),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable()}).strict(),Ic=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),gc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Eb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),EU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>z8),t.lazy(()=>m8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),_U=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>z8),t.lazy(()=>m8)])}).strict(),LU=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>Mut)])}).strict(),$Z=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),JZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),W6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)])}).strict(),KZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),XZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),R6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)])}).strict(),tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),ev=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),k6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)])}).strict(),npt=t.object({update:t.union([t.lazy(()=>hE),t.lazy(()=>IE)]),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]),where:t.lazy(()=>B).optional()}).strict(),apt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>hE),t.lazy(()=>IE)])}).strict(),hE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),IE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),ipt=t.object({update:t.union([t.lazy(()=>gE),t.lazy(()=>CE)]),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]),where:t.lazy(()=>Pt).optional()}).strict(),lpt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>gE),t.lazy(()=>CE)])}).strict(),gE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),CE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),rpt=t.object({update:t.union([t.lazy(()=>AE),t.lazy(()=>SE)]),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]),where:t.lazy(()=>v).optional()}).strict(),ppt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>AE),t.lazy(()=>SE)])}).strict(),AE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),SE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),nv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),x6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)])}).strict(),av=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),iv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),j6=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>av),t.lazy(()=>iv)])}).strict(),lv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),rv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),M6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)])}).strict(),cpt=t.object({update:t.union([t.lazy(()=>TE),t.lazy(()=>PE)]),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]),where:t.lazy(()=>B).optional()}).strict(),upt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>TE),t.lazy(()=>PE)])}).strict(),TE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),PE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),ypt=t.object({update:t.union([t.lazy(()=>UE),t.lazy(()=>WE)]),create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]),where:t.lazy(()=>Mt).optional()}).strict(),spt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>UE),t.lazy(()=>WE)])}).strict(),UE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),WE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),dpt=t.object({update:t.union([t.lazy(()=>RE),t.lazy(()=>kE)]),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]),where:t.lazy(()=>v).optional()}).strict(),zpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>RE),t.lazy(()=>kE)])}).strict(),RE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),kE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),pv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),cv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),Z6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)])}).strict(),uv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),yv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),v6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)])}).strict(),Cc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Hq),assignedTo:t.lazy(()=>Qq).optional()}).strict(),Ac=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_b=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),sv=t.object({data:t.union([t.lazy(()=>oH),t.lazy(()=>oH).array()]),skipDuplicates:t.boolean().optional()}).strict(),mpt=t.object({update:t.union([t.lazy(()=>xE),t.lazy(()=>jE)]),create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]),where:t.lazy(()=>B).optional()}).strict(),bpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>xE),t.lazy(()=>jE)])}).strict(),xE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),jE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),hpt=t.object({update:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)]),create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]),where:t.lazy(()=>v).optional()}).strict(),Ipt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)])}).strict(),ME=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),ZE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),VU=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>b8),t.lazy(()=>h8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),HU=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>b8),t.lazy(()=>h8)])}).strict(),QU=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>kT),t.lazy(()=>Zut)])}).strict(),Na=t.object({AND:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),OR:t.lazy(()=>Na).array().optional(),NOT:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),dv=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),createdBy:t.lazy(()=>Bq)}).strict(),zv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),O6=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)])}).strict(),mv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),bv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),f6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)])}).strict(),hv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Iv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),w6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)])}).strict(),gpt=t.object({update:t.union([t.lazy(()=>vE),t.lazy(()=>OE)]),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]),where:t.lazy(()=>Ge).optional()}).strict(),Cpt=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>vE),t.lazy(()=>OE)])}).strict(),vE=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Dq).optional(),createdBy:t.lazy(()=>Eq).optional()}).strict(),OE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Apt=t.object({update:t.union([t.lazy(()=>fE),t.lazy(()=>wE)]),create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]),where:t.lazy(()=>O).optional()}).strict(),Spt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>fE),t.lazy(()=>wE)])}).strict(),fE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),wE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Tpt=t.object({update:t.union([t.lazy(()=>NE),t.lazy(()=>BE)]),create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]),where:t.lazy(()=>v).optional()}).strict(),Ppt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>NE),t.lazy(()=>BE)])}).strict(),NE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),BE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),gv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht),user:t.lazy(()=>n5)}).strict(),Cv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht)}).strict(),N6=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)])}).strict(),Upt=t.object({update:t.union([t.lazy(()=>qE),t.lazy(()=>FE)]),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]),where:t.lazy(()=>Xe).optional()}).strict(),Wpt=t.object({where:t.lazy(()=>Xe).optional(),data:t.union([t.lazy(()=>qE),t.lazy(()=>FE)])}).strict(),qE=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional(),user:t.lazy(()=>l5).optional()}).strict(),FE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional()}).strict(),Av=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Sv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),B6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)])}).strict(),Rpt=t.object({update:t.union([t.lazy(()=>DE),t.lazy(()=>EE)]),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]),where:t.lazy(()=>v).optional()}).strict(),kpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>DE),t.lazy(()=>EE)])}).strict(),DE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),EE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),q6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)])}).strict(),xpt=t.object({update:t.union([t.lazy(()=>_E),t.lazy(()=>LE)]),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]),where:t.lazy(()=>v).optional()}).strict(),jpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>_E),t.lazy(()=>LE)])}).strict(),_E=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),LE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Uv=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),ingredient:t.lazy(()=>ZS),lastUpdatedBy:t.lazy(()=>vS).optional(),transactions:t.lazy(()=>OS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),Wv=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),F6=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Wv)])}).strict(),Rv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),kv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),D6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Rv),t.lazy(()=>kv)])}).strict(),xv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),jv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),E6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)])}).strict(),Mpt=t.object({update:t.union([t.lazy(()=>VE),t.lazy(()=>HE)]),create:t.union([t.lazy(()=>Uv),t.lazy(()=>Wv)]),where:t.lazy(()=>le).optional()}).strict(),Zpt=t.object({where:t.lazy(()=>le).optional(),data:t.union([t.lazy(()=>VE),t.lazy(()=>HE)])}).strict(),VE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),ingredient:t.lazy(()=>DS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),transactions:t.lazy(()=>_S).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),HE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),vpt=t.object({update:t.union([t.lazy(()=>QE),t.lazy(()=>YE)]),create:t.union([t.lazy(()=>Rv),t.lazy(()=>kv)]),where:t.lazy(()=>O).optional()}).strict(),Opt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>QE),t.lazy(()=>YE)])}).strict(),QE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),YE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),fpt=t.object({update:t.union([t.lazy(()=>GE),t.lazy(()=>$E)]),create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]),where:t.lazy(()=>v).optional()}).strict(),wpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>GE),t.lazy(()=>$E)])}).strict(),GE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),$E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Sc=t.object({ingredient:t.lazy(()=>M2)}).strict(),Tc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),Lb=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),Mv=t.object({data:t.union([t.lazy(()=>nH),t.lazy(()=>nH).array()]),skipDuplicates:t.boolean().optional()}).strict(),YU=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>I8),t.lazy(()=>g8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),GU=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>I8),t.lazy(()=>g8)])}).strict(),$U=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>_j),t.lazy(()=>vut)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number()]).optional()}).strict(),Zv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),vv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),_6=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)])}).strict(),Ov=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),fv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),L6=t.object({where:t.lazy(()=>op),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),Npt=t.object({update:t.union([t.lazy(()=>JE),t.lazy(()=>KE)]),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]),where:t.lazy(()=>Mt).optional()}).strict(),Bpt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>JE),t.lazy(()=>KE)])}).strict(),JE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),KE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),qpt=t.object({update:t.union([t.lazy(()=>XE),t.lazy(()=>t_)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>co).optional()}).strict(),Fpt=t.object({where:t.lazy(()=>co).optional(),data:t.union([t.lazy(()=>XE),t.lazy(()=>t_)])}).strict(),XE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),t_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),wv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),Nv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),V6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)])}).strict(),Dpt=t.object({update:t.union([t.lazy(()=>e_),t.lazy(()=>o_)]),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]),where:t.lazy(()=>Pt).optional()}).strict(),Ept=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>e_),t.lazy(()=>o_)])}).strict(),e_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),o_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),Pc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),Uc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),Vb=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),Bv=t.object({data:t.union([t.lazy(()=>aH),t.lazy(()=>aH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Rc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),Hb=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),qv=t.object({data:t.union([t.lazy(()=>iH),t.lazy(()=>iH).array()]),skipDuplicates:t.boolean().optional()}).strict(),JU=t.object({where:t.lazy(()=>K),update:t.union([t.lazy(()=>C8),t.lazy(()=>A8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),KU=t.object({where:t.lazy(()=>K),data:t.union([t.lazy(()=>C8),t.lazy(()=>A8)])}).strict(),XU=t.object({where:t.lazy(()=>gp),data:t.union([t.lazy(()=>EN),t.lazy(()=>Out)])}).strict(),gp=t.object({AND:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),OR:t.lazy(()=>gp).array().optional(),NOT:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable()}).strict(),tW=t.object({where:t.lazy(()=>M),update:t.union([t.lazy(()=>S8),t.lazy(()=>T8)]),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),eW=t.object({where:t.lazy(()=>M),data:t.union([t.lazy(()=>S8),t.lazy(()=>T8)])}).strict(),oW=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>fut)])}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>hB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Fv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),Dv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),H6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)])}).strict(),kc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>ZS),lastUpdatedBy:t.lazy(()=>vS).optional(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),xc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),Qb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Ev=t.object({data:t.union([t.lazy(()=>lH),t.lazy(()=>lH).array()]),skipDuplicates:t.boolean().optional()}).strict(),jc=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>IF),createdBy:t.lazy(()=>gF)}).strict(),Mc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Yb=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),_v=t.object({data:t.union([t.lazy(()=>rH),t.lazy(()=>rH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zc=t.object({status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>PF),items:t.lazy(()=>UF).optional()}).strict(),vc=t.object({id:t.number().int().optional(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),Gb=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>pH),t.lazy(()=>pH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_pt=t.object({update:t.union([t.lazy(()=>n_),t.lazy(()=>a_)]),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]),where:t.lazy(()=>B).optional()}).strict(),Lpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>n_),t.lazy(()=>a_)])}).strict(),n_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),a_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),nW=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>P8),t.lazy(()=>U8)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),aW=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>P8),t.lazy(()=>U8)])}).strict(),iW=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>MT),t.lazy(()=>wut)])}).strict(),Ba=t.object({AND:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),OR:t.lazy(()=>Ba).array().optional(),NOT:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable()}).strict(),lW=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>W8),t.lazy(()=>R8)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),rW=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>W8),t.lazy(()=>R8)])}).strict(),pW=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ZT),t.lazy(()=>Nut)])}).strict(),qa=t.object({AND:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),OR:t.lazy(()=>qa).array().optional(),NOT:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>TB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),cW=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>k8),t.lazy(()=>x8)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),uW=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>k8),t.lazy(()=>x8)])}).strict(),yW=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Qj),t.lazy(()=>But)])}).strict(),Pl=t.object({AND:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),OR:t.lazy(()=>Pl).array().optional(),NOT:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>PB),t.lazy(()=>wt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Vv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>w2).optional()}).strict(),Hv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>B2).optional()}).strict(),Q6=t.object({where:t.lazy(()=>vl),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)])}).strict(),Oc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),fc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),$b=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),Qv=t.object({data:t.union([t.lazy(()=>cH),t.lazy(()=>cH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>_2).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>V2).optional()}).strict(),Jb=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),Yv=t.object({data:t.union([t.lazy(()=>uH),t.lazy(()=>uH).array()]),skipDuplicates:t.boolean().optional()}).strict(),GS=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),$S=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WM).optional(),transactions:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>kM).optional()}).strict(),Gv=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)])}).strict(),Bc=t.object({status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>ZF),items:t.lazy(()=>vF).optional()}).strict(),qc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>OF).optional()}).strict(),Kb=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),$v=t.object({data:t.union([t.lazy(()=>yH),t.lazy(()=>yH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Dc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Xb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),Jv=t.object({data:t.union([t.lazy(()=>sH),t.lazy(()=>sH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ec=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>aD).optional(),MenuCategory:t.lazy(()=>iD).optional()}).strict(),_c=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>lD).optional(),MenuCategory:t.lazy(()=>rD).optional()}).strict(),th=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>Ec),t.lazy(()=>_c)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>dH),t.lazy(()=>dH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>p2)}).strict(),Vc=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eh=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),Xv=t.object({data:t.union([t.lazy(()=>zH),t.lazy(()=>zH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hc=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Wq),recordedBy:t.lazy(()=>Rq)}).strict(),Qc=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),tO=t.object({data:t.union([t.lazy(()=>mH),t.lazy(()=>mH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>Zq),recordedBy:t.lazy(()=>vq)}).strict(),Gc=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),eO=t.object({data:t.union([t.lazy(()=>bH),t.lazy(()=>bH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>Bq),items:t.lazy(()=>qq).optional()}).strict(),Jc=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Fq).optional()}).strict(),ah=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),oO=t.object({data:t.union([t.lazy(()=>hH),t.lazy(()=>hH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>kB).optional(),maintenanceLogs:t.lazy(()=>xB).optional()}).strict(),Xc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>jB).optional(),maintenanceLogs:t.lazy(()=>MB).optional()}).strict(),ih=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),nO=t.object({data:t.union([t.lazy(()=>IH),t.lazy(()=>IH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tu=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>LB).optional(),completions:t.lazy(()=>VB).optional()}).strict(),eu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HB).optional(),completions:t.lazy(()=>QB).optional()}).strict(),lh=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),aO=t.object({data:t.union([t.lazy(()=>gH),t.lazy(()=>gH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ou=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>pq).optional(),respondedBy:t.lazy(()=>cq).optional()}).strict(),nu=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),iO=t.object({data:t.union([t.lazy(()=>CH),t.lazy(()=>CH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vpt=t.object({update:t.union([t.lazy(()=>i_),t.lazy(()=>l_)]),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]),where:t.lazy(()=>je).optional()}).strict(),Hpt=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>i_),t.lazy(()=>l_)])}).strict(),i_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>F2).optional()}).strict(),l_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>E2).optional()}).strict(),sW=t.object({where:t.lazy(()=>M),update:t.union([t.lazy(()=>j8),t.lazy(()=>M8)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),dW=t.object({where:t.lazy(()=>M),data:t.union([t.lazy(()=>j8),t.lazy(()=>M8)])}).strict(),zW=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>Lj),t.lazy(()=>qut)])}).strict(),mW=t.object({where:t.lazy(()=>oe),update:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),bW=t.object({where:t.lazy(()=>oe),data:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)])}).strict(),hW=t.object({where:t.lazy(()=>Cp),data:t.union([t.lazy(()=>LN),t.lazy(()=>Fut)])}).strict(),Cp=t.object({AND:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),OR:t.lazy(()=>Cp).array().optional(),NOT:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable()}).strict(),Y6=t.object({update:t.union([t.lazy(()=>lO),t.lazy(()=>rO)]),create:t.union([t.lazy(()=>GS),t.lazy(()=>$S)]),where:t.lazy(()=>Dt).optional()}).strict(),G6=t.object({where:t.lazy(()=>Dt).optional(),data:t.union([t.lazy(()=>lO),t.lazy(()=>rO)])}).strict(),lO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),rO=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>vM).optional(),transactions:t.lazy(()=>OM).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict(),IW=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>O8),t.lazy(()=>f8)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),gW=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>O8),t.lazy(()=>f8)])}).strict(),CW=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>Gj),t.lazy(()=>Dut)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>UB),t.lazy(()=>Nt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),AW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>w8),t.lazy(()=>N8)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),SW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>w8),t.lazy(()=>N8)])}).strict(),TW=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>Eut)])}).strict(),PW=t.object({where:t.lazy(()=>$t),update:t.union([t.lazy(()=>B8),t.lazy(()=>q8)]),create:t.union([t.lazy(()=>Ec),t.lazy(()=>_c)])}).strict(),UW=t.object({where:t.lazy(()=>$t),data:t.union([t.lazy(()=>B8),t.lazy(()=>q8)])}).strict(),WW=t.object({where:t.lazy(()=>Ap),data:t.union([t.lazy(()=>GN),t.lazy(()=>_ut)])}).strict(),Ap=t.object({AND:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),OR:t.lazy(()=>Ap).array().optional(),NOT:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),RW=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>F8),t.lazy(()=>D8)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),kW=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>F8),t.lazy(()=>D8)])}).strict(),xW=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>Lut)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),jW=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>E8),t.lazy(()=>_8)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),MW=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>E8),t.lazy(()=>_8)])}).strict(),ZW=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>WT),t.lazy(()=>Vut)])}).strict(),Fa=t.object({AND:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),OR:t.lazy(()=>Fa).array().optional(),NOT:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),vW=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>L8),t.lazy(()=>V8)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),OW=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>L8),t.lazy(()=>V8)])}).strict(),fW=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>RT),t.lazy(()=>Hut)])}).strict(),Da=t.object({AND:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),OR:t.lazy(()=>Da).array().optional(),NOT:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),wW=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),NW=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)])}).strict(),BW=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>Qut)])}).strict(),Rl=t.object({AND:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),OR:t.lazy(()=>Rl).array().optional(),NOT:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),qW=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),FW=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)])}).strict(),DW=t.object({where:t.lazy(()=>Sp),data:t.union([t.lazy(()=>vN),t.lazy(()=>Yut)])}).strict(),Sp=t.object({AND:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),OR:t.lazy(()=>Sp).array().optional(),NOT:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>tB),t.lazy(()=>qt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),EW=t.object({where:t.lazy(()=>Yt),update:t.union([t.lazy(()=>$8),t.lazy(()=>J8)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),_W=t.object({where:t.lazy(()=>Yt),data:t.union([t.lazy(()=>$8),t.lazy(()=>J8)])}).strict(),LW=t.object({where:t.lazy(()=>Tp),data:t.union([t.lazy(()=>fN),t.lazy(()=>Gut)])}).strict(),Tp=t.object({AND:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),OR:t.lazy(()=>Tp).array().optional(),NOT:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>nB),t.lazy(()=>Ft)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),VW=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>K8),t.lazy(()=>X8)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),HW=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>K8),t.lazy(()=>X8)])}).strict(),QW=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>UT),t.lazy(()=>$ut)])}).strict(),Ea=t.object({AND:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional(),OR:t.lazy(()=>Ea).array().optional(),NOT:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>lB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>bl).optional(),status:t.union([t.lazy(()=>rB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),pO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>f2).optional()}).strict(),cO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>N2).optional()}).strict(),$6=t.object({where:t.lazy(()=>vl),create:t.union([t.lazy(()=>pO),t.lazy(()=>cO)])}).strict(),uO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),yO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),J6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>uO),t.lazy(()=>yO)])}).strict(),au=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht),ShiftTask:t.lazy(()=>a5).optional()}).strict(),iu=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht),ShiftTask:t.lazy(()=>i5).optional()}).strict(),ph=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),sO=t.object({data:t.union([t.lazy(()=>AH),t.lazy(()=>AH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lu=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>JF),recipe:t.lazy(()=>KF)}).strict(),ru=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),ch=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),dO=t.object({data:t.union([t.lazy(()=>SH),t.lazy(()=>SH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),ingredient:t.lazy(()=>ZS),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),cu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),uh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),zO=t.object({data:t.union([t.lazy(()=>TH),t.lazy(()=>TH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),yu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),yh=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),mO=t.object({data:t.union([t.lazy(()=>PH),t.lazy(()=>PH).array()]),skipDuplicates:t.boolean().optional()}).strict(),su=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),du=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sh=t.object({where:t.lazy(()=>Re),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>UH),t.lazy(()=>UH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Uq),menuItem:t.lazy(()=>Wq)}).strict(),mu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>WH),t.lazy(()=>WH).array()]),skipDuplicates:t.boolean().optional()}).strict(),bu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Mq),ingrediente:t.lazy(()=>Zq)}).strict(),hu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),IO=t.object({data:t.union([t.lazy(()=>RH),t.lazy(()=>RH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),items:t.lazy(()=>qq).optional()}).strict(),gu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Fq).optional()}).strict(),mh=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),gO=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Vq),recipe:t.lazy(()=>Hq)}).strict(),Au=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),CO=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Tu=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hh=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),AO=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Uu=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ih=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),SO=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wu=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Jq),recipe:t.lazy(()=>Kq).optional()}).strict(),Ru=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),TO=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>XB),items:t.lazy(()=>eq).optional()}).strict(),xu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>oq).optional()}).strict(),Ch=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),PO=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>rq),menuItem:t.lazy(()=>pq).optional()}).strict(),Mu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ah=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>OT),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),approvedBy:t.lazy(()=>BT).optional()}).strict(),vu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),Sh=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),WO=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>OT),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT)}).strict(),fu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),Th=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),RO=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wu=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>hF),item:t.lazy(()=>IF)}).strict(),Nu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),Ph=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),kO=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bu=t.object({status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>TF),items:t.lazy(()=>UF).optional()}).strict(),qu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),Uh=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),xO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qpt=t.object({update:t.union([t.lazy(()=>r_),t.lazy(()=>p_)]),create:t.union([t.lazy(()=>pO),t.lazy(()=>cO)]),where:t.lazy(()=>je).optional()}).strict(),Ypt=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>r_),t.lazy(()=>p_)])}).strict(),r_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>q2).optional()}).strict(),p_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>D2).optional()}).strict(),Gpt=t.object({update:t.union([t.lazy(()=>c_),t.lazy(()=>u_)]),create:t.union([t.lazy(()=>uO),t.lazy(()=>yO)]),where:t.lazy(()=>B).optional()}).strict(),$pt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>c_),t.lazy(()=>u_)])}).strict(),c_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),u_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),YW=t.object({where:t.lazy(()=>ne),update:t.union([t.lazy(()=>t7),t.lazy(()=>e7)]),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),GW=t.object({where:t.lazy(()=>ne),data:t.union([t.lazy(()=>t7),t.lazy(()=>e7)])}).strict(),$W=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>HN),t.lazy(()=>Jut)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>WB),t.lazy(()=>Ht)]).optional()}).strict(),JW=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>o7),t.lazy(()=>n7)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),KW=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>o7),t.lazy(()=>n7)])}).strict(),XW=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>vT),t.lazy(()=>Kut)])}).strict(),_a=t.object({AND:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),OR:t.lazy(()=>_a).array().optional(),NOT:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number()]).optional()}).strict(),tR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>a7),t.lazy(()=>i7)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),eR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>a7),t.lazy(()=>i7)])}).strict(),oR=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>MT),t.lazy(()=>Xut)])}).strict(),nR=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>l7),t.lazy(()=>r7)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),aR=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>l7),t.lazy(()=>r7)])}).strict(),iR=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>_N),t.lazy(()=>tyt)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lR=t.object({where:t.lazy(()=>Re),update:t.union([t.lazy(()=>p7),t.lazy(()=>c7)]),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),rR=t.object({where:t.lazy(()=>Re),data:t.union([t.lazy(()=>p7),t.lazy(()=>c7)])}).strict(),pR=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>YN),t.lazy(()=>eyt)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),cR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>u7),t.lazy(()=>y7)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),uR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>u7),t.lazy(()=>y7)])}).strict(),yR=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>WT),t.lazy(()=>oyt)])}).strict(),sR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>s7),t.lazy(()=>d7)]),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),dR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>s7),t.lazy(()=>d7)])}).strict(),zR=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>RT),t.lazy(()=>nyt)])}).strict(),mR=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>z7),t.lazy(()=>m7)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),bR=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>z7),t.lazy(()=>m7)])}).strict(),hR=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>Ej),t.lazy(()=>ayt)])}).strict(),IR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>b7),t.lazy(()=>h7)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),gR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>b7),t.lazy(()=>h7)])}).strict(),CR=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>kT),t.lazy(()=>iyt)])}).strict(),AR=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>I7),t.lazy(()=>g7)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),SR=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>I7),t.lazy(()=>g7)])}).strict(),TR=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>qN),t.lazy(()=>lyt)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>uB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),PR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>C7),t.lazy(()=>A7)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),UR=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>C7),t.lazy(()=>A7)])}).strict(),WR=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>FN),t.lazy(()=>ryt)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>yB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),RR=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>S7),t.lazy(()=>T7)]),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),kR=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>S7),t.lazy(()=>T7)])}).strict(),xR=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>xT),t.lazy(()=>pyt)])}).strict(),La=t.object({AND:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional(),OR:t.lazy(()=>La).array().optional(),NOT:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),jR=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>P7),t.lazy(()=>U7)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),MR=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>P7),t.lazy(()=>U7)])}).strict(),ZR=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>cyt)])}).strict(),vR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>W7),t.lazy(()=>R7)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),OR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>W7),t.lazy(()=>R7)])}).strict(),fR=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>UT),t.lazy(()=>uyt)])}).strict(),wR=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>k7),t.lazy(()=>x7)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),NR=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>k7),t.lazy(()=>x7)])}).strict(),BR=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>TT),t.lazy(()=>yyt)])}).strict(),Va=t.object({AND:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional(),OR:t.lazy(()=>Va).array().optional(),NOT:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),approvedById:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),qR=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>j7),t.lazy(()=>M7)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),FR=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>j7),t.lazy(()=>M7)])}).strict(),DR=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>TT),t.lazy(()=>syt)])}).strict(),ER=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),_R=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)])}).strict(),LR=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ZT),t.lazy(()=>dyt)])}).strict(),VR=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>O7),t.lazy(()=>f7)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),HR=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>O7),t.lazy(()=>f7)])}).strict(),QR=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>Qj),t.lazy(()=>zyt)])}).strict(),jO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),MO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),K6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)])}).strict(),Jpt=t.object({update:t.union([t.lazy(()=>y_),t.lazy(()=>s_)]),create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]),where:t.lazy(()=>v).optional()}).strict(),Kpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>y_),t.lazy(()=>s_)])}).strict(),y_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),s_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Fu=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Du=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Wh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),ZO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),vO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),OO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),X6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>vO),t.lazy(()=>OO)])}).strict(),YR=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>w7),t.lazy(()=>N7)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),GR=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>w7),t.lazy(()=>N7)])}).strict(),$R=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>myt)])}).strict(),Xpt=t.object({update:t.union([t.lazy(()=>d_),t.lazy(()=>z_)]),create:t.union([t.lazy(()=>vO),t.lazy(()=>OO)]),where:t.lazy(()=>B).optional()}).strict(),tct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>d_),t.lazy(()=>z_)])}).strict(),d_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),fO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),wO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),t3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>fO),t.lazy(()=>wO)])}).strict(),NO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>L2).optional()}).strict(),BO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),e3=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>NO),t.lazy(()=>BO)])}).strict(),Eu=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>aF),recipeVersion:t.lazy(()=>iF).optional()}).strict(),_u=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Rh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Eu),t.lazy(()=>_u)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lu=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>uF).optional(),equipment:t.lazy(()=>yF).optional()}).strict(),Vu=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),kh=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hu=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),Qu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),xh=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),Yu=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Gu=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jh=t.object({where:t.lazy(()=>ke),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$u=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ju=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mh=t.object({where:t.lazy(()=>xe),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),EO=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ku=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>u5).optional()}).strict(),Xu=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>s5).optional()}).strict(),Zh=t.object({where:t.lazy(()=>ae),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),ty=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>JF),assignedTo:t.lazy(()=>XF)}).strict(),ey=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),vh=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),oy=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>h5)}).strict(),ny=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Oh=t.object({where:t.lazy(()=>Tt),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ay=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Vq),assignedTo:t.lazy(()=>Qq).optional()}).strict(),iy=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ly=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Jq),createdBy:t.lazy(()=>Xq)}).strict(),ry=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),HO=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),py=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nh=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),uy=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>fT).optional(),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT),approvedBy:t.lazy(()=>BT).optional()}).strict(),yy=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional()}).strict(),Bh=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),QO=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),sy=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>BB),RecipeInstruction:t.lazy(()=>qB).optional()}).strict(),dy=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),qh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),YO=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),my=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>bq).optional(),ingredients:t.lazy(()=>Iq).optional()}).strict(),Fh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),by=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hy=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Dh=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),GO=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iy=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gy=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Eh=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),$O=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cy=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ay=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_h=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),JO=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),JS=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),KS=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),KO=t.object({where:t.lazy(()=>Bl),create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)])}).strict(),Sy=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ty=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Lh=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),XO=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),XS=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tT=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tf=t.object({where:t.lazy(()=>ql),create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)])}).strict(),Py=t.object({url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Uy=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Vh=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),ef=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),eT=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),oT=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),of=t.object({where:t.lazy(()=>Fl),create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)])}).strict(),ect=t.object({update:t.union([t.lazy(()=>m_),t.lazy(()=>b_)]),create:t.union([t.lazy(()=>fO),t.lazy(()=>wO)]),where:t.lazy(()=>B).optional()}).strict(),oct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>m_),t.lazy(()=>b_)])}).strict(),m_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),b_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),nct=t.object({update:t.union([t.lazy(()=>h_),t.lazy(()=>I_)]),create:t.union([t.lazy(()=>NO),t.lazy(()=>BO)]),where:t.lazy(()=>$e).optional()}).strict(),act=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>h_),t.lazy(()=>I_)])}).strict(),h_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurant:t.lazy(()=>Q2).optional()}).strict(),I_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),JR=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>B7),t.lazy(()=>q7)]),create:t.union([t.lazy(()=>Eu),t.lazy(()=>_u)])}).strict(),KR=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>B7),t.lazy(()=>q7)])}).strict(),XR=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>byt)])}).strict(),tk=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>F7),t.lazy(()=>D7)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),ek=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>F7),t.lazy(()=>D7)])}).strict(),ok=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>Hj),t.lazy(()=>hyt)])}).strict(),nk=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>E7),t.lazy(()=>_7)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),ak=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>E7),t.lazy(()=>_7)])}).strict(),ik=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>bS),t.lazy(()=>Iyt)])}).strict(),lk=t.object({where:t.lazy(()=>ke),update:t.union([t.lazy(()=>L7),t.lazy(()=>V7)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),rk=t.object({where:t.lazy(()=>ke),data:t.union([t.lazy(()=>L7),t.lazy(()=>V7)])}).strict(),pk=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>$N),t.lazy(()=>gyt)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ck=t.object({where:t.lazy(()=>xe),update:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),uk=t.object({where:t.lazy(()=>xe),data:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)])}).strict(),yk=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>JN),t.lazy(()=>Cyt)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),sk=t.object({where:t.lazy(()=>ae),update:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),dk=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)])}).strict(),zk=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>QN),t.lazy(()=>Ayt)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>jS),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),mk=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>$7),t.lazy(()=>J7)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),bk=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>$7),t.lazy(()=>J7)])}).strict(),hk=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>vT),t.lazy(()=>Syt)])}).strict(),Ik=t.object({where:t.lazy(()=>Tt),update:t.union([t.lazy(()=>K7),t.lazy(()=>X7)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),gk=t.object({where:t.lazy(()=>Tt),data:t.union([t.lazy(()=>K7),t.lazy(()=>X7)])}).strict(),Ck=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Jj),t.lazy(()=>Tyt)])}).strict(),kl=t.object({AND:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),OR:t.lazy(()=>kl).array().optional(),NOT:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ak=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)]),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),Sk=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)])}).strict(),Tk=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>kT),t.lazy(()=>Pyt)])}).strict(),Pk=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Uk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)])}).strict(),Wk=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>xT),t.lazy(()=>Uyt)])}).strict(),Rk=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),kk=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)])}).strict(),xk=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>NN),t.lazy(()=>Wyt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),jk=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),Mk=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)])}).strict(),Zk=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>TT),t.lazy(()=>Ryt)])}).strict(),vk=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)]),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),Ok=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)])}).strict(),fk=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>PT),t.lazy(()=>kyt)])}).strict(),wk=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>uJ),t.lazy(()=>yJ)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Nk=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>uJ),t.lazy(()=>yJ)])}).strict(),Bk=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>Dj),t.lazy(()=>xyt)])}).strict(),xl=t.object({AND:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),OR:t.lazy(()=>xl).array().optional(),NOT:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),qk=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>sJ),t.lazy(()=>dJ)]),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),Fk=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>sJ),t.lazy(()=>dJ)])}).strict(),Dk=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>xN),t.lazy(()=>jyt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ek=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),_k=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)])}).strict(),Lk=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>jN),t.lazy(()=>Myt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Vk=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Hk=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)])}).strict(),Qk=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>MN),t.lazy(()=>Zyt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),o3=t.object({update:t.union([t.lazy(()=>nf),t.lazy(()=>af)]),create:t.union([t.lazy(()=>JS),t.lazy(()=>KS)]),where:t.lazy(()=>Be).optional()}).strict(),n3=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>nf),t.lazy(()=>af)])}).strict(),nf=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional()}).strict(),af=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>s)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>s)]).optional()}).strict(),Yk=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Gk=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)])}).strict(),$k=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>RN),t.lazy(()=>vyt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),a3=t.object({update:t.union([t.lazy(()=>lf),t.lazy(()=>rf)]),create:t.union([t.lazy(()=>XS),t.lazy(()=>tT)]),where:t.lazy(()=>qe).optional()}).strict(),i3=t.object({where:t.lazy(()=>qe).optional(),data:t.union([t.lazy(()=>lf),t.lazy(()=>rf)])}).strict(),lf=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jk=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),Kk=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)])}).strict(),Xk=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>kN),t.lazy(()=>Oyt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>KN),t.lazy(()=>se)]).optional(),stepNumber:t.union([t.lazy(()=>nt),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),l3=t.object({update:t.union([t.lazy(()=>pf),t.lazy(()=>cf)]),create:t.union([t.lazy(()=>eT),t.lazy(()=>oT)]),where:t.lazy(()=>Fe).optional()}).strict(),r3=t.object({where:t.lazy(()=>Fe).optional(),data:t.union([t.lazy(()=>pf),t.lazy(()=>cf)])}).strict(),pf=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),cf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Wy=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>nF),recipeVersion:t.lazy(()=>iF).optional()}).strict(),Ry=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Hh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),uf=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ky=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),lastUpdatedBy:t.lazy(()=>vS).optional(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),xy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),Qh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),yf=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),jy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>X2)}).strict(),My=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Yh=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),sf=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zy=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>qF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),vy=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>EF).optional(),supplierPriceHistory:t.lazy(()=>LF).optional()}).strict(),Gh=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),Oy=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Mq),recordedBy:t.lazy(()=>vq)}).strict(),fy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$h=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),df=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),wy=t.object({allergen:t.lazy(()=>Z2)}).strict(),Ny=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),Jh=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),zf=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),By=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>R2)}).strict(),qy=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Kh=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),mf=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bf=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional()}).strict(),hf=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>bq).optional(),recipes:t.lazy(()=>hq).optional()}).strict(),p3=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>bf),t.lazy(()=>hf)])}).strict(),tx=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)]),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),ex=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)])}).strict(),ox=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>fyt)])}).strict(),nx=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),ax=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)])}).strict(),ix=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>MT),t.lazy(()=>wyt)])}).strict(),lx=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rx=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)])}).strict(),px=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>$j),t.lazy(()=>Nyt)])}).strict(),jl=t.object({AND:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),OR:t.lazy(()=>jl).array().optional(),NOT:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),orderId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional()}).strict(),cx=t.object({where:t.lazy(()=>Gt),update:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)]),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),ux=t.object({where:t.lazy(()=>Gt),data:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)])}).strict(),yx=t.object({where:t.lazy(()=>Bp),data:t.union([t.lazy(()=>VN),t.lazy(()=>Byt)])}).strict(),Bp=t.object({AND:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),OR:t.lazy(()=>Bp).array().optional(),NOT:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),sx=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)]),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),dx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)])}).strict(),zx=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>RT),t.lazy(()=>qyt)])}).strict(),mx=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)]),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),bx=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)])}).strict(),hx=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>_j),t.lazy(()=>Fyt)])}).strict(),Ix=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)]),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),gx=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)])}).strict(),Cx=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>Fj),t.lazy(()=>Dyt)])}).strict(),Ml=t.object({AND:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),OR:t.lazy(()=>Ml).array().optional(),NOT:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Jt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ict=t.object({update:t.union([t.lazy(()=>g_),t.lazy(()=>C_)]),create:t.union([t.lazy(()=>bf),t.lazy(()=>hf)]),where:t.lazy(()=>we).optional()}).strict(),lct=t.object({where:t.lazy(()=>we).optional(),data:t.union([t.lazy(()=>g_),t.lazy(()=>C_)])}).strict(),g_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>gq).optional(),recipes:t.lazy(()=>Cq).optional()}).strict(),C_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Sq).optional(),recipes:t.lazy(()=>Tq).optional()}).strict(),If=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),gf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),c3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)])}).strict(),Cf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),Af=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),u3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)])}).strict(),Sf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>OT),instructions:t.lazy(()=>wT).optional(),createdBy:t.lazy(()=>NT),approvedBy:t.lazy(()=>BT).optional()}).strict(),Tf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>FT).optional()}).strict(),y3=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Sf),t.lazy(()=>Tf)])}).strict(),rct=t.object({update:t.union([t.lazy(()=>A_),t.lazy(()=>S_)]),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]),where:t.lazy(()=>O).optional()}).strict(),pct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>A_),t.lazy(()=>S_)])}).strict(),A_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),S_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),cct=t.object({update:t.union([t.lazy(()=>T_),t.lazy(()=>P_)]),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]),where:t.lazy(()=>Mt).optional()}).strict(),uct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>T_),t.lazy(()=>P_)])}).strict(),T_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),P_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),yct=t.object({update:t.union([t.lazy(()=>U_),t.lazy(()=>W_)]),create:t.union([t.lazy(()=>Sf),t.lazy(()=>Tf)]),where:t.lazy(()=>ie).optional()}).strict(),sct=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>U_),t.lazy(()=>W_)])}).strict(),U_=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DT).optional(),instructions:t.lazy(()=>_T).optional(),createdBy:t.lazy(()=>LT).optional(),approvedBy:t.lazy(()=>VT).optional()}).strict(),W_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>QT).optional()}).strict(),Pf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Uf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),s3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Pf),t.lazy(()=>Uf)])}).strict(),Wf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>OT),ingredients:t.lazy(()=>fT).optional(),createdBy:t.lazy(()=>NT),approvedBy:t.lazy(()=>BT).optional()}).strict(),Rf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qT).optional()}).strict(),d3=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)])}).strict(),Fy=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>NB),equipment:t.lazy(()=>BB)}).strict(),Dy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),Xh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),kf=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),dct=t.object({update:t.union([t.lazy(()=>R_),t.lazy(()=>k_)]),create:t.union([t.lazy(()=>Pf),t.lazy(()=>Uf)]),where:t.lazy(()=>O).optional()}).strict(),zct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>R_),t.lazy(()=>k_)])}).strict(),R_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),k_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),mct=t.object({update:t.union([t.lazy(()=>x_),t.lazy(()=>j_)]),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]),where:t.lazy(()=>ie).optional()}).strict(),bct=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>x_),t.lazy(()=>j_)])}).strict(),x_=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DT).optional(),ingredients:t.lazy(()=>ET).optional(),createdBy:t.lazy(()=>LT).optional(),approvedBy:t.lazy(()=>VT).optional()}).strict(),j_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HT).optional()}).strict(),Ax=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)]),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),Sx=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)])}).strict(),Tx=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>PT),t.lazy(()=>Eyt)])}).strict(),xf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SM),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),jf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>kM).optional()}).strict(),z3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)])}).strict(),Mf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),orderItems:t.lazy(()=>kI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),Zf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),orderItems:t.lazy(()=>wI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),m3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)])}).strict(),vf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Of=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),b3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)])}).strict(),Ey=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>hF),createdBy:t.lazy(()=>gF)}).strict(),_y=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),tI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Ey),t.lazy(()=>_y)])}).strict(),ff=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ly=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Kq).optional(),createdBy:t.lazy(()=>Xq)}).strict(),Vy=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eI=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),wf=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hy=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>G2)}).strict(),Qy=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),oI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Nf=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),hct=t.object({update:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)]),create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]),where:t.lazy(()=>Dt).optional()}).strict(),Ict=t.object({where:t.lazy(()=>Dt).optional(),data:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)])}).strict(),M_=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xM).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),Z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>OM).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict(),gct=t.object({update:t.union([t.lazy(()=>v_),t.lazy(()=>O_)]),create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]),where:t.lazy(()=>Mt).optional()}).strict(),Cct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>v_),t.lazy(()=>O_)])}).strict(),v_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),O_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),Act=t.object({update:t.union([t.lazy(()=>f_),t.lazy(()=>w_)]),create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]),where:t.lazy(()=>v).optional()}).strict(),Sct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>f_),t.lazy(()=>w_)])}).strict(),f_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),w_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Px=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)]),create:t.union([t.lazy(()=>Ey),t.lazy(()=>_y)])}).strict(),Ux=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)])}).strict(),Wx=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ZT),t.lazy(()=>_yt)])}).strict(),Rx=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)]),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),kx=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)])}).strict(),xx=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>xT),t.lazy(()=>Lyt)])}).strict(),jx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>EJ),t.lazy(()=>_J)]),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Mx=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>EJ),t.lazy(()=>_J)])}).strict(),Zx=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>Yj),t.lazy(()=>Vyt)])}).strict(),Zl=t.object({AND:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),OR:t.lazy(()=>Zl).array().optional(),NOT:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Bf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SM),items:t.lazy(()=>TM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),qf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WM).optional(),stockCounts:t.lazy(()=>kM).optional()}).strict(),h3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)])}).strict(),Ff=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),ingredient:t.lazy(()=>ZS),lastUpdatedBy:t.lazy(()=>vS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),Df=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>BS).optional(),stockCounts:t.lazy(()=>qS).optional()}).strict(),I3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)])}).strict(),Ef=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),_f=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),g3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Ef),t.lazy(()=>_f)])}).strict(),Tct=t.object({update:t.union([t.lazy(()=>N_),t.lazy(()=>B_)]),create:t.union([t.lazy(()=>Bf),t.lazy(()=>qf)]),where:t.lazy(()=>Dt).optional()}).strict(),Pct=t.object({where:t.lazy(()=>Dt).optional(),data:t.union([t.lazy(()=>N_),t.lazy(()=>B_)])}).strict(),N_=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xM).optional(),items:t.lazy(()=>jM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),B_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>vM).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict(),Uct=t.object({update:t.union([t.lazy(()=>q_),t.lazy(()=>F_)]),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]),where:t.lazy(()=>le).optional()}).strict(),Wct=t.object({where:t.lazy(()=>le).optional(),data:t.union([t.lazy(()=>q_),t.lazy(()=>F_)])}).strict(),q_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),ingredient:t.lazy(()=>DS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),F_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),Rct=t.object({update:t.union([t.lazy(()=>D_),t.lazy(()=>E_)]),create:t.union([t.lazy(()=>Ef),t.lazy(()=>_f)]),where:t.lazy(()=>v).optional()}).strict(),kct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>D_),t.lazy(()=>E_)])}).strict(),D_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),E_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Lf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>SM),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional()}).strict(),Vf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Bt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>WM).optional(),transactions:t.lazy(()=>RM).optional()}).strict(),C3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)])}).strict(),Hf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional()}).strict(),Qf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional()}).strict(),A3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)])}).strict(),Yy=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>$2)}).strict(),Gy=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),nI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),Yf=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),xct=t.object({update:t.union([t.lazy(()=>__),t.lazy(()=>L_)]),create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]),where:t.lazy(()=>Dt).optional()}).strict(),jct=t.object({where:t.lazy(()=>Dt).optional(),data:t.union([t.lazy(()=>__),t.lazy(()=>L_)])}).strict(),__=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xM).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional()}).strict(),L_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Bt),t.lazy(()=>lp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>vM).optional(),transactions:t.lazy(()=>OM).optional()}).strict(),Mct=t.object({update:t.union([t.lazy(()=>V_),t.lazy(()=>H_)]),create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]),where:t.lazy(()=>v).optional()}).strict(),Zct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>V_),t.lazy(()=>H_)])}).strict(),V_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional()}).strict(),H_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional()}).strict(),vx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)]),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),Ox=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)])}).strict(),fx=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>Yj),t.lazy(()=>Hyt)])}).strict(),Gf=t.object({status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>TF),createdBy:t.lazy(()=>PF)}).strict(),$f=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),S3=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)])}).strict(),Jf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>MS),ingredient:t.lazy(()=>ZS),lastUpdatedBy:t.lazy(()=>vS).optional(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional()}).strict(),Kf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>NS).optional(),withdrawals:t.lazy(()=>BS).optional()}).strict(),T3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),vct=t.object({update:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)]),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]),where:t.lazy(()=>Je).optional()}).strict(),Oct=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)])}).strict(),Q_=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>RF).optional(),createdBy:t.lazy(()=>kF).optional()}).strict(),Y_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),fct=t.object({update:t.union([t.lazy(()=>G_),t.lazy(()=>$_)]),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),where:t.lazy(()=>le).optional()}).strict(),wct=t.object({where:t.lazy(()=>le).optional(),data:t.union([t.lazy(()=>G_),t.lazy(()=>$_)])}).strict(),G_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),ingredient:t.lazy(()=>DS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),transactions:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional()}).strict(),$_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional()}).strict(),Xf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional()}).strict(),tw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional()}).strict(),P3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)])}).strict(),Nct=t.object({update:t.union([t.lazy(()=>J_),t.lazy(()=>K_)]),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]),where:t.lazy(()=>O).optional()}).strict(),Bct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>J_),t.lazy(()=>K_)])}).strict(),J_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional()}).strict(),K_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional()}).strict(),ew=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),recipes:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),ow=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),recipes:t.lazy(()=>lr).optional(),menus:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),U3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)])}).strict(),nw=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>FF).optional(),supplierPriceHistory:t.lazy(()=>DF).optional()}).strict(),aw=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>_F).optional(),supplierPriceHistory:t.lazy(()=>LF).optional()}).strict(),W3=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)])}).strict(),$y=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>t5)}).strict(),Jy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),aI=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),iw=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),qct=t.object({update:t.union([t.lazy(()=>X_),t.lazy(()=>tL)]),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]),where:t.lazy(()=>B).optional()}).strict(),Fct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>X_),t.lazy(()=>tL)])}).strict(),X_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),tL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),Dct=t.object({update:t.union([t.lazy(()=>eL),t.lazy(()=>oL)]),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]),where:t.lazy(()=>ve).optional()}).strict(),Ect=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>eL),t.lazy(()=>oL)])}).strict(),eL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HF).optional(),supplierPriceHistory:t.lazy(()=>QF).optional()}).strict(),oL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>GF).optional(),supplierPriceHistory:t.lazy(()=>$F).optional()}).strict(),wx=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)]),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Nx=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)])}).strict(),Bx=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>$j),t.lazy(()=>Qyt)])}).strict(),lw=t.object({status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>MF),vendor:t.lazy(()=>ZF)}).strict(),rw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R3=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)])}).strict(),pw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),vendors:t.lazy(()=>xI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),cw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),vendors:t.lazy(()=>NI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),k3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)])}).strict(),_ct=t.object({update:t.union([t.lazy(()=>nL),t.lazy(()=>aL)]),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]),where:t.lazy(()=>Ke).optional()}).strict(),Lct=t.object({where:t.lazy(()=>Ke).optional(),data:t.union([t.lazy(()=>nL),t.lazy(()=>aL)])}).strict(),nL=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),vendor:t.lazy(()=>wF).optional()}).strict(),aL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vct=t.object({update:t.union([t.lazy(()=>iL),t.lazy(()=>lL)]),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]),where:t.lazy(()=>Mt).optional()}).strict(),Hct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>iL),t.lazy(()=>lL)])}).strict(),iL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),lL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),Ky=t.object({status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>MF),items:t.lazy(()=>vF).optional()}).strict(),Xy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>OF).optional()}).strict(),iI=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),uw=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ts=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>WI).optional(),inventoryItems:t.lazy(()=>RI).optional(),orderItems:t.lazy(()=>kI).optional(),WasteRecord:t.lazy(()=>jI).optional(),IngredientAllergen:t.lazy(()=>MI).optional(),SupplierPriceHistory:t.lazy(()=>ZI).optional(),DietaryRestriction:t.lazy(()=>vI).optional()}).strict(),es=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>OI).optional(),inventoryItems:t.lazy(()=>fI).optional(),orderItems:t.lazy(()=>wI).optional(),WasteRecord:t.lazy(()=>BI).optional(),IngredientAllergen:t.lazy(()=>qI).optional(),SupplierPriceHistory:t.lazy(()=>FI).optional()}).strict(),lI=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),os=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>k2)}).strict(),ns=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),yw=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),qx=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)]),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),Fx=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)])}).strict(),Dx=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>Gj),t.lazy(()=>Yyt)])}).strict(),Ex=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),_x=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)])}).strict(),Lx=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>Vj),t.lazy(()=>Gyt)])}).strict(),Vx=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)]),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),Hx=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)])}).strict(),Qx=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>Fj),t.lazy(()=>$yt)])}).strict(),sw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),dw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),x3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)])}).strict(),as=t.object({taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),is=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pI=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),zw=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qct=t.object({update:t.union([t.lazy(()=>rL),t.lazy(()=>pL)]),create:t.union([t.lazy(()=>sw),t.lazy(()=>dw)]),where:t.lazy(()=>v).optional()}).strict(),Yct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>rL),t.lazy(()=>pL)])}).strict(),rL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),pL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Yx=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>tK),t.lazy(()=>eK)]),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),Gx=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>tK),t.lazy(()=>eK)])}).strict(),$x=t.object({where:t.lazy(()=>qp),data:t.union([t.lazy(()=>BN),t.lazy(()=>Jyt)])}).strict(),qp=t.object({AND:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),OR:t.lazy(()=>qp).array().optional(),NOT:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number()]).optional(),taskType:t.union([t.lazy(()=>cB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ls=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),rs=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),cI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),ps=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),recipe:t.lazy(()=>KF),assignedTo:t.lazy(()=>XF)}).strict(),cs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),uI=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),mw=t.object({data:t.union([t.lazy(()=>bQ),t.lazy(()=>bQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Jx=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>oK),t.lazy(()=>nK)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Kx=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>oK),t.lazy(()=>nK)])}).strict(),Xx=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>Kyt)])}).strict(),tj=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>aK),t.lazy(()=>iK)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),ej=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>aK),t.lazy(()=>iK)])}).strict(),oj=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>vT),t.lazy(()=>Xyt)])}).strict(),bw=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>c5).optional()}).strict(),hw=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>y5).optional()}).strict(),j3=t.object({where:t.lazy(()=>ae),create:t.union([t.lazy(()=>bw),t.lazy(()=>hw)])}).strict(),Iw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),gw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),M3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)])}).strict(),Cw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),passwordResets:t.lazy(()=>Ka).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Aw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),passwordResets:t.lazy(()=>bi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),Z3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)])}).strict(),Gct=t.object({update:t.union([t.lazy(()=>cL),t.lazy(()=>uL)]),create:t.union([t.lazy(()=>bw),t.lazy(()=>hw)]),where:t.lazy(()=>to).optional()}).strict(),$ct=t.object({where:t.lazy(()=>to).optional(),data:t.union([t.lazy(()=>cL),t.lazy(()=>uL)])}).strict(),cL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>d5).optional()}).strict(),uL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>m5).optional()}).strict(),Jct=t.object({update:t.union([t.lazy(()=>yL),t.lazy(()=>sL)]),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]),where:t.lazy(()=>O).optional()}).strict(),Kct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>yL),t.lazy(()=>sL)])}).strict(),yL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),sL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Xct=t.object({update:t.union([t.lazy(()=>dL),t.lazy(()=>zL)]),create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]),where:t.lazy(()=>v).optional()}).strict(),tut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>dL),t.lazy(()=>zL)])}).strict(),dL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),zL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Sw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ha).optional(),restaurant:t.lazy(()=>Qa).optional(),shifts:t.lazy(()=>Ya).optional(),prepItems:t.lazy(()=>Ga).optional(),inventoryUpdates:t.lazy(()=>$a).optional(),sessions:t.lazy(()=>Ja).optional(),leftoverItem:t.lazy(()=>Xa).optional(),wasteRecord:t.lazy(()=>ti).optional(),productionPlan:t.lazy(()=>ei).optional(),productionPlanItem:t.lazy(()=>oi).optional(),availability:t.lazy(()=>ni).optional(),schedulingConstraint:t.lazy(()=>ai).optional(),inventoryWithdrawal:t.lazy(()=>ii).optional(),checklistComplete:t.lazy(()=>li).optional(),customerFeedback:t.lazy(()=>ri).optional(),recipeVersionsCreated:t.lazy(()=>pi).optional(),recipeVersionsApproved:t.lazy(()=>ci).optional(),InventoryTransaction:t.lazy(()=>ui).optional(),StockCount:t.lazy(()=>yi).optional()}).strict(),Tw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>si).optional(),prepItems:t.lazy(()=>di).optional(),inventoryUpdates:t.lazy(()=>zi).optional(),sessions:t.lazy(()=>mi).optional(),leftoverItem:t.lazy(()=>hi).optional(),wasteRecord:t.lazy(()=>Ii).optional(),productionPlan:t.lazy(()=>gi).optional(),productionPlanItem:t.lazy(()=>Ci).optional(),availability:t.lazy(()=>Ai).optional(),schedulingConstraint:t.lazy(()=>Si).optional(),inventoryWithdrawal:t.lazy(()=>Ti).optional(),checklistComplete:t.lazy(()=>Pi).optional(),customerFeedback:t.lazy(()=>Ui).optional(),recipeVersionsCreated:t.lazy(()=>Wi).optional(),recipeVersionsApproved:t.lazy(()=>Ri).optional(),InventoryTransaction:t.lazy(()=>ki).optional(),StockCount:t.lazy(()=>xi).optional()}).strict(),v3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)])}).strict(),eut=t.object({update:t.union([t.lazy(()=>mL),t.lazy(()=>bL)]),create:t.union([t.lazy(()=>Sw),t.lazy(()=>Tw)]),where:t.lazy(()=>v).optional()}).strict(),out=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>mL),t.lazy(()=>bL)])}).strict(),mL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),bL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),Pw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>_l).optional(),cookbooks:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Ql).optional(),salesTransactions:t.lazy(()=>Gl).optional(),leftoverItem:t.lazy(()=>$l).optional(),wasteRecord:t.lazy(()=>Jl).optional(),productionPlan:t.lazy(()=>Kl).optional(),equipment:t.lazy(()=>Xl).optional(),qualityChecklist:t.lazy(()=>tr).optional(),qustomerFeedback:t.lazy(()=>er).optional()}).strict(),Uw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>or).optional(),cookbooks:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ar).optional(),orders:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>lr).optional(),salesTransactions:t.lazy(()=>pr).optional(),leftoverItem:t.lazy(()=>cr).optional(),wasteRecord:t.lazy(()=>ur).optional(),productionPlan:t.lazy(()=>yr).optional(),equipment:t.lazy(()=>sr).optional(),qualityChecklist:t.lazy(()=>dr).optional(),qustomerFeedback:t.lazy(()=>zr).optional()}).strict(),O3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Uw)])}).strict(),us=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),ys=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),yI=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),Ww=t.object({data:t.union([t.lazy(()=>hQ),t.lazy(()=>hQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ss=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>s2).optional()}).strict(),ds=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>d2).optional()}).strict(),sI=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),Rw=t.object({data:t.union([t.lazy(()=>IQ),t.lazy(()=>IQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),nut=t.object({update:t.union([t.lazy(()=>hL),t.lazy(()=>IL)]),create:t.union([t.lazy(()=>Pw),t.lazy(()=>Uw)]),where:t.lazy(()=>B).optional()}).strict(),aut=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>hL),t.lazy(()=>IL)])}).strict(),hL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>mr).optional(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),IL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),nj=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>lK),t.lazy(()=>rK)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),aj=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>lK),t.lazy(()=>rK)])}).strict(),ij=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>bS),t.lazy(()=>tst)])}).strict(),lj=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>pK),t.lazy(()=>cK)]),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),rj=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>pK),t.lazy(()=>cK)])}).strict(),pj=t.object({where:t.lazy(()=>Fp),data:t.union([t.lazy(()=>ZN),t.lazy(()=>est)])}).strict(),Fp=t.object({AND:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),OR:t.lazy(()=>Fp).array().optional(),NOT:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number()]).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),kw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),nutritionalInfo:t.lazy(()=>Hz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),xw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),nutritionalInfo:t.lazy(()=>tm).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),f3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)])}).strict(),jw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Mw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),w3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)])}).strict(),iut=t.object({update:t.union([t.lazy(()=>gL),t.lazy(()=>CL)]),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]),where:t.lazy(()=>Pt).optional()}).strict(),lut=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>gL),t.lazy(()=>CL)])}).strict(),gL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),CL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),rut=t.object({update:t.union([t.lazy(()=>AL),t.lazy(()=>SL)]),create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]),where:t.lazy(()=>O).optional()}).strict(),put=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>AL),t.lazy(()=>SL)])}).strict(),AL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),SL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Zw=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nD),MenuCategory:t.lazy(()=>iD).optional()}).strict(),vw=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>rD).optional()}).strict(),N3=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)])}).strict(),Ow=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>y2)}).strict(),fw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B3=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)])}).strict(),zs=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),ms=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),dI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),bs=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>I5)}).strict(),hs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),zI=t.object({where:t.lazy(()=>Tt),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),ww=t.object({data:t.union([t.lazy(()=>gQ),t.lazy(()=>gQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),nT=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aT=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nw=t.object({where:t.lazy(()=>Dl),create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)])}).strict(),Is=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gs=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mI=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),Bw=t.object({data:t.union([t.lazy(()=>CQ),t.lazy(()=>CQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cs=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>r2)}).strict(),As=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bI=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),qw=t.object({data:t.union([t.lazy(()=>AQ),t.lazy(()=>AQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Uq),recordedBy:t.lazy(()=>Rq)}).strict(),Ts=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hI=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Fw=t.object({data:t.union([t.lazy(()=>SQ),t.lazy(()=>SQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ps=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>rq),respondedBy:t.lazy(()=>cq).optional()}).strict(),Us=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),II=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),Dw=t.object({data:t.union([t.lazy(()=>TQ),t.lazy(()=>TQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ws=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>zq).optional(),ingredients:t.lazy(()=>mq).optional()}).strict(),Rs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>hq).optional(),ingredients:t.lazy(()=>Iq).optional()}).strict(),gI=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),cut=t.object({update:t.union([t.lazy(()=>TL),t.lazy(()=>PL)]),create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]),where:t.lazy(()=>Oe).optional()}).strict(),uut=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>TL),t.lazy(()=>PL)])}).strict(),TL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pD).optional(),MenuCategory:t.lazy(()=>uD).optional()}).strict(),PL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>sD).optional()}).strict(),yut=t.object({update:t.union([t.lazy(()=>UL),t.lazy(()=>WL)]),create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]),where:t.lazy(()=>fe).optional()}).strict(),sut=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>UL),t.lazy(()=>WL)])}).strict(),UL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>z2).optional()}).strict(),WL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>uK),t.lazy(()=>yK)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),uj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>uK),t.lazy(()=>yK)])}).strict(),yj=t.object({where:t.lazy(()=>re),data:t.union([t.lazy(()=>AI),t.lazy(()=>ost)])}).strict(),sj=t.object({where:t.lazy(()=>Tt),update:t.union([t.lazy(()=>sK),t.lazy(()=>dK)]),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),dj=t.object({where:t.lazy(()=>Tt),data:t.union([t.lazy(()=>sK),t.lazy(()=>dK)])}).strict(),zj=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Jj),t.lazy(()=>nst)])}).strict(),q3=t.object({update:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)]),create:t.union([t.lazy(()=>nT),t.lazy(()=>aT)]),where:t.lazy(()=>De).optional()}).strict(),F3=t.object({where:t.lazy(()=>De).optional(),data:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)])}).strict(),Ew=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_w=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mj=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>zK),t.lazy(()=>mK)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),bj=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>zK),t.lazy(()=>mK)])}).strict(),hj=t.object({where:t.lazy(()=>Dp),data:t.union([t.lazy(()=>DN),t.lazy(()=>ast)])}).strict(),Dp=t.object({AND:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),OR:t.lazy(()=>Dp).array().optional(),NOT:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ij=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>bK),t.lazy(()=>hK)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),gj=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>bK),t.lazy(()=>hK)])}).strict(),Cj=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>ist)])}).strict(),Aj=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>IK),t.lazy(()=>gK)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Sj=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>IK),t.lazy(()=>gK)])}).strict(),Tj=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>WT),t.lazy(()=>lst)])}).strict(),Pj=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>CK),t.lazy(()=>AK)]),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),Uj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>CK),t.lazy(()=>AK)])}).strict(),Wj=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>UT),t.lazy(()=>rst)])}).strict(),Rj=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>SK),t.lazy(()=>TK)]),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),kj=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>SK),t.lazy(()=>TK)])}).strict(),xj=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>Dj),t.lazy(()=>pst)])}).strict(),Lw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Ez),category:t.lazy(()=>_z).optional(),recipes:t.lazy(()=>Lz).optional(),menuItemRecipes:t.lazy(()=>Vz).optional(),recommendations:t.lazy(()=>Qz).optional(),salesTransactions:t.lazy(()=>Yz).optional(),leftoverItems:t.lazy(()=>Gz).optional(),feedback:t.lazy(()=>$z).optional(),dietaryRestrictions:t.lazy(()=>Jz).optional()}).strict(),Vw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>Kz).optional(),menuItemRecipes:t.lazy(()=>Xz).optional(),recommendations:t.lazy(()=>em).optional(),salesTransactions:t.lazy(()=>om).optional(),leftoverItems:t.lazy(()=>nm).optional(),feedback:t.lazy(()=>am).optional(),dietaryRestrictions:t.lazy(()=>im).optional()}).strict(),D3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)])}).strict(),dut=t.object({update:t.union([t.lazy(()=>RL),t.lazy(()=>kL)]),create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]),where:t.lazy(()=>Pt).optional()}).strict(),zut=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>RL),t.lazy(()=>kL)])}).strict(),RL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),kL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),Hw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Qw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),E3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Hw),t.lazy(()=>Qw)])}).strict(),mut=t.object({update:t.union([t.lazy(()=>xL),t.lazy(()=>jL)]),create:t.union([t.lazy(()=>Hw),t.lazy(()=>Qw)]),where:t.lazy(()=>O).optional()}).strict(),but=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>xL),t.lazy(()=>jL)])}).strict(),xL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),jL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Yw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>so).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipment:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Gw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipment:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),_3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Yw),t.lazy(()=>Gw)])}).strict(),hut=t.object({update:t.union([t.lazy(()=>ML),t.lazy(()=>ZL)]),create:t.union([t.lazy(()=>Yw),t.lazy(()=>Gw)]),where:t.lazy(()=>O).optional()}).strict(),Iut=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>ML),t.lazy(()=>ZL)])}).strict(),ML=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ZL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),HV=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int()}).strict(),L3=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),V3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),gut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),QV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),YV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),H3=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>lF).optional(),ingredient:t.lazy(()=>rF).optional()}).strict(),Q3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y3=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>dF).optional(),equipment:t.lazy(()=>mF).optional()}).strict(),G3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>bF).optional()}).strict(),Aut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),GV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),$V=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>pe),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$3=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>FB).optional(),RecipeInstruction:t.lazy(()=>EB).optional()}).strict(),J3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Sut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),K3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Tut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JV=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Vt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KV=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),t8=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>A2).optional()}).strict(),e8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>S2).optional()}).strict(),Put=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Vt),t.lazy(()=>Lm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>aq).optional(),items:t.lazy(()=>iq).optional()}).strict(),n8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>lq).optional()}).strict(),Uut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XV=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),a8=t.object({status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>U2).optional()}).strict(),i8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tH=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Lt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Vm),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l8=t.object({status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>W2).optional()}).strict(),r8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Fz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Dz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eH=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),p8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional()}).strict(),c8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional()}).strict(),kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),u8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),y8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),s8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),vendors:t.lazy(()=>LI).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional()}).strict(),d8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),vendors:t.lazy(()=>KI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),z8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),m8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Mut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),oH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),b8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Gq).optional(),assignedTo:t.lazy(()=>$q).optional()}).strict(),h8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nH=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),I8=t.object({ingredient:t.lazy(()=>v2).optional()}).strict(),g8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),aH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),iH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Sr).optional(),leftoverItem:t.lazy(()=>Tr).optional(),wasteRecord:t.lazy(()=>Pr).optional(),productionPlan:t.lazy(()=>Ur).optional(),equipment:t.lazy(()=>Wr).optional(),qualityChecklist:t.lazy(()=>Rr).optional(),qustomerFeedback:t.lazy(()=>kr).optional()}).strict(),A8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>xr).optional(),cookbooks:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>vr).optional(),menus:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>fr).optional(),leftoverItem:t.lazy(()=>wr).optional(),wasteRecord:t.lazy(()=>Nr).optional(),productionPlan:t.lazy(()=>Br).optional(),equipment:t.lazy(()=>qr).optional(),qualityChecklist:t.lazy(()=>Fr).optional(),qustomerFeedback:t.lazy(()=>Dr).optional()}).strict(),Out=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),S8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Mi).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),T8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),rH=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),pH=t.object({id:t.number().int().optional(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),P8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),ingredient:t.lazy(()=>DS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),transactions:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),U8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),W8=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>AF).optional(),createdBy:t.lazy(()=>SF).optional()}).strict(),R8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k8=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>kF).optional(),items:t.lazy(()=>xF).optional()}).strict(),x8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>jF).optional()}).strict(),But=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),cH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),yH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),dH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mH=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hH=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>qt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CH=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),j8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>ji).optional(),shifts:t.lazy(()=>Zi).optional(),prepItems:t.lazy(()=>vi).optional(),inventoryUpdates:t.lazy(()=>Oi).optional(),sessions:t.lazy(()=>fi).optional(),passwordResets:t.lazy(()=>wi).optional(),leftoverItem:t.lazy(()=>Ni).optional(),wasteRecord:t.lazy(()=>Bi).optional(),productionPlan:t.lazy(()=>qi).optional(),productionPlanItem:t.lazy(()=>Fi).optional(),availability:t.lazy(()=>Di).optional(),schedulingConstraint:t.lazy(()=>Ei).optional(),inventoryWithdrawal:t.lazy(()=>_i).optional(),checklistComplete:t.lazy(()=>Li).optional(),customerFeedback:t.lazy(()=>Vi).optional(),recipeVersionsCreated:t.lazy(()=>Hi).optional(),recipeVersionsApproved:t.lazy(()=>Qi).optional(),InventoryTransaction:t.lazy(()=>Yi).optional(),StockCount:t.lazy(()=>Gi).optional()}).strict(),M8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>$i).optional(),prepItems:t.lazy(()=>Ji).optional(),inventoryUpdates:t.lazy(()=>Ki).optional(),sessions:t.lazy(()=>Xi).optional(),passwordResets:t.lazy(()=>tl).optional(),leftoverItem:t.lazy(()=>el).optional(),wasteRecord:t.lazy(()=>ol).optional(),productionPlan:t.lazy(()=>nl).optional(),productionPlanItem:t.lazy(()=>al).optional(),availability:t.lazy(()=>il).optional(),schedulingConstraint:t.lazy(()=>ll).optional(),inventoryWithdrawal:t.lazy(()=>rl).optional(),checklistComplete:t.lazy(()=>pl).optional(),customerFeedback:t.lazy(()=>cl).optional(),recipeVersionsCreated:t.lazy(()=>ul).optional(),recipeVersionsApproved:t.lazy(()=>yl).optional(),InventoryTransaction:t.lazy(()=>sl).optional(),StockCount:t.lazy(()=>dl).optional()}).strict(),qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>s)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>H2).optional()}).strict(),v8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>Y2).optional()}).strict(),Fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),O8=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>wF).optional(),items:t.lazy(()=>NF).optional()}).strict(),f8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>BF).optional()}).strict(),Dut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),N8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Eut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),B8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>cD).optional(),MenuCategory:t.lazy(()=>uD).optional()}).strict(),q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>yD).optional(),MenuCategory:t.lazy(()=>sD).optional()}).strict(),_ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F8=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>u2).optional()}).strict(),D8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>xq).optional(),recordedBy:t.lazy(()=>jq).optional()}).strict(),_8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>fq).optional(),recordedBy:t.lazy(()=>wq).optional()}).strict(),V8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>Eq).optional(),items:t.lazy(()=>_q).optional()}).strict(),Q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Lq).optional()}).strict(),Qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>vB).optional(),maintenanceLogs:t.lazy(()=>OB).optional()}).strict(),G8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>fB).optional(),maintenanceLogs:t.lazy(()=>wB).optional()}).strict(),Yut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>qt),t.lazy(()=>zp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>GB).optional(),completions:t.lazy(()=>$B).optional()}).strict(),J8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JB).optional(),completions:t.lazy(()=>KB).optional()}).strict(),Gut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Ft),t.lazy(()=>mp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K8=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>yq).optional(),respondedBy:t.lazy(()=>sq).optional()}).strict(),X8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AH=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Ht)}).strict(),SH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),TH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),PH=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),UH=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jH=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MH=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vH=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),BH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>wt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),t7=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional(),ShiftTask:t.lazy(()=>r5).optional()}).strict(),e7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional(),ShiftTask:t.lazy(()=>p5).optional()}).strict(),Jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ht),t.lazy(()=>Hm)]).optional()}).strict(),o7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>tD).optional(),recipe:t.lazy(()=>eD).optional()}).strict(),n7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),Kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),a7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),ingredient:t.lazy(()=>DS).optional(),transactions:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),i7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),Xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),l7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tyt=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p7=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kq).optional(),menuItem:t.lazy(()=>xq).optional()}).strict(),y7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Oq).optional(),ingrediente:t.lazy(()=>fq).optional()}).strict(),d7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Dq).optional(),items:t.lazy(()=>_q).optional()}).strict(),m7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Lq).optional()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Yq).optional(),recipe:t.lazy(()=>Gq).optional()}).strict(),h7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I7=t.object({dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ue),t.lazy(()=>bC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>hC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>tF).optional(),recipe:t.lazy(()=>eF).optional()}).strict(),T7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>nq).optional(),items:t.lazy(()=>iq).optional()}).strict(),U7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>lq).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W7=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>uq).optional(),menuItem:t.lazy(()=>yq).optional()}).strict(),R7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DT).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>_T).optional(),approvedBy:t.lazy(()=>VT).optional()}).strict(),x7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HT).optional(),instructions:t.lazy(()=>QT).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DT).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>_T).optional(),createdBy:t.lazy(()=>LT).optional()}).strict(),M7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HT).optional(),instructions:t.lazy(()=>QT).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z7=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>CF).optional(),item:t.lazy(()=>AF).optional()}).strict(),v7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O7=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>RF).optional(),items:t.lazy(()=>xF).optional()}).strict(),f7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>jF).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>pp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),qH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),w7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),N7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),FH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),DH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),EH=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_H=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),VH=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),HH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YH=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GH=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),$H=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JH=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KH=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tQ=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>se),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>rF).optional(),recipeVersion:t.lazy(()=>pF).optional()}).strict(),q7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),F7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>zF).optional(),equipment:t.lazy(()=>mF).optional()}).strict(),D7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>bF).optional()}).strict(),hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),E7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>lm).optional(),category:t.lazy(()=>rm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),_7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),Iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),L7=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>z5).optional()}).strict(),G7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>b5).optional()}).strict(),Ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>tD).optional(),assignedTo:t.lazy(()=>oD).optional()}).strict(),J7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),K7=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>g5).optional()}).strict(),X7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Yq).optional(),assignedTo:t.lazy(()=>$q).optional()}).strict(),eJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>tF).optional(),createdBy:t.lazy(()=>oF).optional()}).strict(),nJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>_T).optional(),createdBy:t.lazy(()=>LT).optional(),approvedBy:t.lazy(()=>VT).optional()}).strict(),rJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>HT).optional(),instructions:t.lazy(()=>QT).optional()}).strict(),Ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>DB).optional(),RecipeInstruction:t.lazy(()=>EB).optional()}).strict(),cJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),uJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>gq).optional(),ingredients:t.lazy(()=>Aq).optional()}).strict(),yJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Sq).optional(),ingredients:t.lazy(()=>Pq).optional()}).strict(),xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>s)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zJ=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bJ=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CJ=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>se),t.lazy(()=>dC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>rp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),oQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),nQ=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),aQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iQ=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),lQ=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>lF).optional(),recipeVersion:t.lazy(()=>pF).optional()}).strict(),TJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Qr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>s)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),PJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>FS).optional(),lastUpdatedBy:t.lazy(()=>ES).optional(),transactions:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),UJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),WJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>e5).optional()}).strict(),RJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),kJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>VF).optional(),supplierPriceHistory:t.lazy(()=>QF).optional()}).strict(),xJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>YF).optional(),supplierPriceHistory:t.lazy(()=>$F).optional()}).strict(),Byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Oq).optional(),recordedBy:t.lazy(()=>wq).optional()}).strict(),MJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZJ=t.object({allergen:t.lazy(()=>O2).optional()}).strict(),vJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),OJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>x2).optional()}).strict(),fJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),wJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>FB).optional(),equipment:t.lazy(()=>DB).optional()}).strict(),NJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),pQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),cQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),BJ=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>CF).optional(),createdBy:t.lazy(()=>SF).optional()}).strict(),qJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Yr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>eF).optional(),createdBy:t.lazy(()=>oF).optional()}).strict(),DJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>J2).optional()}).strict(),_J=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),yQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),LJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>K2).optional()}).strict(),VJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),sQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),HJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>o5).optional()}).strict(),QJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),dQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Nt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YJ=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),items:t.lazy(()=>NF).optional()}).strict(),GJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>BF).optional()}).strict(),Yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>cp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$J=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>DI).optional(),inventoryItems:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>VI).optional(),IngredientAllergen:t.lazy(()=>HI).optional(),SupplierPriceHistory:t.lazy(()=>QI).optional(),DietaryRestriction:t.lazy(()=>YI).optional()}).strict(),JJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>GI).optional(),inventoryItems:t.lazy(()=>$I).optional(),orderItems:t.lazy(()=>JI).optional(),WasteRecord:t.lazy(()=>XI).optional(),IngredientAllergen:t.lazy(()=>tg).optional(),SupplierPriceHistory:t.lazy(()=>eg).optional()}).strict(),Gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),KJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>j2).optional()}).strict(),XJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tK=t.object({taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),oK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),nK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),aK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),recipe:t.lazy(()=>eD).optional(),assignedTo:t.lazy(()=>oD).optional()}).strict(),iK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),hQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),IQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>ym).optional(),salesTransactions:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),rK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>bm).optional(),menuItemRecipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),tst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),pK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>m2).optional()}).strict(),cK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>b2).optional()}).strict(),est=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>s)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),CQ=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>ip),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipment:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),yK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipment:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>En).optional(),yields:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),ost=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>s)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>s)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),sK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>C5).optional()}).strict(),dK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zK=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ast=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bK=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>c2).optional()}).strict(),hK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ist=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kq).optional(),recordedBy:t.lazy(()=>jq).optional()}).strict(),gK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CK=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>uq).optional(),respondedBy:t.lazy(()=>sq).optional()}).strict(),AK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Lr)]).optional(),tags:t.union([t.lazy(()=>Vr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Hr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Cq).optional(),ingredients:t.lazy(()=>Aq).optional()}).strict(),TK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Tq).optional(),ingredients:t.lazy(()=>Pq).optional()}).strict(),pst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lmt=t.object({select:xs.optional(),include:ks.optional(),where:Be.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),rmt=t.object({select:xs.optional(),include:ks.optional(),where:Be.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),pmt=t.object({select:xs.optional(),include:ks.optional(),where:Be.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),cmt=t.object({where:Be.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),umt=t.object({where:Be.optional(),orderBy:t.union([qL.array(),qL]).optional(),by:lg.array(),having:OC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ymt=t.object({select:xs.optional(),include:ks.optional(),where:Bl}).strict(),smt=t.object({select:xs.optional(),include:ks.optional(),where:Bl}).strict(),dmt=t.object({select:Ms.optional(),include:js.optional(),where:oa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),zmt=t.object({select:Ms.optional(),include:js.optional(),where:oa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),PK=t.object({select:Ms.optional(),include:js.optional(),where:oa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),mmt=t.object({where:oa.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bmt=t.object({where:oa.optional(),orderBy:t.union([FL.array(),FL]).optional(),by:rg.array(),having:fC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hmt=t.object({select:Ms.optional(),include:js.optional(),where:me}).strict(),Imt=t.object({select:Ms.optional(),include:js.optional(),where:me}).strict(),gmt=t.object({select:vs.optional(),include:Zs.optional(),where:qe.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Cmt=t.object({select:vs.optional(),include:Zs.optional(),where:qe.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Amt=t.object({select:vs.optional(),include:Zs.optional(),where:qe.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Smt=t.object({where:qe.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tmt=t.object({where:qe.optional(),orderBy:t.union([DL.array(),DL]).optional(),by:pg.array(),having:wC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pmt=t.object({select:vs.optional(),include:Zs.optional(),where:ql}).strict(),Umt=t.object({select:vs.optional(),include:Zs.optional(),where:ql}).strict(),Wmt=t.object({select:fs.optional(),include:Os.optional(),where:na.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Rmt=t.object({select:fs.optional(),include:Os.optional(),where:na.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),UK=t.object({select:fs.optional(),include:Os.optional(),where:na.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),kmt=t.object({where:na.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xmt=t.object({where:na.optional(),orderBy:t.union([EL.array(),EL]).optional(),by:cg.array(),having:NC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jmt=t.object({select:fs.optional(),include:Os.optional(),where:be}).strict(),Mmt=t.object({select:fs.optional(),include:Os.optional(),where:be}).strict(),Zmt=t.object({select:Ns.optional(),include:ws.optional(),where:aa.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),vmt=t.object({select:Ns.optional(),include:ws.optional(),where:aa.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),WK=t.object({select:Ns.optional(),include:ws.optional(),where:aa.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),Omt=t.object({where:aa.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fmt=t.object({where:aa.optional(),orderBy:t.union([_L.array(),_L]).optional(),by:ug.array(),having:BC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),Nmt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),Bmt=t.object({select:qs.optional(),include:Bs.optional(),where:ia.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),qmt=t.object({select:qs.optional(),include:Bs.optional(),where:ia.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),RK=t.object({select:qs.optional(),include:Bs.optional(),where:ia.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Fmt=t.object({where:ia.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dmt=t.object({where:ia.optional(),orderBy:t.union([LL.array(),LL]).optional(),by:yg.array(),having:qC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Emt=t.object({select:qs.optional(),include:Bs.optional(),where:Ie}).strict(),_mt=t.object({select:qs.optional(),include:Bs.optional(),where:Ie}).strict(),Lmt=t.object({select:Ds.optional(),include:Fs.optional(),where:la.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),Vmt=t.object({select:Ds.optional(),include:Fs.optional(),where:la.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),kK=t.object({select:Ds.optional(),include:Fs.optional(),where:la.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),Hmt=t.object({where:la.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qmt=t.object({where:la.optional(),orderBy:t.union([VL.array(),VL]).optional(),by:sg.array(),having:FC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ymt=t.object({select:Ds.optional(),include:Fs.optional(),where:ge}).strict(),Gmt=t.object({select:Ds.optional(),include:Fs.optional(),where:ge}).strict(),$mt=t.object({select:_s.optional(),include:Es.optional(),where:ra.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),Jmt=t.object({select:_s.optional(),include:Es.optional(),where:ra.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),$w=t.object({select:_s.optional(),include:Es.optional(),where:ra.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),Kmt=t.object({where:ra.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xmt=t.object({where:ra.optional(),orderBy:t.union([HL.array(),HL]).optional(),by:dg.array(),having:DC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tbt=t.object({select:_s.optional(),include:Es.optional(),where:ht}).strict(),ebt=t.object({select:_s.optional(),include:Es.optional(),where:ht}).strict(),obt=t.object({select:Vs.optional(),include:Ls.optional(),where:fe.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),nbt=t.object({select:Vs.optional(),include:Ls.optional(),where:fe.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),xK=t.object({select:Vs.optional(),include:Ls.optional(),where:fe.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),abt=t.object({where:fe.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ibt=t.object({where:fe.optional(),orderBy:t.union([QL.array(),QL]).optional(),by:zg.array(),having:EC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lbt=t.object({select:Vs.optional(),include:Ls.optional(),where:te}).strict(),rbt=t.object({select:Vs.optional(),include:Ls.optional(),where:te}).strict(),pbt=t.object({select:Qs.optional(),include:Hs.optional(),where:ie.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),cbt=t.object({select:Qs.optional(),include:Hs.optional(),where:ie.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),zS=t.object({select:Qs.optional(),include:Hs.optional(),where:ie.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),ubt=t.object({where:ie.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ybt=t.object({where:ie.optional(),orderBy:t.union([YL.array(),YL]).optional(),by:mg.array(),having:_C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sbt=t.object({select:Qs.optional(),include:Hs.optional(),where:N}).strict(),dbt=t.object({select:Qs.optional(),include:Hs.optional(),where:N}).strict(),zbt=t.object({select:Gs.optional(),include:Ys.optional(),where:Me.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),mbt=t.object({select:Gs.optional(),include:Ys.optional(),where:Me.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),jK=t.object({select:Gs.optional(),include:Ys.optional(),where:Me.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),bbt=t.object({where:Me.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hbt=t.object({where:Me.optional(),orderBy:t.union([GL.array(),GL]).optional(),by:bg.array(),having:LC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ibt=t.object({select:Gs.optional(),include:Ys.optional(),where:Qt}).strict(),gbt=t.object({select:Gs.optional(),include:Ys.optional(),where:Qt}).strict(),Cbt=t.object({select:Js.optional(),include:$s.optional(),where:pa.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Abt=t.object({select:Js.optional(),include:$s.optional(),where:pa.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),iT=t.object({select:Js.optional(),include:$s.optional(),where:pa.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Sbt=t.object({where:pa.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tbt=t.object({where:pa.optional(),orderBy:t.union([$L.array(),$L]).optional(),by:hg.array(),having:VC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pbt=t.object({select:Js.optional(),include:$s.optional(),where:q}).strict(),Ubt=t.object({select:Js.optional(),include:$s.optional(),where:q}).strict(),Wbt=t.object({select:Xs.optional(),include:Ks.optional(),where:ca.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Rbt=t.object({select:Xs.optional(),include:Ks.optional(),where:ca.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),MK=t.object({select:Xs.optional(),include:Ks.optional(),where:ca.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),kbt=t.object({where:ca.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xbt=t.object({where:ca.optional(),orderBy:t.union([JL.array(),JL]).optional(),by:Ig.array(),having:HC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jbt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ce}).strict(),Mbt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ce}).strict(),Zbt=t.object({select:ed.optional(),include:td.optional(),where:Ze.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),vbt=t.object({select:ed.optional(),include:td.optional(),where:Ze.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),ZK=t.object({select:ed.optional(),include:td.optional(),where:Ze.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Obt=t.object({where:Ze.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fbt=t.object({where:Ze.optional(),orderBy:t.union([KL.array(),KL]).optional(),by:gg.array(),having:QC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wbt=t.object({select:ed.optional(),include:td.optional(),where:Yt}).strict(),Nbt=t.object({select:ed.optional(),include:td.optional(),where:Yt}).strict(),Bbt=t.object({select:nd.optional(),include:od.optional(),where:Qe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),qbt=t.object({select:nd.optional(),include:od.optional(),where:Qe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),vK=t.object({select:nd.optional(),include:od.optional(),where:Qe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Fbt=t.object({where:Qe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dbt=t.object({where:Qe.optional(),orderBy:t.union([XL.array(),XL]).optional(),by:Cg.array(),having:YC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ebt=t.object({select:nd.optional(),include:od.optional(),where:ee}).strict(),_bt=t.object({select:nd.optional(),include:od.optional(),where:ee}).strict(),Lbt=t.object({select:id.optional(),include:ad.optional(),where:Ye.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Vbt=t.object({select:id.optional(),include:ad.optional(),where:Ye.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Jw=t.object({select:id.optional(),include:ad.optional(),where:Ye.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Hbt=t.object({where:Ye.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qbt=t.object({where:Ye.optional(),orderBy:t.union([tV.array(),tV]).optional(),by:Ag.array(),having:GC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ybt=t.object({select:id.optional(),include:ad.optional(),where:it}).strict(),Gbt=t.object({select:id.optional(),include:ad.optional(),where:it}).strict(),$bt=t.object({select:rd.optional(),include:ld.optional(),where:ua.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),Jbt=t.object({select:rd.optional(),include:ld.optional(),where:ua.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),Kw=t.object({select:rd.optional(),include:ld.optional(),where:ua.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),Kbt=t.object({where:ua.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xbt=t.object({where:ua.optional(),orderBy:t.union([eV.array(),eV]).optional(),by:Sg.array(),having:$C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tht=t.object({select:rd.optional(),include:ld.optional(),where:It}).strict(),eht=t.object({select:rd.optional(),include:ld.optional(),where:It}).strict(),oht=t.object({select:cd.optional(),include:pd.optional(),where:ya.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),nht=t.object({select:cd.optional(),include:pd.optional(),where:ya.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),Xw=t.object({select:cd.optional(),include:pd.optional(),where:ya.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),aht=t.object({where:ya.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iht=t.object({where:ya.optional(),orderBy:t.union([oV.array(),oV]).optional(),by:Tg.array(),having:JC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lht=t.object({select:cd.optional(),include:pd.optional(),where:gt}).strict(),rht=t.object({select:cd.optional(),include:pd.optional(),where:gt}).strict(),pht=t.object({select:yd.optional(),include:ud.optional(),where:sa.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),cht=t.object({select:yd.optional(),include:ud.optional(),where:sa.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),lT=t.object({select:yd.optional(),include:ud.optional(),where:sa.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),uht=t.object({where:sa.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yht=t.object({where:sa.optional(),orderBy:t.union([nV.array(),nV]).optional(),by:Pg.array(),having:KC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sht=t.object({select:yd.optional(),include:ud.optional(),where:F}).strict(),dht=t.object({select:yd.optional(),include:ud.optional(),where:F}).strict(),zht=t.object({select:dd.optional(),include:sd.optional(),where:we.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),mht=t.object({select:dd.optional(),include:sd.optional(),where:we.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),tN=t.object({select:dd.optional(),include:sd.optional(),where:we.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),bht=t.object({where:we.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hht=t.object({where:we.optional(),orderBy:t.union([aV.array(),aV]).optional(),by:Ug.array(),having:XC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Iht=t.object({select:dd.optional(),include:sd.optional(),where:lt}).strict(),ght=t.object({select:dd.optional(),include:sd.optional(),where:lt}).strict(),Cht=t.object({select:md.optional(),include:zd.optional(),where:da.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Aht=t.object({select:md.optional(),include:zd.optional(),where:da.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),OK=t.object({select:md.optional(),include:zd.optional(),where:da.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Sht=t.object({where:da.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tht=t.object({where:da.optional(),orderBy:t.union([iV.array(),iV]).optional(),by:Wg.array(),having:tA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pht=t.object({select:md.optional(),include:zd.optional(),where:Ae}).strict(),Uht=t.object({select:md.optional(),include:zd.optional(),where:Ae}).strict(),Wht=t.object({select:hd.optional(),include:bd.optional(),where:za.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Rht=t.object({select:hd.optional(),include:bd.optional(),where:za.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),rT=t.object({select:hd.optional(),include:bd.optional(),where:za.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),kht=t.object({where:za.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xht=t.object({where:za.optional(),orderBy:t.union([lV.array(),lV]).optional(),by:Rg.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),Mht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),Zht=t.object({select:gd.optional(),include:Id.optional(),where:ma.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),vht=t.object({select:gd.optional(),include:Id.optional(),where:ma.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),pT=t.object({select:gd.optional(),include:Id.optional(),where:ma.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Oht=t.object({where:ma.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fht=t.object({where:ma.optional(),orderBy:t.union([rV.array(),rV]).optional(),by:kg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wht=t.object({select:gd.optional(),include:Id.optional(),where:E}).strict(),Nht=t.object({select:gd.optional(),include:Id.optional(),where:E}).strict(),Bht=t.object({select:Ad.optional(),include:Cd.optional(),where:Ge.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),qht=t.object({select:Ad.optional(),include:Cd.optional(),where:Ge.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),eN=t.object({select:Ad.optional(),include:Cd.optional(),where:Ge.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Fht=t.object({where:Ge.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dht=t.object({where:Ge.optional(),orderBy:t.union([pV.array(),pV]).optional(),by:xg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Eht=t.object({select:Ad.optional(),include:Cd.optional(),where:rt}).strict(),_ht=t.object({select:Ad.optional(),include:Cd.optional(),where:rt}).strict(),Lht=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Vht=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),cT=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Hht=t.object({where:ba.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qht=t.object({where:ba.optional(),orderBy:t.union([cV.array(),cV]).optional(),by:jg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Yht=t.object({select:Td.optional(),include:Sd.optional(),where:_}).strict(),Ght=t.object({select:Td.optional(),include:Sd.optional(),where:_}).strict(),$ht=t.object({select:Ud.optional(),include:Pd.optional(),where:ha.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Jht=t.object({select:Ud.optional(),include:Pd.optional(),where:ha.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),fK=t.object({select:Ud.optional(),include:Pd.optional(),where:ha.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Kht=t.object({where:ha.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xht=t.object({where:ha.optional(),orderBy:t.union([uV.array(),uV]).optional(),by:Mg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tIt=t.object({select:Ud.optional(),include:Pd.optional(),where:Se}).strict(),eIt=t.object({select:Ud.optional(),include:Pd.optional(),where:Se}).strict(),oIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),nIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),wK=t.object({select:Rd.optional(),include:Wd.optional(),where:Ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),aIt=t.object({where:Ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iIt=t.object({where:Ia.optional(),orderBy:t.union([yV.array(),yV]).optional(),by:Zg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Te}).strict(),rIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Te}).strict(),pIt=t.object({select:xd.optional(),include:kd.optional(),where:ga.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),cIt=t.object({select:xd.optional(),include:kd.optional(),where:ga.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),NK=t.object({select:xd.optional(),include:kd.optional(),where:ga.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),uIt=t.object({where:ga.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yIt=t.object({where:ga.optional(),orderBy:t.union([sV.array(),sV]).optional(),by:vg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sIt=t.object({select:xd.optional(),include:kd.optional(),where:Pe}).strict(),dIt=t.object({select:xd.optional(),include:kd.optional(),where:Pe}).strict(),zIt=t.object({select:Md.optional(),include:jd.optional(),where:Ca.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),mIt=t.object({select:Md.optional(),include:jd.optional(),where:Ca.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),uT=t.object({select:Md.optional(),include:jd.optional(),where:Ca.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),bIt=t.object({where:Ca.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hIt=t.object({where:Ca.optional(),orderBy:t.union([dV.array(),dV]).optional(),by:Og.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),IIt=t.object({select:Md.optional(),include:jd.optional(),where:L}).strict(),gIt=t.object({select:Md.optional(),include:jd.optional(),where:L}).strict(),CIt=t.object({select:vd.optional(),include:Zd.optional(),where:co.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:op.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),AIt=t.object({select:vd.optional(),include:Zd.optional(),where:co.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:op.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),SIt=t.object({select:vd.optional(),include:Zd.optional(),where:co.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:op.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),TIt=t.object({where:co.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:op.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PIt=t.object({where:co.optional(),orderBy:t.union([zV.array(),zV]).optional(),by:fg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UIt=t.object({select:vd.optional(),include:Zd.optional(),where:op}).strict(),WIt=t.object({select:vd.optional(),include:Zd.optional(),where:op}).strict(),RIt=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),kIt=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),oN=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),xIt=t.object({where:Aa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jIt=t.object({where:Aa.optional(),orderBy:t.union([mV.array(),mV]).optional(),by:wg.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MIt=t.object({select:fd.optional(),include:Od.optional(),where:Ct}).strict(),ZIt=t.object({select:fd.optional(),include:Od.optional(),where:Ct}).strict(),vIt=t.object({select:Nd.optional(),include:wd.optional(),where:Sa.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),OIt=t.object({select:Nd.optional(),include:wd.optional(),where:Sa.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),BK=t.object({select:Nd.optional(),include:wd.optional(),where:Sa.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),fIt=t.object({where:Sa.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wIt=t.object({where:Sa.optional(),orderBy:t.union([bV.array(),bV]).optional(),by:Ng.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ue}).strict(),BIt=t.object({select:Nd.optional(),include:wd.optional(),where:Ue}).strict(),qIt=t.object({select:Em.optional(),where:zl.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:_m.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),FIt=t.object({select:Em.optional(),where:zl.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:_m.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),DIt=t.object({select:Em.optional(),where:zl.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:_m.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),EIt=t.object({where:zl.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:_m.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_It=t.object({where:zl.optional(),orderBy:t.union([hV.array(),hV]).optional(),by:Bg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LIt=t.object({select:Em.optional(),where:_m}).strict(),VIt=t.object({select:Em.optional(),where:_m}).strict(),HIt=t.object({select:qd.optional(),include:Bd.optional(),where:je.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),QIt=t.object({select:qd.optional(),include:Bd.optional(),where:je.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),YIt=t.object({select:qd.optional(),include:Bd.optional(),where:je.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),GIt=t.object({where:je.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:vl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$It=t.object({where:je.optional(),orderBy:t.union([IV.array(),IV]).optional(),by:qg.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({select:qd.optional(),include:Bd.optional(),where:vl}).strict(),KIt=t.object({select:qd.optional(),include:Bd.optional(),where:vl}).strict(),XIt=t.object({select:Dd.optional(),include:Fd.optional(),where:Dt.optional(),orderBy:t.union([Xr.array(),Xr]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),tgt=t.object({select:Dd.optional(),include:Fd.optional(),where:Dt.optional(),orderBy:t.union([Xr.array(),Xr]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),egt=t.object({select:Dd.optional(),include:Fd.optional(),where:Dt.optional(),orderBy:t.union([Xr.array(),Xr]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),ogt=t.object({where:Dt.optional(),orderBy:t.union([Xr.array(),Xr]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ngt=t.object({where:Dt.optional(),orderBy:t.union([gV.array(),gV]).optional(),by:Fg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({select:Dd.optional(),include:Fd.optional(),where:$n}).strict(),igt=t.object({select:Dd.optional(),include:Fd.optional(),where:$n}).strict(),lgt=t.object({select:_d.optional(),include:Ed.optional(),where:B.optional(),orderBy:t.union([Oa.array(),Oa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),rgt=t.object({select:_d.optional(),include:Ed.optional(),where:B.optional(),orderBy:t.union([Oa.array(),Oa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),qK=t.object({select:_d.optional(),include:Ed.optional(),where:B.optional(),orderBy:t.union([Oa.array(),Oa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),pgt=t.object({where:B.optional(),orderBy:t.union([Oa.array(),Oa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({where:B.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Dg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ugt=t.object({select:_d.optional(),include:Ed.optional(),where:K}).strict(),ygt=t.object({select:_d.optional(),include:Ed.optional(),where:K}).strict(),sgt=t.object({select:Vd.optional(),include:Ld.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),dgt=t.object({select:Vd.optional(),include:Ld.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),nN=t.object({select:Vd.optional(),include:Ld.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),zgt=t.object({where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({where:v.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:Eg.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bgt=t.object({select:Vd.optional(),include:Ld.optional(),where:M}).strict(),hgt=t.object({select:Vd.optional(),include:Ld.optional(),where:M}).strict(),Igt=t.object({select:Qd.optional(),include:Hd.optional(),where:Ta.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),ggt=t.object({select:Qd.optional(),include:Hd.optional(),where:Ta.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),FK=t.object({select:Qd.optional(),include:Hd.optional(),where:Ta.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Cgt=t.object({where:Ta.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({where:Ta.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:_g.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sgt=t.object({select:Qd.optional(),include:Hd.optional(),where:We}).strict(),Tgt=t.object({select:Qd.optional(),include:Hd.optional(),where:We}).strict(),Pgt=t.object({select:Gd.optional(),include:Yd.optional(),where:$e.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Ugt=t.object({select:Gd.optional(),include:Yd.optional(),where:$e.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),DK=t.object({select:Gd.optional(),include:Yd.optional(),where:$e.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Wgt=t.object({where:$e.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rgt=t.object({where:$e.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:Lg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kgt=t.object({select:Gd.optional(),include:Yd.optional(),where:oe}).strict(),xgt=t.object({select:Gd.optional(),include:Yd.optional(),where:oe}).strict(),jgt=t.object({select:Jd.optional(),include:$d.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Mgt=t.object({select:Jd.optional(),include:$d.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),up=t.object({select:Jd.optional(),include:$d.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Zgt=t.object({where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vgt=t.object({where:O.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:Vg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ogt=t.object({select:Jd.optional(),include:$d.optional(),where:C}).strict(),fgt=t.object({select:Jd.optional(),include:$d.optional(),where:C}).strict(),wgt=t.object({select:Xd.optional(),include:Kd.optional(),where:Mt.optional(),orderBy:t.union([wl.array(),wl]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Ngt=t.object({select:Xd.optional(),include:Kd.optional(),where:Mt.optional(),orderBy:t.union([wl.array(),wl]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),aN=t.object({select:Xd.optional(),include:Kd.optional(),where:Mt.optional(),orderBy:t.union([wl.array(),wl]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Bgt=t.object({where:Mt.optional(),orderBy:t.union([wl.array(),wl]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qgt=t.object({where:Mt.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:Hg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fgt=t.object({select:Xd.optional(),include:Kd.optional(),where:$}).strict(),Dgt=t.object({select:Xd.optional(),include:Kd.optional(),where:$}).strict(),Egt=t.object({select:ez.optional(),include:tz.optional(),where:Pa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),_gt=t.object({select:ez.optional(),include:tz.optional(),where:Pa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),yT=t.object({select:ez.optional(),include:tz.optional(),where:Pa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),Lgt=t.object({where:Pa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vgt=t.object({where:Pa.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:Qg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hgt=t.object({select:ez.optional(),include:tz.optional(),where:V}).strict(),Qgt=t.object({select:ez.optional(),include:tz.optional(),where:V}).strict(),Ygt=t.object({select:nz.optional(),include:oz.optional(),where:Ne.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),Ggt=t.object({select:nz.optional(),include:oz.optional(),where:Ne.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),iN=t.object({select:nz.optional(),include:oz.optional(),where:Ne.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),$gt=t.object({where:Ne.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jgt=t.object({where:Ne.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:Yg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kgt=t.object({select:nz.optional(),include:oz.optional(),where:pt}).strict(),Xgt=t.object({select:nz.optional(),include:oz.optional(),where:pt}).strict(),tCt=t.object({select:iz.optional(),include:az.optional(),where:le.optional(),orderBy:t.union([dp.array(),dp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),eCt=t.object({select:iz.optional(),include:az.optional(),where:le.optional(),orderBy:t.union([dp.array(),dp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),sT=t.object({select:iz.optional(),include:az.optional(),where:le.optional(),orderBy:t.union([dp.array(),dp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),oCt=t.object({where:le.optional(),orderBy:t.union([dp.array(),dp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nCt=t.object({where:le.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:Gg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aCt=t.object({select:iz.optional(),include:az.optional(),where:w}).strict(),iCt=t.object({select:iz.optional(),include:az.optional(),where:w}).strict(),lCt=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),rCt=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),dT=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),pCt=t.object({where:Ua.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cCt=t.object({where:Ua.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:$g.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uCt=t.object({select:rz.optional(),include:lz.optional(),where:H}).strict(),yCt=t.object({select:rz.optional(),include:lz.optional(),where:H}).strict(),sCt=t.object({select:cz.optional(),include:pz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),dCt=t.object({select:cz.optional(),include:pz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),lN=t.object({select:cz.optional(),include:pz.optional(),where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),zCt=t.object({where:Je.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mCt=t.object({where:Je.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:Jg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bCt=t.object({select:cz.optional(),include:pz.optional(),where:ct}).strict(),hCt=t.object({select:cz.optional(),include:pz.optional(),where:ct}).strict(),ICt=t.object({select:yz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),gCt=t.object({select:yz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),rN=t.object({select:yz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),CCt=t.object({where:Wa.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ACt=t.object({where:Wa.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:Kg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SCt=t.object({select:yz.optional(),include:uz.optional(),where:At}).strict(),TCt=t.object({select:yz.optional(),include:uz.optional(),where:At}).strict(),PCt=t.object({select:dz.optional(),include:sz.optional(),where:Fe.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),UCt=t.object({select:dz.optional(),include:sz.optional(),where:Fe.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),WCt=t.object({select:dz.optional(),include:sz.optional(),where:Fe.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),RCt=t.object({where:Fe.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kCt=t.object({where:Fe.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:Xg.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xCt=t.object({select:dz.optional(),include:sz.optional(),where:Fl}).strict(),jCt=t.object({select:dz.optional(),include:sz.optional(),where:Fl}).strict(),MCt=t.object({select:mz.optional(),include:zz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),ZCt=t.object({select:mz.optional(),include:zz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),pN=t.object({select:mz.optional(),include:zz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),vCt=t.object({where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OCt=t.object({where:Ke.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:tC.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fCt=t.object({select:mz.optional(),include:zz.optional(),where:ut}).strict(),wCt=t.object({select:mz.optional(),include:zz.optional(),where:ut}).strict(),NCt=t.object({select:hz.optional(),include:bz.optional(),where:Ra.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),BCt=t.object({select:hz.optional(),include:bz.optional(),where:Ra.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),cN=t.object({select:hz.optional(),include:bz.optional(),where:Ra.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),qCt=t.object({where:Ra.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FCt=t.object({where:Ra.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:eC.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DCt=t.object({select:hz.optional(),include:bz.optional(),where:St}).strict(),ECt=t.object({select:hz.optional(),include:bz.optional(),where:St}).strict(),_Ct=t.object({select:gz.optional(),include:Iz.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),LCt=t.object({select:gz.optional(),include:Iz.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),EK=t.object({select:gz.optional(),include:Iz.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),VCt=t.object({where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HCt=t.object({where:ve.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:oC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QCt=t.object({select:gz.optional(),include:Iz.optional(),where:Gt}).strict(),YCt=t.object({select:gz.optional(),include:Iz.optional(),where:Gt}).strict(),GCt=t.object({select:Az.optional(),include:Cz.optional(),where:Xe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),$Ct=t.object({select:Az.optional(),include:Cz.optional(),where:Xe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),_K=t.object({select:Az.optional(),include:Cz.optional(),where:Xe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),JCt=t.object({where:Xe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KCt=t.object({where:Xe.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:nC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),XCt=t.object({select:Az.optional(),include:Cz.optional(),where:ne}).strict(),tAt=t.object({select:Az.optional(),include:Cz.optional(),where:ne}).strict(),eAt=t.object({select:Tz.optional(),include:Sz.optional(),where:to.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),oAt=t.object({select:Tz.optional(),include:Sz.optional(),where:to.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),LK=t.object({select:Tz.optional(),include:Sz.optional(),where:to.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),nAt=t.object({where:to.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aAt=t.object({where:to.optional(),orderBy:t.union([NV.array(),NV]).optional(),by:aC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iAt=t.object({select:Tz.optional(),include:Sz.optional(),where:ae}).strict(),lAt=t.object({select:Tz.optional(),include:Sz.optional(),where:ae}).strict(),rAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),pAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),zT=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),cAt=t.object({where:ka.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uAt=t.object({where:ka.optional(),orderBy:t.union([BV.array(),BV]).optional(),by:iC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Q}).strict(),sAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Q}).strict(),dAt=t.object({select:Rz.optional(),include:Wz.optional(),where:xa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),zAt=t.object({select:Rz.optional(),include:Wz.optional(),where:xa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),VK=t.object({select:Rz.optional(),include:Wz.optional(),where:xa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),mAt=t.object({where:xa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bAt=t.object({where:xa.optional(),orderBy:t.union([qV.array(),qV]).optional(),by:lC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Re}).strict(),IAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Re}).strict(),gAt=t.object({select:xz.optional(),include:kz.optional(),where:Oe.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),CAt=t.object({select:xz.optional(),include:kz.optional(),where:Oe.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),HK=t.object({select:xz.optional(),include:kz.optional(),where:Oe.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),AAt=t.object({where:Oe.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SAt=t.object({where:Oe.optional(),orderBy:t.union([FV.array(),FV]).optional(),by:rC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TAt=t.object({select:xz.optional(),include:kz.optional(),where:$t}).strict(),PAt=t.object({select:xz.optional(),include:kz.optional(),where:$t}).strict(),UAt=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),WAt=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),uN=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),RAt=t.object({where:ja.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kAt=t.object({where:ja.optional(),orderBy:t.union([DV.array(),DV]).optional(),by:pC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xAt=t.object({select:Mz.optional(),include:jz.optional(),where:Tt}).strict(),jAt=t.object({select:Mz.optional(),include:jz.optional(),where:Tt}).strict(),MAt=t.object({select:vz.optional(),include:Zz.optional(),where:Pt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),ZAt=t.object({select:vz.optional(),include:Zz.optional(),where:Pt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),og=t.object({select:vz.optional(),include:Zz.optional(),where:Pt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),vAt=t.object({where:Pt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OAt=t.object({where:Pt.optional(),orderBy:t.union([EV.array(),EV]).optional(),by:cC.array(),having:NA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fAt=t.object({select:vz.optional(),include:Zz.optional(),where:x}).strict(),wAt=t.object({select:vz.optional(),include:Zz.optional(),where:x}).strict(),NAt=t.object({select:fz.optional(),include:Oz.optional(),where:De.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),BAt=t.object({select:fz.optional(),include:Oz.optional(),where:De.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),qAt=t.object({select:fz.optional(),include:Oz.optional(),where:De.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),FAt=t.object({where:De.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DAt=t.object({where:De.optional(),orderBy:t.union([_V.array(),_V]).optional(),by:uC.array(),having:BA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),EAt=t.object({select:fz.optional(),include:Oz.optional(),where:Dl}).strict(),_At=t.object({select:fz.optional(),include:Oz.optional(),where:Dl}).strict(),LAt=t.object({select:Nz.optional(),include:wz.optional(),where:Ma.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),VAt=t.object({select:Nz.optional(),include:wz.optional(),where:Ma.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),QK=t.object({select:Nz.optional(),include:wz.optional(),where:Ma.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),HAt=t.object({where:Ma.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QAt=t.object({where:Ma.optional(),orderBy:t.union([LV.array(),LV]).optional(),by:yC.array(),having:qA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),YAt=t.object({select:Nz.optional(),include:wz.optional(),where:ke}).strict(),GAt=t.object({select:Nz.optional(),include:wz.optional(),where:ke}).strict(),$At=t.object({select:qz.optional(),include:Bz.optional(),where:Za.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),JAt=t.object({select:qz.optional(),include:Bz.optional(),where:Za.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),YK=t.object({select:qz.optional(),include:Bz.optional(),where:Za.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),KAt=t.object({where:Za.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),XAt=t.object({where:Za.optional(),orderBy:t.union([VV.array(),VV]).optional(),by:sC.array(),having:FA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tSt=t.object({select:qz.optional(),include:Bz.optional(),where:xe}).strict(),eSt=t.object({select:qz.optional(),include:Bz.optional(),where:xe}).strict(),oSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([s0,d0])}).strict(),nSt=t.object({select:xs.optional(),include:ks.optional(),where:Bl,create:t.union([s0,d0]),update:t.union([z0,m0])}).strict(),aSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),iSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),lSt=t.object({select:xs.optional(),include:ks.optional(),where:Bl}).strict(),rSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([z0,m0]),where:Bl}).strict(),pSt=t.object({data:t.union([b0,h0]),where:Be.optional(),limit:t.number().optional()}).strict(),cSt=t.object({data:t.union([b0,h0]),where:Be.optional(),limit:t.number().optional()}).strict(),uSt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),ySt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([I0,g0])}).strict(),sSt=t.object({select:Ms.optional(),include:js.optional(),where:me,create:t.union([I0,g0]),update:t.union([C0,A0])}).strict(),dSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mSt=t.object({select:Ms.optional(),include:js.optional(),where:me}).strict(),bSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([C0,A0]),where:me}).strict(),hSt=t.object({data:t.union([RN,S0]),where:oa.optional(),limit:t.number().optional()}).strict(),ISt=t.object({data:t.union([RN,S0]),where:oa.optional(),limit:t.number().optional()}).strict(),gSt=t.object({where:oa.optional(),limit:t.number().optional()}).strict(),CSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([T0,P0])}).strict(),ASt=t.object({select:vs.optional(),include:Zs.optional(),where:ql,create:t.union([T0,P0]),update:t.union([U0,W0])}).strict(),SSt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TSt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PSt=t.object({select:vs.optional(),include:Zs.optional(),where:ql}).strict(),USt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([U0,W0]),where:ql}).strict(),WSt=t.object({data:t.union([R0,k0]),where:qe.optional(),limit:t.number().optional()}).strict(),RSt=t.object({data:t.union([R0,k0]),where:qe.optional(),limit:t.number().optional()}).strict(),kSt=t.object({where:qe.optional(),limit:t.number().optional()}).strict(),xSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([x0,j0])}).strict(),jSt=t.object({select:fs.optional(),include:Os.optional(),where:be,create:t.union([x0,j0]),update:t.union([M0,Z0])}).strict(),MSt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZSt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vSt=t.object({select:fs.optional(),include:Os.optional(),where:be}).strict(),OSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([M0,Z0]),where:be}).strict(),fSt=t.object({data:t.union([kN,v0]),where:na.optional(),limit:t.number().optional()}).strict(),wSt=t.object({data:t.union([kN,v0]),where:na.optional(),limit:t.number().optional()}).strict(),NSt=t.object({where:na.optional(),limit:t.number().optional()}).strict(),BSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([O0,f0])}).strict(),qSt=t.object({select:Ns.optional(),include:ws.optional(),where:he,create:t.union([O0,f0]),update:t.union([w0,N0])}).strict(),FSt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DSt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ESt=t.object({select:Ns.optional(),include:ws.optional(),where:he}).strict(),_St=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([w0,N0]),where:he}).strict(),LSt=t.object({data:t.union([xN,B0]),where:aa.optional(),limit:t.number().optional()}).strict(),VSt=t.object({data:t.union([xN,B0]),where:aa.optional(),limit:t.number().optional()}).strict(),HSt=t.object({where:aa.optional(),limit:t.number().optional()}).strict(),QSt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([q0,F0])}).strict(),YSt=t.object({select:qs.optional(),include:Bs.optional(),where:Ie,create:t.union([q0,F0]),update:t.union([D0,E0])}).strict(),GSt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$St=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JSt=t.object({select:qs.optional(),include:Bs.optional(),where:Ie}).strict(),KSt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([D0,E0]),where:Ie}).strict(),XSt=t.object({data:t.union([jN,_0]),where:ia.optional(),limit:t.number().optional()}).strict(),tTt=t.object({data:t.union([jN,_0]),where:ia.optional(),limit:t.number().optional()}).strict(),eTt=t.object({where:ia.optional(),limit:t.number().optional()}).strict(),oTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([L0,V0])}).strict(),nTt=t.object({select:Ds.optional(),include:Fs.optional(),where:ge,create:t.union([L0,V0]),update:t.union([H0,Q0])}).strict(),aTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lTt=t.object({select:Ds.optional(),include:Fs.optional(),where:ge}).strict(),rTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([H0,Q0]),where:ge}).strict(),pTt=t.object({data:t.union([MN,Y0]),where:la.optional(),limit:t.number().optional()}).strict(),cTt=t.object({data:t.union([MN,Y0]),where:la.optional(),limit:t.number().optional()}).strict(),uTt=t.object({where:la.optional(),limit:t.number().optional()}).strict(),yTt=t.object({select:_s.optional(),include:Es.optional(),data:t.union([G0,$0])}).strict(),sTt=t.object({select:_s.optional(),include:Es.optional(),where:ht,create:t.union([G0,$0]),update:t.union([J0,K0])}).strict(),dTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mTt=t.object({select:_s.optional(),include:Es.optional(),where:ht}).strict(),bTt=t.object({select:_s.optional(),include:Es.optional(),data:t.union([J0,K0]),where:ht}).strict(),hTt=t.object({data:t.union([Nj,X0]),where:ra.optional(),limit:t.number().optional()}).strict(),ITt=t.object({data:t.union([Nj,X0]),where:ra.optional(),limit:t.number().optional()}).strict(),gTt=t.object({where:ra.optional(),limit:t.number().optional()}).strict(),CTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([tY,eY])}).strict(),ATt=t.object({select:Vs.optional(),include:Ls.optional(),where:te,create:t.union([tY,eY]),update:t.union([oY,nY])}).strict(),STt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TTt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PTt=t.object({select:Vs.optional(),include:Ls.optional(),where:te}).strict(),UTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([oY,nY]),where:te}).strict(),WTt=t.object({data:t.union([ZN,aY]),where:fe.optional(),limit:t.number().optional()}).strict(),RTt=t.object({data:t.union([ZN,aY]),where:fe.optional(),limit:t.number().optional()}).strict(),kTt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),xTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([iY,lY])}).strict(),jTt=t.object({select:Qs.optional(),include:Hs.optional(),where:N,create:t.union([iY,lY]),update:t.union([rY,pY])}).strict(),MTt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZTt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vTt=t.object({select:Qs.optional(),include:Hs.optional(),where:N}).strict(),OTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([rY,pY]),where:N}).strict(),fTt=t.object({data:t.union([TT,cY]),where:ie.optional(),limit:t.number().optional()}).strict(),wTt=t.object({data:t.union([TT,cY]),where:ie.optional(),limit:t.number().optional()}).strict(),NTt=t.object({where:ie.optional(),limit:t.number().optional()}).strict(),BTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([uY,yY])}).strict(),qTt=t.object({select:Gs.optional(),include:Ys.optional(),where:Qt,create:t.union([uY,yY]),update:t.union([sY,dY])}).strict(),FTt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DTt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ETt=t.object({select:Gs.optional(),include:Ys.optional(),where:Qt}).strict(),_Tt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([sY,dY]),where:Qt}).strict(),LTt=t.object({data:t.union([vN,zY]),where:Me.optional(),limit:t.number().optional()}).strict(),VTt=t.object({data:t.union([vN,zY]),where:Me.optional(),limit:t.number().optional()}).strict(),HTt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),QTt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([mY,bY])}).strict(),YTt=t.object({select:Js.optional(),include:$s.optional(),where:q,create:t.union([mY,bY]),update:t.union([hY,IY])}).strict(),GTt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Tt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JTt=t.object({select:Js.optional(),include:$s.optional(),where:q}).strict(),KTt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([hY,IY]),where:q}).strict(),XTt=t.object({data:t.union([PT,gY]),where:pa.optional(),limit:t.number().optional()}).strict(),tPt=t.object({data:t.union([PT,gY]),where:pa.optional(),limit:t.number().optional()}).strict(),ePt=t.object({where:pa.optional(),limit:t.number().optional()}).strict(),oPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([CY,AY])}).strict(),nPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ce,create:t.union([CY,AY]),update:t.union([SY,TY])}).strict(),aPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ce}).strict(),rPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([SY,TY]),where:Ce}).strict(),pPt=t.object({data:t.union([ON,PY]),where:ca.optional(),limit:t.number().optional()}).strict(),cPt=t.object({data:t.union([ON,PY]),where:ca.optional(),limit:t.number().optional()}).strict(),uPt=t.object({where:ca.optional(),limit:t.number().optional()}).strict(),yPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([UY,WY])}).strict(),sPt=t.object({select:ed.optional(),include:td.optional(),where:Yt,create:t.union([UY,WY]),update:t.union([RY,kY])}).strict(),dPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mPt=t.object({select:ed.optional(),include:td.optional(),where:Yt}).strict(),bPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([RY,kY]),where:Yt}).strict(),hPt=t.object({data:t.union([fN,xY]),where:Ze.optional(),limit:t.number().optional()}).strict(),IPt=t.object({data:t.union([fN,xY]),where:Ze.optional(),limit:t.number().optional()}).strict(),gPt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),CPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([jY,MY])}).strict(),APt=t.object({select:nd.optional(),include:od.optional(),where:ee,create:t.union([jY,MY]),update:t.union([ZY,vY])}).strict(),SPt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TPt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PPt=t.object({select:nd.optional(),include:od.optional(),where:ee}).strict(),UPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([ZY,vY]),where:ee}).strict(),WPt=t.object({data:t.union([wN,OY]),where:Qe.optional(),limit:t.number().optional()}).strict(),RPt=t.object({data:t.union([wN,OY]),where:Qe.optional(),limit:t.number().optional()}).strict(),kPt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),xPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([fY,wY])}).strict(),jPt=t.object({select:id.optional(),include:ad.optional(),where:it,create:t.union([fY,wY]),update:t.union([NY,BY])}).strict(),MPt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZPt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vPt=t.object({select:id.optional(),include:ad.optional(),where:it}).strict(),OPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([NY,BY]),where:it}).strict(),fPt=t.object({data:t.union([Bj,qY]),where:Ye.optional(),limit:t.number().optional()}).strict(),wPt=t.object({data:t.union([Bj,qY]),where:Ye.optional(),limit:t.number().optional()}).strict(),NPt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),BPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([FY,DY])}).strict(),qPt=t.object({select:rd.optional(),include:ld.optional(),where:It,create:t.union([FY,DY]),update:t.union([EY,_Y])}).strict(),FPt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DPt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),EPt=t.object({select:rd.optional(),include:ld.optional(),where:It}).strict(),_Pt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([EY,_Y]),where:It}).strict(),LPt=t.object({data:t.union([qj,LY]),where:ua.optional(),limit:t.number().optional()}).strict(),VPt=t.object({data:t.union([qj,LY]),where:ua.optional(),limit:t.number().optional()}).strict(),HPt=t.object({where:ua.optional(),limit:t.number().optional()}).strict(),QPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([VY,HY])}).strict(),YPt=t.object({select:cd.optional(),include:pd.optional(),where:gt,create:t.union([VY,HY]),update:t.union([QY,YY])}).strict(),GPt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Pt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JPt=t.object({select:cd.optional(),include:pd.optional(),where:gt}).strict(),KPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([QY,YY]),where:gt}).strict(),XPt=t.object({data:t.union([Fj,GY]),where:ya.optional(),limit:t.number().optional()}).strict(),tUt=t.object({data:t.union([Fj,GY]),where:ya.optional(),limit:t.number().optional()}).strict(),eUt=t.object({where:ya.optional(),limit:t.number().optional()}).strict(),oUt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([$Y,JY])}).strict(),nUt=t.object({select:yd.optional(),include:ud.optional(),where:F,create:t.union([$Y,JY]),update:t.union([KY,XY])}).strict(),aUt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iUt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lUt=t.object({select:yd.optional(),include:ud.optional(),where:F}).strict(),rUt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([KY,XY]),where:F}).strict(),pUt=t.object({data:t.union([UT,tG]),where:sa.optional(),limit:t.number().optional()}).strict(),cUt=t.object({data:t.union([UT,tG]),where:sa.optional(),limit:t.number().optional()}).strict(),uUt=t.object({where:sa.optional(),limit:t.number().optional()}).strict(),yUt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([eG,oG])}).strict(),sUt=t.object({select:dd.optional(),include:sd.optional(),where:lt,create:t.union([eG,oG]),update:t.union([nG,aG])}).strict(),dUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mUt=t.object({select:dd.optional(),include:sd.optional(),where:lt}).strict(),bUt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([nG,aG]),where:lt}).strict(),hUt=t.object({data:t.union([Dj,iG]),where:we.optional(),limit:t.number().optional()}).strict(),IUt=t.object({data:t.union([Dj,iG]),where:we.optional(),limit:t.number().optional()}).strict(),gUt=t.object({where:we.optional(),limit:t.number().optional()}).strict(),CUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([lG,rG])}).strict(),AUt=t.object({select:md.optional(),include:zd.optional(),where:Ae,create:t.union([lG,rG]),update:t.union([pG,cG])}).strict(),SUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PUt=t.object({select:md.optional(),include:zd.optional(),where:Ae}).strict(),UUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([pG,cG]),where:Ae}).strict(),WUt=t.object({data:t.union([NN,uG]),where:da.optional(),limit:t.number().optional()}).strict(),RUt=t.object({data:t.union([NN,uG]),where:da.optional(),limit:t.number().optional()}).strict(),kUt=t.object({where:da.optional(),limit:t.number().optional()}).strict(),xUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([yG,sG])}).strict(),jUt=t.object({select:hd.optional(),include:bd.optional(),where:D,create:t.union([yG,sG]),update:t.union([dG,zG])}).strict(),MUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vUt=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),OUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([dG,zG]),where:D}).strict(),fUt=t.object({data:t.union([WT,mG]),where:za.optional(),limit:t.number().optional()}).strict(),wUt=t.object({data:t.union([WT,mG]),where:za.optional(),limit:t.number().optional()}).strict(),NUt=t.object({where:za.optional(),limit:t.number().optional()}).strict(),BUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([bG,hG])}).strict(),qUt=t.object({select:gd.optional(),include:Id.optional(),where:E,create:t.union([bG,hG]),update:t.union([IG,gG])}).strict(),FUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DUt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),EUt=t.object({select:gd.optional(),include:Id.optional(),where:E}).strict(),_Ut=t.object({select:gd.optional(),include:Id.optional(),data:t.union([IG,gG]),where:E}).strict(),LUt=t.object({data:t.union([RT,CG]),where:ma.optional(),limit:t.number().optional()}).strict(),VUt=t.object({data:t.union([RT,CG]),where:ma.optional(),limit:t.number().optional()}).strict(),HUt=t.object({where:ma.optional(),limit:t.number().optional()}).strict(),QUt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([AG,SG])}).strict(),YUt=t.object({select:Ad.optional(),include:Cd.optional(),where:rt,create:t.union([AG,SG]),update:t.union([TG,PG])}).strict(),GUt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Ut=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JUt=t.object({select:Ad.optional(),include:Cd.optional(),where:rt}).strict(),KUt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([TG,PG]),where:rt}).strict(),XUt=t.object({data:t.union([Ej,UG]),where:Ge.optional(),limit:t.number().optional()}).strict(),tWt=t.object({data:t.union([Ej,UG]),where:Ge.optional(),limit:t.number().optional()}).strict(),eWt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),oWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([WG,RG])}).strict(),nWt=t.object({select:Td.optional(),include:Sd.optional(),where:_,create:t.union([WG,RG]),update:t.union([kG,xG])}).strict(),aWt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iWt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lWt=t.object({select:Td.optional(),include:Sd.optional(),where:_}).strict(),rWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([kG,xG]),where:_}).strict(),pWt=t.object({data:t.union([kT,jG]),where:ba.optional(),limit:t.number().optional()}).strict(),cWt=t.object({data:t.union([kT,jG]),where:ba.optional(),limit:t.number().optional()}).strict(),uWt=t.object({where:ba.optional(),limit:t.number().optional()}).strict(),yWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([MG,ZG])}).strict(),sWt=t.object({select:Ud.optional(),include:Pd.optional(),where:Se,create:t.union([MG,ZG]),update:t.union([vG,OG])}).strict(),dWt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zWt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mWt=t.object({select:Ud.optional(),include:Pd.optional(),where:Se}).strict(),bWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([vG,OG]),where:Se}).strict(),hWt=t.object({data:t.union([BN,fG]),where:ha.optional(),limit:t.number().optional()}).strict(),IWt=t.object({data:t.union([BN,fG]),where:ha.optional(),limit:t.number().optional()}).strict(),gWt=t.object({where:ha.optional(),limit:t.number().optional()}).strict(),CWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([wG,NG])}).strict(),AWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Te,create:t.union([wG,NG]),update:t.union([BG,qG])}).strict(),SWt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TWt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Te}).strict(),UWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([BG,qG]),where:Te}).strict(),WWt=t.object({data:t.union([qN,FG]),where:Ia.optional(),limit:t.number().optional()}).strict(),RWt=t.object({data:t.union([qN,FG]),where:Ia.optional(),limit:t.number().optional()}).strict(),kWt=t.object({where:Ia.optional(),limit:t.number().optional()}).strict(),xWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([DG,EG])}).strict(),jWt=t.object({select:xd.optional(),include:kd.optional(),where:Pe,create:t.union([DG,EG]),update:t.union([_G,LG])}).strict(),MWt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZWt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vWt=t.object({select:xd.optional(),include:kd.optional(),where:Pe}).strict(),OWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([_G,LG]),where:Pe}).strict(),fWt=t.object({data:t.union([FN,VG]),where:ga.optional(),limit:t.number().optional()}).strict(),wWt=t.object({data:t.union([FN,VG]),where:ga.optional(),limit:t.number().optional()}).strict(),NWt=t.object({where:ga.optional(),limit:t.number().optional()}).strict(),BWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([HG,QG])}).strict(),qWt=t.object({select:Md.optional(),include:jd.optional(),where:L,create:t.union([HG,QG]),update:t.union([YG,GG])}).strict(),FWt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DWt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),EWt=t.object({select:Md.optional(),include:jd.optional(),where:L}).strict(),_Wt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([YG,GG]),where:L}).strict(),LWt=t.object({data:t.union([xT,$G]),where:Ca.optional(),limit:t.number().optional()}).strict(),VWt=t.object({data:t.union([xT,$G]),where:Ca.optional(),limit:t.number().optional()}).strict(),HWt=t.object({where:Ca.optional(),limit:t.number().optional()}).strict(),QWt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([JG,KG])}).strict(),YWt=t.object({select:vd.optional(),include:Zd.optional(),where:op,create:t.union([JG,KG]),update:t.union([XG,t1])}).strict(),GWt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Wt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JWt=t.object({select:vd.optional(),include:Zd.optional(),where:op}).strict(),KWt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([XG,t1]),where:op}).strict(),XWt=t.object({data:t.union([e1,o1]),where:co.optional(),limit:t.number().optional()}).strict(),tRt=t.object({data:t.union([e1,o1]),where:co.optional(),limit:t.number().optional()}).strict(),eRt=t.object({where:co.optional(),limit:t.number().optional()}).strict(),oRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([n1,a1])}).strict(),nRt=t.object({select:fd.optional(),include:Od.optional(),where:Ct,create:t.union([n1,a1]),update:t.union([i1,l1])}).strict(),aRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lRt=t.object({select:fd.optional(),include:Od.optional(),where:Ct}).strict(),rRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([i1,l1]),where:Ct}).strict(),pRt=t.object({data:t.union([_j,r1]),where:Aa.optional(),limit:t.number().optional()}).strict(),cRt=t.object({data:t.union([_j,r1]),where:Aa.optional(),limit:t.number().optional()}).strict(),uRt=t.object({where:Aa.optional(),limit:t.number().optional()}).strict(),yRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([p1,c1])}).strict(),sRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ue,create:t.union([p1,c1]),update:t.union([u1,y1])}).strict(),dRt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zRt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mRt=t.object({select:Nd.optional(),include:wd.optional(),where:Ue}).strict(),bRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([u1,y1]),where:Ue}).strict(),hRt=t.object({data:t.union([DN,s1]),where:Sa.optional(),limit:t.number().optional()}).strict(),IRt=t.object({data:t.union([DN,s1]),where:Sa.optional(),limit:t.number().optional()}).strict(),gRt=t.object({where:Sa.optional(),limit:t.number().optional()}).strict(),CRt=t.object({select:Em.optional(),data:t.union([d1,z1])}).strict(),ARt=t.object({select:Em.optional(),where:_m,create:t.union([d1,z1]),update:t.union([m1,b1])}).strict(),SRt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TRt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PRt=t.object({select:Em.optional(),where:_m}).strict(),URt=t.object({select:Em.optional(),data:t.union([m1,b1]),where:_m}).strict(),WRt=t.object({data:t.union([h1,I1]),where:zl.optional(),limit:t.number().optional()}).strict(),RRt=t.object({data:t.union([h1,I1]),where:zl.optional(),limit:t.number().optional()}).strict(),kRt=t.object({where:zl.optional(),limit:t.number().optional()}).strict(),xRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([g1,C1])}).strict(),jRt=t.object({select:qd.optional(),include:Bd.optional(),where:vl,create:t.union([g1,C1]),update:t.union([A1,S1])}).strict(),MRt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZRt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vRt=t.object({select:qd.optional(),include:Bd.optional(),where:vl}).strict(),ORt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([A1,S1]),where:vl}).strict(),fRt=t.object({data:t.union([T1,P1]),where:je.optional(),limit:t.number().optional()}).strict(),wRt=t.object({data:t.union([T1,P1]),where:je.optional(),limit:t.number().optional()}).strict(),NRt=t.object({where:je.optional(),limit:t.number().optional()}).strict(),BRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([U1,W1])}).strict(),qRt=t.object({select:Dd.optional(),include:Fd.optional(),where:$n,create:t.union([U1,W1]),update:t.union([R1,k1])}).strict(),FRt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DRt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ERt=t.object({select:Dd.optional(),include:Fd.optional(),where:$n}).strict(),_Rt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([R1,k1]),where:$n}).strict(),LRt=t.object({data:t.union([x1,j1]),where:Dt.optional(),limit:t.number().optional()}).strict(),VRt=t.object({data:t.union([x1,j1]),where:Dt.optional(),limit:t.number().optional()}).strict(),HRt=t.object({where:Dt.optional(),limit:t.number().optional()}).strict(),QRt=t.object({select:_d.optional(),include:Ed.optional(),data:t.union([M1,Z1])}).strict(),YRt=t.object({select:_d.optional(),include:Ed.optional(),where:K,create:t.union([M1,Z1]),update:t.union([v1,O1])}).strict(),GRt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Rt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JRt=t.object({select:_d.optional(),include:Ed.optional(),where:K}).strict(),KRt=t.object({select:_d.optional(),include:Ed.optional(),data:t.union([v1,O1]),where:K}).strict(),XRt=t.object({data:t.union([EN,f1]),where:B.optional(),limit:t.number().optional()}).strict(),tkt=t.object({data:t.union([EN,f1]),where:B.optional(),limit:t.number().optional()}).strict(),ekt=t.object({where:B.optional(),limit:t.number().optional()}).strict(),okt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([w1,N1])}).strict(),nkt=t.object({select:Vd.optional(),include:Ld.optional(),where:M,create:t.union([w1,N1]),update:t.union([B1,q1])}).strict(),akt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ikt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lkt=t.object({select:Vd.optional(),include:Ld.optional(),where:M}).strict(),rkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([B1,q1]),where:M}).strict(),pkt=t.object({data:t.union([Lj,F1]),where:v.optional(),limit:t.number().optional()}).strict(),ckt=t.object({data:t.union([Lj,F1]),where:v.optional(),limit:t.number().optional()}).strict(),ukt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),ykt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([D1,E1])}).strict(),skt=t.object({select:Qd.optional(),include:Hd.optional(),where:We,create:t.union([D1,E1]),update:t.union([_1,L1])}).strict(),dkt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zkt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mkt=t.object({select:Qd.optional(),include:Hd.optional(),where:We}).strict(),bkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([_1,L1]),where:We}).strict(),hkt=t.object({data:t.union([_N,V1]),where:Ta.optional(),limit:t.number().optional()}).strict(),Ikt=t.object({data:t.union([_N,V1]),where:Ta.optional(),limit:t.number().optional()}).strict(),gkt=t.object({where:Ta.optional(),limit:t.number().optional()}).strict(),Ckt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([H1,Q1])}).strict(),Akt=t.object({select:Gd.optional(),include:Yd.optional(),where:oe,create:t.union([H1,Q1]),update:t.union([Y1,G1])}).strict(),Skt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tkt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pkt=t.object({select:Gd.optional(),include:Yd.optional(),where:oe}).strict(),Ukt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([Y1,G1]),where:oe}).strict(),Wkt=t.object({data:t.union([LN,$1]),where:$e.optional(),limit:t.number().optional()}).strict(),Rkt=t.object({data:t.union([LN,$1]),where:$e.optional(),limit:t.number().optional()}).strict(),kkt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),xkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([J1,K1])}).strict(),jkt=t.object({select:Jd.optional(),include:$d.optional(),where:C,create:t.union([J1,K1]),update:t.union([X1,t9])}).strict(),Mkt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zkt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vkt=t.object({select:Jd.optional(),include:$d.optional(),where:C}).strict(),Okt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([X1,t9]),where:C}).strict(),fkt=t.object({data:t.union([AI,e9]),where:O.optional(),limit:t.number().optional()}).strict(),wkt=t.object({data:t.union([AI,e9]),where:O.optional(),limit:t.number().optional()}).strict(),Nkt=t.object({where:O.optional(),limit:t.number().optional()}).strict(),Bkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([o9,n9])}).strict(),qkt=t.object({select:Xd.optional(),include:Kd.optional(),where:$,create:t.union([o9,n9]),update:t.union([a9,i9])}).strict(),Fkt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dkt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ekt=t.object({select:Xd.optional(),include:Kd.optional(),where:$}).strict(),_kt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([a9,i9]),where:$}).strict(),Lkt=t.object({data:t.union([Vj,l9]),where:Mt.optional(),limit:t.number().optional()}).strict(),Vkt=t.object({data:t.union([Vj,l9]),where:Mt.optional(),limit:t.number().optional()}).strict(),Hkt=t.object({where:Mt.optional(),limit:t.number().optional()}).strict(),Qkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([r9,p9])}).strict(),Ykt=t.object({select:ez.optional(),include:tz.optional(),where:V,create:t.union([r9,p9]),update:t.union([c9,u9])}).strict(),Gkt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$kt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jkt=t.object({select:ez.optional(),include:tz.optional(),where:V}).strict(),Kkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([c9,u9]),where:V}).strict(),Xkt=t.object({data:t.union([jT,y9]),where:Pa.optional(),limit:t.number().optional()}).strict(),txt=t.object({data:t.union([jT,y9]),where:Pa.optional(),limit:t.number().optional()}).strict(),ext=t.object({where:Pa.optional(),limit:t.number().optional()}).strict(),oxt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([s9,d9])}).strict(),nxt=t.object({select:nz.optional(),include:oz.optional(),where:pt,create:t.union([s9,d9]),update:t.union([z9,m9])}).strict(),axt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ixt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lxt=t.object({select:nz.optional(),include:oz.optional(),where:pt}).strict(),rxt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([z9,m9]),where:pt}).strict(),pxt=t.object({data:t.union([Hj,b9]),where:Ne.optional(),limit:t.number().optional()}).strict(),cxt=t.object({data:t.union([Hj,b9]),where:Ne.optional(),limit:t.number().optional()}).strict(),uxt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),yxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([h9,I9])}).strict(),sxt=t.object({select:iz.optional(),include:az.optional(),where:w,create:t.union([h9,I9]),update:t.union([g9,C9])}).strict(),dxt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zxt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mxt=t.object({select:iz.optional(),include:az.optional(),where:w}).strict(),bxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([g9,C9]),where:w}).strict(),hxt=t.object({data:t.union([MT,A9]),where:le.optional(),limit:t.number().optional()}).strict(),Ixt=t.object({data:t.union([MT,A9]),where:le.optional(),limit:t.number().optional()}).strict(),gxt=t.object({where:le.optional(),limit:t.number().optional()}).strict(),Cxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([S9,T9])}).strict(),Axt=t.object({select:rz.optional(),include:lz.optional(),where:H,create:t.union([S9,T9]),update:t.union([P9,U9])}).strict(),Sxt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Txt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pxt=t.object({select:rz.optional(),include:lz.optional(),where:H}).strict(),Uxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([P9,U9]),where:H}).strict(),Wxt=t.object({data:t.union([ZT,W9]),where:Ua.optional(),limit:t.number().optional()}).strict(),Rxt=t.object({data:t.union([ZT,W9]),where:Ua.optional(),limit:t.number().optional()}).strict(),kxt=t.object({where:Ua.optional(),limit:t.number().optional()}).strict(),xxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([R9,k9])}).strict(),jxt=t.object({select:cz.optional(),include:pz.optional(),where:ct,create:t.union([R9,k9]),update:t.union([x9,j9])}).strict(),Mxt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zxt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vxt=t.object({select:cz.optional(),include:pz.optional(),where:ct}).strict(),Oxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([x9,j9]),where:ct}).strict(),fxt=t.object({data:t.union([Qj,M9]),where:Je.optional(),limit:t.number().optional()}).strict(),wxt=t.object({data:t.union([Qj,M9]),where:Je.optional(),limit:t.number().optional()}).strict(),Nxt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),Bxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([Z9,v9])}).strict(),qxt=t.object({select:yz.optional(),include:uz.optional(),where:At,create:t.union([Z9,v9]),update:t.union([O9,f9])}).strict(),Fxt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dxt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ext=t.object({select:yz.optional(),include:uz.optional(),where:At}).strict(),_xt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([O9,f9]),where:At}).strict(),Lxt=t.object({data:t.union([Yj,w9]),where:Wa.optional(),limit:t.number().optional()}).strict(),Vxt=t.object({data:t.union([Yj,w9]),where:Wa.optional(),limit:t.number().optional()}).strict(),Hxt=t.object({where:Wa.optional(),limit:t.number().optional()}).strict(),Qxt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([N9,B9])}).strict(),Yxt=t.object({select:dz.optional(),include:sz.optional(),where:Fl,create:t.union([N9,B9]),update:t.union([q9,F9])}).strict(),Gxt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$xt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jxt=t.object({select:dz.optional(),include:sz.optional(),where:Fl}).strict(),Kxt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([q9,F9]),where:Fl}).strict(),Xxt=t.object({data:t.union([D9,E9]),where:Fe.optional(),limit:t.number().optional()}).strict(),tjt=t.object({data:t.union([D9,E9]),where:Fe.optional(),limit:t.number().optional()}).strict(),ejt=t.object({where:Fe.optional(),limit:t.number().optional()}).strict(),ojt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([_9,L9])}).strict(),njt=t.object({select:mz.optional(),include:zz.optional(),where:ut,create:t.union([_9,L9]),update:t.union([V9,H9])}).strict(),ajt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ijt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ljt=t.object({select:mz.optional(),include:zz.optional(),where:ut}).strict(),rjt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([V9,H9]),where:ut}).strict(),pjt=t.object({data:t.union([Gj,Q9]),where:Ke.optional(),limit:t.number().optional()}).strict(),cjt=t.object({data:t.union([Gj,Q9]),where:Ke.optional(),limit:t.number().optional()}).strict(),ujt=t.object({where:Ke.optional(),limit:t.number().optional()}).strict(),yjt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([Y9,G9])}).strict(),sjt=t.object({select:hz.optional(),include:bz.optional(),where:St,create:t.union([Y9,G9]),update:t.union([$9,J9])}).strict(),djt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zjt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mjt=t.object({select:hz.optional(),include:bz.optional(),where:St}).strict(),bjt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([$9,J9]),where:St}).strict(),hjt=t.object({data:t.union([$j,K9]),where:Ra.optional(),limit:t.number().optional()}).strict(),Ijt=t.object({data:t.union([$j,K9]),where:Ra.optional(),limit:t.number().optional()}).strict(),gjt=t.object({where:Ra.optional(),limit:t.number().optional()}).strict(),Cjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([X9,t$])}).strict(),Ajt=t.object({select:gz.optional(),include:Iz.optional(),where:Gt,create:t.union([X9,t$]),update:t.union([e$,o$])}).strict(),Sjt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tjt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pjt=t.object({select:gz.optional(),include:Iz.optional(),where:Gt}).strict(),Ujt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([e$,o$]),where:Gt}).strict(),Wjt=t.object({data:t.union([VN,n$]),where:ve.optional(),limit:t.number().optional()}).strict(),Rjt=t.object({data:t.union([VN,n$]),where:ve.optional(),limit:t.number().optional()}).strict(),kjt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),xjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([a$,i$])}).strict(),jjt=t.object({select:Az.optional(),include:Cz.optional(),where:ne,create:t.union([a$,i$]),update:t.union([l$,r$])}).strict(),Mjt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zjt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),vjt=t.object({select:Az.optional(),include:Cz.optional(),where:ne}).strict(),Ojt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([l$,r$]),where:ne}).strict(),fjt=t.object({data:t.union([HN,p$]),where:Xe.optional(),limit:t.number().optional()}).strict(),wjt=t.object({data:t.union([HN,p$]),where:Xe.optional(),limit:t.number().optional()}).strict(),Njt=t.object({where:Xe.optional(),limit:t.number().optional()}).strict(),Bjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([c$,u$])}).strict(),qjt=t.object({select:Tz.optional(),include:Sz.optional(),where:ae,create:t.union([c$,u$]),update:t.union([y$,s$])}).strict(),Fjt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Djt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ejt=t.object({select:Tz.optional(),include:Sz.optional(),where:ae}).strict(),_jt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([y$,s$]),where:ae}).strict(),Ljt=t.object({data:t.union([QN,d$]),where:to.optional(),limit:t.number().optional()}).strict(),Vjt=t.object({data:t.union([QN,d$]),where:to.optional(),limit:t.number().optional()}).strict(),Hjt=t.object({where:to.optional(),limit:t.number().optional()}).strict(),Qjt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([z$,m$])}).strict(),Yjt=t.object({select:Uz.optional(),include:Pz.optional(),where:Q,create:t.union([z$,m$]),update:t.union([b$,h$])}).strict(),Gjt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$jt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jjt=t.object({select:Uz.optional(),include:Pz.optional(),where:Q}).strict(),Kjt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([b$,h$]),where:Q}).strict(),Xjt=t.object({data:t.union([vT,I$]),where:ka.optional(),limit:t.number().optional()}).strict(),tMt=t.object({data:t.union([vT,I$]),where:ka.optional(),limit:t.number().optional()}).strict(),eMt=t.object({where:ka.optional(),limit:t.number().optional()}).strict(),oMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([g$,C$])}).strict(),nMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Re,create:t.union([g$,C$]),update:t.union([A$,S$])}).strict(),aMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Re}).strict(),rMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([A$,S$]),where:Re}).strict(),pMt=t.object({data:t.union([YN,T$]),where:xa.optional(),limit:t.number().optional()}).strict(),cMt=t.object({data:t.union([YN,T$]),where:xa.optional(),limit:t.number().optional()}).strict(),uMt=t.object({where:xa.optional(),limit:t.number().optional()}).strict(),yMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([P$,U$])}).strict(),sMt=t.object({select:xz.optional(),include:kz.optional(),where:$t,create:t.union([P$,U$]),update:t.union([W$,R$])}).strict(),dMt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),zMt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mMt=t.object({select:xz.optional(),include:kz.optional(),where:$t}).strict(),bMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([W$,R$]),where:$t}).strict(),hMt=t.object({data:t.union([GN,k$]),where:Oe.optional(),limit:t.number().optional()}).strict(),IMt=t.object({data:t.union([GN,k$]),where:Oe.optional(),limit:t.number().optional()}).strict(),gMt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),CMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([x$,j$])}).strict(),AMt=t.object({select:Mz.optional(),include:jz.optional(),where:Tt,create:t.union([x$,j$]),update:t.union([M$,Z$])}).strict(),SMt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),TMt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),PMt=t.object({select:Mz.optional(),include:jz.optional(),where:Tt}).strict(),UMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([M$,Z$]),where:Tt}).strict(),WMt=t.object({data:t.union([Jj,v$]),where:ja.optional(),limit:t.number().optional()}).strict(),RMt=t.object({data:t.union([Jj,v$]),where:ja.optional(),limit:t.number().optional()}).strict(),kMt=t.object({where:ja.optional(),limit:t.number().optional()}).strict(),xMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([O$,f$])}).strict(),jMt=t.object({select:vz.optional(),include:Zz.optional(),where:x,create:t.union([O$,f$]),update:t.union([w$,N$])}).strict(),MMt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZMt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vMt=t.object({select:vz.optional(),include:Zz.optional(),where:x}).strict(),OMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([w$,N$]),where:x}).strict(),fMt=t.object({data:t.union([bS,B$]),where:Pt.optional(),limit:t.number().optional()}).strict(),wMt=t.object({data:t.union([bS,B$]),where:Pt.optional(),limit:t.number().optional()}).strict(),NMt=t.object({where:Pt.optional(),limit:t.number().optional()}).strict(),BMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([q$,F$])}).strict(),qMt=t.object({select:fz.optional(),include:Oz.optional(),where:Dl,create:t.union([q$,F$]),update:t.union([D$,E$])}).strict(),FMt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),DMt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),EMt=t.object({select:fz.optional(),include:Oz.optional(),where:Dl}).strict(),_Mt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([D$,E$]),where:Dl}).strict(),LMt=t.object({data:t.union([_$,L$]),where:De.optional(),limit:t.number().optional()}).strict(),VMt=t.object({data:t.union([_$,L$]),where:De.optional(),limit:t.number().optional()}).strict(),HMt=t.object({where:De.optional(),limit:t.number().optional()}).strict(),QMt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([V$,H$])}).strict(),YMt=t.object({select:Nz.optional(),include:wz.optional(),where:ke,create:t.union([V$,H$]),update:t.union([Q$,Y$])}).strict(),GMt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Mt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),JMt=t.object({select:Nz.optional(),include:wz.optional(),where:ke}).strict(),KMt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([Q$,Y$]),where:ke}).strict(),XMt=t.object({data:t.union([$N,G$]),where:Ma.optional(),limit:t.number().optional()}).strict(),tZt=t.object({data:t.union([$N,G$]),where:Ma.optional(),limit:t.number().optional()}).strict(),eZt=t.object({where:Ma.optional(),limit:t.number().optional()}).strict(),oZt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([$$,J$])}).strict(),nZt=t.object({select:qz.optional(),include:Bz.optional(),where:xe,create:t.union([$$,J$]),update:t.union([K$,X$])}).strict(),aZt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),iZt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lZt=t.object({select:qz.optional(),include:Bz.optional(),where:xe}).strict(),rZt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([K$,X$]),where:xe}).strict(),pZt=t.object({data:t.union([JN,t4]),where:Za.optional(),limit:t.number().optional()}).strict(),cZt=t.object({data:t.union([JN,t4]),where:Za.optional(),limit:t.number().optional()}).strict(),uZt=t.object({where:Za.optional(),limit:t.number().optional()}).strict();exports.zodSchemas=cst;Object.keys(client).forEach(function(k){if(k!=='default'&&!Object.prototype.hasOwnProperty.call(exports,k))Object.defineProperty(exports,k,{enumerable:true,get:function(){return client[k]}})});