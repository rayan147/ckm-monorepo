'use strict';var client=require('@prisma/client');var Wmt=Object.defineProperty;var Rmt=(c,i)=>{for(var p in i)Wmt(c,p,{get:i[p],enumerable:true});};var Pmt={};Rmt(Pmt,{AllergenAggregateArgsSchema:()=>vCt,AllergenArgsSchema:()=>lY,AllergenAvgOrderByAggregateInputSchema:()=>qit,AllergenCountOrderByAggregateInputSchema:()=>Bit,AllergenCountOutputTypeArgsSchema:()=>rY,AllergenCountOutputTypeSelectSchema:()=>Pot,AllergenCreateArgsSchema:()=>cxt,AllergenCreateInputSchema:()=>b9,AllergenCreateManyAndReturnArgsSchema:()=>yxt,AllergenCreateManyArgsSchema:()=>sxt,AllergenCreateManyInputSchema:()=>cW,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>o6,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>m8,AllergenCreateWithoutIngredientsInputSchema:()=>CO,AllergenDeleteArgsSchema:()=>dxt,AllergenDeleteManyArgsSchema:()=>bxt,AllergenFindFirstArgsSchema:()=>jCt,AllergenFindFirstOrThrowArgsSchema:()=>MCt,AllergenFindManyArgsSchema:()=>ZCt,AllergenFindUniqueArgsSchema:()=>fCt,AllergenFindUniqueOrThrowArgsSchema:()=>wCt,AllergenGroupByArgsSchema:()=>OCt,AllergenIncludeSchema:()=>Yd,AllergenMaxOrderByAggregateInputSchema:()=>Fit,AllergenMinOrderByAggregateInputSchema:()=>Dit,AllergenOrderByWithAggregationInputSchema:()=>AH,AllergenOrderByWithRelationInputSchema:()=>$m,AllergenScalarFieldEnumSchema:()=>iC,AllergenScalarRelationFilterSchema:()=>q2,AllergenScalarWhereWithAggregatesInputSchema:()=>fA,AllergenSchema:()=>ket,AllergenSelectSchema:()=>Gd,AllergenSumOrderByAggregateInputSchema:()=>Eit,AllergenUncheckedCreateInputSchema:()=>I9,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>AO,AllergenUncheckedUpdateInputSchema:()=>C9,AllergenUncheckedUpdateManyInputSchema:()=>S9,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>rL,AllergenUpdateArgsSchema:()=>zxt,AllergenUpdateInputSchema:()=>g9,AllergenUpdateManyAndReturnArgsSchema:()=>hxt,AllergenUpdateManyArgsSchema:()=>mxt,AllergenUpdateManyMutationInputSchema:()=>A9,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>a6,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Xst,AllergenUpdateWithoutIngredientsInputSchema:()=>lL,AllergenUpsertArgsSchema:()=>uxt,AllergenUpsertWithoutIngredientsInputSchema:()=>Kst,AllergenWhereInputSchema:()=>co,AllergenWhereUniqueInputSchema:()=>sp,AllergenWithRelationsSchema:()=>xet,AuthAggregateArgsSchema:()=>jAt,AuthArgsSchema:()=>ibt,AuthAvgOrderByAggregateInputSchema:()=>Nlt,AuthCountOrderByAggregateInputSchema:()=>wlt,AuthCreateArgsSchema:()=>Ujt,AuthCreateInputSchema:()=>r$,AuthCreateManyAndReturnArgsSchema:()=>jjt,AuthCreateManyArgsSchema:()=>xjt,AuthCreateManyInputSchema:()=>bW,AuthCreateManyUserInputEnvelopeSchema:()=>bf,AuthCreateManyUserInputSchema:()=>HQ,AuthCreateNestedManyWithoutUserInputSchema:()=>ii,AuthCreateOrConnectWithoutUserInputSchema:()=>Vb,AuthCreateWithoutUserInputSchema:()=>Ju,AuthDeleteArgsSchema:()=>Mjt,AuthDeleteManyArgsSchema:()=>fjt,AuthFindFirstArgsSchema:()=>kAt,AuthFindFirstOrThrowArgsSchema:()=>xAt,AuthFindManyArgsSchema:()=>mtt,AuthFindUniqueArgsSchema:()=>ZAt,AuthFindUniqueOrThrowArgsSchema:()=>vAt,AuthGroupByArgsSchema:()=>MAt,AuthIncludeSchema:()=>pz,AuthListRelationFilterSchema:()=>n5,AuthMaxOrderByAggregateInputSchema:()=>Blt,AuthMinOrderByAggregateInputSchema:()=>qlt,AuthOrderByRelationAggregateInputSchema:()=>jlt,AuthOrderByWithAggregationInputSchema:()=>xH,AuthOrderByWithRelationInputSchema:()=>Nh,AuthScalarFieldEnumSchema:()=>dC,AuthScalarWhereInputSchema:()=>qp,AuthScalarWhereWithAggregatesInputSchema:()=>_A,AuthSchema:()=>Net,AuthSelectSchema:()=>cz,AuthSumOrderByAggregateInputSchema:()=>Flt,AuthUncheckedCreateInputSchema:()=>p$,AuthUncheckedCreateNestedManyWithoutUserInputSchema:()=>Pi,AuthUncheckedCreateWithoutUserInputSchema:()=>Ku,AuthUncheckedUpdateInputSchema:()=>u$,AuthUncheckedUpdateManyInputSchema:()=>s$,AuthUncheckedUpdateManyWithoutUserInputSchema:()=>kzt,AuthUncheckedUpdateManyWithoutUserNestedInputSchema:()=>ul,AuthUncheckedUpdateWithoutUserInputSchema:()=>pK,AuthUpdateArgsSchema:()=>Zjt,AuthUpdateInputSchema:()=>c$,AuthUpdateManyAndReturnArgsSchema:()=>Ojt,AuthUpdateManyArgsSchema:()=>vjt,AuthUpdateManyMutationInputSchema:()=>QB,AuthUpdateManyWithWhereWithoutUserInputSchema:()=>Zk,AuthUpdateManyWithoutUserNestedInputSchema:()=>Vi,AuthUpdateWithWhereUniqueWithoutUserInputSchema:()=>Mk,AuthUpdateWithoutUserInputSchema:()=>rK,AuthUpsertArgsSchema:()=>kjt,AuthUpsertWithWhereUniqueWithoutUserInputSchema:()=>jk,AuthWhereInputSchema:()=>Wa,AuthWhereUniqueInputSchema:()=>Re,AuthWithRelationsSchema:()=>Bet,AvailabilityAggregateArgsSchema:()=>zCt,AvailabilityArgsSchema:()=>tbt,AvailabilityAvgOrderByAggregateInputSchema:()=>Sit,AvailabilityCountOrderByAggregateInputSchema:()=>Ait,AvailabilityCreateArgsSchema:()=>wkt,AvailabilityCreateInputSchema:()=>o9,AvailabilityCreateManyAndReturnArgsSchema:()=>qkt,AvailabilityCreateManyArgsSchema:()=>Bkt,AvailabilityCreateManyInputSchema:()=>lW,AvailabilityCreateManyUserInputEnvelopeSchema:()=>pf,AvailabilityCreateManyUserInputSchema:()=>NQ,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>$a,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>wb,AvailabilityCreateWithoutUserInputSchema:()=>vu,AvailabilityDeleteArgsSchema:()=>Fkt,AvailabilityDeleteManyArgsSchema:()=>Lkt,AvailabilityFindFirstArgsSchema:()=>yCt,AvailabilityFindFirstOrThrowArgsSchema:()=>dCt,AvailabilityFindManyArgsSchema:()=>stt,AvailabilityFindUniqueArgsSchema:()=>hCt,AvailabilityFindUniqueOrThrowArgsSchema:()=>bCt,AvailabilityGroupByArgsSchema:()=>mCt,AvailabilityIncludeSchema:()=>Ed,AvailabilityListRelationFilterSchema:()=>e5,AvailabilityMaxOrderByAggregateInputSchema:()=>Tit,AvailabilityMinOrderByAggregateInputSchema:()=>Pit,AvailabilityOrderByRelationAggregateInputSchema:()=>klt,AvailabilityOrderByWithAggregationInputSchema:()=>IH,AvailabilityOrderByWithRelationInputSchema:()=>Mh,AvailabilityScalarFieldEnumSchema:()=>oC,AvailabilityScalarWhereInputSchema:()=>Np,AvailabilityScalarWhereWithAggregatesInputSchema:()=>ZA,AvailabilitySchema:()=>Tet,AvailabilitySelectSchema:()=>_d,AvailabilitySumOrderByAggregateInputSchema:()=>Wit,AvailabilityUncheckedCreateInputSchema:()=>n9,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>mi,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>Ou,AvailabilityUncheckedUpdateInputSchema:()=>i9,AvailabilityUncheckedUpdateManyInputSchema:()=>l9,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>gzt,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>el,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>LJ,AvailabilityUpdateArgsSchema:()=>Dkt,AvailabilityUpdateInputSchema:()=>a9,AvailabilityUpdateManyAndReturnArgsSchema:()=>_kt,AvailabilityUpdateManyArgsSchema:()=>Ekt,AvailabilityUpdateManyMutationInputSchema:()=>_B,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>ik,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>wi,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>ak,AvailabilityUpdateWithoutUserInputSchema:()=>_J,AvailabilityUpsertArgsSchema:()=>Nkt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>nk,AvailabilityWhereInputSchema:()=>Ca,AvailabilityWhereUniqueInputSchema:()=>Te,AvailabilityWithRelationsSchema:()=>Pet,BoolFieldUpdateOperationsInputSchema:()=>d,BoolFilterSchema:()=>zt,BoolWithAggregatesFilterSchema:()=>Kn,CategorySchema:()=>W,ChecklistCompleteAggregateArgsSchema:()=>ogt,ChecklistCompleteArgsSchema:()=>tY,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>hat,ChecklistCompleteCountOrderByAggregateInputSchema:()=>mat,ChecklistCompleteCountOutputTypeArgsSchema:()=>eY,ChecklistCompleteCountOutputTypeSelectSchema:()=>Cot,ChecklistCompleteCreateArgsSchema:()=>VRt,ChecklistCompleteCreateInputSchema:()=>e1,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>YRt,ChecklistCompleteCreateManyArgsSchema:()=>QRt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>dv,ChecklistCompleteCreateManyChecklistInputSchema:()=>lQ,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>sf,ChecklistCompleteCreateManyCompletedByInputSchema:()=>FQ,ChecklistCompleteCreateManyInputSchema:()=>GP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>Kq,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>Xa,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>Q5,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>eb,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>qb,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>L3,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>bc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>qu,ChecklistCompleteCreateWithoutItemsInputSchema:()=>Sv,ChecklistCompleteDeleteArgsSchema:()=>GRt,ChecklistCompleteDeleteManyArgsSchema:()=>XRt,ChecklistCompleteFindFirstArgsSchema:()=>tgt,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>egt,ChecklistCompleteFindManyArgsSchema:()=>BN,ChecklistCompleteFindUniqueArgsSchema:()=>agt,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>igt,ChecklistCompleteGroupByArgsSchema:()=>ngt,ChecklistCompleteIncludeSchema:()=>Cd,ChecklistCompleteListRelationFilterSchema:()=>LM,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>bat,ChecklistCompleteMinOrderByAggregateInputSchema:()=>Iat,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>j2,ChecklistCompleteOrderByWithAggregationInputSchema:()=>rH,ChecklistCompleteOrderByWithRelationInputSchema:()=>Ym,ChecklistCompleteScalarFieldEnumSchema:()=>Vg,ChecklistCompleteScalarRelationFilterSchema:()=>Z2,ChecklistCompleteScalarWhereInputSchema:()=>kl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>AA,ChecklistCompleteSchema:()=>cet,ChecklistCompleteSelectSchema:()=>Ad,ChecklistCompleteSumOrderByAggregateInputSchema:()=>gat,ChecklistCompleteUncheckedCreateInputSchema:()=>o1,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>tF,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Ii,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>Ic,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Fu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>Tv,ChecklistCompleteUncheckedUpdateInputSchema:()=>a1,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>i1,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>Bdt,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>iF,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>Szt,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>al,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>k7,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>$J,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>s_,ChecklistCompleteUpdateArgsSchema:()=>$Rt,ChecklistCompleteUpdateInputSchema:()=>n1,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>KRt,ChecklistCompleteUpdateManyArgsSchema:()=>JRt,ChecklistCompleteUpdateManyMutationInputSchema:()=>UM,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>pR,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>zk,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>nF,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>qi,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>G5,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>nst,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>rR,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>dk,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>U7,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>GJ,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>u_,ChecklistCompleteUpsertArgsSchema:()=>HRt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>lR,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>yk,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>ost,ChecklistCompleteWhereInputSchema:()=>Ye,ChecklistCompleteWhereUniqueInputSchema:()=>lt,ChecklistCompleteWithRelationsSchema:()=>mB,ChecklistFrequencySchema:()=>qt,ChecklistItemAggregateArgsSchema:()=>$It,ChecklistItemArgsSchema:()=>K0,ChecklistItemAvgOrderByAggregateInputSchema:()=>uat,ChecklistItemCompleteAggregateArgsSchema:()=>pgt,ChecklistItemCompleteArgsSchema:()=>Vht,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>Aat,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>Cat,ChecklistItemCompleteCreateArgsSchema:()=>tUt,ChecklistItemCompleteCreateInputSchema:()=>l1,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>nUt,ChecklistItemCompleteCreateManyArgsSchema:()=>oUt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>Av,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>pQ,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>hv,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>rQ,ChecklistItemCompleteCreateManyInputSchema:()=>$P,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>pF,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>E5,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>nb,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>ob,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>Ac,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>gc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>ph,ChecklistItemCompleteDeleteArgsSchema:()=>aUt,ChecklistItemCompleteDeleteManyArgsSchema:()=>pUt,ChecklistItemCompleteFindFirstArgsSchema:()=>lgt,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>rgt,ChecklistItemCompleteFindManyArgsSchema:()=>qN,ChecklistItemCompleteFindUniqueArgsSchema:()=>ugt,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>sgt,ChecklistItemCompleteGroupByArgsSchema:()=>cgt,ChecklistItemCompleteIncludeSchema:()=>Sd,ChecklistItemCompleteListRelationFilterSchema:()=>HM,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>Sat,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>Tat,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>M2,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>pH,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>Sh,ChecklistItemCompleteScalarFieldEnumSchema:()=>Hg,ChecklistItemCompleteScalarWhereInputSchema:()=>xl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>SA,ChecklistItemCompleteSchema:()=>uet,ChecklistItemCompleteSelectSchema:()=>Td,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>Pat,ChecklistItemCompleteUncheckedCreateInputSchema:()=>r1,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>cF,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>_5,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>Sc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>Cc,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>c1,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>u1,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Fdt,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>dF,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>qdt,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>H5,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>Z7,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>j7,ChecklistItemCompleteUpdateArgsSchema:()=>iUt,ChecklistItemCompleteUpdateInputSchema:()=>p1,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>rUt,ChecklistItemCompleteUpdateManyArgsSchema:()=>lUt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>kM,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>zR,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>sR,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>yF,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>V5,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>dR,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>uR,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>M7,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>x7,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>im,ChecklistItemCompleteUpsertArgsSchema:()=>eUt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>yR,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>cR,ChecklistItemCompleteWhereInputSchema:()=>sa,ChecklistItemCompleteWhereUniqueInputSchema:()=>bt,ChecklistItemCompleteWithRelationsSchema:()=>f0,ChecklistItemCountOrderByAggregateInputSchema:()=>cat,ChecklistItemCountOutputTypeArgsSchema:()=>X0,ChecklistItemCountOutputTypeSelectSchema:()=>got,ChecklistItemCreateArgsSchema:()=>wRt,ChecklistItemCreateInputSchema:()=>$G,ChecklistItemCreateManyAndReturnArgsSchema:()=>qRt,ChecklistItemCreateManyArgsSchema:()=>BRt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>yv,ChecklistItemCreateManyChecklistInputSchema:()=>iQ,ChecklistItemCreateManyInputSchema:()=>YP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>Jq,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>Y5,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>tb,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>V3,ChecklistItemCreateWithoutChecklistInputSchema:()=>mc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>Pv,ChecklistItemDeleteArgsSchema:()=>FRt,ChecklistItemDeleteManyArgsSchema:()=>LRt,ChecklistItemFindFirstArgsSchema:()=>YIt,ChecklistItemFindFirstOrThrowArgsSchema:()=>GIt,ChecklistItemFindManyArgsSchema:()=>ptt,ChecklistItemFindUniqueArgsSchema:()=>KIt,ChecklistItemFindUniqueOrThrowArgsSchema:()=>XIt,ChecklistItemGroupByArgsSchema:()=>JIt,ChecklistItemIncludeSchema:()=>Id,ChecklistItemListRelationFilterSchema:()=>x2,ChecklistItemMaxOrderByAggregateInputSchema:()=>sat,ChecklistItemMinOrderByAggregateInputSchema:()=>yat,ChecklistItemOrderByRelationAggregateInputSchema:()=>oat,ChecklistItemOrderByWithAggregationInputSchema:()=>lH,ChecklistItemOrderByWithRelationInputSchema:()=>Qm,ChecklistItemScalarFieldEnumSchema:()=>Lg,ChecklistItemScalarRelationFilterSchema:()=>v2,ChecklistItemScalarWhereInputSchema:()=>kp,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>CA,ChecklistItemSchema:()=>pet,ChecklistItemSelectSchema:()=>gd,ChecklistItemSumOrderByAggregateInputSchema:()=>dat,ChecklistItemTypeSchema:()=>Lt,ChecklistItemUncheckedCreateInputSchema:()=>JG,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>Xq,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>hc,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>Wv,ChecklistItemUncheckedUpdateInputSchema:()=>XG,ChecklistItemUncheckedUpdateManyInputSchema:()=>t1,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>Ndt,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>aF,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>R7,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>d_,ChecklistItemUpdateArgsSchema:()=>DRt,ChecklistItemUpdateInputSchema:()=>KG,ChecklistItemUpdateManyAndReturnArgsSchema:()=>_Rt,ChecklistItemUpdateManyArgsSchema:()=>ERt,ChecklistItemUpdateManyMutationInputSchema:()=>FB,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>iR,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>oF,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>$5,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>ist,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>aR,ChecklistItemUpdateWithoutChecklistInputSchema:()=>W7,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>y_,ChecklistItemUpsertArgsSchema:()=>NRt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>nR,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>ast,ChecklistItemWhereInputSchema:()=>Qe,ChecklistItemWhereUniqueInputSchema:()=>te,ChecklistItemWithRelationsSchema:()=>O0,ChecklistStatusSchema:()=>_t,ConstraintTypeSchema:()=>ue,CookBookAggregateArgsSchema:()=>EAt,CookBookArgsSchema:()=>yY,CookBookAvgOrderByAggregateInputSchema:()=>Ylt,CookBookCountOrderByAggregateInputSchema:()=>Qlt,CookBookCountOutputTypeArgsSchema:()=>dY,CookBookCountOutputTypeSelectSchema:()=>xot,CookBookCreateArgsSchema:()=>Vjt,CookBookCreateInputSchema:()=>b$,CookBookCreateManyAndReturnArgsSchema:()=>Yjt,CookBookCreateManyArgsSchema:()=>Qjt,CookBookCreateManyInputSchema:()=>gW,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>OO,CookBookCreateManyRestaurantInputSchema:()=>bQ,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>yo,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>U8,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>hb,CookBookCreateWithoutRecipesInputSchema:()=>Uf,CookBookCreateWithoutRestaurantInputSchema:()=>Qc,CookBookDeleteArgsSchema:()=>Gjt,CookBookDeleteManyArgsSchema:()=>Xjt,CookBookFindFirstArgsSchema:()=>FAt,CookBookFindFirstOrThrowArgsSchema:()=>DAt,CookBookFindManyArgsSchema:()=>btt,CookBookFindUniqueArgsSchema:()=>LAt,CookBookFindUniqueOrThrowArgsSchema:()=>VAt,CookBookGroupByArgsSchema:()=>_At,CookBookIncludeSchema:()=>yz,CookBookListRelationFilterSchema:()=>L2,CookBookMaxOrderByAggregateInputSchema:()=>Glt,CookBookMinOrderByAggregateInputSchema:()=>$lt,CookBookOrderByRelationAggregateInputSchema:()=>hlt,CookBookOrderByWithAggregationInputSchema:()=>MH,CookBookOrderByWithRelationInputSchema:()=>Jm,CookBookScalarFieldEnumSchema:()=>mC,CookBookScalarRelationFilterSchema:()=>a5,CookBookScalarWhereInputSchema:()=>jp,CookBookScalarWhereWithAggregatesInputSchema:()=>VA,CookBookSchema:()=>Det,CookBookSelectSchema:()=>dz,CookBookSumOrderByAggregateInputSchema:()=>Jlt,CookBookUncheckedCreateInputSchema:()=>I$,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>kf,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>Yc,CookBookUncheckedUpdateInputSchema:()=>C$,CookBookUncheckedUpdateManyInputSchema:()=>A$,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Xdt,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>UL,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>aJ,CookBookUpdateArgsSchema:()=>$jt,CookBookUpdateInputSchema:()=>g$,CookBookUpdateManyAndReturnArgsSchema:()=>Kjt,CookBookUpdateManyArgsSchema:()=>Jjt,CookBookUpdateManyMutationInputSchema:()=>GB,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>XR,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>ln,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>gyt,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>KR,CookBookUpdateWithoutRecipesInputSchema:()=>RL,CookBookUpdateWithoutRestaurantInputSchema:()=>nJ,CookBookUpsertArgsSchema:()=>Hjt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>JR,CookBookUpsertWithoutRecipesInputSchema:()=>Iyt,CookBookWhereInputSchema:()=>$e,CookBookWhereUniqueInputSchema:()=>ee,CookBookWithRelationsSchema:()=>q0,CountStatusSchema:()=>ft,CustomerFeedbackAggregateArgsSchema:()=>Cgt,CustomerFeedbackArgsSchema:()=>Qht,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>Zat,CustomerFeedbackCountOrderByAggregateInputSchema:()=>Mat,CustomerFeedbackCreateArgsSchema:()=>IUt,CustomerFeedbackCreateInputSchema:()=>h1,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>AUt,CustomerFeedbackCreateManyArgsSchema:()=>CUt,CustomerFeedbackCreateManyInputSchema:()=>KP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>kN,CustomerFeedbackCreateManyMenuItemInputSchema:()=>M0,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>yf,CustomerFeedbackCreateManyRespondedByInputSchema:()=>DQ,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>VO,CustomerFeedbackCreateManyRestaurantInputSchema:()=>UQ,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>zm,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ti,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>ur,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>qI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>Fb,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>Rb,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>qy,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Du,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>du,CustomerFeedbackCreatetagsInputSchema:()=>zp,CustomerFeedbackDeleteArgsSchema:()=>SUt,CustomerFeedbackDeleteManyArgsSchema:()=>RUt,CustomerFeedbackFindFirstArgsSchema:()=>Igt,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>ggt,CustomerFeedbackFindManyArgsSchema:()=>wT,CustomerFeedbackFindUniqueArgsSchema:()=>Sgt,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>Tgt,CustomerFeedbackGroupByArgsSchema:()=>Agt,CustomerFeedbackIncludeSchema:()=>Rd,CustomerFeedbackListRelationFilterSchema:()=>eT,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>vat,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Oat,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>Sq,CustomerFeedbackOrderByWithAggregationInputSchema:()=>uH,CustomerFeedbackOrderByWithRelationInputSchema:()=>Ph,CustomerFeedbackScalarFieldEnumSchema:()=>Yg,CustomerFeedbackScalarWhereInputSchema:()=>Il,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>PA,CustomerFeedbackSchema:()=>yet,CustomerFeedbackSelectSchema:()=>Ud,CustomerFeedbackSumOrderByAggregateInputSchema:()=>fat,CustomerFeedbackUncheckedCreateInputSchema:()=>b1,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Sm,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>gi,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Tr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>Fy,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>Eu,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>zu,CustomerFeedbackUncheckedUpdateInputSchema:()=>g1,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>C1,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Smt,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Fm,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>Tzt,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>il,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>czt,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>$r,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>$X,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>KJ,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>PJ,CustomerFeedbackUpdateArgsSchema:()=>TUt,CustomerFeedbackUpdateInputSchema:()=>I1,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>WUt,CustomerFeedbackUpdateManyArgsSchema:()=>PUt,CustomerFeedbackUpdateManyMutationInputSchema:()=>iP,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>zM,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>bk,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>xU,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>Zm,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>Fi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>dM,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>hk,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kU,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>GX,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>JJ,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>TJ,CustomerFeedbackUpdatetagsInputSchema:()=>tp,CustomerFeedbackUpsertArgsSchema:()=>gUt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>yM,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>mk,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>UU,CustomerFeedbackWhereInputSchema:()=>da,CustomerFeedbackWhereUniqueInputSchema:()=>q,CustomerFeedbackWithRelationsSchema:()=>hB,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>z,DateTimeNullableFilterSchema:()=>$t,DateTimeNullableWithAggregatesFilterSchema:()=>Kr,DateTimeWithAggregatesFilterSchema:()=>Z,DayOfWeekSchema:()=>ce,DietaryRestrictionAggregateArgsSchema:()=>Rgt,DietaryRestrictionArgsSchema:()=>Yht,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>qat,DietaryRestrictionCountOrderByAggregateInputSchema:()=>Bat,DietaryRestrictionCountOutputTypeArgsSchema:()=>oY,DietaryRestrictionCountOutputTypeSelectSchema:()=>Aot,DietaryRestrictionCreateArgsSchema:()=>UUt,DietaryRestrictionCreateInputSchema:()=>A1,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>jUt,DietaryRestrictionCreateManyArgsSchema:()=>xUt,DietaryRestrictionCreateManyInputSchema:()=>XP,DietaryRestrictionCreateNestedManyWithoutIngredientsInputSchema:()=>eg,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>mm,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Uo,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>gI,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>FI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>lI,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>Xs,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Dy,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>Us,DietaryRestrictionDeleteArgsSchema:()=>MUt,DietaryRestrictionDeleteManyArgsSchema:()=>fUt,DietaryRestrictionFindFirstArgsSchema:()=>Pgt,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>Wgt,DietaryRestrictionFindManyArgsSchema:()=>NT,DietaryRestrictionFindUniqueArgsSchema:()=>kgt,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>xgt,DietaryRestrictionGroupByArgsSchema:()=>Ugt,DietaryRestrictionIncludeSchema:()=>kd,DietaryRestrictionListRelationFilterSchema:()=>aT,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Fat,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Dat,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>kq,DietaryRestrictionOrderByWithAggregationInputSchema:()=>sH,DietaryRestrictionOrderByWithRelationInputSchema:()=>Wh,DietaryRestrictionScalarFieldEnumSchema:()=>Gg,DietaryRestrictionScalarWhereInputSchema:()=>Sl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>WA,DietaryRestrictionSchema:()=>det,DietaryRestrictionSelectSchema:()=>xd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>Eat,DietaryRestrictionUncheckedCreateInputSchema:()=>S1,DietaryRestrictionUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>cg,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>Tm,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Go,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>ty,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Ey,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>ks,DietaryRestrictionUncheckedUpdateInputSchema:()=>P1,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>W1,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsInputSchema:()=>omt,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>Wg,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>Tmt,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Dm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>_zt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>En,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>uX,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>KX,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>BK,DietaryRestrictionUpdateArgsSchema:()=>ZUt,DietaryRestrictionUpdateInputSchema:()=>T1,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>OUt,DietaryRestrictionUpdateManyArgsSchema:()=>vUt,DietaryRestrictionUpdateManyMutationInputSchema:()=>lP,DietaryRestrictionUpdateManyWithWhereWithoutIngredientsInputSchema:()=>pj,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>bM,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>Tx,DietaryRestrictionUpdateManyWithoutIngredientsNestedInputSchema:()=>bg,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>vm,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>Cn,DietaryRestrictionUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>rj,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>hM,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Sx,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>cX,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>JX,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>NK,DietaryRestrictionUpsertArgsSchema:()=>kUt,DietaryRestrictionUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>lj,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>mM,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Ax,DietaryRestrictionWhereInputSchema:()=>za,DietaryRestrictionWhereUniqueInputSchema:()=>F,DietaryRestrictionWithRelationsSchema:()=>bB,EarlyAccessAggregateArgsSchema:()=>KCt,EarlyAccessAvgOrderByAggregateInputSchema:()=>tlt,EarlyAccessCountOrderByAggregateInputSchema:()=>Xit,EarlyAccessCreateArgsSchema:()=>wxt,EarlyAccessCreateInputSchema:()=>v9,EarlyAccessCreateManyAndReturnArgsSchema:()=>qxt,EarlyAccessCreateManyArgsSchema:()=>Bxt,EarlyAccessCreateManyInputSchema:()=>yW,EarlyAccessDeleteArgsSchema:()=>Fxt,EarlyAccessDeleteManyArgsSchema:()=>Lxt,EarlyAccessFindFirstArgsSchema:()=>GCt,EarlyAccessFindFirstOrThrowArgsSchema:()=>$Ct,EarlyAccessFindManyArgsSchema:()=>JCt,EarlyAccessFindUniqueArgsSchema:()=>tAt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>eAt,EarlyAccessGroupByArgsSchema:()=>XCt,EarlyAccessMaxOrderByAggregateInputSchema:()=>elt,EarlyAccessMinOrderByAggregateInputSchema:()=>olt,EarlyAccessOrderByWithAggregationInputSchema:()=>PH,EarlyAccessOrderByWithRelationInputSchema:()=>wh,EarlyAccessScalarFieldEnumSchema:()=>pC,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>BA,EarlyAccessSchema:()=>wht,EarlyAccessSelectSchema:()=>ih,EarlyAccessSumOrderByAggregateInputSchema:()=>nlt,EarlyAccessUncheckedCreateInputSchema:()=>O9,EarlyAccessUncheckedUpdateInputSchema:()=>w9,EarlyAccessUncheckedUpdateManyInputSchema:()=>B9,EarlyAccessUpdateArgsSchema:()=>Dxt,EarlyAccessUpdateInputSchema:()=>f9,EarlyAccessUpdateManyAndReturnArgsSchema:()=>_xt,EarlyAccessUpdateManyArgsSchema:()=>Ext,EarlyAccessUpdateManyMutationInputSchema:()=>N9,EarlyAccessUpsertArgsSchema:()=>Nxt,EarlyAccessWhereInputSchema:()=>Tl,EarlyAccessWhereUniqueInputSchema:()=>lh,EnumCategoryFieldUpdateOperationsInputSchema:()=>dt,EnumCategoryFilterSchema:()=>Uq,EnumCategoryWithAggregatesFilterSchema:()=>drt,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>Wp,EnumChecklistFrequencyFilterSchema:()=>pq,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>pat,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>rh,EnumChecklistItemTypeFilterSchema:()=>cq,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>zat,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>am,EnumChecklistStatusFilterSchema:()=>uq,EnumChecklistStatusWithAggregatesFilterSchema:()=>Wat,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>EC,EnumConstraintTypeFilterSchema:()=>bq,EnumConstraintTypeWithAggregatesFilterSchema:()=>Zit,EnumCountStatusFieldUpdateOperationsInputSchema:()=>Ip,EnumCountStatusFilterSchema:()=>Mq,EnumCountStatusWithAggregatesFilterSchema:()=>Qrt,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>DC,EnumDayOfWeekFilterSchema:()=>hq,EnumDayOfWeekWithAggregatesFilterSchema:()=>Rit,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>Pp,EnumEquipmentStatusFilterSchema:()=>iq,EnumEquipmentStatusWithAggregatesFilterSchema:()=>Lnt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>Xr,EnumFeedbackSourceFilterSchema:()=>sq,EnumFeedbackSourceWithAggregatesFilterSchema:()=>wat,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>ep,EnumFeedbackStatusFilterSchema:()=>yq,EnumFeedbackStatusWithAggregatesFilterSchema:()=>Nat,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>hp,EnumInventoryTypeFilterSchema:()=>E2,EnumInventoryTypeWithAggregatesFilterSchema:()=>mlt,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>qC,EnumMaintenanceTypeFilterSchema:()=>rq,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>eat,EnumNutritionSourceNullableFilterSchema:()=>xq,EnumNutritionSourceNullableWithAggregatesFilterSchema:()=>Crt,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>gp,EnumOrderStatusFilterSchema:()=>Zq,EnumOrderStatusWithAggregatesFilterSchema:()=>cpt,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>BC,EnumPhotoTypeFilterSchema:()=>nq,EnumPhotoTypeWithAggregatesFilterSchema:()=>rnt,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>oa,EnumPrepStatusFilterSchema:()=>lT,EnumPrepStatusWithAggregatesFilterSchema:()=>W5,EnumProductionStatusFieldUpdateOperationsInputSchema:()=>mp,EnumProductionStatusFilterSchema:()=>dq,EnumProductionStatusWithAggregatesFilterSchema:()=>cit,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>ch,EnumShiftStatusFilterSchema:()=>vq,EnumShiftStatusWithAggregatesFilterSchema:()=>Rpt,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>yt,EnumSkillLevelFilterSchema:()=>Rq,EnumSkillLevelWithAggregatesFilterSchema:()=>yrt,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>FC,EnumTaskTypeFilterSchema:()=>mq,EnumTaskTypeWithAggregatesFilterSchema:()=>Cit,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>np,EnumTransactionTypeFilterSchema:()=>jq,EnumTransactionTypeWithAggregatesFilterSchema:()=>Drt,EnumUserRoleFieldUpdateOperationsInputSchema:()=>_C,EnumUserRoleFilterSchema:()=>Wq,EnumUserRoleWithAggregatesFilterSchema:()=>Dlt,EquipmentAggregateArgsSchema:()=>RIt,EquipmentArgsSchema:()=>AM,EquipmentAvgOrderByAggregateInputSchema:()=>Fnt,EquipmentCountOrderByAggregateInputSchema:()=>qnt,EquipmentCountOutputTypeArgsSchema:()=>$0,EquipmentCountOutputTypeSelectSchema:()=>bot,EquipmentCreateArgsSchema:()=>tRt,EquipmentCreateInputSchema:()=>jG,EquipmentCreateManyAndReturnArgsSchema:()=>nRt,EquipmentCreateManyArgsSchema:()=>oRt,EquipmentCreateManyInputSchema:()=>LP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>_O,EquipmentCreateManyRestaurantInputSchema:()=>WQ,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>pr,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>Oct,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>Vq,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>q3,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>N3,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>Pb,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>pv,EquipmentCreateWithoutRecipesInputSchema:()=>av,EquipmentCreateWithoutRestaurantInputSchema:()=>cu,EquipmentDeleteArgsSchema:()=>aRt,EquipmentDeleteManyArgsSchema:()=>pRt,EquipmentFindFirstArgsSchema:()=>PIt,EquipmentFindFirstOrThrowArgsSchema:()=>WIt,EquipmentFindManyArgsSchema:()=>itt,EquipmentFindUniqueArgsSchema:()=>kIt,EquipmentFindUniqueOrThrowArgsSchema:()=>xIt,EquipmentGroupByArgsSchema:()=>UIt,EquipmentIncludeSchema:()=>ud,EquipmentListRelationFilterSchema:()=>Q2,EquipmentMaxOrderByAggregateInputSchema:()=>Dnt,EquipmentMinOrderByAggregateInputSchema:()=>Ent,EquipmentOrderByRelationAggregateInputSchema:()=>Ilt,EquipmentOrderByWithAggregationInputSchema:()=>oH,EquipmentOrderByWithRelationInputSchema:()=>tc,EquipmentScalarFieldEnumSchema:()=>Fg,EquipmentScalarRelationFilterSchema:()=>_M,EquipmentScalarWhereInputSchema:()=>Zp,EquipmentScalarWhereWithAggregatesInputSchema:()=>hA,EquipmentSchema:()=>oet,EquipmentSelectSchema:()=>sd,EquipmentStatusSchema:()=>Bt,EquipmentSumOrderByAggregateInputSchema:()=>_nt,EquipmentUncheckedCreateInputSchema:()=>MG,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Ar,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>cv,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>iv,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>uu,EquipmentUncheckedUpdateInputSchema:()=>vG,EquipmentUncheckedUpdateManyInputSchema:()=>OG,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>rzt,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Yr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>e_,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>JE,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>CJ,EquipmentUpdateArgsSchema:()=>iRt,EquipmentUpdateInputSchema:()=>ZG,EquipmentUpdateManyAndReturnArgsSchema:()=>rRt,EquipmentUpdateManyArgsSchema:()=>lRt,EquipmentUpdateManyMutationInputSchema:()=>NB,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>TU,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>fct,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>Yq,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Qut,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>_ut,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SU,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>t_,EquipmentUpdateWithoutRecipesInputSchema:()=>$E,EquipmentUpdateWithoutRestaurantInputSchema:()=>gJ,EquipmentUpsertArgsSchema:()=>eRt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AU,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>Hut,EquipmentUpsertWithoutRecipesInputSchema:()=>Eut,EquipmentWhereInputSchema:()=>Ze,EquipmentWhereUniqueInputSchema:()=>Ht,EquipmentWithRelationsSchema:()=>yB,FeedbackSourceSchema:()=>Mt,FeedbackStatusSchema:()=>Zt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>U,FloatNullableFilterSchema:()=>et,FloatNullableListFilterSchema:()=>Yh,FloatNullableWithAggregatesFilterSchema:()=>Xn,FloatWithAggregatesFilterSchema:()=>Wt,FoodCostHistoryAggregateArgsSchema:()=>pPt,FoodCostHistoryArgsSchema:()=>zbt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>sct,FoodCostHistoryCountOrderByAggregateInputSchema:()=>uct,FoodCostHistoryCreateArgsSchema:()=>IOt,FoodCostHistoryCreateInputSchema:()=>h2,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>AOt,FoodCostHistoryCreateManyArgsSchema:()=>COt,FoodCostHistoryCreateManyInputSchema:()=>FW,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>Mf,FoodCostHistoryCreateManyRecipeInputSchema:()=>$Q,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>bo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>$b,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>rs,FoodCostHistoryDeleteArgsSchema:()=>SOt,FoodCostHistoryDeleteManyArgsSchema:()=>ROt,FoodCostHistoryFindFirstArgsSchema:()=>lPt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>rPt,FoodCostHistoryFindManyArgsSchema:()=>Ttt,FoodCostHistoryFindUniqueArgsSchema:()=>uPt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>sPt,FoodCostHistoryGroupByArgsSchema:()=>cPt,FoodCostHistoryIncludeSchema:()=>tm,FoodCostHistoryListRelationFilterSchema:()=>i5,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>yct,FoodCostHistoryMinOrderByAggregateInputSchema:()=>dct,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>Klt,FoodCostHistoryOrderByWithAggregationInputSchema:()=>KH,FoodCostHistoryOrderByWithRelationInputSchema:()=>Hh,FoodCostHistoryScalarFieldEnumSchema:()=>wC,FoodCostHistoryScalarWhereInputSchema:()=>Fp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>yS,FoodCostHistorySchema:()=>sot,FoodCostHistorySelectSchema:()=>em,FoodCostHistorySumOrderByAggregateInputSchema:()=>zct,FoodCostHistoryUncheckedCreateInputSchema:()=>b2,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>ps,FoodCostHistoryUncheckedUpdateInputSchema:()=>g2,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>C2,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>vzt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Zn,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>IK,FoodCostHistoryUpdateArgsSchema:()=>TOt,FoodCostHistoryUpdateInputSchema:()=>I2,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>WOt,FoodCostHistoryUpdateManyArgsSchema:()=>POt,FoodCostHistoryUpdateManyMutationInputSchema:()=>eq,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>Qk,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>un,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>bK,FoodCostHistoryUpsertArgsSchema:()=>gOt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Vk,FoodCostHistoryWhereInputSchema:()=>Oa,FoodCostHistoryWhereUniqueInputSchema:()=>xe,FoodCostHistoryWithRelationsSchema:()=>yot,IngredientAggregateArgsSchema:()=>tSt,IngredientAllergenAggregateArgsSchema:()=>qCt,IngredientAllergenArgsSchema:()=>nbt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>Lit,IngredientAllergenCountOrderByAggregateInputSchema:()=>_it,IngredientAllergenCreateArgsSchema:()=>Ixt,IngredientAllergenCreateInputSchema:()=>T9,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>bO,IngredientAllergenCreateManyAllergenInputSchema:()=>uQ,IngredientAllergenCreateManyAndReturnArgsSchema:()=>Axt,IngredientAllergenCreateManyArgsSchema:()=>Cxt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>nw,IngredientAllergenCreateManyIngredientInputSchema:()=>d0,IngredientAllergenCreateManyInputSchema:()=>uW,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>Hct,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>XI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>cb,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>bI,IngredientAllergenCreateWithoutAllergenInputSchema:()=>vc,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Gs,IngredientAllergenDeleteArgsSchema:()=>Sxt,IngredientAllergenDeleteManyArgsSchema:()=>Rxt,IngredientAllergenFindFirstArgsSchema:()=>NCt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>BCt,IngredientAllergenFindManyArgsSchema:()=>EN,IngredientAllergenFindUniqueArgsSchema:()=>DCt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>ECt,IngredientAllergenGroupByArgsSchema:()=>FCt,IngredientAllergenIncludeSchema:()=>$d,IngredientAllergenListRelationFilterSchema:()=>$M,IngredientAllergenMaxOrderByAggregateInputSchema:()=>Vit,IngredientAllergenMinOrderByAggregateInputSchema:()=>Hit,IngredientAllergenOrderByRelationAggregateInputSchema:()=>B2,IngredientAllergenOrderByWithAggregationInputSchema:()=>SH,IngredientAllergenOrderByWithRelationInputSchema:()=>Oh,IngredientAllergenScalarFieldEnumSchema:()=>lC,IngredientAllergenScalarWhereInputSchema:()=>Ml,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>wA,IngredientAllergenSchema:()=>jet,IngredientAllergenSelectSchema:()=>Jd,IngredientAllergenSumOrderByAggregateInputSchema:()=>Qit,IngredientAllergenUncheckedCreateInputSchema:()=>P9,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>Qct,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>rg,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>Oc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>$s,IngredientAllergenUncheckedUpdateInputSchema:()=>R9,IngredientAllergenUncheckedUpdateManyInputSchema:()=>U9,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>Hdt,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Gct,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>tmt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Tg,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>L7,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>lX,IngredientAllergenUpdateArgsSchema:()=>Txt,IngredientAllergenUpdateInputSchema:()=>W9,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>Wxt,IngredientAllergenUpdateManyArgsSchema:()=>Pxt,IngredientAllergenUpdateManyMutationInputSchema:()=>MM,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>ZR,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>oj,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Yct,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>mg,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>MR,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ej,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>_7,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>iX,IngredientAllergenUpsertArgsSchema:()=>gxt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>jR,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>tj,IngredientAllergenWhereInputSchema:()=>Ta,IngredientAllergenWhereUniqueInputSchema:()=>gt,IngredientAllergenWithRelationsSchema:()=>N0,IngredientArgsSchema:()=>cp,IngredientAvgOrderByAggregateInputSchema:()=>hrt,IngredientCountOrderByAggregateInputSchema:()=>mrt,IngredientCountOutputTypeArgsSchema:()=>mY,IngredientCountOutputTypeSelectSchema:()=>Mot,IngredientCreateArgsSchema:()=>cMt,IngredientCreateInputSchema:()=>U$,IngredientCreateManyAndReturnArgsSchema:()=>yMt,IngredientCreateManyArgsSchema:()=>sMt,IngredientCreateManyInputSchema:()=>AW,IngredientCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>SF,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>QD,IngredientCreateNestedOneWithoutIngredientAllergensInputSchema:()=>e6,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>pT,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>P6,IngredientCreateNestedOneWithoutPriceHistoryInputSchema:()=>K5,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>sD,IngredientCreateNestedOneWithoutWasteRecordsInputSchema:()=>qF,IngredientCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>lb,IngredientCreateOrConnectWithoutIngredientAllergensInputSchema:()=>z8,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>F8,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>X8,IngredientCreateOrConnectWithoutPriceHistoryInputSchema:()=>Q3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>f8,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>UI,IngredientCreateOrConnectWithoutWasteRecordsInputSchema:()=>e8,IngredientCreateWithoutDietaryRestrictionsInputSchema:()=>Uc,IngredientCreateWithoutIngredientAllergensInputSchema:()=>IO,IngredientCreateWithoutInventoryItemsInputSchema:()=>Iw,IngredientCreateWithoutOrderItemsInputSchema:()=>Gw,IngredientCreateWithoutPriceHistoryInputSchema:()=>kv,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>rw,IngredientCreateWithoutVendorsInputSchema:()=>my,IngredientCreateWithoutWasteRecordsInputSchema:()=>Lv,IngredientDeleteArgsSchema:()=>dMt,IngredientDeleteManyArgsSchema:()=>bMt,IngredientFindFirstArgsSchema:()=>KAt,IngredientFindFirstOrThrowArgsSchema:()=>XAt,IngredientFindManyArgsSchema:()=>LN,IngredientFindUniqueArgsSchema:()=>oSt,IngredientFindUniqueOrThrowArgsSchema:()=>nSt,IngredientGroupByArgsSchema:()=>eSt,IngredientIncludeSchema:()=>hz,IngredientListRelationFilterSchema:()=>GM,IngredientMaxOrderByAggregateInputSchema:()=>brt,IngredientMinOrderByAggregateInputSchema:()=>Irt,IngredientOrderByRelationAggregateInputSchema:()=>O2,IngredientOrderByWithAggregationInputSchema:()=>vH,IngredientOrderByWithRelationInputSchema:()=>Ll,IngredientScalarFieldEnumSchema:()=>bC,IngredientScalarRelationFilterSchema:()=>yp,IngredientScalarWhereInputSchema:()=>jl,IngredientScalarWhereWithAggregatesInputSchema:()=>QA,IngredientSchema:()=>_et,IngredientSelectSchema:()=>bz,IngredientSumOrderByAggregateInputSchema:()=>grt,IngredientUncheckedCreateInputSchema:()=>k$,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>WF,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>$D,IngredientUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>kc,IngredientUncheckedCreateWithoutIngredientAllergensInputSchema:()=>gO,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>gw,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>$w,IngredientUncheckedCreateWithoutPriceHistoryInputSchema:()=>xv,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>pw,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>hy,IngredientUncheckedCreateWithoutWasteRecordsInputSchema:()=>Vv,IngredientUncheckedUpdateInputSchema:()=>j$,IngredientUncheckedUpdateManyInputSchema:()=>M$,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>_dt,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>MF,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>umt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>oE,IngredientUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>B7,IngredientUncheckedUpdateWithoutIngredientAllergensInputSchema:()=>iL,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>DL,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>dV,IngredientUncheckedUpdateWithoutPriceHistoryInputSchema:()=>b_,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>ML,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>RX,IngredientUncheckedUpdateWithoutWasteRecordsInputSchema:()=>v_,IngredientUpdateArgsSchema:()=>zMt,IngredientUpdateInputSchema:()=>x$,IngredientUpdateManyAndReturnArgsSchema:()=>hMt,IngredientUpdateManyArgsSchema:()=>mMt,IngredientUpdateManyMutationInputSchema:()=>vM,IngredientUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>TR,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Zj,IngredientUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>kF,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>XD,IngredientUpdateOneRequiredWithoutIngredientAllergensNestedInputSchema:()=>n6,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>bT,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>R6,IngredientUpdateOneRequiredWithoutPriceHistoryNestedInputSchema:()=>t6,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>zD,IngredientUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>EF,IngredientUpdateToOneWithWhereWithoutIngredientAllergensInputSchema:()=>Jst,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>vyt,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>idt,IngredientUpdateToOneWithWhereWithoutPriceHistoryInputSchema:()=>cst,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>Tyt,IngredientUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>Wst,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>SR,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>Mj,IngredientUpdateWithoutDietaryRestrictionsInputSchema:()=>N7,IngredientUpdateWithoutIngredientAllergensInputSchema:()=>aL,IngredientUpdateWithoutInventoryItemsInputSchema:()=>FL,IngredientUpdateWithoutOrderItemsInputSchema:()=>yV,IngredientUpdateWithoutPriceHistoryInputSchema:()=>h_,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>jL,IngredientUpdateWithoutVendorsInputSchema:()=>WX,IngredientUpdateWithoutWasteRecordsInputSchema:()=>Z_,IngredientUpsertArgsSchema:()=>uMt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>AR,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>jj,IngredientUpsertWithoutIngredientAllergensInputSchema:()=>$st,IngredientUpsertWithoutInventoryItemsInputSchema:()=>Zyt,IngredientUpsertWithoutOrderItemsInputSchema:()=>adt,IngredientUpsertWithoutPriceHistoryInputSchema:()=>pst,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>Syt,IngredientUpsertWithoutWasteRecordsInputSchema:()=>Pst,IngredientWhereInputSchema:()=>jt,IngredientWhereUniqueInputSchema:()=>$,IngredientWithRelationsSchema:()=>DI,IntFieldUpdateOperationsInputSchema:()=>n,IntFilterSchema:()=>s,IntNullableFilterSchema:()=>at,IntNullableListFilterSchema:()=>QI,IntNullableWithAggregatesFilterSchema:()=>wa,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>yAt,InventoryArgsSchema:()=>EI,InventoryAvgOrderByAggregateInputSchema:()=>slt,InventoryCountOrderByAggregateInputSchema:()=>ult,InventoryCountOutputTypeArgsSchema:()=>cY,InventoryCountOutputTypeSelectSchema:()=>Rot,InventoryCreateArgsSchema:()=>tjt,InventoryCreateInputSchema:()=>V9,InventoryCreateManyAndReturnArgsSchema:()=>njt,InventoryCreateManyArgsSchema:()=>ojt,InventoryCreateManyInputSchema:()=>zW,InventoryCreateNestedOneWithoutItemsInputSchema:()=>rT,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>tr,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>jD,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>PD,InventoryCreateOrConnectWithoutItemsInputSchema:()=>q8,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>fO,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>V8,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>E8,InventoryCreateWithoutItemsInputSchema:()=>hw,InventoryCreateWithoutRestaurantInputSchema:()=>WT,InventoryCreateWithoutStockCountsInputSchema:()=>Mw,InventoryCreateWithoutTransactionsInputSchema:()=>Ww,InventoryDeleteArgsSchema:()=>ajt,InventoryDeleteManyArgsSchema:()=>pjt,InventoryFindFirstArgsSchema:()=>cAt,InventoryFindFirstOrThrowArgsSchema:()=>uAt,InventoryFindManyArgsSchema:()=>sAt,InventoryFindUniqueArgsSchema:()=>zAt,InventoryFindUniqueOrThrowArgsSchema:()=>mAt,InventoryGroupByArgsSchema:()=>dAt,InventoryIncludeSchema:()=>oz,InventoryItemAggregateArgsSchema:()=>ISt,InventoryItemArgsSchema:()=>LS,InventoryItemAvgOrderByAggregateInputSchema:()=>Zrt,InventoryItemCountOrderByAggregateInputSchema:()=>Mrt,InventoryItemCountOutputTypeArgsSchema:()=>IY,InventoryItemCountOutputTypeSelectSchema:()=>vot,InventoryItemCreateArgsSchema:()=>wMt,InventoryItemCreateInputSchema:()=>E$,InventoryItemCreateManyAndReturnArgsSchema:()=>qMt,InventoryItemCreateManyArgsSchema:()=>BMt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>tw,InventoryItemCreateManyIngredientInputSchema:()=>u0,InventoryItemCreateManyInputSchema:()=>PW,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>kO,InventoryItemCreateManyInventoryInputSchema:()=>dQ,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>tf,InventoryItemCreateManyLastUpdatedByInputSchema:()=>jQ,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>GI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>uZ,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>_a,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>C6,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>WD,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>aD,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>dI,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>yb,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>xb,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>Y8,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>_8,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>s8,InventoryItemCreateWithoutIngredientInputSchema:()=>Ds,InventoryItemCreateWithoutInventoryInputSchema:()=>qc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>gu,InventoryItemCreateWithoutStockCountsInputSchema:()=>Bw,InventoryItemCreateWithoutTransactionsInputSchema:()=>Uw,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>sO,InventoryItemDeleteArgsSchema:()=>FMt,InventoryItemDeleteManyArgsSchema:()=>LMt,InventoryItemFindFirstArgsSchema:()=>hSt,InventoryItemFindFirstOrThrowArgsSchema:()=>bSt,InventoryItemFindManyArgsSchema:()=>_T,InventoryItemFindUniqueArgsSchema:()=>CSt,InventoryItemFindUniqueOrThrowArgsSchema:()=>ASt,InventoryItemGroupByArgsSchema:()=>gSt,InventoryItemIncludeSchema:()=>Sz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>pB,InventoryItemListRelationFilterSchema:()=>JS,InventoryItemMaxOrderByAggregateInputSchema:()=>vrt,InventoryItemMinOrderByAggregateInputSchema:()=>Ort,InventoryItemOrderByRelationAggregateInputSchema:()=>Iq,InventoryItemOrderByWithAggregationInputSchema:()=>wH,InventoryItemOrderByWithRelationInputSchema:()=>Tp,InventoryItemScalarFieldEnumSchema:()=>CC,InventoryItemScalarRelationFilterSchema:()=>$S,InventoryItemScalarWhereInputSchema:()=>zl,InventoryItemScalarWhereWithAggregatesInputSchema:()=>$A,InventoryItemSchema:()=>Het,InventoryItemSelectSchema:()=>Tz,InventoryItemSumOrderByAggregateInputSchema:()=>frt,InventoryItemUncheckedCreateInputSchema:()=>_$,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>ng,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>dZ,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>pi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>Es,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Fc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>Cu,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>qw,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>kw,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>yO,InventoryItemUncheckedUpdateInputSchema:()=>V$,InventoryItemUncheckedUpdateManyInputSchema:()=>H$,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>$zt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>gg,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>Gdt,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>CZ,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>yzt,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Yi,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>KK,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>$7,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>jJ,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>nV,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>QL,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>X_,InventoryItemUpdateArgsSchema:()=>DMt,InventoryItemUpdateInputSchema:()=>L$,InventoryItemUpdateManyAndReturnArgsSchema:()=>_Mt,InventoryItemUpdateManyArgsSchema:()=>EMt,InventoryItemUpdateManyMutationInputSchema:()=>yP,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Lx,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>DR,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>BU,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>sg,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>bZ,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>xi,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>S6,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>kD,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>rD,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Gyt,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>qyt,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Vst,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>_x,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>FR,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>NU,InventoryItemUpdateWithoutIngredientInputSchema:()=>JK,InventoryItemUpdateWithoutInventoryInputSchema:()=>G7,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>xJ,InventoryItemUpdateWithoutStockCountsInputSchema:()=>oV,InventoryItemUpdateWithoutTransactionsInputSchema:()=>HL,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>K_,InventoryItemUpsertArgsSchema:()=>NMt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Ex,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>qR,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>wU,InventoryItemUpsertWithoutStockCountsInputSchema:()=>Yyt,InventoryItemUpsertWithoutTransactionsInputSchema:()=>Byt,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Lst,InventoryItemWhereInputSchema:()=>ie,InventoryItemWhereUniqueInputSchema:()=>f,InventoryItemWithRelationsSchema:()=>_S,InventoryMaxOrderByAggregateInputSchema:()=>ylt,InventoryMinOrderByAggregateInputSchema:()=>dlt,InventoryNullableScalarRelationFilterSchema:()=>V2,InventoryOrderByWithAggregationInputSchema:()=>RH,InventoryOrderByWithRelationInputSchema:()=>pp,InventoryScalarFieldEnumSchema:()=>uC,InventoryScalarRelationFilterSchema:()=>iT,InventoryScalarWhereWithAggregatesInputSchema:()=>FA,InventorySchema:()=>Oet,InventorySelectSchema:()=>nz,InventorySumOrderByAggregateInputSchema:()=>zlt,InventoryTransactionAggregateArgsSchema:()=>PSt,InventoryTransactionArgsSchema:()=>pbt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>Nrt,InventoryTransactionCountOrderByAggregateInputSchema:()=>wrt,InventoryTransactionCreateArgsSchema:()=>VMt,InventoryTransactionCreateInputSchema:()=>Q$,InventoryTransactionCreateManyAndReturnArgsSchema:()=>YMt,InventoryTransactionCreateManyArgsSchema:()=>QMt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>mf,InventoryTransactionCreateManyCreatedByInputSchema:()=>LQ,InventoryTransactionCreateManyInputSchema:()=>WW,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>xO,InventoryTransactionCreateManyInventoryInputSchema:()=>zQ,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>Sw,InventoryTransactionCreateManyItemInputSchema:()=>h0,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ni,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>sZ,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>uT,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>_b,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>db,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>AI,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Qu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>Dc,InventoryTransactionCreateWithoutItemInputSchema:()=>ny,InventoryTransactionDeleteArgsSchema:()=>GMt,InventoryTransactionDeleteManyArgsSchema:()=>XMt,InventoryTransactionFindFirstArgsSchema:()=>SSt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>TSt,InventoryTransactionFindManyArgsSchema:()=>LT,InventoryTransactionFindUniqueArgsSchema:()=>RSt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>USt,InventoryTransactionGroupByArgsSchema:()=>WSt,InventoryTransactionIncludeSchema:()=>Pz,InventoryTransactionListRelationFilterSchema:()=>KS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>Brt,InventoryTransactionMinOrderByAggregateInputSchema:()=>qrt,InventoryTransactionOrderByRelationAggregateInputSchema:()=>gq,InventoryTransactionOrderByWithAggregationInputSchema:()=>NH,InventoryTransactionOrderByWithRelationInputSchema:()=>Fh,InventoryTransactionScalarFieldEnumSchema:()=>AC,InventoryTransactionScalarWhereInputSchema:()=>ml,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>JA,InventoryTransactionSchema:()=>Qet,InventoryTransactionSelectSchema:()=>Wz,InventoryTransactionSumOrderByAggregateInputSchema:()=>Frt,InventoryTransactionUncheckedCreateInputSchema:()=>Y$,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Si,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>zZ,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>dT,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>Yu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>Ec,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>ay,InventoryTransactionUncheckedUpdateInputSchema:()=>$$,InventoryTransactionUncheckedUpdateManyInputSchema:()=>J$,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Rzt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>pl,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>$dt,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>AZ,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>amt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>ST,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>aK,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>K7,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>zX,InventoryTransactionUpdateArgsSchema:()=>$Mt,InventoryTransactionUpdateInputSchema:()=>G$,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>KMt,InventoryTransactionUpdateManyArgsSchema:()=>JMt,InventoryTransactionUpdateManyMutationInputSchema:()=>dP,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>Rk,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>LR,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>zj,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>_i,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>IZ,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>gT,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>Wk,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>_R,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>dj,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>nK,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>J7,InventoryTransactionUpdateWithoutItemInputSchema:()=>dX,InventoryTransactionUpsertArgsSchema:()=>HMt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>Pk,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>ER,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>yj,InventoryTransactionWhereInputSchema:()=>ka,InventoryTransactionWhereUniqueInputSchema:()=>H,InventoryTransactionWithRelationsSchema:()=>WB,InventoryTypeSchema:()=>Nt,InventoryUncheckedCreateInputSchema:()=>H9,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>dr,InventoryUncheckedCreateWithoutItemsInputSchema:()=>bw,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>RT,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>Zw,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>Rw,InventoryUncheckedUpdateInputSchema:()=>Y9,InventoryUncheckedUpdateManyInputSchema:()=>$9,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Fr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>qL,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>QO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>JL,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>VL,InventoryUpdateArgsSchema:()=>ijt,InventoryUpdateInputSchema:()=>Q9,InventoryUpdateManyAndReturnArgsSchema:()=>rjt,InventoryUpdateManyArgsSchema:()=>ljt,InventoryUpdateManyMutationInputSchema:()=>G9,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>hT,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>OD,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>UD,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>Ur,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>Myt,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>C8,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>_yt,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Nyt,InventoryUpdateWithoutItemsInputSchema:()=>BL,InventoryUpdateWithoutRestaurantInputSchema:()=>HO,InventoryUpdateWithoutStockCountsInputSchema:()=>$L,InventoryUpdateWithoutTransactionsInputSchema:()=>LL,InventoryUpsertArgsSchema:()=>ejt,InventoryUpsertWithoutItemsInputSchema:()=>jyt,InventoryUpsertWithoutRestaurantInputSchema:()=>g8,InventoryUpsertWithoutStockCountsInputSchema:()=>Eyt,InventoryUpsertWithoutTransactionsInputSchema:()=>wyt,InventoryWhereInputSchema:()=>Ft,InventoryWhereUniqueInputSchema:()=>Jn,InventoryWithRelationsSchema:()=>gM,InventoryWithdrawalAggregateArgsSchema:()=>RCt,InventoryWithdrawalArgsSchema:()=>obt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>Oit,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>vit,InventoryWithdrawalCreateArgsSchema:()=>txt,InventoryWithdrawalCreateInputSchema:()=>y9,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>nxt,InventoryWithdrawalCreateManyArgsSchema:()=>oxt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>uf,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>qQ,InventoryWithdrawalCreateManyInputSchema:()=>pW,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>Tw,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>b0,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>wf,InventoryWithdrawalCreateManyRecipeInputSchema:()=>e0,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>Ka,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>sT,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>To,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>Bb,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>SI,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>oI,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Nu,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>iy,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>gs,InventoryWithdrawalDeleteArgsSchema:()=>axt,InventoryWithdrawalDeleteManyArgsSchema:()=>pxt,InventoryWithdrawalFindFirstArgsSchema:()=>PCt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>WCt,InventoryWithdrawalFindManyArgsSchema:()=>DT,InventoryWithdrawalFindUniqueArgsSchema:()=>kCt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>xCt,InventoryWithdrawalGroupByArgsSchema:()=>UCt,InventoryWithdrawalIncludeSchema:()=>Hd,InventoryWithdrawalListRelationFilterSchema:()=>nT,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>fit,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>wit,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>Pq,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>CH,InventoryWithdrawalOrderByWithRelationInputSchema:()=>vh,InventoryWithdrawalScalarFieldEnumSchema:()=>aC,InventoryWithdrawalScalarWhereInputSchema:()=>Cl,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>OA,InventoryWithdrawalSchema:()=>Uet,InventoryWithdrawalSelectSchema:()=>Qd,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Nit,InventoryWithdrawalUncheckedCreateInputSchema:()=>d9,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>bi,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>zT,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Vo,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>Bu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>ly,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>Cs,InventoryWithdrawalUncheckedUpdateInputSchema:()=>m9,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>h9,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Azt,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>nl,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>imt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>TT,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>qzt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Bn,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>YJ,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>hX,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>jK,InventoryWithdrawalUpdateArgsSchema:()=>ixt,InventoryWithdrawalUpdateInputSchema:()=>z9,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>rxt,InventoryWithdrawalUpdateManyArgsSchema:()=>lxt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>uP,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>sk,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>bj,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>sx,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Bi,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>CT,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>hn,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>uk,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>hj,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ux,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>QJ,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>mX,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>xK,InventoryWithdrawalUpsertArgsSchema:()=>ext,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>ck,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>mj,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>cx,InventoryWithdrawalWhereInputSchema:()=>Sa,InventoryWithdrawalWhereUniqueInputSchema:()=>L,InventoryWithdrawalWithRelationsSchema:()=>SB,LeftoverItemAggregateArgsSchema:()=>Bgt,LeftoverItemArgsSchema:()=>$ht,LeftoverItemAvgOrderByAggregateInputSchema:()=>Gat,LeftoverItemCountOrderByAggregateInputSchema:()=>Yat,LeftoverItemCreateArgsSchema:()=>VUt,LeftoverItemCreateInputSchema:()=>M1,LeftoverItemCreateManyAndReturnArgsSchema:()=>YUt,LeftoverItemCreateManyArgsSchema:()=>QUt,LeftoverItemCreateManyInputSchema:()=>eW,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>UN,LeftoverItemCreateManyMenuItemInputSchema:()=>j0,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>nf,LeftoverItemCreateManyRecordedByInputSchema:()=>vQ,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>FO,LeftoverItemCreateManyRestaurantInputSchema:()=>SQ,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>dm,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>Ha,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>ir,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>BI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>Zb,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>Ab,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Ny,LeftoverItemCreateWithoutRecordedByInputSchema:()=>Wu,LeftoverItemCreateWithoutRestaurantInputSchema:()=>nu,LeftoverItemDeleteArgsSchema:()=>GUt,LeftoverItemDeleteManyArgsSchema:()=>XUt,LeftoverItemFindFirstArgsSchema:()=>wgt,LeftoverItemFindFirstOrThrowArgsSchema:()=>Ngt,LeftoverItemFindManyArgsSchema:()=>BT,LeftoverItemFindUniqueArgsSchema:()=>Fgt,LeftoverItemFindUniqueOrThrowArgsSchema:()=>Dgt,LeftoverItemGroupByArgsSchema:()=>qgt,LeftoverItemIncludeSchema:()=>Zd,LeftoverItemListRelationFilterSchema:()=>XS,LeftoverItemMaxOrderByAggregateInputSchema:()=>$at,LeftoverItemMinOrderByAggregateInputSchema:()=>Jat,LeftoverItemOrderByRelationAggregateInputSchema:()=>Cq,LeftoverItemOrderByWithAggregationInputSchema:()=>dH,LeftoverItemOrderByWithRelationInputSchema:()=>Uh,LeftoverItemScalarFieldEnumSchema:()=>Jg,LeftoverItemScalarWhereInputSchema:()=>hl,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>UA,LeftoverItemSchema:()=>het,LeftoverItemSelectSchema:()=>vd,LeftoverItemSumOrderByAggregateInputSchema:()=>Kat,LeftoverItemUncheckedCreateInputSchema:()=>Z1,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Am,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>si,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Ir,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>By,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>Ru,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>au,LeftoverItemUncheckedUpdateInputSchema:()=>O1,LeftoverItemUncheckedUpdateManyInputSchema:()=>f1,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Amt,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>qm,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>mzt,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Ji,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>azt,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Vr,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>YX,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>wJ,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>zJ,LeftoverItemUpdateArgsSchema:()=>$Ut,LeftoverItemUpdateInputSchema:()=>v1,LeftoverItemUpdateManyAndReturnArgsSchema:()=>KUt,LeftoverItemUpdateManyArgsSchema:()=>JUt,LeftoverItemUpdateManyMutationInputSchema:()=>rP,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>sM,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>QU,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zU,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>Mm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>Zi,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>uM,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>HU,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>dU,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>QX,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>fJ,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>dJ,LeftoverItemUpsertArgsSchema:()=>HUt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>cM,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>VU,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>yU,LeftoverItemWhereInputSchema:()=>ha,LeftoverItemWhereUniqueInputSchema:()=>D,LeftoverItemWithRelationsSchema:()=>IB,MaintenanceLogAggregateArgsSchema:()=>BIt,MaintenanceLogArgsSchema:()=>Lht,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Jnt,MaintenanceLogCountOrderByAggregateInputSchema:()=>$nt,MaintenanceLogCreateArgsSchema:()=>IRt,MaintenanceLogCreateInputSchema:()=>FG,MaintenanceLogCreateManyAndReturnArgsSchema:()=>ARt,MaintenanceLogCreateManyArgsSchema:()=>CRt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>ev,MaintenanceLogCreateManyEquipmentInputSchema:()=>aQ,MaintenanceLogCreateManyInputSchema:()=>HP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>wq,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Xh,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>dc,MaintenanceLogDeleteArgsSchema:()=>SRt,MaintenanceLogDeleteManyArgsSchema:()=>RRt,MaintenanceLogFindFirstArgsSchema:()=>wIt,MaintenanceLogFindFirstOrThrowArgsSchema:()=>NIt,MaintenanceLogFindManyArgsSchema:()=>ltt,MaintenanceLogFindUniqueArgsSchema:()=>FIt,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>DIt,MaintenanceLogGroupByArgsSchema:()=>qIt,MaintenanceLogIncludeSchema:()=>zd,MaintenanceLogListRelationFilterSchema:()=>U2,MaintenanceLogMaxOrderByAggregateInputSchema:()=>Knt,MaintenanceLogMinOrderByAggregateInputSchema:()=>Xnt,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Bnt,MaintenanceLogOrderByWithAggregationInputSchema:()=>aH,MaintenanceLogOrderByWithRelationInputSchema:()=>Ah,MaintenanceLogScalarFieldEnumSchema:()=>Eg,MaintenanceLogScalarWhereInputSchema:()=>Up,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>IA,MaintenanceLogSchema:()=>aet,MaintenanceLogSelectSchema:()=>md,MaintenanceLogSumOrderByAggregateInputSchema:()=>tat,MaintenanceLogUncheckedCreateInputSchema:()=>DG,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>Bq,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>zc,MaintenanceLogUncheckedUpdateInputSchema:()=>_G,MaintenanceLogUncheckedUpdateManyInputSchema:()=>LG,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>wdt,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>_q,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>P7,MaintenanceLogUpdateArgsSchema:()=>TRt,MaintenanceLogUpdateInputSchema:()=>EG,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>WRt,MaintenanceLogUpdateManyArgsSchema:()=>PRt,MaintenanceLogUpdateManyMutationInputSchema:()=>BB,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>oR,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>Dq,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>eR,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>T7,MaintenanceLogUpsertArgsSchema:()=>gRt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>tR,MaintenanceLogWhereInputSchema:()=>ua,MaintenanceLogWhereUniqueInputSchema:()=>Ce,MaintenanceLogWithRelationsSchema:()=>iet,MaintenanceTypeSchema:()=>re,MenuAggregateArgsSchema:()=>NTt,MenuArgsSchema:()=>WM,MenuAvgOrderByAggregateInputSchema:()=>Lpt,MenuCategoryAggregateArgsSchema:()=>zIt,MenuCategoryArgsSchema:()=>Q0,MenuCategoryAvgOrderByAggregateInputSchema:()=>xnt,MenuCategoryCountOrderByAggregateInputSchema:()=>knt,MenuCategoryCountOutputTypeArgsSchema:()=>Y0,MenuCategoryCountOutputTypeSelectSchema:()=>mot,MenuCategoryCreateArgsSchema:()=>wWt,MenuCategoryCreateInputSchema:()=>CG,MenuCategoryCreateManyAndReturnArgsSchema:()=>qWt,MenuCategoryCreateManyArgsSchema:()=>BWt,MenuCategoryCreateManyInputSchema:()=>EP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>zN,MenuCategoryCreateManyMenuInputSchema:()=>R0,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>yE,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>rm,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>vI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>c7,MenuCategoryCreateWithoutMenuInputSchema:()=>Uy,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>AN,MenuCategoryDeleteArgsSchema:()=>FWt,MenuCategoryDeleteManyArgsSchema:()=>LWt,MenuCategoryFindFirstArgsSchema:()=>yIt,MenuCategoryFindFirstOrThrowArgsSchema:()=>dIt,MenuCategoryFindManyArgsSchema:()=>att,MenuCategoryFindUniqueArgsSchema:()=>hIt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>bIt,MenuCategoryGroupByArgsSchema:()=>mIt,MenuCategoryIncludeSchema:()=>ld,MenuCategoryListRelationFilterSchema:()=>U5,MenuCategoryMaxOrderByAggregateInputSchema:()=>jnt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>aB,MenuCategoryMinOrderByAggregateInputSchema:()=>Mnt,MenuCategoryNullableScalarRelationFilterSchema:()=>k5,MenuCategoryOrderByRelationAggregateInputSchema:()=>Ept,MenuCategoryOrderByWithAggregationInputSchema:()=>tH,MenuCategoryOrderByWithRelationInputSchema:()=>Hm,MenuCategoryScalarFieldEnumSchema:()=>Bg,MenuCategoryScalarWhereInputSchema:()=>Jp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>zA,MenuCategorySchema:()=>tet,MenuCategorySelectSchema:()=>rd,MenuCategorySumOrderByAggregateInputSchema:()=>Znt,MenuCategoryUncheckedCreateInputSchema:()=>AG,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>zE,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>ky,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>SN,MenuCategoryUncheckedUpdateInputSchema:()=>TG,MenuCategoryUncheckedUpdateManyInputSchema:()=>PG,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>hmt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>gE,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>BX,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>vV,MenuCategoryUpdateArgsSchema:()=>DWt,MenuCategoryUpdateInputSchema:()=>SG,MenuCategoryUpdateManyAndReturnArgsSchema:()=>_Wt,MenuCategoryUpdateManyArgsSchema:()=>EWt,MenuCategoryUpdateManyMutationInputSchema:()=>wB,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>$j,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>bE,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>Wm,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>Wdt,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Gj,MenuCategoryUpdateWithoutMenuInputSchema:()=>NX,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>ZV,MenuCategoryUpsertArgsSchema:()=>NWt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Yj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>Pdt,MenuCategoryWhereInputSchema:()=>Ne,MenuCategoryWhereUniqueInputSchema:()=>Xt,MenuCategoryWithRelationsSchema:()=>v0,MenuCountOrderByAggregateInputSchema:()=>_pt,MenuCountOutputTypeArgsSchema:()=>xY,MenuCountOutputTypeSelectSchema:()=>qot,MenuCreateArgsSchema:()=>wvt,MenuCreateInputSchema:()=>G4,MenuCreateManyAndReturnArgsSchema:()=>qvt,MenuCreateManyArgsSchema:()=>Bvt,MenuCreateManyInputSchema:()=>wW,MenuCreateManyRestaurantInputEnvelopeSchema:()=>BO,MenuCreateManyRestaurantInputSchema:()=>CQ,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>nr,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>f5,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>lm,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>M3,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>p7,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>gb,MenuCreateWithoutMenuCategoryInputSchema:()=>DZ,MenuCreateWithoutMenuItemsInputSchema:()=>gN,MenuCreateWithoutRestaurantInputSchema:()=>Xc,MenuDeleteArgsSchema:()=>Fvt,MenuDeleteManyArgsSchema:()=>Lvt,MenuFindFirstArgsSchema:()=>fTt,MenuFindFirstOrThrowArgsSchema:()=>wTt,MenuFindManyArgsSchema:()=>Stt,MenuFindUniqueArgsSchema:()=>qTt,MenuFindUniqueOrThrowArgsSchema:()=>FTt,MenuGroupByArgsSchema:()=>BTt,MenuIncludeSchema:()=>Hz,MenuItemAggregateArgsSchema:()=>GTt,MenuItemArgsSchema:()=>up,MenuItemAvgOrderByAggregateInputSchema:()=>ect,MenuItemCountOrderByAggregateInputSchema:()=>tct,MenuItemCountOutputTypeArgsSchema:()=>jY,MenuItemCountOutputTypeSelectSchema:()=>Fot,MenuItemCreateArgsSchema:()=>tOt,MenuItemCreateInputSchema:()=>i2,MenuItemCreateManyAndReturnArgsSchema:()=>nOt,MenuItemCreateManyArgsSchema:()=>oOt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>_Z,MenuItemCreateManyCategoryInputSchema:()=>tQ,MenuItemCreateManyInputSchema:()=>BW,MenuItemCreateManyMenuInputEnvelopeSchema:()=>dN,MenuItemCreateManyMenuInputSchema:()=>W0,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>w5,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>CF,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>sE,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>ho,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>mF,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>vF,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>D6,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>lut,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>$ct,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>Z5,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>Gh,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>ab,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>G3,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>K3,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>ZI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>l7,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>y7,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Gb,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>h8,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>j3,MenuItemCreateWithoutCategoryInputSchema:()=>ic,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>Tc,MenuItemCreateWithoutFeedbackInputSchema:()=>Zv,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>Bv,MenuItemCreateWithoutMenuInputSchema:()=>Wy,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>mN,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>MN,MenuItemCreateWithoutRecipesInputSchema:()=>is,MenuItemCreateWithoutRecommendationsInputSchema:()=>SO,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>qZ,MenuItemCreateallergensInputSchema:()=>po,MenuItemCreaterecipeIdsInputSchema:()=>io,MenuItemCreaterecipeServingsAmountInputSchema:()=>lo,MenuItemCreaterecipeServingsCostInputSchema:()=>ro,MenuItemDeleteArgsSchema:()=>aOt,MenuItemDeleteManyArgsSchema:()=>pOt,MenuItemFindFirstArgsSchema:()=>QTt,MenuItemFindFirstOrThrowArgsSchema:()=>YTt,MenuItemFindManyArgsSchema:()=>Rg,MenuItemFindUniqueArgsSchema:()=>JTt,MenuItemFindUniqueOrThrowArgsSchema:()=>KTt,MenuItemGroupByArgsSchema:()=>$Tt,MenuItemIncludeSchema:()=>$z,MenuItemListRelationFilterSchema:()=>VI,MenuItemMaxOrderByAggregateInputSchema:()=>oct,MenuItemMinOrderByAggregateInputSchema:()=>nct,MenuItemNullableScalarRelationFilterSchema:()=>YM,MenuItemOrderByRelationAggregateInputSchema:()=>DM,MenuItemOrderByWithAggregationInputSchema:()=>$H,MenuItemOrderByWithRelationInputSchema:()=>Vl,MenuItemRecipeAggregateArgsSchema:()=>_Tt,MenuItemRecipeArgsSchema:()=>dbt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Gpt,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Ypt,MenuItemRecipeCreateArgsSchema:()=>Vvt,MenuItemRecipeCreateInputSchema:()=>t2,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>Yvt,MenuItemRecipeCreateManyArgsSchema:()=>Qvt,MenuItemRecipeCreateManyInputSchema:()=>NW,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>TN,MenuItemRecipeCreateManyMenuItemInputSchema:()=>U0,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>Of,MenuItemRecipeCreateManyRecipeInputSchema:()=>XQ,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>cm,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Ao,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>fI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>tI,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>My,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>ms,MenuItemRecipeDeleteArgsSchema:()=>Gvt,MenuItemRecipeDeleteManyArgsSchema:()=>Xvt,MenuItemRecipeFindFirstArgsSchema:()=>DTt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>ETt,MenuItemRecipeFindManyArgsSchema:()=>$N,MenuItemRecipeFindUniqueArgsSchema:()=>VTt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>HTt,MenuItemRecipeGroupByArgsSchema:()=>LTt,MenuItemRecipeIncludeSchema:()=>Yz,MenuItemRecipeListRelationFilterSchema:()=>aZ,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>$pt,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>uB,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Jpt,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>b5,MenuItemRecipeOrderByWithAggregationInputSchema:()=>GH,MenuItemRecipeOrderByWithRelationInputSchema:()=>Vh,MenuItemRecipeScalarFieldEnumSchema:()=>vC,MenuItemRecipeScalarWhereInputSchema:()=>Nl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>cS,MenuItemRecipeSchema:()=>rot,MenuItemRecipeSelectSchema:()=>Gz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>Kpt,MenuItemRecipeUncheckedCreateInputSchema:()=>e2,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>bm,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>_o,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>Zy,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>hs,MenuItemRecipeUncheckedUpdateInputSchema:()=>n2,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>a2,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Imt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>fm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>Nzt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wn,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>EX,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>RK,MenuItemRecipeUpdateArgsSchema:()=>$vt,MenuItemRecipeUpdateInputSchema:()=>o2,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>Kvt,MenuItemRecipeUpdateManyArgsSchema:()=>Jvt,MenuItemRecipeUpdateManyMutationInputSchema:()=>qM,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>oM,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>ix,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>Um,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>zn,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>eM,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ax,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>DX,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>WK,MenuItemRecipeUpsertArgsSchema:()=>Hvt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>tM,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>nx,MenuItemRecipeWhereInputSchema:()=>va,MenuItemRecipeWhereUniqueInputSchema:()=>St,MenuItemRecipeWithRelationsSchema:()=>L0,MenuItemScalarFieldEnumSchema:()=>OC,MenuItemScalarRelationFilterSchema:()=>LI,MenuItemScalarWhereInputSchema:()=>ao,MenuItemScalarWhereWithAggregatesInputSchema:()=>uS,MenuItemSchema:()=>pot,MenuItemSelectSchema:()=>Jz,MenuItemSumOrderByAggregateInputSchema:()=>act,MenuItemUncheckedCreateInputSchema:()=>l2,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>N5,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>TF,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>dE,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Bo,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>lc,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>Pc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>vv,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>qv,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>Ry,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>hN,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>ZN,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>ls,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>TO,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>FZ,MenuItemUncheckedUpdateInputSchema:()=>p2,MenuItemUncheckedUpdateManyInputSchema:()=>c2,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>Zdt,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>F5,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Ddt,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>xF,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>mmt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>IE,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>Zzt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Mn,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>h7,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>O7,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>A_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>U_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>wX,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>UV,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>fV,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>hK,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>cL,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>NE,MenuItemUpdateArgsSchema:()=>iOt,MenuItemUpdateInputSchema:()=>r2,MenuItemUpdateManyAndReturnArgsSchema:()=>rOt,MenuItemUpdateManyArgsSchema:()=>lOt,MenuItemUpdateManyMutationInputSchema:()=>VS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>LW,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>bR,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>Qj,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>Lk,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>q5,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>RF,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>hE,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>cn,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>wF,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>_6,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Jct,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>O5,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>IF,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>rut,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>dst,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>gst,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>gdt,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>Udt,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>eyt,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>xut,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>_W,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>hR,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Hj,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>_k,MenuItemUpdateWithoutCategoryInputSchema:()=>m7,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>v7,MenuItemUpdateWithoutFeedbackInputSchema:()=>C_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>R_,MenuItemUpdateWithoutMenuInputSchema:()=>fX,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>RV,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>OV,MenuItemUpdateWithoutRecipesInputSchema:()=>mK,MenuItemUpdateWithoutRecommendationsInputSchema:()=>pL,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>wE,MenuItemUpdateallergensInputSchema:()=>He,MenuItemUpdaterecipeIdsInputSchema:()=>_e,MenuItemUpdaterecipeServingsAmountInputSchema:()=>Le,MenuItemUpdaterecipeServingsCostInputSchema:()=>Ve,MenuItemUpsertArgsSchema:()=>eOt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>EW,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>mR,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Vj,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Ek,MenuItemUpsertWithoutFeedbackInputSchema:()=>yst,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>Ist,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>Idt,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>Rdt,MenuItemUpsertWithoutRecommendationsInputSchema:()=>tyt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>kut,MenuItemWhereInputSchema:()=>Tt,MenuItemWhereUniqueInputSchema:()=>x,MenuItemWithRelationsSchema:()=>_y,MenuListRelationFilterSchema:()=>H2,MenuMaxOrderByAggregateInputSchema:()=>Vpt,MenuMinOrderByAggregateInputSchema:()=>Hpt,MenuOrderByRelationAggregateInputSchema:()=>blt,MenuOrderByWithAggregationInputSchema:()=>YH,MenuOrderByWithRelationInputSchema:()=>ac,MenuScalarFieldEnumSchema:()=>ZC,MenuScalarRelationFilterSchema:()=>FM,MenuScalarWhereInputSchema:()=>Mp,MenuScalarWhereWithAggregatesInputSchema:()=>pS,MenuSchema:()=>lot,MenuSelectSchema:()=>Qz,MenuSumOrderByAggregateInputSchema:()=>Qpt,MenuUncheckedCreateInputSchema:()=>$4,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>hr,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>EZ,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>CN,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>tu,MenuUncheckedUpdateInputSchema:()=>K4,MenuUncheckedUpdateManyInputSchema:()=>X4,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>ozt,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>_r,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>qE,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>MV,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>uJ,MenuUpdateArgsSchema:()=>Dvt,MenuUpdateInputSchema:()=>J4,MenuUpdateManyAndReturnArgsSchema:()=>_vt,MenuUpdateManyArgsSchema:()=>Evt,MenuUpdateManyMutationInputSchema:()=>tq,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>pU,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>B5,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>Pm,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>Mut,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>Tdt,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>rU,MenuUpdateWithoutMenuCategoryInputSchema:()=>BE,MenuUpdateWithoutMenuItemsInputSchema:()=>jV,MenuUpdateWithoutRestaurantInputSchema:()=>cJ,MenuUpsertArgsSchema:()=>Nvt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>lU,MenuUpsertWithoutMenuCategoryInputSchema:()=>jut,MenuUpsertWithoutMenuItemsInputSchema:()=>Sdt,MenuWhereInputSchema:()=>fe,MenuWhereUniqueInputSchema:()=>Gt,MenuWithRelationsSchema:()=>jB,NestedBoolFilterSchema:()=>hS,NestedBoolWithAggregatesFilterSchema:()=>Y6,NestedDateTimeFilterSchema:()=>IS,NestedDateTimeNullableFilterSchema:()=>CS,NestedDateTimeNullableWithAggregatesFilterSchema:()=>t3,NestedDateTimeWithAggregatesFilterSchema:()=>J6,NestedEnumCategoryFilterSchema:()=>fS,NestedEnumCategoryWithAggregatesFilterSchema:()=>m3,NestedEnumChecklistFrequencyFilterSchema:()=>TS,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>n3,NestedEnumChecklistItemTypeFilterSchema:()=>PS,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>a3,NestedEnumChecklistStatusFilterSchema:()=>WS,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>i3,NestedEnumConstraintTypeFilterSchema:()=>MS,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>s3,NestedEnumCountStatusFilterSchema:()=>BS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>I3,NestedEnumDayOfWeekFilterSchema:()=>jS,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>u3,NestedEnumEquipmentStatusFilterSchema:()=>AS,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>e3,NestedEnumFeedbackSourceFilterSchema:()=>RS,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>l3,NestedEnumFeedbackStatusFilterSchema:()=>US,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>r3,NestedEnumInventoryTypeFilterSchema:()=>ZS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>y3,NestedEnumMaintenanceTypeFilterSchema:()=>SS,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>o3,NestedEnumNutritionSourceNullableFilterSchema:()=>wS,NestedEnumNutritionSourceNullableWithAggregatesFilterSchema:()=>h3,NestedEnumOrderStatusFilterSchema:()=>qS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>g3,NestedEnumPhotoTypeFilterSchema:()=>gS,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>K6,NestedEnumPrepStatusFilterSchema:()=>DS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>A3,NestedEnumProductionStatusFilterSchema:()=>kS,NestedEnumProductionStatusWithAggregatesFilterSchema:()=>p3,NestedEnumShiftStatusFilterSchema:()=>FS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>C3,NestedEnumSkillLevelFilterSchema:()=>OS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>z3,NestedEnumTaskTypeFilterSchema:()=>xS,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>c3,NestedEnumTransactionTypeFilterSchema:()=>NS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>b3,NestedEnumUserRoleFilterSchema:()=>vS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>d3,NestedFloatFilterSchema:()=>lp,NestedFloatNullableFilterSchema:()=>rp,NestedFloatNullableWithAggregatesFilterSchema:()=>G6,NestedFloatWithAggregatesFilterSchema:()=>H6,NestedIntFilterSchema:()=>nt,NestedIntNullableFilterSchema:()=>Pl,NestedIntNullableWithAggregatesFilterSchema:()=>X6,NestedIntWithAggregatesFilterSchema:()=>V6,NestedStringFilterSchema:()=>mS,NestedStringNullableFilterSchema:()=>bS,NestedStringNullableWithAggregatesFilterSchema:()=>$6,NestedStringWithAggregatesFilterSchema:()=>Q6,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableEnumNutritionSourceFieldUpdateOperationsInputSchema:()=>ea,NullableFloatFieldUpdateOperationsInputSchema:()=>u,NullableIntFieldUpdateOperationsInputSchema:()=>h,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>Btt,NutritionSourceSchema:()=>ot,NutritionalInfoAggregateArgsSchema:()=>oPt,NutritionalInfoArgsSchema:()=>MY,NutritionalInfoAvgOrderByAggregateInputSchema:()=>lct,NutritionalInfoCountOrderByAggregateInputSchema:()=>ict,NutritionalInfoCreateArgsSchema:()=>cOt,NutritionalInfoCreateInputSchema:()=>u2,NutritionalInfoCreateManyAndReturnArgsSchema:()=>yOt,NutritionalInfoCreateManyArgsSchema:()=>sOt,NutritionalInfoCreateManyInputSchema:()=>qW,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>um,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>PN,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>vT,NutritionalInfoDeleteArgsSchema:()=>dOt,NutritionalInfoDeleteManyArgsSchema:()=>bOt,NutritionalInfoFindFirstArgsSchema:()=>XTt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>tPt,NutritionalInfoFindManyArgsSchema:()=>ePt,NutritionalInfoFindUniqueArgsSchema:()=>aPt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>iPt,NutritionalInfoGroupByArgsSchema:()=>nPt,NutritionalInfoIncludeSchema:()=>Kz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>rct,NutritionalInfoMinOrderByAggregateInputSchema:()=>pct,NutritionalInfoNullableScalarRelationFilterSchema:()=>x5,NutritionalInfoOrderByWithAggregationInputSchema:()=>JH,NutritionalInfoOrderByWithRelationInputSchema:()=>ah,NutritionalInfoScalarFieldEnumSchema:()=>fC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>sS,NutritionalInfoSchema:()=>cot,NutritionalInfoSelectSchema:()=>Xz,NutritionalInfoSumOrderByAggregateInputSchema:()=>cct,NutritionalInfoUncheckedCreateInputSchema:()=>s2,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>Im,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>OT,NutritionalInfoUncheckedUpdateInputSchema:()=>d2,NutritionalInfoUncheckedUpdateManyInputSchema:()=>m2,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>wm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>jN,NutritionalInfoUpdateArgsSchema:()=>zOt,NutritionalInfoUpdateInputSchema:()=>y2,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>hOt,NutritionalInfoUpdateManyArgsSchema:()=>mOt,NutritionalInfoUpdateManyMutationInputSchema:()=>z2,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>km,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>s7,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>xN,NutritionalInfoUpsertArgsSchema:()=>uOt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>u7,NutritionalInfoWhereInputSchema:()=>Ee,NutritionalInfoWhereUniqueInputSchema:()=>$l,NutritionalInfoWithRelationsSchema:()=>uot,NutritionalRecommendationAggregateArgsSchema:()=>VCt,NutritionalRecommendationArgsSchema:()=>abt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>Git,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>Yit,NutritionalRecommendationCreateArgsSchema:()=>Uxt,NutritionalRecommendationCreateInputSchema:()=>k9,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>jxt,NutritionalRecommendationCreateManyArgsSchema:()=>xxt,NutritionalRecommendationCreateManyInputSchema:()=>sW,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>WN,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>k0,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>sm,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>wI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>vy,NutritionalRecommendationDeleteArgsSchema:()=>Mxt,NutritionalRecommendationDeleteManyArgsSchema:()=>fxt,NutritionalRecommendationFindFirstArgsSchema:()=>_Ct,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>LCt,NutritionalRecommendationFindManyArgsSchema:()=>dtt,NutritionalRecommendationFindUniqueArgsSchema:()=>QCt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>YCt,NutritionalRecommendationGroupByArgsSchema:()=>HCt,NutritionalRecommendationIncludeSchema:()=>Kd,NutritionalRecommendationListRelationFilterSchema:()=>j5,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>$it,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>Jit,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>Xpt,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>TH,NutritionalRecommendationOrderByWithRelationInputSchema:()=>fh,NutritionalRecommendationScalarFieldEnumSchema:()=>rC,NutritionalRecommendationScalarWhereInputSchema:()=>Kp,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>NA,NutritionalRecommendationSchema:()=>Met,NutritionalRecommendationSelectSchema:()=>Xd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>Kit,NutritionalRecommendationUncheckedCreateInputSchema:()=>x9,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>gm,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>Oy,NutritionalRecommendationUncheckedUpdateInputSchema:()=>M9,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>Z9,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>gmt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Nm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>LX,NutritionalRecommendationUpdateArgsSchema:()=>Zxt,NutritionalRecommendationUpdateInputSchema:()=>j9,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>Oxt,NutritionalRecommendationUpdateManyArgsSchema:()=>vxt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>VB,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>iM,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>xm,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>aM,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>_X,NutritionalRecommendationUpsertArgsSchema:()=>kxt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>nM,NutritionalRecommendationWhereInputSchema:()=>Pa,NutritionalRecommendationWhereUniqueInputSchema:()=>We,NutritionalRecommendationWithRelationsSchema:()=>Zet,OrderAggregateArgsSchema:()=>GSt,OrderArgsSchema:()=>SY,OrderAvgOrderByAggregateInputSchema:()=>ipt,OrderCountOrderByAggregateInputSchema:()=>apt,OrderCountOutputTypeArgsSchema:()=>TY,OrderCountOutputTypeSelectSchema:()=>fot,OrderCreateArgsSchema:()=>UZt,OrderCreateInputSchema:()=>z4,OrderCreateManyAndReturnArgsSchema:()=>jZt,OrderCreateManyArgsSchema:()=>xZt,OrderCreateManyInputSchema:()=>xW,OrderCreateManyRestaurantInputEnvelopeSchema:()=>wO,OrderCreateManyRestaurantInputSchema:()=>IQ,OrderCreateManyVendorInputEnvelopeSchema:()=>Jw,OrderCreateManyVendorInputSchema:()=>A0,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>er,OrderCreateNestedManyWithoutVendorInputSchema:()=>HD,OrderCreateNestedOneWithoutItemsInputSchema:()=>T6,OrderCreateOrConnectWithoutItemsInputSchema:()=>K8,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>bb,OrderCreateOrConnectWithoutVendorInputSchema:()=>RI,OrderCreateWithoutItemsInputSchema:()=>Qw,OrderCreateWithoutRestaurantInputSchema:()=>Gc,OrderCreateWithoutVendorInputSchema:()=>dy,OrderDeleteArgsSchema:()=>MZt,OrderDeleteManyArgsSchema:()=>fZt,OrderFindFirstArgsSchema:()=>QSt,OrderFindFirstOrThrowArgsSchema:()=>YSt,OrderFindManyArgsSchema:()=>YN,OrderFindUniqueArgsSchema:()=>JSt,OrderFindUniqueOrThrowArgsSchema:()=>KSt,OrderGroupByArgsSchema:()=>$St,OrderIncludeSchema:()=>Zz,OrderItemAggregateArgsSchema:()=>eTt,OrderItemArgsSchema:()=>ubt,OrderItemAvgOrderByAggregateInputSchema:()=>spt,OrderItemCountOrderByAggregateInputSchema:()=>upt,OrderItemCreateArgsSchema:()=>wZt,OrderItemCreateInputSchema:()=>g4,OrderItemCreateManyAndReturnArgsSchema:()=>qZt,OrderItemCreateManyArgsSchema:()=>BZt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>ew,OrderItemCreateManyIngredientInputSchema:()=>s0,OrderItemCreateManyInputSchema:()=>jW,OrderItemCreateManyOrderInputEnvelopeSchema:()=>Hw,OrderItemCreateManyOrderInputSchema:()=>C0,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>$I,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>FD,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>zI,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>WI,OrderItemCreateWithoutIngredientInputSchema:()=>_s,OrderItemCreateWithoutOrderInputSchema:()=>sy,OrderItemDeleteArgsSchema:()=>FZt,OrderItemDeleteManyArgsSchema:()=>LZt,OrderItemFindFirstArgsSchema:()=>XSt,OrderItemFindFirstOrThrowArgsSchema:()=>tTt,OrderItemFindManyArgsSchema:()=>GN,OrderItemFindUniqueArgsSchema:()=>nTt,OrderItemFindUniqueOrThrowArgsSchema:()=>aTt,OrderItemGroupByArgsSchema:()=>oTt,OrderItemIncludeSchema:()=>Oz,OrderItemListRelationFilterSchema:()=>iZ,OrderItemMaxOrderByAggregateInputSchema:()=>ypt,OrderItemMinOrderByAggregateInputSchema:()=>dpt,OrderItemOrderByRelationAggregateInputSchema:()=>g5,OrderItemOrderByWithAggregationInputSchema:()=>EH,OrderItemOrderByWithRelationInputSchema:()=>Eh,OrderItemScalarFieldEnumSchema:()=>RC,OrderItemScalarWhereInputSchema:()=>Bl,OrderItemScalarWhereWithAggregatesInputSchema:()=>oS,OrderItemSchema:()=>Xet,OrderItemSelectSchema:()=>fz,OrderItemSumOrderByAggregateInputSchema:()=>zpt,OrderItemUncheckedCreateInputSchema:()=>C4,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>ag,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>DD,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>Ls,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>yy,OrderItemUncheckedUpdateInputSchema:()=>S4,OrderItemUncheckedUpdateManyInputSchema:()=>T4,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Jzt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Cg,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>pmt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>VD,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>tX,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>SX,OrderItemUpdateArgsSchema:()=>DZt,OrderItemUpdateInputSchema:()=>A4,OrderItemUpdateManyAndReturnArgsSchema:()=>_Zt,OrderItemUpdateManyArgsSchema:()=>EZt,OrderItemUpdateManyMutationInputSchema:()=>BM,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Qx,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>Rj,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>yg,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>LD,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Hx,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Wj,OrderItemUpdateWithoutIngredientInputSchema:()=>XK,OrderItemUpdateWithoutOrderInputSchema:()=>AX,OrderItemUpsertArgsSchema:()=>NZt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Vx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>Pj,OrderItemWhereInputSchema:()=>ja,OrderItemWhereUniqueInputSchema:()=>At,OrderItemWithRelationsSchema:()=>D0,OrderListRelationFilterSchema:()=>tZ,OrderMaxOrderByAggregateInputSchema:()=>lpt,OrderMinOrderByAggregateInputSchema:()=>rpt,OrderOrderByRelationAggregateInputSchema:()=>G2,OrderOrderByWithAggregationInputSchema:()=>DH,OrderOrderByWithRelationInputSchema:()=>eh,OrderScalarFieldEnumSchema:()=>WC,OrderScalarRelationFilterSchema:()=>T5,OrderScalarWhereInputSchema:()=>Ol,OrderScalarWhereWithAggregatesInputSchema:()=>eS,OrderSchema:()=>Ket,OrderSelectSchema:()=>vz,OrderStatusSchema:()=>wt,OrderSumOrderByAggregateInputSchema:()=>ppt,OrderUncheckedCreateInputSchema:()=>m4,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>zr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>GD,OrderUncheckedCreateWithoutItemsInputSchema:()=>Yw,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>$c,OrderUncheckedCreateWithoutVendorInputSchema:()=>zy,OrderUncheckedUpdateInputSchema:()=>b4,OrderUncheckedUpdateManyInputSchema:()=>I4,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>tzt,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Dr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>cmt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>eE,OrderUncheckedUpdateWithoutItemsInputSchema:()=>sV,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>lJ,OrderUncheckedUpdateWithoutVendorInputSchema:()=>PX,OrderUpdateArgsSchema:()=>ZZt,OrderUpdateInputSchema:()=>h4,OrderUpdateManyAndReturnArgsSchema:()=>OZt,OrderUpdateManyArgsSchema:()=>vZt,OrderUpdateManyMutationInputSchema:()=>NM,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>oU,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>xj,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>KD,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>W6,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>ndt,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>eU,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>kj,OrderUpdateWithoutItemsInputSchema:()=>uV,OrderUpdateWithoutRestaurantInputSchema:()=>iJ,OrderUpdateWithoutVendorInputSchema:()=>TX,OrderUpsertArgsSchema:()=>kZt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>tU,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>Uj,OrderUpsertWithoutItemsInputSchema:()=>odt,OrderWhereInputSchema:()=>Ke,OrderWhereUniqueInputSchema:()=>ut,OrderWithRelationsSchema:()=>UB,OrganizationAggregateArgsSchema:()=>iAt,OrganizationArgsSchema:()=>TM,OrganizationAvgOrderByAggregateInputSchema:()=>llt,OrganizationCountOrderByAggregateInputSchema:()=>ilt,OrganizationCountOutputTypeArgsSchema:()=>pY,OrganizationCountOutputTypeSelectSchema:()=>Wot,OrganizationCreateArgsSchema:()=>Vxt,OrganizationCreateInputSchema:()=>q9,OrganizationCreateManyAndReturnArgsSchema:()=>Yxt,OrganizationCreateManyArgsSchema:()=>Qxt,OrganizationCreateManyInputSchema:()=>dW,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Jl,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>qa,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>I8,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>A8,OrganizationCreateWithoutRestaurantsInputSchema:()=>MO,OrganizationCreateWithoutUsersInputSchema:()=>YO,OrganizationDeleteArgsSchema:()=>Gxt,OrganizationDeleteManyArgsSchema:()=>Xxt,OrganizationFindFirstArgsSchema:()=>oAt,OrganizationFindFirstOrThrowArgsSchema:()=>nAt,OrganizationFindManyArgsSchema:()=>aAt,OrganizationFindUniqueArgsSchema:()=>rAt,OrganizationFindUniqueOrThrowArgsSchema:()=>pAt,OrganizationGroupByArgsSchema:()=>lAt,OrganizationIncludeSchema:()=>tz,OrganizationMaxOrderByAggregateInputSchema:()=>rlt,OrganizationMinOrderByAggregateInputSchema:()=>plt,OrganizationNullableScalarRelationFilterSchema:()=>XM,OrganizationOrderByWithAggregationInputSchema:()=>WH,OrganizationOrderByWithRelationInputSchema:()=>oc,OrganizationScalarFieldEnumSchema:()=>cC,OrganizationScalarWhereWithAggregatesInputSchema:()=>qA,OrganizationSchema:()=>vet,OrganizationSelectSchema:()=>ez,OrganizationSumOrderByAggregateInputSchema:()=>clt,OrganizationUncheckedCreateInputSchema:()=>F9,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>ZO,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>GO,OrganizationUncheckedUpdateInputSchema:()=>E9,OrganizationUncheckedUpdateManyInputSchema:()=>L9,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>dL,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>mL,OrganizationUpdateArgsSchema:()=>$xt,OrganizationUpdateInputSchema:()=>D9,OrganizationUpdateManyAndReturnArgsSchema:()=>Kxt,OrganizationUpdateManyArgsSchema:()=>Jxt,OrganizationUpdateManyMutationInputSchema:()=>_9,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>Pr,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Wi,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>iyt,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>ryt,OrganizationUpdateWithoutRestaurantsInputSchema:()=>yL,OrganizationUpdateWithoutUsersInputSchema:()=>zL,OrganizationUpsertArgsSchema:()=>Hxt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>ayt,OrganizationUpsertWithoutUsersInputSchema:()=>lyt,OrganizationWhereInputSchema:()=>Me,OrganizationWhereUniqueInputSchema:()=>Dl,OrganizationWithRelationsSchema:()=>B0,PasswordResetAggregateArgsSchema:()=>MTt,PasswordResetArgsSchema:()=>ybt,PasswordResetAvgOrderByAggregateInputSchema:()=>Bpt,PasswordResetCountOrderByAggregateInputSchema:()=>Npt,PasswordResetCreateArgsSchema:()=>Uvt,PasswordResetCreateInputSchema:()=>L4,PasswordResetCreateManyAndReturnArgsSchema:()=>jvt,PasswordResetCreateManyArgsSchema:()=>xvt,PasswordResetCreateManyInputSchema:()=>fW,PasswordResetCreateManyUserInputEnvelopeSchema:()=>of,PasswordResetCreateManyUserInputSchema:()=>ZQ,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Va,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>Mb,PasswordResetCreateWithoutUserInputSchema:()=>Tu,PasswordResetDeleteArgsSchema:()=>Mvt,PasswordResetDeleteManyArgsSchema:()=>fvt,PasswordResetFindFirstArgsSchema:()=>xTt,PasswordResetFindFirstOrThrowArgsSchema:()=>jTt,PasswordResetFindManyArgsSchema:()=>Att,PasswordResetFindUniqueArgsSchema:()=>vTt,PasswordResetFindUniqueOrThrowArgsSchema:()=>OTt,PasswordResetGroupByArgsSchema:()=>ZTt,PasswordResetIncludeSchema:()=>Lz,PasswordResetListRelationFilterSchema:()=>t5,PasswordResetMaxOrderByAggregateInputSchema:()=>qpt,PasswordResetMinOrderByAggregateInputSchema:()=>Fpt,PasswordResetOrderByRelationAggregateInputSchema:()=>Ult,PasswordResetOrderByWithAggregationInputSchema:()=>QH,PasswordResetOrderByWithRelationInputSchema:()=>Lh,PasswordResetScalarFieldEnumSchema:()=>MC,PasswordResetScalarWhereInputSchema:()=>wp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>rS,PasswordResetSchema:()=>aot,PasswordResetSelectSchema:()=>Vz,PasswordResetSumOrderByAggregateInputSchema:()=>Dpt,PasswordResetUncheckedCreateInputSchema:()=>V4,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>ui,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>Pu,PasswordResetUncheckedUpdateInputSchema:()=>Q4,PasswordResetUncheckedUpdateManyInputSchema:()=>Y4,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>zzt,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>$i,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>OJ,PasswordResetUpdateArgsSchema:()=>Zvt,PasswordResetUpdateInputSchema:()=>H4,PasswordResetUpdateManyAndReturnArgsSchema:()=>Ovt,PasswordResetUpdateManyArgsSchema:()=>vvt,PasswordResetUpdateManyMutationInputSchema:()=>XB,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>LU,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>Mi,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>_U,PasswordResetUpdateWithoutUserInputSchema:()=>vJ,PasswordResetUpsertArgsSchema:()=>kvt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>EU,PasswordResetWhereInputSchema:()=>Za,PasswordResetWhereUniqueInputSchema:()=>ke,PasswordResetWithRelationsSchema:()=>iot,PhotoTypeSchema:()=>ye,PrepBoardAggregateArgsSchema:()=>gTt,PrepBoardArgsSchema:()=>UY,PrepBoardAvgOrderByAggregateInputSchema:()=>kpt,PrepBoardCountOrderByAggregateInputSchema:()=>Upt,PrepBoardCountOutputTypeArgsSchema:()=>kY,PrepBoardCountOutputTypeSelectSchema:()=>Bot,PrepBoardCreateArgsSchema:()=>cvt,PrepBoardCreateInputSchema:()=>O4,PrepBoardCreateManyAndReturnArgsSchema:()=>yvt,PrepBoardCreateManyArgsSchema:()=>svt,PrepBoardCreateManyInputSchema:()=>vW,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>go,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>aE,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>e7,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>Kb,PrepBoardCreateWithoutPrepItemsInputSchema:()=>nN,PrepBoardCreateWithoutRecipesInputSchema:()=>ss,PrepBoardDeleteArgsSchema:()=>dvt,PrepBoardDeleteManyArgsSchema:()=>bvt,PrepBoardFindFirstArgsSchema:()=>bTt,PrepBoardFindFirstOrThrowArgsSchema:()=>ITt,PrepBoardFindManyArgsSchema:()=>Ctt,PrepBoardFindUniqueArgsSchema:()=>ATt,PrepBoardFindUniqueOrThrowArgsSchema:()=>STt,PrepBoardGroupByArgsSchema:()=>CTt,PrepBoardIncludeSchema:()=>Fz,PrepBoardListRelationFilterSchema:()=>r5,PrepBoardMaxOrderByAggregateInputSchema:()=>xpt,PrepBoardMinOrderByAggregateInputSchema:()=>jpt,PrepBoardOrderByRelationAggregateInputSchema:()=>trt,PrepBoardOrderByWithAggregationInputSchema:()=>VH,PrepBoardOrderByWithRelationInputSchema:()=>nh,PrepBoardScalarFieldEnumSchema:()=>xC,PrepBoardScalarRelationFilterSchema:()=>R5,PrepBoardScalarWhereInputSchema:()=>Ep,PrepBoardScalarWhereWithAggregatesInputSchema:()=>iS,PrepBoardSchema:()=>oot,PrepBoardSelectSchema:()=>Dz,PrepBoardSumOrderByAggregateInputSchema:()=>Mpt,PrepBoardUncheckedCreateInputSchema:()=>f4,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Do,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>aN,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>ys,PrepBoardUncheckedUpdateInputSchema:()=>N4,PrepBoardUncheckedUpdateManyInputSchema:()=>B4,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>fzt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>On,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>bV,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>SK,PrepBoardUpdateArgsSchema:()=>zvt,PrepBoardUpdateInputSchema:()=>w4,PrepBoardUpdateManyAndReturnArgsSchema:()=>hvt,PrepBoardUpdateManyArgsSchema:()=>mvt,PrepBoardUpdateManyMutationInputSchema:()=>KB,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>Xk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>yn,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>rE,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>cdt,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Kk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>hV,PrepBoardUpdateWithoutRecipesInputSchema:()=>AK,PrepBoardUpsertArgsSchema:()=>uvt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Jk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>pdt,PrepBoardWhereInputSchema:()=>to,PrepBoardWhereUniqueInputSchema:()=>ne,PrepBoardWithRelationsSchema:()=>_0,PrepHistoryAggregateArgsSchema:()=>zPt,PrepHistoryArgsSchema:()=>mbt,PrepHistoryAvgOrderByAggregateInputSchema:()=>hct,PrepHistoryCountOrderByAggregateInputSchema:()=>mct,PrepHistoryCreateArgsSchema:()=>UOt,PrepHistoryCreateInputSchema:()=>A2,PrepHistoryCreateManyAndReturnArgsSchema:()=>jOt,PrepHistoryCreateManyArgsSchema:()=>xOt,PrepHistoryCreateManyInputSchema:()=>DW,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>Zf,PrepHistoryCreateManyRecipeInputSchema:()=>JQ,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>Io,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Jb,PrepHistoryCreateWithoutRecipeInputSchema:()=>cs,PrepHistoryDeleteArgsSchema:()=>MOt,PrepHistoryDeleteManyArgsSchema:()=>fOt,PrepHistoryFindFirstArgsSchema:()=>yPt,PrepHistoryFindFirstOrThrowArgsSchema:()=>dPt,PrepHistoryFindManyArgsSchema:()=>Ptt,PrepHistoryFindUniqueArgsSchema:()=>hPt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>bPt,PrepHistoryGroupByArgsSchema:()=>mPt,PrepHistoryIncludeSchema:()=>om,PrepHistoryListRelationFilterSchema:()=>l5,PrepHistoryMaxOrderByAggregateInputSchema:()=>bct,PrepHistoryMinOrderByAggregateInputSchema:()=>Ict,PrepHistoryOrderByRelationAggregateInputSchema:()=>Xlt,PrepHistoryOrderByWithAggregationInputSchema:()=>XH,PrepHistoryOrderByWithRelationInputSchema:()=>Qh,PrepHistoryScalarFieldEnumSchema:()=>NC,PrepHistoryScalarWhereInputSchema:()=>Dp,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>dS,PrepHistorySchema:()=>dot,PrepHistorySelectSchema:()=>nm,PrepHistorySumOrderByAggregateInputSchema:()=>gct,PrepHistoryUncheckedCreateInputSchema:()=>S2,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Fo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>us,PrepHistoryUncheckedUpdateInputSchema:()=>P2,PrepHistoryUncheckedUpdateManyInputSchema:()=>W2,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ozt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>vn,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>CK,PrepHistoryUpdateArgsSchema:()=>ZOt,PrepHistoryUpdateInputSchema:()=>T2,PrepHistoryUpdateManyAndReturnArgsSchema:()=>OOt,PrepHistoryUpdateManyArgsSchema:()=>vOt,PrepHistoryUpdateManyMutationInputSchema:()=>oq,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>$k,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>sn,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Gk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>gK,PrepHistoryUpsertArgsSchema:()=>kOt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Yk,PrepHistoryWhereInputSchema:()=>fa,PrepHistoryWhereUniqueInputSchema:()=>je,PrepHistoryWithRelationsSchema:()=>zot,PrepItemAggregateArgsSchema:()=>WTt,PrepItemArgsSchema:()=>sbt,PrepItemAvgOrderByAggregateInputSchema:()=>vpt,PrepItemCountOrderByAggregateInputSchema:()=>Zpt,PrepItemCreateArgsSchema:()=>Ivt,PrepItemCreateInputSchema:()=>q4,PrepItemCreateManyAndReturnArgsSchema:()=>Avt,PrepItemCreateManyArgsSchema:()=>Cvt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>XO,PrepItemCreateManyAssignedToInputSchema:()=>xQ,PrepItemCreateManyInputSchema:()=>OW,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>oN,PrepItemCreateManyPrepBoardInputSchema:()=>P0,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>vf,PrepItemCreateManyRecipeInputSchema:()=>KQ,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ea,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>O6,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>Co,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>kb,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>MI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>Xb,PrepItemCreateWithoutAssignedToInputSchema:()=>bu,PrepItemCreateWithoutPrepBoardInputSchema:()=>Ty,PrepItemCreateWithoutRecipeInputSchema:()=>ds,PrepItemDeleteArgsSchema:()=>Svt,PrepItemDeleteManyArgsSchema:()=>Rvt,PrepItemFindFirstArgsSchema:()=>TTt,PrepItemFindFirstOrThrowArgsSchema:()=>PTt,PrepItemFindManyArgsSchema:()=>VT,PrepItemFindUniqueArgsSchema:()=>UTt,PrepItemFindUniqueOrThrowArgsSchema:()=>kTt,PrepItemGroupByArgsSchema:()=>RTt,PrepItemIncludeSchema:()=>Ez,PrepItemListRelationFilterSchema:()=>oT,PrepItemMaxOrderByAggregateInputSchema:()=>Opt,PrepItemMinOrderByAggregateInputSchema:()=>fpt,PrepItemOrderByRelationAggregateInputSchema:()=>Tq,PrepItemOrderByWithAggregationInputSchema:()=>HH,PrepItemOrderByWithRelationInputSchema:()=>_h,PrepItemScalarFieldEnumSchema:()=>jC,PrepItemScalarWhereInputSchema:()=>gl,PrepItemScalarWhereWithAggregatesInputSchema:()=>lS,PrepItemSchema:()=>not,PrepItemSelectSchema:()=>_z,PrepItemSumOrderByAggregateInputSchema:()=>wpt,PrepItemUncheckedCreateInputSchema:()=>F4,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>ri,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>w6,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>Iu,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>Py,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>zs,PrepItemUncheckedUpdateInputSchema:()=>E4,PrepItemUncheckedUpdateManyInputSchema:()=>_4,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>szt,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Qi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>zmt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>F6,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>wzt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fn,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>kJ,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>OX,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>PK,PrepItemUpdateArgsSchema:()=>Tvt,PrepItemUpdateInputSchema:()=>D4,PrepItemUpdateManyAndReturnArgsSchema:()=>Wvt,PrepItemUpdateManyArgsSchema:()=>Pvt,PrepItemUpdateManyMutationInputSchema:()=>zP,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>fU,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>Lj,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>ox,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>ki,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>B6,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>dn,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>OU,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>_j,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ex,PrepItemUpdateWithoutAssignedToInputSchema:()=>UJ,PrepItemUpdateWithoutPrepBoardInputSchema:()=>vX,PrepItemUpdateWithoutRecipeInputSchema:()=>TK,PrepItemUpsertArgsSchema:()=>gvt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>vU,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>Ej,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>tx,PrepItemWhereInputSchema:()=>Ma,PrepItemWhereUniqueInputSchema:()=>Q,PrepItemWithRelationsSchema:()=>xB,PrepStatusSchema:()=>tt,ProductionPlanAggregateArgsSchema:()=>$gt,ProductionPlanArgsSchema:()=>aY,ProductionPlanAvgOrderByAggregateInputSchema:()=>iit,ProductionPlanCountOrderByAggregateInputSchema:()=>ait,ProductionPlanCountOutputTypeArgsSchema:()=>iY,ProductionPlanCountOutputTypeSelectSchema:()=>Tot,ProductionPlanCreateArgsSchema:()=>ckt,ProductionPlanCreateInputSchema:()=>D1,ProductionPlanCreateManyAndReturnArgsSchema:()=>ykt,ProductionPlanCreateManyArgsSchema:()=>skt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>lf,ProductionPlanCreateManyCreatedByInputSchema:()=>fQ,ProductionPlanCreateManyInputSchema:()=>nW,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>EO,ProductionPlanCreateManyRestaurantInputSchema:()=>PQ,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>Ya,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>rr,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>KF,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>Ob,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>i8,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>Tb,ProductionPlanCreateWithoutCreatedByInputSchema:()=>xu,ProductionPlanCreateWithoutItemsInputSchema:()=>Xv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>ru,ProductionPlanDeleteArgsSchema:()=>dkt,ProductionPlanDeleteManyArgsSchema:()=>bkt,ProductionPlanFindFirstArgsSchema:()=>Ygt,ProductionPlanFindFirstOrThrowArgsSchema:()=>Ggt,ProductionPlanFindManyArgsSchema:()=>DN,ProductionPlanFindUniqueArgsSchema:()=>Kgt,ProductionPlanFindUniqueOrThrowArgsSchema:()=>Xgt,ProductionPlanGroupByArgsSchema:()=>Jgt,ProductionPlanIncludeSchema:()=>wd,ProductionPlanItemAggregateArgsSchema:()=>oCt,ProductionPlanItemArgsSchema:()=>Kht,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>sit,ProductionPlanItemCountOrderByAggregateInputSchema:()=>uit,ProductionPlanItemCreateArgsSchema:()=>Ikt,ProductionPlanItemCreateInputSchema:()=>H1,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>Akt,ProductionPlanItemCreateManyArgsSchema:()=>Ckt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>rf,ProductionPlanItemCreateManyAssignedToInputSchema:()=>wQ,ProductionPlanItemCreateManyInputSchema:()=>aW,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>Kv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>cQ,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>ff,ProductionPlanItemCreateManyRecipeInputSchema:()=>t0,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ga,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>HF,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>So,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>fb,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>pb,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>eI,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>Mu,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>Mc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>bs,ProductionPlanItemDeleteArgsSchema:()=>Skt,ProductionPlanItemDeleteManyArgsSchema:()=>Rkt,ProductionPlanItemFindFirstArgsSchema:()=>tCt,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>eCt,ProductionPlanItemFindManyArgsSchema:()=>FT,ProductionPlanItemFindUniqueArgsSchema:()=>aCt,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>iCt,ProductionPlanItemGroupByArgsSchema:()=>nCt,ProductionPlanItemIncludeSchema:()=>Bd,ProductionPlanItemListRelationFilterSchema:()=>GS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>yit,ProductionPlanItemMinOrderByAggregateInputSchema:()=>dit,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>zq,ProductionPlanItemOrderByWithAggregationInputSchema:()=>hH,ProductionPlanItemOrderByWithRelationInputSchema:()=>xh,ProductionPlanItemScalarFieldEnumSchema:()=>tC,ProductionPlanItemScalarWhereInputSchema:()=>dl,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>jA,ProductionPlanItemSchema:()=>get,ProductionPlanItemSelectSchema:()=>qd,ProductionPlanItemSumOrderByAggregateInputSchema:()=>zit,ProductionPlanItemUncheckedCreateInputSchema:()=>Q1,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>zi,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>QF,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>Zu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>Zc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>Is,ProductionPlanItemUncheckedUpdateInputSchema:()=>G1,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>$1,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Izt,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>tl,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Vdt,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>JF,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Bzt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Nn,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>EJ,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>E7,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>kK,ProductionPlanItemUpdateArgsSchema:()=>Tkt,ProductionPlanItemUpdateInputSchema:()=>Y1,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>Wkt,ProductionPlanItemUpdateManyArgsSchema:()=>Pkt,ProductionPlanItemUpdateManyMutationInputSchema:()=>cP,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>ok,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>xR,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>px,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>fi,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>$F,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>mn,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>ek,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>kR,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>rx,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>DJ,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>D7,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>UK,ProductionPlanItemUpsertArgsSchema:()=>gkt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>tk,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>UR,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>lx,ProductionPlanItemWhereInputSchema:()=>Ia,ProductionPlanItemWhereUniqueInputSchema:()=>_,ProductionPlanItemWithRelationsSchema:()=>AB,ProductionPlanListRelationFilterSchema:()=>oZ,ProductionPlanMaxOrderByAggregateInputSchema:()=>lit,ProductionPlanMinOrderByAggregateInputSchema:()=>rit,ProductionPlanOrderByRelationAggregateInputSchema:()=>J2,ProductionPlanOrderByWithAggregationInputSchema:()=>mH,ProductionPlanOrderByWithRelationInputSchema:()=>Gm,ProductionPlanScalarFieldEnumSchema:()=>Xg,ProductionPlanScalarRelationFilterSchema:()=>f2,ProductionPlanScalarWhereInputSchema:()=>wl,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>xA,ProductionPlanSchema:()=>Iet,ProductionPlanSelectSchema:()=>Nd,ProductionPlanSumOrderByAggregateInputSchema:()=>pit,ProductionPlanUncheckedCreateInputSchema:()=>E1,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>di,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Cr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>ju,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>tO,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>pu,ProductionPlanUncheckedUpdateInputSchema:()=>L1,ProductionPlanUncheckedUpdateManyInputSchema:()=>V1,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>bzt,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>Xi,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>lzt,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Qr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>FJ,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>D_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>IJ,ProductionPlanUpdateArgsSchema:()=>zkt,ProductionPlanUpdateInputSchema:()=>_1,ProductionPlanUpdateManyAndReturnArgsSchema:()=>hkt,ProductionPlanUpdateManyArgsSchema:()=>mkt,ProductionPlanUpdateManyMutationInputSchema:()=>jM,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>XU,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>CU,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>Oi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>eD,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>vst,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>KU,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>gU,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>qJ,ProductionPlanUpdateWithoutItemsInputSchema:()=>F_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>bJ,ProductionPlanUpsertArgsSchema:()=>ukt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>JU,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>IU,ProductionPlanUpsertWithoutItemsInputSchema:()=>Zst,ProductionPlanWhereInputSchema:()=>Ge,ProductionPlanWhereUniqueInputSchema:()=>rt,ProductionPlanWithRelationsSchema:()=>CB,ProductionStatusSchema:()=>Ot,QualityChecklistAggregateArgsSchema:()=>LIt,QualityChecklistArgsSchema:()=>SM,QualityChecklistAvgOrderByAggregateInputSchema:()=>aat,QualityChecklistCountOrderByAggregateInputSchema:()=>nat,QualityChecklistCountOutputTypeArgsSchema:()=>J0,QualityChecklistCountOutputTypeSelectSchema:()=>Iot,QualityChecklistCreateArgsSchema:()=>URt,QualityChecklistCreateInputSchema:()=>VG,QualityChecklistCreateManyAndReturnArgsSchema:()=>jRt,QualityChecklistCreateManyArgsSchema:()=>xRt,QualityChecklistCreateManyInputSchema:()=>QP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>LO,QualityChecklistCreateManyRestaurantInputSchema:()=>RQ,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>cr,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>lF,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>D5,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>E3,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>D3,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>Wb,QualityChecklistCreateWithoutCompletionsInputSchema:()=>bv,QualityChecklistCreateWithoutItemsInputSchema:()=>zv,QualityChecklistCreateWithoutRestaurantInputSchema:()=>su,QualityChecklistDeleteArgsSchema:()=>MRt,QualityChecklistDeleteManyArgsSchema:()=>fRt,QualityChecklistFindFirstArgsSchema:()=>EIt,QualityChecklistFindFirstOrThrowArgsSchema:()=>_It,QualityChecklistFindManyArgsSchema:()=>rtt,QualityChecklistFindUniqueArgsSchema:()=>HIt,QualityChecklistFindUniqueOrThrowArgsSchema:()=>QIt,QualityChecklistGroupByArgsSchema:()=>VIt,QualityChecklistIncludeSchema:()=>hd,QualityChecklistListRelationFilterSchema:()=>Y2,QualityChecklistMaxOrderByAggregateInputSchema:()=>iat,QualityChecklistMinOrderByAggregateInputSchema:()=>lat,QualityChecklistOrderByRelationAggregateInputSchema:()=>glt,QualityChecklistOrderByWithAggregationInputSchema:()=>iH,QualityChecklistOrderByWithRelationInputSchema:()=>ec,QualityChecklistScalarFieldEnumSchema:()=>_g,QualityChecklistScalarRelationFilterSchema:()=>VM,QualityChecklistScalarWhereInputSchema:()=>vp,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>gA,QualityChecklistSchema:()=>ret,QualityChecklistSelectSchema:()=>bd,QualityChecklistSumOrderByAggregateInputSchema:()=>rat,QualityChecklistUncheckedCreateInputSchema:()=>HG,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Sr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>Iv,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>mv,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>yu,QualityChecklistUncheckedUpdateInputSchema:()=>YG,QualityChecklistUncheckedUpdateManyInputSchema:()=>GG,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>pzt,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Gr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>r_,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>i_,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>SJ,QualityChecklistUpdateArgsSchema:()=>ZRt,QualityChecklistUpdateInputSchema:()=>QG,QualityChecklistUpdateManyAndReturnArgsSchema:()=>ORt,QualityChecklistUpdateManyArgsSchema:()=>vRt,QualityChecklistUpdateManyMutationInputSchema:()=>qB,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>RU,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>uF,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>L5,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Xut,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Jut,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>WU,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>l_,QualityChecklistUpdateWithoutItemsInputSchema:()=>a_,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>AJ,QualityChecklistUpsertArgsSchema:()=>kRt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>PU,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>Kut,QualityChecklistUpsertWithoutItemsInputSchema:()=>$ut,QualityChecklistWhereInputSchema:()=>ve,QualityChecklistWhereUniqueInputSchema:()=>Qt,QualityChecklistWithRelationsSchema:()=>zB,QueryModeSchema:()=>IM,RecipeAggregateArgsSchema:()=>YAt,RecipeArgsSchema:()=>Kt,RecipeAvgOrderByAggregateInputSchema:()=>prt,RecipeCountOrderByAggregateInputSchema:()=>rrt,RecipeCountOutputTypeArgsSchema:()=>zY,RecipeCountOutputTypeSelectSchema:()=>jot,RecipeCreateArgsSchema:()=>tMt,RecipeCreateInputSchema:()=>S$,RecipeCreateManyAndReturnArgsSchema:()=>nMt,RecipeCreateManyArgsSchema:()=>oMt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>Sf,RecipeCreateManyCookBookInputSchema:()=>QQ,RecipeCreateManyInputSchema:()=>CW,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>NO,RecipeCreateManyRestaurantInputSchema:()=>gQ,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>d6,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>AF,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>pm,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>v6,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>or,RecipeCreateNestedManyWithoutTagsInputSchema:()=>wct,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>Sct,RecipeCreateNestedOneWithoutEquipmentsInputSchema:()=>Lq,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>put,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>uD,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>hD,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>Zct,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>E6,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Cct,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>Rct,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>uut,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>iE,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>XF,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>out,RecipeCreateNestedOneWithoutStorageInputSchema:()=>Pct,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>kct,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>mP,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>iD,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>jct,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Hb,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>T3,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>ib,RecipeCreateOrConnectWithoutEquipmentsInputSchema:()=>w3,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>d7,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>O8,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>N8,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>k3,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>r7,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>OI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>S3,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>W3,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>jI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>z7,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>o7,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>l8,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>G8,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Ib,RecipeCreateOrConnectWithoutStorageInputSchema:()=>P3,RecipeCreateOrConnectWithoutTagsInputSchema:()=>rb,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>R3,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>Z3,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>y8,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>U3,RecipeCreateWithoutCookBookInputSchema:()=>Xu,RecipeCreateWithoutCriticalPointsInputSchema:()=>WZ,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>Wc,RecipeCreateWithoutEquipmentsInputSchema:()=>ov,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>vN,RecipeCreateWithoutIngredientsInputSchema:()=>iw,RecipeCreateWithoutInstructionsInputSchema:()=>sw,RecipeCreateWithoutLaborCostsInputSchema:()=>fZ,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>bN,RecipeCreateWithoutMenuItemsInputSchema:()=>xy,RecipeCreateWithoutNutritionalInfoInputSchema:()=>TZ,RecipeCreateWithoutPhotosInputSchema:()=>xZ,RecipeCreateWithoutPrepBoardsInputSchema:()=>Ay,RecipeCreateWithoutPrepHistoryInputSchema:()=>fN,RecipeCreateWithoutPrepItemsInputSchema:()=>iN,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>eO,RecipeCreateWithoutRecipeStatsInputSchema:()=>Fw,RecipeCreateWithoutRestaurantInputSchema:()=>Jc,RecipeCreateWithoutStorageInputSchema:()=>UZ,RecipeCreateWithoutTagsInputSchema:()=>xc,RecipeCreateWithoutTemperaturesInputSchema:()=>MZ,RecipeCreateWithoutVersionsInputSchema:()=>LZ,RecipeCreateWithoutWithdrawalsInputSchema:()=>dO,RecipeCreateWithoutYieldsInputSchema:()=>vZ,RecipeCreateimageUrlsInputSchema:()=>Pt,RecipeCriticalPointAggregateArgsSchema:()=>Wbt,RecipeCriticalPointArgsSchema:()=>Nht,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>Qot,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>Hot,RecipeCriticalPointCreateArgsSchema:()=>UPt,RecipeCriticalPointCreateInputSchema:()=>BY,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>jPt,RecipeCriticalPointCreateManyArgsSchema:()=>xPt,RecipeCriticalPointCreateManyInputSchema:()=>fP,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>_f,RecipeCriticalPointCreateManyRecipeInputSchema:()=>r0,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>Zo,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>uI,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>fs,RecipeCriticalPointDeleteArgsSchema:()=>MPt,RecipeCriticalPointDeleteManyArgsSchema:()=>fPt,RecipeCriticalPointFindFirstArgsSchema:()=>Tbt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>Pbt,RecipeCriticalPointFindManyArgsSchema:()=>XX,RecipeCriticalPointFindUniqueArgsSchema:()=>Ubt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>kbt,RecipeCriticalPointGroupByArgsSchema:()=>Rbt,RecipeCriticalPointIncludeSchema:()=>Hy,RecipeCriticalPointListRelationFilterSchema:()=>d5,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>Yot,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>Got,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>irt,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>QV,RecipeCriticalPointOrderByWithRelationInputSchema:()=>zh,RecipeCriticalPointScalarFieldEnumSchema:()=>Mg,RecipeCriticalPointScalarWhereInputSchema:()=>Qp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>rA,RecipeCriticalPointSchema:()=>Dtt,RecipeCriticalPointSelectSchema:()=>Qy,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>$ot,RecipeCriticalPointUncheckedCreateInputSchema:()=>qY,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>tn,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>ws,RecipeCriticalPointUncheckedUpdateInputSchema:()=>DY,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>EY,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Qzt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Qn,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>HK,RecipeCriticalPointUpdateArgsSchema:()=>ZPt,RecipeCriticalPointUpdateInputSchema:()=>FY,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>OPt,RecipeCriticalPointUpdateManyArgsSchema:()=>vPt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>MB,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>fx,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Wn,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ox,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>VK,RecipeCriticalPointUpsertArgsSchema:()=>kPt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>vx,RecipeCriticalPointWhereInputSchema:()=>na,RecipeCriticalPointWhereUniqueInputSchema:()=>me,RecipeCriticalPointWithRelationsSchema:()=>Ett,RecipeDeleteArgsSchema:()=>aMt,RecipeDeleteManyArgsSchema:()=>pMt,RecipeEquipmentAggregateArgsSchema:()=>ZIt,RecipeEquipmentArgsSchema:()=>_ht,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>Hnt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>Vnt,RecipeEquipmentCreateArgsSchema:()=>cRt,RecipeEquipmentCreateInputSchema:()=>fG,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>yRt,RecipeEquipmentCreateManyArgsSchema:()=>sRt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>tv,RecipeEquipmentCreateManyEquipmentInputSchema:()=>nQ,RecipeEquipmentCreateManyInputSchema:()=>VP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>Bf,RecipeEquipmentCreateManyRecipeInputSchema:()=>n0,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>mw,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>m0,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>fq,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>Ro,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>ID,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>Kh,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>iI,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>CI,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>sc,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>Ws,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>ey,RecipeEquipmentDeleteArgsSchema:()=>dRt,RecipeEquipmentDeleteManyArgsSchema:()=>bRt,RecipeEquipmentFindFirstArgsSchema:()=>jIt,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>MIt,RecipeEquipmentFindManyArgsSchema:()=>fT,RecipeEquipmentFindUniqueArgsSchema:()=>OIt,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>fIt,RecipeEquipmentGroupByArgsSchema:()=>vIt,RecipeEquipmentIncludeSchema:()=>yd,RecipeEquipmentListRelationFilterSchema:()=>QS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>Qnt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>Ynt,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>lq,RecipeEquipmentOrderByWithAggregationInputSchema:()=>nH,RecipeEquipmentOrderByWithRelationInputSchema:()=>Ch,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>lB,RecipeEquipmentScalarFieldEnumSchema:()=>Dg,RecipeEquipmentScalarWhereInputSchema:()=>yl,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>bA,RecipeEquipmentSchema:()=>net,RecipeEquipmentSelectSchema:()=>dd,RecipeEquipmentSumOrderByAggregateInputSchema:()=>Gnt,RecipeEquipmentUncheckedCreateInputSchema:()=>wG,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>Nq,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Yo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>gD,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>yc,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>Rs,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>oy,RecipeEquipmentUncheckedUpdateInputSchema:()=>BG,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>qG,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>fdt,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>Eq,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ezt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>nmt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>TD,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Dn,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>S7,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>wK,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>yX,RecipeEquipmentUpdateArgsSchema:()=>zRt,RecipeEquipmentUpdateInputSchema:()=>NG,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>hRt,RecipeEquipmentUpdateManyArgsSchema:()=>mRt,RecipeEquipmentUpdateManyMutationInputSchema:()=>aP,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>XW,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>Cx,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>sj,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>Fq,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>SD,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>gn,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>KW,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>gx,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>uj,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>A7,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>fK,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>sX,RecipeEquipmentUpsertArgsSchema:()=>uRt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>JW,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ix,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>cj,RecipeEquipmentWhereInputSchema:()=>ca,RecipeEquipmentWhereUniqueInputSchema:()=>B,RecipeEquipmentWithRelationsSchema:()=>dB,RecipeFindFirstArgsSchema:()=>HAt,RecipeFindFirstOrThrowArgsSchema:()=>QAt,RecipeFindManyArgsSchema:()=>Cp,RecipeFindUniqueArgsSchema:()=>$At,RecipeFindUniqueOrThrowArgsSchema:()=>JAt,RecipeGroupByArgsSchema:()=>GAt,RecipeIncludeSchema:()=>zz,RecipeIngredientAggregateArgsSchema:()=>lSt,RecipeIngredientArgsSchema:()=>rbt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>Srt,RecipeIngredientCountOrderByAggregateInputSchema:()=>Art,RecipeIngredientCreateArgsSchema:()=>IMt,RecipeIngredientCreateInputSchema:()=>Z$,RecipeIngredientCreateManyAndReturnArgsSchema:()=>AMt,RecipeIngredientCreateManyArgsSchema:()=>CMt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>Xf,RecipeIngredientCreateManyIngredientInputSchema:()=>c0,RecipeIngredientCreateManyInputSchema:()=>SW,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>xf,RecipeIngredientCreateManyRecipeInputSchema:()=>YQ,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>HZ,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>eQ,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>YI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>zo,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>hP,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>yI,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Qb,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>$h,RecipeIngredientCreateWithoutIngredientInputSchema:()=>qs,RecipeIngredientCreateWithoutRecipeInputSchema:()=>es,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>rc,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>bp,RecipeIngredientDeleteArgsSchema:()=>SMt,RecipeIngredientDeleteManyArgsSchema:()=>RMt,RecipeIngredientFindFirstArgsSchema:()=>aSt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>iSt,RecipeIngredientFindManyArgsSchema:()=>ET,RecipeIngredientFindUniqueArgsSchema:()=>pSt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>cSt,RecipeIngredientGroupByArgsSchema:()=>rSt,RecipeIngredientIncludeSchema:()=>Iz,RecipeIngredientListRelationFilterSchema:()=>HS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>Trt,RecipeIngredientMinOrderByAggregateInputSchema:()=>Prt,RecipeIngredientOrderByRelationAggregateInputSchema:()=>aq,RecipeIngredientOrderByWithAggregationInputSchema:()=>OH,RecipeIngredientOrderByWithRelationInputSchema:()=>qh,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>eP,RecipeIngredientRecipeIdRecipeVersionIdCompoundUniqueInputSchema:()=>tP,RecipeIngredientScalarFieldEnumSchema:()=>IC,RecipeIngredientScalarWhereInputSchema:()=>sl,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>YA,RecipeIngredientSchema:()=>Let,RecipeIngredientSelectSchema:()=>gz,RecipeIngredientSumOrderByAggregateInputSchema:()=>Wrt,RecipeIngredientUncheckedCreateInputSchema:()=>v$,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>og,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>CP,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Fs,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>os,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>pc,RecipeIngredientUncheckedUpdateInputSchema:()=>f$,RecipeIngredientUncheckedUpdateManyInputSchema:()=>w$,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>Gzt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Ig,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>jzt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>xn,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>vdt,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>UP,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>$K,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>yK,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>I7,RecipeIngredientUpdateArgsSchema:()=>TMt,RecipeIngredientUpdateInputSchema:()=>O$,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>WMt,RecipeIngredientUpdateManyArgsSchema:()=>PMt,RecipeIngredientUpdateManyMutationInputSchema:()=>sP,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>Dx,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>Bk,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>QW,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>ug,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>rn,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>TP,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Fx,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Nk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>HW,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>GK,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>sK,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>b7,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>op,RecipeIngredientUpsertArgsSchema:()=>gMt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>qx,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>wk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>VW,RecipeIngredientWhereInputSchema:()=>Ua,RecipeIngredientWhereUniqueInputSchema:()=>V,RecipeIngredientWithRelationsSchema:()=>TB,RecipeInstructionAggregateArgsSchema:()=>ySt,RecipeInstructionArgsSchema:()=>hY,RecipeInstructionAvgOrderByAggregateInputSchema:()=>Urt,RecipeInstructionCountOrderByAggregateInputSchema:()=>Rrt,RecipeInstructionCountOutputTypeArgsSchema:()=>bY,RecipeInstructionCountOutputTypeSelectSchema:()=>Zot,RecipeInstructionCreateArgsSchema:()=>UMt,RecipeInstructionCreateInputSchema:()=>N$,RecipeInstructionCreateManyAndReturnArgsSchema:()=>jMt,RecipeInstructionCreateManyArgsSchema:()=>xMt,RecipeInstructionCreateManyInputSchema:()=>TW,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>jf,RecipeInstructionCreateManyRecipeInputSchema:()=>GQ,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>QZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>oQ,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>mo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>bP,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>Hq,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>B3,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Yb,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>Jh,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>lv,RecipeInstructionCreateWithoutRecipeInputSchema:()=>ns,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>cc,RecipeInstructionDeleteArgsSchema:()=>MMt,RecipeInstructionDeleteManyArgsSchema:()=>fMt,RecipeInstructionFindFirstArgsSchema:()=>uSt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>sSt,RecipeInstructionFindManyArgsSchema:()=>VN,RecipeInstructionFindUniqueArgsSchema:()=>zSt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>mSt,RecipeInstructionGroupByArgsSchema:()=>dSt,RecipeInstructionIncludeSchema:()=>Cz,RecipeInstructionListRelationFilterSchema:()=>EM,RecipeInstructionMaxOrderByAggregateInputSchema:()=>krt,RecipeInstructionMinOrderByAggregateInputSchema:()=>xrt,RecipeInstructionNullableScalarRelationFilterSchema:()=>k2,RecipeInstructionOrderByRelationAggregateInputSchema:()=>R2,RecipeInstructionOrderByWithAggregationInputSchema:()=>fH,RecipeInstructionOrderByWithRelationInputSchema:()=>Km,RecipeInstructionRecipeIdStepNumberRecipeVersionIdCompoundUniqueInputSchema:()=>rB,RecipeInstructionScalarFieldEnumSchema:()=>gC,RecipeInstructionScalarWhereInputSchema:()=>Ul,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>GA,RecipeInstructionSchema:()=>Vet,RecipeInstructionSelectSchema:()=>Az,RecipeInstructionSumOrderByAggregateInputSchema:()=>jrt,RecipeInstructionUncheckedCreateInputSchema:()=>B$,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>No,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>AP,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>rv,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>as,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>uc,RecipeInstructionUncheckedUpdateInputSchema:()=>F$,RecipeInstructionUncheckedUpdateManyInputSchema:()=>D$,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Mzt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>jn,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Odt,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>kP,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>XE,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>zK,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>C7,RecipeInstructionUpdateArgsSchema:()=>ZMt,RecipeInstructionUpdateInputSchema:()=>q$,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>OMt,RecipeInstructionUpdateManyArgsSchema:()=>vMt,RecipeInstructionUpdateManyMutationInputSchema:()=>OM,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Dk,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>$W,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>pn,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>PP,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>Gq,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Vut,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Fk,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>GW,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>KE,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>dK,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>g7,RecipeInstructionUpsertArgsSchema:()=>kMt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>qk,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>YW,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Lut,RecipeInstructionWhereInputSchema:()=>Be,RecipeInstructionWhereUniqueInputSchema:()=>pt,RecipeInstructionWithRelationsSchema:()=>PB,RecipeLaborCostAggregateArgsSchema:()=>oIt,RecipeLaborCostArgsSchema:()=>Dht,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>gnt,RecipeLaborCostCountOrderByAggregateInputSchema:()=>Int,RecipeLaborCostCreateArgsSchema:()=>IWt,RecipeLaborCostCreateInputSchema:()=>uG,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>AWt,RecipeLaborCostCreateManyArgsSchema:()=>CWt,RecipeLaborCostCreateManyInputSchema:()=>FP,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>Df,RecipeLaborCostCreateManyRecipeInputSchema:()=>l0,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>jo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>cI,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>vs,RecipeLaborCostDeleteArgsSchema:()=>SWt,RecipeLaborCostDeleteManyArgsSchema:()=>RWt,RecipeLaborCostFindFirstArgsSchema:()=>tIt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>eIt,RecipeLaborCostFindManyArgsSchema:()=>ntt,RecipeLaborCostFindUniqueArgsSchema:()=>aIt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>iIt,RecipeLaborCostGroupByArgsSchema:()=>nIt,RecipeLaborCostIncludeSchema:()=>od,RecipeLaborCostListRelationFilterSchema:()=>s5,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>Cnt,RecipeLaborCostMinOrderByAggregateInputSchema:()=>Ant,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>art,RecipeLaborCostOrderByWithAggregationInputSchema:()=>KV,RecipeLaborCostOrderByWithRelationInputSchema:()=>Ih,RecipeLaborCostScalarFieldEnumSchema:()=>wg,RecipeLaborCostScalarWhereInputSchema:()=>Hp,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>yA,RecipeLaborCostSchema:()=>Jtt,RecipeLaborCostSelectSchema:()=>nd,RecipeLaborCostSumOrderByAggregateInputSchema:()=>Snt,RecipeLaborCostUncheckedCreateInputSchema:()=>sG,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ko,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>Os,RecipeLaborCostUncheckedUpdateInputSchema:()=>dG,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>zG,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>Hzt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Vn,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>LK,RecipeLaborCostUpdateArgsSchema:()=>TWt,RecipeLaborCostUpdateInputSchema:()=>yG,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>WWt,RecipeLaborCostUpdateManyArgsSchema:()=>PWt,RecipeLaborCostUpdateManyMutationInputSchema:()=>fB,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Zx,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Tn,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Mx,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>_K,RecipeLaborCostUpsertArgsSchema:()=>gWt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>jx,RecipeLaborCostWhereInputSchema:()=>ra,RecipeLaborCostWhereUniqueInputSchema:()=>ge,RecipeLaborCostWithRelationsSchema:()=>Ktt,RecipeListRelationFilterSchema:()=>dp,RecipeMaxOrderByAggregateInputSchema:()=>crt,RecipeMinOrderByAggregateInputSchema:()=>urt,RecipeNullableScalarRelationFilterSchema:()=>N2,RecipeNutritionAggregateArgsSchema:()=>gbt,RecipeNutritionArgsSchema:()=>V0,RecipeNutritionAvgOrderByAggregateInputSchema:()=>Eot,RecipeNutritionCountOrderByAggregateInputSchema:()=>Dot,RecipeNutritionCreateArgsSchema:()=>IPt,RecipeNutritionCreateInputSchema:()=>ZY,RecipeNutritionCreateManyAndReturnArgsSchema:()=>APt,RecipeNutritionCreateManyArgsSchema:()=>CPt,RecipeNutritionCreateManyInputSchema:()=>OP,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>Mo,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>Ef,RecipeNutritionCreateWithoutRecipeInputSchema:()=>UT,RecipeNutritionDeleteArgsSchema:()=>SPt,RecipeNutritionDeleteManyArgsSchema:()=>RPt,RecipeNutritionFindFirstArgsSchema:()=>hbt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>bbt,RecipeNutritionFindManyArgsSchema:()=>Ibt,RecipeNutritionFindUniqueArgsSchema:()=>Abt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>Sbt,RecipeNutritionGroupByArgsSchema:()=>Cbt,RecipeNutritionIncludeSchema:()=>Ly,RecipeNutritionMaxOrderByAggregateInputSchema:()=>_ot,RecipeNutritionMinOrderByAggregateInputSchema:()=>Lot,RecipeNutritionNullableScalarRelationFilterSchema:()=>y5,RecipeNutritionOrderByWithAggregationInputSchema:()=>HV,RecipeNutritionOrderByWithRelationInputSchema:()=>Lm,RecipeNutritionScalarFieldEnumSchema:()=>jg,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>lA,RecipeNutritionSchema:()=>qtt,RecipeNutritionSelectSchema:()=>Vy,RecipeNutritionSumOrderByAggregateInputSchema:()=>Vot,RecipeNutritionUncheckedCreateInputSchema:()=>vY,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Xo,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>kT,RecipeNutritionUncheckedUpdateInputSchema:()=>fY,RecipeNutritionUncheckedUpdateManyInputSchema:()=>NY,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Hn,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>Yf,RecipeNutritionUpdateArgsSchema:()=>TPt,RecipeNutritionUpdateInputSchema:()=>OY,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>WPt,RecipeNutritionUpdateManyArgsSchema:()=>PPt,RecipeNutritionUpdateManyMutationInputSchema:()=>wY,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>Pn,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>x8,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>Qf,RecipeNutritionUpsertArgsSchema:()=>gPt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>k8,RecipeNutritionWhereInputSchema:()=>qe,RecipeNutritionWhereUniqueInputSchema:()=>Ql,RecipeNutritionWithRelationsSchema:()=>Ftt,RecipeOrderByRelationAggregateInputSchema:()=>YS,RecipeOrderByWithAggregationInputSchema:()=>ZH,RecipeOrderByWithRelationInputSchema:()=>oo,RecipePhotoAggregateArgsSchema:()=>Bbt,RecipePhotoArgsSchema:()=>Bht,RecipePhotoAvgOrderByAggregateInputSchema:()=>nnt,RecipePhotoCountOrderByAggregateInputSchema:()=>ont,RecipePhotoCreateArgsSchema:()=>VPt,RecipePhotoCreateInputSchema:()=>GY,RecipePhotoCreateManyAndReturnArgsSchema:()=>YPt,RecipePhotoCreateManyArgsSchema:()=>QPt,RecipePhotoCreateManyInputSchema:()=>NP,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>Vf,RecipePhotoCreateManyRecipeInputSchema:()=>p0,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>Oo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>sI,RecipePhotoCreateWithoutRecipeInputSchema:()=>Ns,RecipePhotoDeleteArgsSchema:()=>GPt,RecipePhotoDeleteManyArgsSchema:()=>XPt,RecipePhotoFindFirstArgsSchema:()=>wbt,RecipePhotoFindFirstOrThrowArgsSchema:()=>Nbt,RecipePhotoFindManyArgsSchema:()=>ttt,RecipePhotoFindUniqueArgsSchema:()=>Fbt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>Dbt,RecipePhotoGroupByArgsSchema:()=>qbt,RecipePhotoIncludeSchema:()=>$y,RecipePhotoListRelationFilterSchema:()=>m5,RecipePhotoMaxOrderByAggregateInputSchema:()=>ant,RecipePhotoMinOrderByAggregateInputSchema:()=>int,RecipePhotoOrderByRelationAggregateInputSchema:()=>lrt,RecipePhotoOrderByWithAggregationInputSchema:()=>GV,RecipePhotoOrderByWithRelationInputSchema:()=>mh,RecipePhotoScalarFieldEnumSchema:()=>vg,RecipePhotoScalarWhereInputSchema:()=>Yp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>cA,RecipePhotoSchema:()=>Vtt,RecipePhotoSelectSchema:()=>Jy,RecipePhotoSumOrderByAggregateInputSchema:()=>lnt,RecipePhotoUncheckedCreateInputSchema:()=>$Y,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>on,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Bs,RecipePhotoUncheckedUpdateInputSchema:()=>KY,RecipePhotoUncheckedUpdateManyInputSchema:()=>XY,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>Yzt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Gn,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>YK,RecipePhotoUpdateArgsSchema:()=>$Pt,RecipePhotoUpdateInputSchema:()=>JY,RecipePhotoUpdateManyAndReturnArgsSchema:()=>KPt,RecipePhotoUpdateManyArgsSchema:()=>JPt,RecipePhotoUpdateManyMutationInputSchema:()=>ZB,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>Bx,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Un,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Nx,RecipePhotoUpdateWithoutRecipeInputSchema:()=>QK,RecipePhotoUpsertArgsSchema:()=>HPt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>wx,RecipePhotoWhereInputSchema:()=>aa,RecipePhotoWhereUniqueInputSchema:()=>he,RecipePhotoWithRelationsSchema:()=>Htt,RecipeScalarFieldEnumSchema:()=>hC,RecipeScalarRelationFilterSchema:()=>de,RecipeScalarWhereInputSchema:()=>le,RecipeScalarWhereWithAggregatesInputSchema:()=>HA,RecipeSchema:()=>Eet,RecipeSelectSchema:()=>mz,RecipeStatsAggregateArgsSchema:()=>_St,RecipeStatsArgsSchema:()=>AY,RecipeStatsAvgOrderByAggregateInputSchema:()=>tpt,RecipeStatsCountOrderByAggregateInputSchema:()=>Xrt,RecipeStatsCreateArgsSchema:()=>IZt,RecipeStatsCreateInputSchema:()=>p4,RecipeStatsCreateManyAndReturnArgsSchema:()=>AZt,RecipeStatsCreateManyArgsSchema:()=>CZt,RecipeStatsCreateManyInputSchema:()=>kW,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>fo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>Hf,RecipeStatsCreateWithoutRecipeInputSchema:()=>MT,RecipeStatsDeleteArgsSchema:()=>SZt,RecipeStatsDeleteManyArgsSchema:()=>RZt,RecipeStatsFindFirstArgsSchema:()=>FSt,RecipeStatsFindFirstOrThrowArgsSchema:()=>DSt,RecipeStatsFindManyArgsSchema:()=>ESt,RecipeStatsFindUniqueArgsSchema:()=>VSt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>HSt,RecipeStatsGroupByArgsSchema:()=>LSt,RecipeStatsIncludeSchema:()=>jz,RecipeStatsMaxOrderByAggregateInputSchema:()=>ept,RecipeStatsMinOrderByAggregateInputSchema:()=>opt,RecipeStatsNullableScalarRelationFilterSchema:()=>h5,RecipeStatsOrderByWithAggregationInputSchema:()=>FH,RecipeStatsOrderByWithRelationInputSchema:()=>th,RecipeStatsScalarFieldEnumSchema:()=>PC,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>tS,RecipeStatsSchema:()=>$et,RecipeStatsSelectSchema:()=>Mz,RecipeStatsSumOrderByAggregateInputSchema:()=>npt,RecipeStatsUncheckedCreateInputSchema:()=>c4,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>nn,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>ZT,RecipeStatsUncheckedUpdateInputSchema:()=>s4,RecipeStatsUncheckedUpdateManyInputSchema:()=>d4,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>$n,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>Kf,RecipeStatsUpdateArgsSchema:()=>TZt,RecipeStatsUpdateInputSchema:()=>u4,RecipeStatsUpdateManyAndReturnArgsSchema:()=>WZt,RecipeStatsUpdateManyArgsSchema:()=>PZt,RecipeStatsUpdateManyMutationInputSchema:()=>y4,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>kn,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>v8,RecipeStatsUpdateWithoutRecipeInputSchema:()=>Jf,RecipeStatsUpsertArgsSchema:()=>gZt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>Z8,RecipeStatsWhereInputSchema:()=>De,RecipeStatsWhereUniqueInputSchema:()=>Gl,RecipeStatsWithRelationsSchema:()=>Jet,RecipeStorageAggregateArgsSchema:()=>Zbt,RecipeStorageArgsSchema:()=>H0,RecipeStorageAvgOrderByAggregateInputSchema:()=>Kot,RecipeStorageCountOrderByAggregateInputSchema:()=>Jot,RecipeStorageCreateArgsSchema:()=>wPt,RecipeStorageCreateInputSchema:()=>_Y,RecipeStorageCreateManyAndReturnArgsSchema:()=>qPt,RecipeStorageCreateManyArgsSchema:()=>BPt,RecipeStorageCreateManyInputSchema:()=>wP,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>vo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>Lf,RecipeStorageCreateWithoutRecipeInputSchema:()=>xT,RecipeStorageDeleteArgsSchema:()=>FPt,RecipeStorageDeleteManyArgsSchema:()=>LPt,RecipeStorageFindFirstArgsSchema:()=>xbt,RecipeStorageFindFirstOrThrowArgsSchema:()=>jbt,RecipeStorageFindManyArgsSchema:()=>Mbt,RecipeStorageFindUniqueArgsSchema:()=>Obt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>fbt,RecipeStorageGroupByArgsSchema:()=>vbt,RecipeStorageIncludeSchema:()=>Yy,RecipeStorageMaxOrderByAggregateInputSchema:()=>Xot,RecipeStorageMinOrderByAggregateInputSchema:()=>tnt,RecipeStorageNullableScalarRelationFilterSchema:()=>z5,RecipeStorageOrderByWithAggregationInputSchema:()=>YV,RecipeStorageOrderByWithRelationInputSchema:()=>Vm,RecipeStorageScalarFieldEnumSchema:()=>Zg,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>pA,RecipeStorageSchema:()=>_tt,RecipeStorageSelectSchema:()=>Gy,RecipeStorageSumOrderByAggregateInputSchema:()=>ent,RecipeStorageUncheckedCreateInputSchema:()=>LY,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>en,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>jT,RecipeStorageUncheckedUpdateInputSchema:()=>HY,RecipeStorageUncheckedUpdateManyInputSchema:()=>YY,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Yn,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>$f,RecipeStorageUpdateArgsSchema:()=>DPt,RecipeStorageUpdateInputSchema:()=>VY,RecipeStorageUpdateManyAndReturnArgsSchema:()=>_Pt,RecipeStorageUpdateManyArgsSchema:()=>EPt,RecipeStorageUpdateManyMutationInputSchema:()=>QY,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Rn,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>M8,RecipeStorageUpdateWithoutRecipeInputSchema:()=>Gf,RecipeStorageUpsertArgsSchema:()=>NPt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>j8,RecipeStorageWhereInputSchema:()=>Fe,RecipeStorageWhereUniqueInputSchema:()=>Yl,RecipeStorageWithRelationsSchema:()=>Ltt,RecipeSumOrderByAggregateInputSchema:()=>srt,RecipeTagAggregateArgsSchema:()=>Zgt,RecipeTagArgsSchema:()=>Ght,RecipeTagAvgOrderByAggregateInputSchema:()=>Lat,RecipeTagCountOrderByAggregateInputSchema:()=>_at,RecipeTagCountOutputTypeArgsSchema:()=>nY,RecipeTagCountOutputTypeSelectSchema:()=>Sot,RecipeTagCreateArgsSchema:()=>wUt,RecipeTagCreateInputSchema:()=>R1,RecipeTagCreateManyAndReturnArgsSchema:()=>qUt,RecipeTagCreateManyArgsSchema:()=>BUt,RecipeTagCreateManyInputSchema:()=>tW,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>Po,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>nI,RecipeTagCreateWithoutRecipesInputSchema:()=>As,RecipeTagDeleteArgsSchema:()=>FUt,RecipeTagDeleteManyArgsSchema:()=>LUt,RecipeTagFindFirstArgsSchema:()=>jgt,RecipeTagFindFirstOrThrowArgsSchema:()=>Mgt,RecipeTagFindManyArgsSchema:()=>ctt,RecipeTagFindUniqueArgsSchema:()=>Ogt,RecipeTagFindUniqueOrThrowArgsSchema:()=>fgt,RecipeTagGroupByArgsSchema:()=>vgt,RecipeTagIncludeSchema:()=>jd,RecipeTagListRelationFilterSchema:()=>p5,RecipeTagMaxOrderByAggregateInputSchema:()=>Vat,RecipeTagMinOrderByAggregateInputSchema:()=>Hat,RecipeTagOrderByRelationAggregateInputSchema:()=>ert,RecipeTagOrderByWithAggregationInputSchema:()=>yH,RecipeTagOrderByWithRelationInputSchema:()=>Rh,RecipeTagScalarFieldEnumSchema:()=>$g,RecipeTagScalarWhereInputSchema:()=>_p,RecipeTagScalarWhereWithAggregatesInputSchema:()=>RA,RecipeTagSchema:()=>zet,RecipeTagSelectSchema:()=>Md,RecipeTagSumOrderByAggregateInputSchema:()=>Qat,RecipeTagUncheckedCreateInputSchema:()=>U1,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Ho,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>Ss,RecipeTagUncheckedUpdateInputSchema:()=>x1,RecipeTagUncheckedUpdateManyInputSchema:()=>j1,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>Fzt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>qn,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>ZK,RecipeTagUpdateArgsSchema:()=>DUt,RecipeTagUpdateInputSchema:()=>k1,RecipeTagUpdateManyAndReturnArgsSchema:()=>_Ut,RecipeTagUpdateManyArgsSchema:()=>EUt,RecipeTagUpdateManyMutationInputSchema:()=>DB,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>zx,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>bn,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>dx,RecipeTagUpdateWithoutRecipesInputSchema:()=>MK,RecipeTagUpsertArgsSchema:()=>NUt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>yx,RecipeTagWhereInputSchema:()=>ma,RecipeTagWhereUniqueInputSchema:()=>Ae,RecipeTagWithRelationsSchema:()=>met,RecipeTemperatureAggregateArgsSchema:()=>Lbt,RecipeTemperatureArgsSchema:()=>qht,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>cnt,RecipeTemperatureCountOrderByAggregateInputSchema:()=>pnt,RecipeTemperatureCreateArgsSchema:()=>tWt,RecipeTemperatureCreateInputSchema:()=>tG,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>nWt,RecipeTemperatureCreateManyArgsSchema:()=>oWt,RecipeTemperatureCreateManyInputSchema:()=>BP,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>qf,RecipeTemperatureCreateManyRecipeInputSchema:()=>a0,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>rI,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>xs,RecipeTemperatureDeleteArgsSchema:()=>aWt,RecipeTemperatureDeleteManyArgsSchema:()=>pWt,RecipeTemperatureFindFirstArgsSchema:()=>Ebt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>_bt,RecipeTemperatureFindManyArgsSchema:()=>ett,RecipeTemperatureFindUniqueArgsSchema:()=>Hbt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Qbt,RecipeTemperatureGroupByArgsSchema:()=>Vbt,RecipeTemperatureIncludeSchema:()=>Ky,RecipeTemperatureListRelationFilterSchema:()=>c5,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>unt,RecipeTemperatureMinOrderByAggregateInputSchema:()=>snt,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>ort,RecipeTemperatureOrderByWithAggregationInputSchema:()=>$V,RecipeTemperatureOrderByWithRelationInputSchema:()=>hh,RecipeTemperatureScalarFieldEnumSchema:()=>Og,RecipeTemperatureScalarWhereInputSchema:()=>Lp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>uA,RecipeTemperatureSchema:()=>Qtt,RecipeTemperatureSelectSchema:()=>Xy,RecipeTemperatureSumOrderByAggregateInputSchema:()=>ynt,RecipeTemperatureUncheckedCreateInputSchema:()=>eG,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>js,RecipeTemperatureUncheckedUpdateInputSchema:()=>nG,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>aG,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>Lzt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_n,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>FK,RecipeTemperatureUpdateArgsSchema:()=>iWt,RecipeTemperatureUpdateInputSchema:()=>oG,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>rWt,RecipeTemperatureUpdateManyArgsSchema:()=>lWt,RecipeTemperatureUpdateManyMutationInputSchema:()=>vB,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>Rx,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>An,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Wx,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>qK,RecipeTemperatureUpsertArgsSchema:()=>eWt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Px,RecipeTemperatureWhereInputSchema:()=>ia,RecipeTemperatureWhereUniqueInputSchema:()=>be,RecipeTemperatureWithRelationsSchema:()=>Ytt,RecipeUncheckedCreateInputSchema:()=>T$,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>m6,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>PF,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>hm,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>f6,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>mr,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>Nct,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>ts,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>RZ,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>Rc,RecipeUncheckedCreateWithoutEquipmentsInputSchema:()=>nv,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>ON,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>lw,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>yw,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>wZ,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>IN,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>jy,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>PZ,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>jZ,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>Sy,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>wN,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>lN,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>oO,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>Dw,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Kc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>kZ,RecipeUncheckedCreateWithoutTagsInputSchema:()=>jc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>ZZ,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>VZ,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>zO,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>OZ,RecipeUncheckedUpdateInputSchema:()=>W$,RecipeUncheckedUpdateManyInputSchema:()=>R$,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>xzt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>I6,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Edt,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>jF,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>bmt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Om,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>dmt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>q6,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>ezt,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Er,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Ldt,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>qct,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>uK,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>TE,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>w7,RecipeUncheckedUpdateWithoutEquipmentsInputSchema:()=>GE,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>NV,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>xL,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>fL,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>vE,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>xV,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>FX,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>AE,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>UE,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>ZX,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>qV,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>gV,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>__,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>iV,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>pJ,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>WE,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>F7,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>xE,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>DE,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>eL,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>ME,RecipeUpdateArgsSchema:()=>iMt,RecipeUpdateInputSchema:()=>P$,RecipeUpdateManyAndReturnArgsSchema:()=>rMt,RecipeUpdateManyArgsSchema:()=>lMt,RecipeUpdateManyMutationInputSchema:()=>_I,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>fk,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>CR,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Xj,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>Dj,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>iU,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>RR,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>h6,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>UF,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>Rm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>N6,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>Bct,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>Tct,RecipeUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>Qq,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>cut,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>dD,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>CD,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>vct,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>L6,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>Act,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>Uct,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>sut,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>pE,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>oD,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>nut,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>Wct,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>xct,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>SP,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>Mct,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>pD,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>mut,RecipeUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>Dut,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>xdt,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Ayt,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>Uyt,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>Wut,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>Adt,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>dut,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>gut,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>Mdt,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>sdt,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>fst,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Jyt,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>but,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>Aut,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>vut,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Qst,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>Tut,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>Ok,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>gR,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Kj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Fj,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>aU,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>WR,RecipeUpdateWithoutCookBookInputSchema:()=>cK,RecipeUpdateWithoutCriticalPointsInputSchema:()=>SE,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>f7,RecipeUpdateWithoutEquipmentsInputSchema:()=>YE,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>wV,RecipeUpdateWithoutIngredientsInputSchema:()=>kL,RecipeUpdateWithoutInstructionsInputSchema:()=>OL,RecipeUpdateWithoutLaborCostsInputSchema:()=>ZE,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>kV,RecipeUpdateWithoutMenuItemsInputSchema:()=>qX,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>CE,RecipeUpdateWithoutPhotosInputSchema:()=>RE,RecipeUpdateWithoutPrepBoardsInputSchema:()=>MX,RecipeUpdateWithoutPrepHistoryInputSchema:()=>BV,RecipeUpdateWithoutPrepItemsInputSchema:()=>IV,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>E_,RecipeUpdateWithoutRecipeStatsInputSchema:()=>aV,RecipeUpdateWithoutRestaurantInputSchema:()=>rJ,RecipeUpdateWithoutStorageInputSchema:()=>PE,RecipeUpdateWithoutTagsInputSchema:()=>q7,RecipeUpdateWithoutTemperaturesInputSchema:()=>kE,RecipeUpdateWithoutVersionsInputSchema:()=>FE,RecipeUpdateWithoutWithdrawalsInputSchema:()=>tL,RecipeUpdateWithoutYieldsInputSchema:()=>jE,RecipeUpdateimageUrlsInputSchema:()=>st,RecipeUpsertArgsSchema:()=>eMt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>vk,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>IR,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Jj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>qj,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>nU,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>PR,RecipeUpsertWithoutCriticalPointsInputSchema:()=>zut,RecipeUpsertWithoutEquipmentsInputSchema:()=>Fut,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>kdt,RecipeUpsertWithoutIngredientsInputSchema:()=>Cyt,RecipeUpsertWithoutInstructionsInputSchema:()=>Ryt,RecipeUpsertWithoutLaborCostsInputSchema:()=>Put,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>Cdt,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>yut,RecipeUpsertWithoutPhotosInputSchema:()=>Iut,RecipeUpsertWithoutPrepHistoryInputSchema:()=>jdt,RecipeUpsertWithoutPrepItemsInputSchema:()=>udt,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>Ost,RecipeUpsertWithoutRecipeStatsInputSchema:()=>$yt,RecipeUpsertWithoutStorageInputSchema:()=>hut,RecipeUpsertWithoutTemperaturesInputSchema:()=>Cut,RecipeUpsertWithoutVersionsInputSchema:()=>Zut,RecipeUpsertWithoutWithdrawalsInputSchema:()=>Hst,RecipeUpsertWithoutYieldsInputSchema:()=>Sut,RecipeVersionAggregateArgsSchema:()=>CIt,RecipeVersionArgsSchema:()=>CM,RecipeVersionAvgOrderByAggregateInputSchema:()=>Ont,RecipeVersionCountOrderByAggregateInputSchema:()=>vnt,RecipeVersionCountOutputTypeArgsSchema:()=>G0,RecipeVersionCountOutputTypeSelectSchema:()=>hot,RecipeVersionCreateArgsSchema:()=>VWt,RecipeVersionCreateInputSchema:()=>WG,RecipeVersionCreateManyAndReturnArgsSchema:()=>YWt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>zf,RecipeVersionCreateManyApprovedByInputSchema:()=>_Q,RecipeVersionCreateManyArgsSchema:()=>QWt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>df,RecipeVersionCreateManyCreatedByInputSchema:()=>EQ,RecipeVersionCreateManyInputSchema:()=>_P,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>Nf,RecipeVersionCreateManyRecipeInputSchema:()=>o0,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>oi,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>ei,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Wo,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>yD,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>bD,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Eb,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Db,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>w8,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>B8,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>aI,RecipeVersionCreateWithoutApprovedByInputSchema:()=>Vu,RecipeVersionCreateWithoutCreatedByInputSchema:()=>_u,RecipeVersionCreateWithoutIngredientsInputSchema:()=>cw,RecipeVersionCreateWithoutInstructionsInputSchema:()=>dw,RecipeVersionCreateWithoutRecipeInputSchema:()=>Ts,RecipeVersionDeleteArgsSchema:()=>GWt,RecipeVersionDeleteManyArgsSchema:()=>XWt,RecipeVersionFindFirstArgsSchema:()=>IIt,RecipeVersionFindFirstOrThrowArgsSchema:()=>gIt,RecipeVersionFindManyArgsSchema:()=>ES,RecipeVersionFindUniqueArgsSchema:()=>SIt,RecipeVersionFindUniqueOrThrowArgsSchema:()=>TIt,RecipeVersionGroupByArgsSchema:()=>AIt,RecipeVersionIncludeSchema:()=>pd,RecipeVersionListRelationFilterSchema:()=>zS,RecipeVersionMaxOrderByAggregateInputSchema:()=>fnt,RecipeVersionMinOrderByAggregateInputSchema:()=>wnt,RecipeVersionNullableScalarRelationFilterSchema:()=>rZ,RecipeVersionOrderByRelationAggregateInputSchema:()=>sB,RecipeVersionOrderByWithAggregationInputSchema:()=>eH,RecipeVersionOrderByWithRelationInputSchema:()=>Xp,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>iB,RecipeVersionScalarFieldEnumSchema:()=>qg,RecipeVersionScalarWhereInputSchema:()=>Al,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>mA,RecipeVersionSchema:()=>eet,RecipeVersionSelectSchema:()=>cd,RecipeVersionSumOrderByAggregateInputSchema:()=>Nnt,RecipeVersionUncheckedCreateInputSchema:()=>RG,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>Ai,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ci,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Hu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>Lu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>uw,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>zw,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>Ps,RecipeVersionUncheckedUpdateInputSchema:()=>kG,RecipeVersionUncheckedUpdateManyInputSchema:()=>xG,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>Wzt,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>rl,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Pzt,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ll,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Dzt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fn,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>oK,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>tK,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>vL,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>NL,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>OK,RecipeVersionUpdateArgsSchema:()=>$Wt,RecipeVersionUpdateInputSchema:()=>UG,RecipeVersionUpdateManyAndReturnArgsSchema:()=>KWt,RecipeVersionUpdateManyArgsSchema:()=>JWt,RecipeVersionUpdateManyMutationInputSchema:()=>nP,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>Tk,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>Ck,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>bx,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Ei,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Di,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>In,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>mD,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>AD,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Wyt,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>xyt,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>Sk,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>gk,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>hx,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>eK,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>XJ,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>ZL,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>wL,RecipeVersionUpdateWithoutRecipeInputSchema:()=>vK,RecipeVersionUpsertArgsSchema:()=>HWt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>Ak,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>Ik,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>mx,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>Pyt,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>kyt,RecipeVersionWhereInputSchema:()=>ae,RecipeVersionWhereUniqueInputSchema:()=>w,RecipeVersionWithRelationsSchema:()=>oP,RecipeWhereInputSchema:()=>v,RecipeWhereUniqueInputSchema:()=>C,RecipeWithRelationsSchema:()=>uo,RecipeYieldAggregateArgsSchema:()=>$bt,RecipeYieldArgsSchema:()=>Fht,RecipeYieldAvgOrderByAggregateInputSchema:()=>znt,RecipeYieldCountOrderByAggregateInputSchema:()=>dnt,RecipeYieldCreateArgsSchema:()=>cWt,RecipeYieldCreateInputSchema:()=>iG,RecipeYieldCreateManyAndReturnArgsSchema:()=>yWt,RecipeYieldCreateManyArgsSchema:()=>sWt,RecipeYieldCreateManyInputSchema:()=>qP,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>Ff,RecipeYieldCreateManyRecipeInputSchema:()=>i0,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>xo,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>pI,RecipeYieldCreateWithoutRecipeInputSchema:()=>Ms,RecipeYieldDeleteArgsSchema:()=>dWt,RecipeYieldDeleteManyArgsSchema:()=>bWt,RecipeYieldFindFirstArgsSchema:()=>Ybt,RecipeYieldFindFirstOrThrowArgsSchema:()=>Gbt,RecipeYieldFindManyArgsSchema:()=>ott,RecipeYieldFindUniqueArgsSchema:()=>Kbt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Xbt,RecipeYieldGroupByArgsSchema:()=>Jbt,RecipeYieldIncludeSchema:()=>td,RecipeYieldListRelationFilterSchema:()=>u5,RecipeYieldMaxOrderByAggregateInputSchema:()=>mnt,RecipeYieldMinOrderByAggregateInputSchema:()=>hnt,RecipeYieldOrderByRelationAggregateInputSchema:()=>nrt,RecipeYieldOrderByWithAggregationInputSchema:()=>JV,RecipeYieldOrderByWithRelationInputSchema:()=>bh,RecipeYieldScalarFieldEnumSchema:()=>fg,RecipeYieldScalarWhereInputSchema:()=>Vp,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>sA,RecipeYieldSchema:()=>Gtt,RecipeYieldSelectSchema:()=>ed,RecipeYieldSumOrderByAggregateInputSchema:()=>bnt,RecipeYieldUncheckedCreateInputSchema:()=>lG,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Jo,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>Zs,RecipeYieldUncheckedUpdateInputSchema:()=>pG,RecipeYieldUncheckedUpdateManyInputSchema:()=>cG,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Vzt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ln,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>EK,RecipeYieldUpdateArgsSchema:()=>zWt,RecipeYieldUpdateInputSchema:()=>rG,RecipeYieldUpdateManyAndReturnArgsSchema:()=>hWt,RecipeYieldUpdateManyArgsSchema:()=>mWt,RecipeYieldUpdateManyMutationInputSchema:()=>OB,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>xx,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>Sn,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>kx,RecipeYieldUpdateWithoutRecipeInputSchema:()=>DK,RecipeYieldUpsertArgsSchema:()=>uWt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ux,RecipeYieldWhereInputSchema:()=>la,RecipeYieldWhereUniqueInputSchema:()=>Ie,RecipeYieldWithRelationsSchema:()=>$tt,RestaurantAggregateArgsSchema:()=>IAt,RestaurantArgsSchema:()=>no,RestaurantAvgOrderByAggregateInputSchema:()=>Alt,RestaurantCountOrderByAggregateInputSchema:()=>Clt,RestaurantCountOutputTypeArgsSchema:()=>uY,RestaurantCountOutputTypeSelectSchema:()=>Uot,RestaurantCreateArgsSchema:()=>cjt,RestaurantCreateInputSchema:()=>J9,RestaurantCreateManyAndReturnArgsSchema:()=>yjt,RestaurantCreateManyArgsSchema:()=>sjt,RestaurantCreateManyInputSchema:()=>mW,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>PO,RestaurantCreateManyOrganizationInputSchema:()=>sQ,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>i6,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>z6,RestaurantCreateNestedOneWithoutCustomerFeedbacksInputSchema:()=>zF,RestaurantCreateNestedOneWithoutEquipmentsInputSchema:()=>Oq,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>cZ,RestaurantCreateNestedOneWithoutLeftoverItemsInputSchema:()=>ZF,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>uE,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>BD,RestaurantCreateNestedOneWithoutProductionPlansInputSchema:()=>LF,RestaurantCreateNestedOneWithoutQualityChecklistsInputSchema:()=>$q,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>so,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>M5,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Fa,RestaurantCreateNestedOneWithoutWasteRecordsInputSchema:()=>BF,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>W8,RestaurantCreateOrConnectWithoutCustomerFeedbacksInputSchema:()=>Y3,RestaurantCreateOrConnectWithoutEquipmentsInputSchema:()=>f3,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>b8,RestaurantCreateOrConnectWithoutLeftoverItemsInputSchema:()=>J3,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>i7,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>$8,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>ub,RestaurantCreateOrConnectWithoutProductionPlansInputSchema:()=>n8,RestaurantCreateOrConnectWithoutQualityChecklistsInputSchema:()=>F3,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>R8,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>x3,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>S8,RestaurantCreateOrConnectWithoutWasteRecordsInputSchema:()=>t8,RestaurantCreateWithoutCookbooksInputSchema:()=>Tf,RestaurantCreateWithoutCustomerFeedbacksInputSchema:()=>jv,RestaurantCreateWithoutEquipmentsInputSchema:()=>KZ,RestaurantCreateWithoutInventoryInputSchema:()=>RO,RestaurantCreateWithoutLeftoverItemsInputSchema:()=>wv,RestaurantCreateWithoutMenusInputSchema:()=>sN,RestaurantCreateWithoutOrdersInputSchema:()=>Ew,RestaurantCreateWithoutOrganizationInputSchema:()=>fc,RestaurantCreateWithoutProductionPlansInputSchema:()=>Yv,RestaurantCreateWithoutQualityChecklistsInputSchema:()=>uv,RestaurantCreateWithoutRecipesInputSchema:()=>Wf,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>NZ,RestaurantCreateWithoutUsersInputSchema:()=>$O,RestaurantCreateWithoutWasteRecordsInputSchema:()=>Ev,RestaurantDeleteArgsSchema:()=>djt,RestaurantDeleteManyArgsSchema:()=>bjt,RestaurantFindFirstArgsSchema:()=>hAt,RestaurantFindFirstOrThrowArgsSchema:()=>bAt,RestaurantFindManyArgsSchema:()=>ztt,RestaurantFindUniqueArgsSchema:()=>CAt,RestaurantFindUniqueOrThrowArgsSchema:()=>AAt,RestaurantGroupByArgsSchema:()=>gAt,RestaurantIncludeSchema:()=>az,RestaurantListRelationFilterSchema:()=>F2,RestaurantMaxOrderByAggregateInputSchema:()=>Slt,RestaurantMinOrderByAggregateInputSchema:()=>Tlt,RestaurantNullableScalarRelationFilterSchema:()=>nZ,RestaurantOrderByRelationAggregateInputSchema:()=>alt,RestaurantOrderByWithAggregationInputSchema:()=>UH,RestaurantOrderByWithRelationInputSchema:()=>Ba,RestaurantScalarFieldEnumSchema:()=>sC,RestaurantScalarRelationFilterSchema:()=>ta,RestaurantScalarWhereInputSchema:()=>xp,RestaurantScalarWhereWithAggregatesInputSchema:()=>DA,RestaurantSchema:()=>fet,RestaurantSelectSchema:()=>iz,RestaurantSumOrderByAggregateInputSchema:()=>Plt,RestaurantUncheckedCreateInputSchema:()=>K9,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>r6,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>Pf,RestaurantUncheckedCreateWithoutCustomerFeedbacksInputSchema:()=>Mv,RestaurantUncheckedCreateWithoutEquipmentsInputSchema:()=>XZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>UO,RestaurantUncheckedCreateWithoutLeftoverItemsInputSchema:()=>Nv,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>yN,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>_w,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>wc,RestaurantUncheckedCreateWithoutProductionPlansInputSchema:()=>Gv,RestaurantUncheckedCreateWithoutQualityChecklistsInputSchema:()=>sv,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>Rf,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>BZ,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>JO,RestaurantUncheckedCreateWithoutWasteRecordsInputSchema:()=>_v,RestaurantUncheckedUpdateInputSchema:()=>t$,RestaurantUncheckedUpdateManyInputSchema:()=>e$,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Qdt,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>s6,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>TL,RestaurantUncheckedUpdateWithoutCustomerFeedbacksInputSchema:()=>g_,RestaurantUncheckedUpdateWithoutEquipmentsInputSchema:()=>QE,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>sL,RestaurantUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>W_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>WV,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>rV,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>H7,RestaurantUncheckedUpdateWithoutProductionPlansInputSchema:()=>N_,RestaurantUncheckedUpdateWithoutQualityChecklistsInputSchema:()=>n_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>WL,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>fE,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>bL,RestaurantUncheckedUpdateWithoutWasteRecordsInputSchema:()=>M_,RestaurantUpdateArgsSchema:()=>zjt,RestaurantUpdateInputSchema:()=>X9,RestaurantUpdateManyAndReturnArgsSchema:()=>hjt,RestaurantUpdateManyArgsSchema:()=>mjt,RestaurantUpdateManyMutationInputSchema:()=>HB,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>fR,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>c6,RestaurantUpdateOneRequiredWithoutCustomerFeedbacksNestedInputSchema:()=>bF,RestaurantUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>qq,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>hZ,RestaurantUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>fF,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>mE,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>ED,RestaurantUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>YF,RestaurantUpdateOneRequiredWithoutQualityChecklistsNestedInputSchema:()=>eF,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>an,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>v5,RestaurantUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>DF,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>b6,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>Ri,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>myt,RestaurantUpdateToOneWithWhereWithoutCustomerFeedbacksInputSchema:()=>sst,RestaurantUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>qut,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>nyt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>bst,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>bdt,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Xyt,RestaurantUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>xst,RestaurantUpdateToOneWithWhereWithoutQualityChecklistsInputSchema:()=>Gut,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>byt,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>Uut,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>cyt,RestaurantUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>Tst,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>OR,RestaurantUpdateWithoutCookbooksInputSchema:()=>SL,RestaurantUpdateWithoutCustomerFeedbacksInputSchema:()=>I_,RestaurantUpdateWithoutEquipmentsInputSchema:()=>HE,RestaurantUpdateWithoutInventoryInputSchema:()=>uL,RestaurantUpdateWithoutLeftoverItemsInputSchema:()=>P_,RestaurantUpdateWithoutMenusInputSchema:()=>PV,RestaurantUpdateWithoutOrdersInputSchema:()=>lV,RestaurantUpdateWithoutOrganizationInputSchema:()=>V7,RestaurantUpdateWithoutProductionPlansInputSchema:()=>w_,RestaurantUpdateWithoutQualityChecklistsInputSchema:()=>o_,RestaurantUpdateWithoutRecipesInputSchema:()=>PL,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>OE,RestaurantUpdateWithoutUsersInputSchema:()=>hL,RestaurantUpdateWithoutWasteRecordsInputSchema:()=>j_,RestaurantUpsertArgsSchema:()=>ujt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>vR,RestaurantUpsertWithoutCookbooksInputSchema:()=>zyt,RestaurantUpsertWithoutCustomerFeedbacksInputSchema:()=>ust,RestaurantUpsertWithoutEquipmentsInputSchema:()=>But,RestaurantUpsertWithoutInventoryInputSchema:()=>oyt,RestaurantUpsertWithoutLeftoverItemsInputSchema:()=>hst,RestaurantUpsertWithoutMenusInputSchema:()=>hdt,RestaurantUpsertWithoutOrdersInputSchema:()=>Kyt,RestaurantUpsertWithoutProductionPlansInputSchema:()=>kst,RestaurantUpsertWithoutQualityChecklistsInputSchema:()=>Yut,RestaurantUpsertWithoutRecipesInputSchema:()=>hyt,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>Rut,RestaurantUpsertWithoutUsersInputSchema:()=>pyt,RestaurantUpsertWithoutWasteRecordsInputSchema:()=>Sst,RestaurantWhereInputSchema:()=>N,RestaurantWhereUniqueInputSchema:()=>K,RestaurantWithRelationsSchema:()=>Hl,SalesTransactionsAggregateArgsSchema:()=>pIt,SalesTransactionsArgsSchema:()=>Eht,SalesTransactionsAvgOrderByAggregateInputSchema:()=>Pnt,SalesTransactionsCountOrderByAggregateInputSchema:()=>Tnt,SalesTransactionsCreateArgsSchema:()=>UWt,SalesTransactionsCreateInputSchema:()=>mG,SalesTransactionsCreateManyAndReturnArgsSchema:()=>jWt,SalesTransactionsCreateManyArgsSchema:()=>xWt,SalesTransactionsCreateManyInputSchema:()=>DP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>RN,SalesTransactionsCreateManyMenuItemInputSchema:()=>x0,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>qO,SalesTransactionsCreateManyRestaurantInputSchema:()=>AQ,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>ym,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>ar,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>NI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>Cb,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>fy,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>eu,SalesTransactionsDeleteArgsSchema:()=>MWt,SalesTransactionsDeleteManyArgsSchema:()=>fWt,SalesTransactionsFindFirstArgsSchema:()=>lIt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>rIt,SalesTransactionsFindManyArgsSchema:()=>NN,SalesTransactionsFindUniqueArgsSchema:()=>uIt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>sIt,SalesTransactionsGroupByArgsSchema:()=>cIt,SalesTransactionsIncludeSchema:()=>ad,SalesTransactionsListRelationFilterSchema:()=>eZ,SalesTransactionsMaxOrderByAggregateInputSchema:()=>Wnt,SalesTransactionsMinOrderByAggregateInputSchema:()=>Rnt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>$2,SalesTransactionsOrderByWithAggregationInputSchema:()=>XV,SalesTransactionsOrderByWithRelationInputSchema:()=>gh,SalesTransactionsScalarFieldEnumSchema:()=>Ng,SalesTransactionsScalarWhereInputSchema:()=>fl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>dA,SalesTransactionsSchema:()=>Xtt,SalesTransactionsSelectSchema:()=>id,SalesTransactionsSumOrderByAggregateInputSchema:()=>Unt,SalesTransactionsUncheckedCreateInputSchema:()=>hG,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Cm,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>br,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>wy,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>ou,SalesTransactionsUncheckedUpdateInputSchema:()=>IG,SalesTransactionsUncheckedUpdateManyInputSchema:()=>gG,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Cmt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Bm,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>nzt,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Lr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>HX,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>yJ,SalesTransactionsUpdateArgsSchema:()=>ZWt,SalesTransactionsUpdateInputSchema:()=>bG,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>OWt,SalesTransactionsUpdateManyArgsSchema:()=>vWt,SalesTransactionsUpdateManyMutationInputSchema:()=>RM,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>pM,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>sU,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>jm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>rM,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>uU,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>VX,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>sJ,SalesTransactionsUpsertArgsSchema:()=>kWt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>lM,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>cU,SalesTransactionsWhereInputSchema:()=>pa,SalesTransactionsWhereUniqueInputSchema:()=>ht,SalesTransactionsWithRelationsSchema:()=>Z0,SchedulingConstraintAggregateArgsSchema:()=>CCt,SchedulingConstraintArgsSchema:()=>ebt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>kit,SchedulingConstraintCountOrderByAggregateInputSchema:()=>Uit,SchedulingConstraintCreateArgsSchema:()=>Vkt,SchedulingConstraintCreateInputSchema:()=>r9,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>Ykt,SchedulingConstraintCreateManyArgsSchema:()=>Qkt,SchedulingConstraintCreateManyInputSchema:()=>rW,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>cf,SchedulingConstraintCreateManyUserInputSchema:()=>BQ,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>Ja,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>Nb,SchedulingConstraintCreateWithoutUserInputSchema:()=>fu,SchedulingConstraintDeleteArgsSchema:()=>Gkt,SchedulingConstraintDeleteManyArgsSchema:()=>Xkt,SchedulingConstraintFindFirstArgsSchema:()=>ICt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>gCt,SchedulingConstraintFindManyArgsSchema:()=>ytt,SchedulingConstraintFindUniqueArgsSchema:()=>SCt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>TCt,SchedulingConstraintGroupByArgsSchema:()=>ACt,SchedulingConstraintIncludeSchema:()=>Ld,SchedulingConstraintListRelationFilterSchema:()=>o5,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>xit,SchedulingConstraintMinOrderByAggregateInputSchema:()=>jit,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>xlt,SchedulingConstraintOrderByWithAggregationInputSchema:()=>gH,SchedulingConstraintOrderByWithRelationInputSchema:()=>Zh,SchedulingConstraintScalarFieldEnumSchema:()=>nC,SchedulingConstraintScalarWhereInputSchema:()=>Bp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>vA,SchedulingConstraintSchema:()=>Wet,SchedulingConstraintSelectSchema:()=>Vd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>Mit,SchedulingConstraintUncheckedCreateInputSchema:()=>p9,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>hi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>wu,SchedulingConstraintUncheckedUpdateInputSchema:()=>u9,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>s9,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>Czt,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>ol,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>HJ,SchedulingConstraintUpdateArgsSchema:()=>$kt,SchedulingConstraintUpdateInputSchema:()=>c9,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>Kkt,SchedulingConstraintUpdateManyArgsSchema:()=>Jkt,SchedulingConstraintUpdateManyMutationInputSchema:()=>LB,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>pk,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>Ni,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>rk,SchedulingConstraintUpdateWithoutUserInputSchema:()=>VJ,SchedulingConstraintUpsertArgsSchema:()=>Hkt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>lk,SchedulingConstraintWhereInputSchema:()=>Aa,SchedulingConstraintWhereUniqueInputSchema:()=>Pe,SchedulingConstraintWithRelationsSchema:()=>Ret,SessionAggregateArgsSchema:()=>wAt,SessionArgsSchema:()=>lbt,SessionAvgOrderByAggregateInputSchema:()=>_lt,SessionCountOrderByAggregateInputSchema:()=>Elt,SessionCreateArgsSchema:()=>wjt,SessionCreateInputSchema:()=>y$,SessionCreateManyAndReturnArgsSchema:()=>qjt,SessionCreateManyArgsSchema:()=>Bjt,SessionCreateManyInputSchema:()=>IW,SessionCreateManyUserInputEnvelopeSchema:()=>ef,SessionCreateManyUserInputSchema:()=>MQ,SessionCreateNestedManyWithoutUserInputSchema:()=>La,SessionCreateOrConnectWithoutUserInputSchema:()=>jb,SessionCreateWithoutUserInputSchema:()=>Au,SessionDeleteArgsSchema:()=>Fjt,SessionDeleteManyArgsSchema:()=>Ljt,SessionFindFirstArgsSchema:()=>OAt,SessionFindFirstOrThrowArgsSchema:()=>fAt,SessionFindManyArgsSchema:()=>htt,SessionFindUniqueArgsSchema:()=>BAt,SessionFindUniqueOrThrowArgsSchema:()=>qAt,SessionGroupByArgsSchema:()=>NAt,SessionIncludeSchema:()=>uz,SessionListRelationFilterSchema:()=>X2,SessionMaxOrderByAggregateInputSchema:()=>Llt,SessionMinOrderByAggregateInputSchema:()=>Vlt,SessionOrderByRelationAggregateInputSchema:()=>Rlt,SessionOrderByWithAggregationInputSchema:()=>jH,SessionOrderByWithRelationInputSchema:()=>Bh,SessionScalarFieldEnumSchema:()=>zC,SessionScalarWhereInputSchema:()=>fp,SessionScalarWhereWithAggregatesInputSchema:()=>LA,SessionSchema:()=>qet,SessionSelectSchema:()=>sz,SessionSumOrderByAggregateInputSchema:()=>Hlt,SessionUncheckedCreateInputSchema:()=>d$,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>ci,SessionUncheckedCreateWithoutUserInputSchema:()=>Su,SessionUncheckedUpdateInputSchema:()=>m$,SessionUncheckedUpdateManyInputSchema:()=>h$,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>dzt,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Gi,SessionUncheckedUpdateWithoutUserInputSchema:()=>ZJ,SessionUpdateArgsSchema:()=>Djt,SessionUpdateInputSchema:()=>z$,SessionUpdateManyAndReturnArgsSchema:()=>_jt,SessionUpdateManyArgsSchema:()=>Ejt,SessionUpdateManyMutationInputSchema:()=>YB,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>DU,SessionUpdateManyWithoutUserNestedInputSchema:()=>ji,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>FU,SessionUpdateWithoutUserInputSchema:()=>MJ,SessionUpsertArgsSchema:()=>Njt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>qU,SessionWhereInputSchema:()=>Ra,SessionWhereUniqueInputSchema:()=>Ue,SessionWithRelationsSchema:()=>Fet,ShiftAggregateArgsSchema:()=>dTt,ShiftArgsSchema:()=>WY,ShiftAvgOrderByAggregateInputSchema:()=>Spt,ShiftCountOrderByAggregateInputSchema:()=>Apt,ShiftCountOutputTypeArgsSchema:()=>RY,ShiftCountOutputTypeSelectSchema:()=>Not,ShiftCreateArgsSchema:()=>tvt,ShiftCreateInputSchema:()=>x4,ShiftCreateManyAndReturnArgsSchema:()=>nvt,ShiftCreateManyArgsSchema:()=>ovt,ShiftCreateManyInputSchema:()=>ZW,ShiftCreateManyUserInputEnvelopeSchema:()=>KO,ShiftCreateManyUserInputSchema:()=>kQ,ShiftCreateNestedManyWithoutUserInputSchema:()=>Da,ShiftCreateNestedOneWithoutTasksInputSchema:()=>Fct,ShiftCreateOrConnectWithoutTasksInputSchema:()=>p8,ShiftCreateOrConnectWithoutUserInputSchema:()=>Ub,ShiftCreateWithoutTasksInputSchema:()=>iO,ShiftCreateWithoutUserInputSchema:()=>mu,ShiftDeleteArgsSchema:()=>avt,ShiftDeleteManyArgsSchema:()=>pvt,ShiftFindFirstArgsSchema:()=>sTt,ShiftFindFirstOrThrowArgsSchema:()=>yTt,ShiftFindManyArgsSchema:()=>gtt,ShiftFindUniqueArgsSchema:()=>mTt,ShiftFindUniqueOrThrowArgsSchema:()=>hTt,ShiftGroupByArgsSchema:()=>zTt,ShiftIncludeSchema:()=>Bz,ShiftListRelationFilterSchema:()=>K2,ShiftMaxOrderByAggregateInputSchema:()=>Tpt,ShiftMinOrderByAggregateInputSchema:()=>Ppt,ShiftOrderByRelationAggregateInputSchema:()=>Wlt,ShiftOrderByWithAggregationInputSchema:()=>LH,ShiftOrderByWithRelationInputSchema:()=>oh,ShiftScalarFieldEnumSchema:()=>kC,ShiftScalarRelationFilterSchema:()=>w2,ShiftScalarWhereInputSchema:()=>Op,ShiftScalarWhereWithAggregatesInputSchema:()=>aS,ShiftSchema:()=>eot,ShiftSelectSchema:()=>qz,ShiftStatusSchema:()=>Vt,ShiftSumOrderByAggregateInputSchema:()=>Wpt,ShiftTaskAggregateArgsSchema:()=>pCt,ShiftTaskArgsSchema:()=>Xht,ShiftTaskAvgOrderByAggregateInputSchema:()=>hit,ShiftTaskCountOrderByAggregateInputSchema:()=>mit,ShiftTaskCreateArgsSchema:()=>Ukt,ShiftTaskCreateInputSchema:()=>J1,ShiftTaskCreateManyAndReturnArgsSchema:()=>jkt,ShiftTaskCreateManyArgsSchema:()=>xkt,ShiftTaskCreateManyInputSchema:()=>iW,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>eN,ShiftTaskCreateManyShiftInputSchema:()=>T0,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>k6,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>xI,ShiftTaskCreateWithoutShiftInputSchema:()=>gy,ShiftTaskDeleteArgsSchema:()=>Mkt,ShiftTaskDeleteManyArgsSchema:()=>fkt,ShiftTaskFindFirstArgsSchema:()=>lCt,ShiftTaskFindFirstOrThrowArgsSchema:()=>rCt,ShiftTaskFindManyArgsSchema:()=>utt,ShiftTaskFindUniqueArgsSchema:()=>uCt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>sCt,ShiftTaskGroupByArgsSchema:()=>cCt,ShiftTaskIncludeSchema:()=>Fd,ShiftTaskListRelationFilterSchema:()=>P5,ShiftTaskMaxOrderByAggregateInputSchema:()=>bit,ShiftTaskMinOrderByAggregateInputSchema:()=>Iit,ShiftTaskOrderByRelationAggregateInputSchema:()=>Cpt,ShiftTaskOrderByWithAggregationInputSchema:()=>bH,ShiftTaskOrderByWithRelationInputSchema:()=>jh,ShiftTaskScalarFieldEnumSchema:()=>eC,ShiftTaskScalarWhereInputSchema:()=>$p,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>MA,ShiftTaskSchema:()=>Cet,ShiftTaskSelectSchema:()=>Dd,ShiftTaskSumOrderByAggregateInputSchema:()=>git,ShiftTaskUncheckedCreateInputSchema:()=>K1,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>x6,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>Cy,ShiftTaskUncheckedUpdateInputSchema:()=>t9,ShiftTaskUncheckedUpdateManyInputSchema:()=>e9,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>ymt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>Z6,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>jX,ShiftTaskUpdateArgsSchema:()=>Zkt,ShiftTaskUpdateInputSchema:()=>X1,ShiftTaskUpdateManyAndReturnArgsSchema:()=>Okt,ShiftTaskUpdateManyArgsSchema:()=>vkt,ShiftTaskUpdateManyMutationInputSchema:()=>EB,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>Bj,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>M6,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>Nj,ShiftTaskUpdateWithoutShiftInputSchema:()=>xX,ShiftTaskUpsertArgsSchema:()=>kkt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>wj,ShiftTaskWhereInputSchema:()=>ga,ShiftTaskWhereUniqueInputSchema:()=>Se,ShiftTaskWithRelationsSchema:()=>Aet,ShiftUncheckedCreateInputSchema:()=>j4,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>li,ShiftUncheckedCreateWithoutTasksInputSchema:()=>lO,ShiftUncheckedCreateWithoutUserInputSchema:()=>hu,ShiftUncheckedUpdateInputSchema:()=>Z4,ShiftUncheckedUpdateManyInputSchema:()=>v4,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>uzt,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Hi,ShiftUncheckedUpdateWithoutTasksInputSchema:()=>Q_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>RJ,ShiftUpdateArgsSchema:()=>ivt,ShiftUpdateInputSchema:()=>M4,ShiftUpdateManyAndReturnArgsSchema:()=>rvt,ShiftUpdateManyArgsSchema:()=>lvt,ShiftUpdateManyMutationInputSchema:()=>JB,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>ZU,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Ui,ShiftUpdateOneRequiredWithoutTasksNestedInputSchema:()=>Dct,ShiftUpdateToOneWithWhereWithoutTasksInputSchema:()=>qst,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>MU,ShiftUpdateWithoutTasksInputSchema:()=>H_,ShiftUpdateWithoutUserInputSchema:()=>WJ,ShiftUpsertArgsSchema:()=>evt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>jU,ShiftUpsertWithoutTasksInputSchema:()=>Bst,ShiftWhereInputSchema:()=>Xe,ShiftWhereUniqueInputSchema:()=>oe,ShiftWithRelationsSchema:()=>E0,SkillLevelSchema:()=>R,SortOrderInputSchema:()=>g,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>jSt,StockCountArgsSchema:()=>gY,StockCountAvgOrderByAggregateInputSchema:()=>_rt,StockCountCountOrderByAggregateInputSchema:()=>Ert,StockCountCountOutputTypeArgsSchema:()=>CY,StockCountCountOutputTypeSelectSchema:()=>Oot,StockCountCreateArgsSchema:()=>tZt,StockCountCreateInputSchema:()=>K$,StockCountCreateManyAndReturnArgsSchema:()=>nZt,StockCountCreateManyArgsSchema:()=>oZt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>hf,StockCountCreateManyCreatedByInputSchema:()=>VQ,StockCountCreateManyInputSchema:()=>RW,StockCountCreateManyInventoryInputEnvelopeSchema:()=>jO,StockCountCreateManyInventoryInputSchema:()=>mQ,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>ai,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>yZ,StockCountCreateNestedOneWithoutItemsInputSchema:()=>g6,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Lb,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>zb,StockCountCreateOrConnectWithoutItemsInputSchema:()=>Q8,StockCountCreateWithoutCreatedByInputSchema:()=>Gu,StockCountCreateWithoutInventoryInputSchema:()=>_c,StockCountCreateWithoutItemsInputSchema:()=>ww,StockCountDeleteArgsSchema:()=>aZt,StockCountDeleteManyArgsSchema:()=>pZt,StockCountFindFirstArgsSchema:()=>kSt,StockCountFindFirstOrThrowArgsSchema:()=>xSt,StockCountFindManyArgsSchema:()=>HN,StockCountFindUniqueArgsSchema:()=>ZSt,StockCountFindUniqueOrThrowArgsSchema:()=>vSt,StockCountGroupByArgsSchema:()=>MSt,StockCountIncludeSchema:()=>Rz,StockCountItemAggregateArgsSchema:()=>wSt,StockCountItemArgsSchema:()=>cbt,StockCountItemAvgOrderByAggregateInputSchema:()=>Grt,StockCountItemCountOrderByAggregateInputSchema:()=>Yrt,StockCountItemCreateArgsSchema:()=>cZt,StockCountItemCreateInputSchema:()=>n4,StockCountItemCreateManyAndReturnArgsSchema:()=>yZt,StockCountItemCreateManyArgsSchema:()=>sZt,StockCountItemCreateManyInputSchema:()=>UW,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Pw,StockCountItemCreateManyItemInputSchema:()=>I0,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>fw,StockCountItemCreateManyStockCountInputSchema:()=>g0,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>yT,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>ZD,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>TI,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>PI,StockCountItemCreateWithoutItemInputSchema:()=>ry,StockCountItemCreateWithoutStockCountInputSchema:()=>cy,StockCountItemDeleteArgsSchema:()=>dZt,StockCountItemDeleteManyArgsSchema:()=>bZt,StockCountItemFindFirstArgsSchema:()=>OSt,StockCountItemFindFirstOrThrowArgsSchema:()=>fSt,StockCountItemFindManyArgsSchema:()=>QN,StockCountItemFindUniqueArgsSchema:()=>BSt,StockCountItemFindUniqueOrThrowArgsSchema:()=>qSt,StockCountItemGroupByArgsSchema:()=>NSt,StockCountItemIncludeSchema:()=>kz,StockCountItemListRelationFilterSchema:()=>pZ,StockCountItemMaxOrderByAggregateInputSchema:()=>$rt,StockCountItemMinOrderByAggregateInputSchema:()=>Jrt,StockCountItemOrderByRelationAggregateInputSchema:()=>A5,StockCountItemOrderByWithAggregationInputSchema:()=>qH,StockCountItemOrderByWithRelationInputSchema:()=>Dh,StockCountItemScalarFieldEnumSchema:()=>TC,StockCountItemScalarWhereInputSchema:()=>Fl,StockCountItemScalarWhereWithAggregatesInputSchema:()=>XA,StockCountItemSchema:()=>Get,StockCountItemSelectSchema:()=>xz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>cB,StockCountItemSumOrderByAggregateInputSchema:()=>Krt,StockCountItemUncheckedCreateInputSchema:()=>a4,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>mT,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>vD,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>py,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>uy,StockCountItemUncheckedUpdateInputSchema:()=>l4,StockCountItemUncheckedUpdateManyInputSchema:()=>r4,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>lmt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>PT,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>rmt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>ND,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>IX,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>CX,StockCountItemUpdateArgsSchema:()=>zZt,StockCountItemUpdateInputSchema:()=>i4,StockCountItemUpdateManyAndReturnArgsSchema:()=>hZt,StockCountItemUpdateManyArgsSchema:()=>mZt,StockCountItemUpdateManyMutationInputSchema:()=>wM,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>Cj,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>Tj,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>AT,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>wD,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>gj,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>Sj,StockCountItemUpdateWithoutItemInputSchema:()=>bX,StockCountItemUpdateWithoutStockCountInputSchema:()=>gX,StockCountItemUpsertArgsSchema:()=>uZt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>Ij,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>Aj,StockCountItemWhereInputSchema:()=>xa,StockCountItemWhereUniqueInputSchema:()=>Ct,StockCountItemWithRelationsSchema:()=>F0,StockCountListRelationFilterSchema:()=>KM,StockCountMaxOrderByAggregateInputSchema:()=>Lrt,StockCountMinOrderByAggregateInputSchema:()=>Vrt,StockCountOrderByRelationAggregateInputSchema:()=>_2,StockCountOrderByWithAggregationInputSchema:()=>BH,StockCountOrderByWithRelationInputSchema:()=>Xm,StockCountScalarFieldEnumSchema:()=>SC,StockCountScalarRelationFilterSchema:()=>S5,StockCountScalarWhereInputSchema:()=>vl,StockCountScalarWhereWithAggregatesInputSchema:()=>KA,StockCountSchema:()=>Yet,StockCountSelectSchema:()=>Uz,StockCountSumOrderByAggregateInputSchema:()=>Hrt,StockCountUncheckedCreateInputSchema:()=>X$,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ti,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>mZ,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>$u,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>Lc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>Nw,StockCountUncheckedUpdateInputSchema:()=>e4,StockCountUncheckedUpdateManyInputSchema:()=>o4,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Uzt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>cl,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Jdt,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>SZ,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>lK,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>tJ,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>eV,StockCountUpdateArgsSchema:()=>iZt,StockCountUpdateInputSchema:()=>t4,StockCountUpdateManyAndReturnArgsSchema:()=>rZt,StockCountUpdateManyArgsSchema:()=>lZt,StockCountUpdateManyMutationInputSchema:()=>fM,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>xk,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>QR,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Li,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>gZ,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>A6,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Qyt,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>kk,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>HR,StockCountUpdateWithoutCreatedByInputSchema:()=>iK,StockCountUpdateWithoutInventoryInputSchema:()=>X7,StockCountUpdateWithoutItemsInputSchema:()=>tV,StockCountUpsertArgsSchema:()=>eZt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>Uk,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>VR,StockCountUpsertWithoutItemsInputSchema:()=>Hyt,StockCountWhereInputSchema:()=>Je,StockCountWhereUniqueInputSchema:()=>ct,StockCountWithRelationsSchema:()=>RB,StringFieldUpdateOperationsInputSchema:()=>a,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>Wl,StringNullableWithAggregatesFilterSchema:()=>Ut,StringWithAggregatesFilterSchema:()=>mt,SupplierPriceHistoryAggregateArgsSchema:()=>zgt,SupplierPriceHistoryArgsSchema:()=>Hht,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>Uat,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>Rat,SupplierPriceHistoryCreateArgsSchema:()=>cUt,SupplierPriceHistoryCreateInputSchema:()=>s1,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>yUt,SupplierPriceHistoryCreateManyArgsSchema:()=>sUt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>aw,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>z0,SupplierPriceHistoryCreateManyInputSchema:()=>JP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>Kw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>S0,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>tg,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>YD,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>II,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>kI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>Js,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>by,SupplierPriceHistoryDeleteArgsSchema:()=>dUt,SupplierPriceHistoryDeleteManyArgsSchema:()=>bUt,SupplierPriceHistoryFindFirstArgsSchema:()=>ygt,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>dgt,SupplierPriceHistoryFindManyArgsSchema:()=>FN,SupplierPriceHistoryFindUniqueArgsSchema:()=>hgt,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>bgt,SupplierPriceHistoryGroupByArgsSchema:()=>mgt,SupplierPriceHistoryIncludeSchema:()=>Pd,SupplierPriceHistoryListRelationFilterSchema:()=>lZ,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>kat,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>xat,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>C5,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>cH,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>Th,SupplierPriceHistoryScalarFieldEnumSchema:()=>Qg,SupplierPriceHistoryScalarWhereInputSchema:()=>ql,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>TA,SupplierPriceHistorySchema:()=>set,SupplierPriceHistorySelectSchema:()=>Wd,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>jat,SupplierPriceHistoryUncheckedCreateInputSchema:()=>y1,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>pg,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>JD,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>Ks,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>Iy,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>z1,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>m1,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>emt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Pg,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>smt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>nE,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>pX,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>kX,SupplierPriceHistoryUpdateArgsSchema:()=>zUt,SupplierPriceHistoryUpdateInputSchema:()=>d1,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>hUt,SupplierPriceHistoryUpdateManyArgsSchema:()=>mUt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>xM,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>ij,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>fj,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>hg,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>tE,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>aj,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Oj,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>rX,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>UX,SupplierPriceHistoryUpsertArgsSchema:()=>uUt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>nj,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>vj,SupplierPriceHistoryWhereInputSchema:()=>ya,SupplierPriceHistoryWhereUniqueInputSchema:()=>It,SupplierPriceHistoryWithRelationsSchema:()=>w0,TaskTypeSchema:()=>pe,TransactionIsolationLevelSchema:()=>fht,TransactionTypeSchema:()=>vt,UserAggregateArgsSchema:()=>PAt,UserArgsSchema:()=>Jt,UserAvgOrderByAggregateInputSchema:()=>Zlt,UserCountOrderByAggregateInputSchema:()=>Mlt,UserCountOutputTypeArgsSchema:()=>sY,UserCountOutputTypeSelectSchema:()=>kot,UserCreateArgsSchema:()=>Ijt,UserCreateInputSchema:()=>o$,UserCreateManyAndReturnArgsSchema:()=>Ajt,UserCreateManyArgsSchema:()=>Cjt,UserCreateManyInputSchema:()=>hW,UserCreateManyOrganizationInputEnvelopeSchema:()=>WO,UserCreateManyOrganizationInputSchema:()=>yQ,UserCreateManyRestaurantInputEnvelopeSchema:()=>vO,UserCreateManyRestaurantInputSchema:()=>hQ,UserCreateNestedManyWithoutOrganizationInputSchema:()=>l6,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,UserCreateNestedOneWithoutAuthInputSchema:()=>Kct,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>Ect,UserCreateNestedOneWithoutChecklistCompletesInputSchema:()=>rF,UserCreateNestedOneWithoutCustomerFeedbackResponsesInputSchema:()=>hF,UserCreateNestedOneWithoutInventoryTransactionsInputSchema:()=>RD,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>cT,UserCreateNestedOneWithoutInventoryWithdrawalsInputSchema:()=>lD,UserCreateNestedOneWithoutLeftoverItemsInputSchema:()=>OF,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>aut,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>lE,UserCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>tD,UserCreateNestedOneWithoutProductionPlansInputSchema:()=>VF,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>gP,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>IP,UserCreateNestedOneWithoutSchedulingConstraintsInputSchema:()=>Lct,UserCreateNestedOneWithoutSessionsInputSchema:()=>tut,UserCreateNestedOneWithoutShiftsInputSchema:()=>U6,UserCreateNestedOneWithoutStockCountsInputSchema:()=>MD,UserCreateNestedOneWithoutWasteRecordsInputSchema:()=>FF,UserCreateOrConnectWithoutAuthInputSchema:()=>T8,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>c8,UserCreateOrConnectWithoutChecklistCompletesInputSchema:()=>_3,UserCreateOrConnectWithoutCustomerFeedbackResponsesInputSchema:()=>$3,UserCreateOrConnectWithoutInventoryTransactionsInputSchema:()=>L8,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>D8,UserCreateOrConnectWithoutInventoryWithdrawalsInputSchema:()=>d8,UserCreateOrConnectWithoutLeftoverItemsInputSchema:()=>X3,UserCreateOrConnectWithoutOrganizationInputSchema:()=>sb,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>a7,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>n7,UserCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>r8,UserCreateOrConnectWithoutProductionPlansInputSchema:()=>a8,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>O3,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>v3,UserCreateOrConnectWithoutRestaurantInputSchema:()=>mb,UserCreateOrConnectWithoutSchedulingConstraintsInputSchema:()=>u8,UserCreateOrConnectWithoutSessionsInputSchema:()=>P8,UserCreateOrConnectWithoutShiftsInputSchema:()=>t7,UserCreateOrConnectWithoutStockCountsInputSchema:()=>H8,UserCreateOrConnectWithoutWasteRecordsInputSchema:()=>o8,UserCreateWithoutAuthInputSchema:()=>If,UserCreateWithoutAvailabilityInputSchema:()=>rO,UserCreateWithoutChecklistCompletesInputSchema:()=>gv,UserCreateWithoutCustomerFeedbackResponsesInputSchema:()=>Ov,UserCreateWithoutInventoryTransactionsInputSchema:()=>xw,UserCreateWithoutInventoryUpdatesInputSchema:()=>Cw,UserCreateWithoutInventoryWithdrawalsInputSchema:()=>mO,UserCreateWithoutLeftoverItemsInputSchema:()=>Fv,UserCreateWithoutOrganizationInputSchema:()=>Nc,UserCreateWithoutPasswordResetsInputSchema:()=>cN,UserCreateWithoutPrepItemsInputSchema:()=>rN,UserCreateWithoutProductionPlanItemsInputSchema:()=>nO,UserCreateWithoutProductionPlansInputSchema:()=>$v,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>$Z,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>YZ,UserCreateWithoutRestaurantInputSchema:()=>Vc,UserCreateWithoutSchedulingConstraintsInputSchema:()=>cO,UserCreateWithoutSessionsInputSchema:()=>Cf,UserCreateWithoutShiftsInputSchema:()=>Xw,UserCreateWithoutStockCountsInputSchema:()=>vw,UserCreateWithoutWasteRecordsInputSchema:()=>Hv,UserDeleteArgsSchema:()=>Sjt,UserDeleteManyArgsSchema:()=>Rjt,UserFindFirstArgsSchema:()=>SAt,UserFindFirstOrThrowArgsSchema:()=>TAt,UserFindManyArgsSchema:()=>_N,UserFindUniqueArgsSchema:()=>RAt,UserFindUniqueOrThrowArgsSchema:()=>UAt,UserGroupByArgsSchema:()=>WAt,UserIncludeSchema:()=>lz,UserListRelationFilterSchema:()=>JM,UserMaxOrderByAggregateInputSchema:()=>vlt,UserMinOrderByAggregateInputSchema:()=>Olt,UserNullableScalarRelationFilterSchema:()=>HI,UserOrderByRelationAggregateInputSchema:()=>D2,UserOrderByWithAggregationInputSchema:()=>kH,UserOrderByWithRelationInputSchema:()=>eo,UserRoleSchema:()=>se,UserScalarFieldEnumSchema:()=>yC,UserScalarRelationFilterSchema:()=>we,UserScalarWhereInputSchema:()=>Zl,UserScalarWhereWithAggregatesInputSchema:()=>EA,UserSchema:()=>wet,UserSelectSchema:()=>rz,UserSumOrderByAggregateInputSchema:()=>flt,UserUncheckedCreateInputSchema:()=>n$,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>p6,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,UserUncheckedCreateWithoutAuthInputSchema:()=>gf,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>pO,UserUncheckedCreateWithoutChecklistCompletesInputSchema:()=>Cv,UserUncheckedCreateWithoutCustomerFeedbackResponsesInputSchema:()=>fv,UserUncheckedCreateWithoutInventoryTransactionsInputSchema:()=>jw,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>Aw,UserUncheckedCreateWithoutInventoryWithdrawalsInputSchema:()=>hO,UserUncheckedCreateWithoutLeftoverItemsInputSchema:()=>Dv,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Bc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>uN,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>pN,UserUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>aO,UserUncheckedCreateWithoutProductionPlansInputSchema:()=>Jv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>JZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>GZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Hc,UserUncheckedCreateWithoutSchedulingConstraintsInputSchema:()=>uO,UserUncheckedCreateWithoutSessionsInputSchema:()=>Af,UserUncheckedCreateWithoutShiftsInputSchema:()=>tN,UserUncheckedCreateWithoutStockCountsInputSchema:()=>Ow,UserUncheckedCreateWithoutWasteRecordsInputSchema:()=>Qv,UserUncheckedUpdateInputSchema:()=>i$,UserUncheckedUpdateManyInputSchema:()=>l$,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Ydt,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>y6,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Kdt,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,UserUncheckedUpdateWithoutAuthInputSchema:()=>gL,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>G_,UserUncheckedUpdateWithoutChecklistCompletesInputSchema:()=>c_,UserUncheckedUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>T_,UserUncheckedUpdateWithoutInventoryTransactionsInputSchema:()=>GL,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>_L,UserUncheckedUpdateWithoutInventoryWithdrawalsInputSchema:()=>nL,UserUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>x_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>Y7,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>TV,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>AV,UserUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>V_,UserUncheckedUpdateWithoutProductionPlansInputSchema:()=>q_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>VE,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>_E,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>oJ,UserUncheckedUpdateWithoutSchedulingConstraintsInputSchema:()=>J_,UserUncheckedUpdateWithoutSessionsInputSchema:()=>AL,UserUncheckedUpdateWithoutShiftsInputSchema:()=>mV,UserUncheckedUpdateWithoutStockCountsInputSchema:()=>XL,UserUncheckedUpdateWithoutWasteRecordsInputSchema:()=>f_,UserUpdateArgsSchema:()=>Tjt,UserUpdateInputSchema:()=>a$,UserUpdateManyAndReturnArgsSchema:()=>Wjt,UserUpdateManyArgsSchema:()=>Pjt,UserUpdateManyMutationInputSchema:()=>ZM,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>BR,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>$R,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>u6,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,UserUpdateOneRequiredWithoutAuthNestedInputSchema:()=>Xct,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>_ct,UserUpdateOneRequiredWithoutChecklistCompletesNestedInputSchema:()=>sF,UserUpdateOneRequiredWithoutInventoryTransactionsNestedInputSchema:()=>xD,UserUpdateOneRequiredWithoutInventoryWithdrawalsNestedInputSchema:()=>cD,UserUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>NF,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>iut,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>cE,UserUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>GF,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>WP,UserUpdateOneRequiredWithoutSchedulingConstraintsNestedInputSchema:()=>Vct,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>eut,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>j6,UserUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>fD,UserUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>_F,UserUpdateOneWithoutCustomerFeedbackResponsesNestedInputSchema:()=>gF,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>IT,UserUpdateOneWithoutProductionPlanItemsNestedInputSchema:()=>nD,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>RP,UserUpdateToOneWithWhereWithoutAuthInputSchema:()=>syt,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>Dst,UserUpdateToOneWithWhereWithoutChecklistCompletesInputSchema:()=>est,UserUpdateToOneWithWhereWithoutCustomerFeedbackResponsesInputSchema:()=>mst,UserUpdateToOneWithWhereWithoutInventoryTransactionsInputSchema:()=>Dyt,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>fyt,UserUpdateToOneWithWhereWithoutInventoryWithdrawalsInputSchema:()=>Gst,UserUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>Ast,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>mdt,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>ddt,UserUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>Nst,UserUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>Mst,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>Nut,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>fut,UserUpdateToOneWithWhereWithoutSchedulingConstraintsInputSchema:()=>_st,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>dyt,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>rdt,UserUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Vyt,UserUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>Ust,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>NR,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>GR,UserUpdateWithoutAuthInputSchema:()=>IL,UserUpdateWithoutAvailabilityInputSchema:()=>Y_,UserUpdateWithoutChecklistCompletesInputSchema:()=>p_,UserUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>S_,UserUpdateWithoutInventoryTransactionsInputSchema:()=>YL,UserUpdateWithoutInventoryUpdatesInputSchema:()=>EL,UserUpdateWithoutInventoryWithdrawalsInputSchema:()=>oL,UserUpdateWithoutLeftoverItemsInputSchema:()=>k_,UserUpdateWithoutOrganizationInputSchema:()=>Q7,UserUpdateWithoutPasswordResetsInputSchema:()=>SV,UserUpdateWithoutPrepItemsInputSchema:()=>CV,UserUpdateWithoutProductionPlanItemsInputSchema:()=>L_,UserUpdateWithoutProductionPlansInputSchema:()=>B_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>LE,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>EE,UserUpdateWithoutRestaurantInputSchema:()=>eJ,UserUpdateWithoutSchedulingConstraintsInputSchema:()=>$_,UserUpdateWithoutSessionsInputSchema:()=>CL,UserUpdateWithoutShiftsInputSchema:()=>zV,UserUpdateWithoutStockCountsInputSchema:()=>KL,UserUpdateWithoutWasteRecordsInputSchema:()=>O_,UserUpsertArgsSchema:()=>gjt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>wR,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>YR,UserUpsertWithoutAuthInputSchema:()=>uyt,UserUpsertWithoutAvailabilityInputSchema:()=>Fst,UserUpsertWithoutChecklistCompletesInputSchema:()=>tst,UserUpsertWithoutCustomerFeedbackResponsesInputSchema:()=>zst,UserUpsertWithoutInventoryTransactionsInputSchema:()=>Fyt,UserUpsertWithoutInventoryUpdatesInputSchema:()=>Oyt,UserUpsertWithoutInventoryWithdrawalsInputSchema:()=>Yst,UserUpsertWithoutLeftoverItemsInputSchema:()=>Cst,UserUpsertWithoutPasswordResetsInputSchema:()=>zdt,UserUpsertWithoutPrepItemsInputSchema:()=>ydt,UserUpsertWithoutProductionPlanItemsInputSchema:()=>wst,UserUpsertWithoutProductionPlansInputSchema:()=>jst,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>wut,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>Out,UserUpsertWithoutSchedulingConstraintsInputSchema:()=>Est,UserUpsertWithoutSessionsInputSchema:()=>yyt,UserUpsertWithoutShiftsInputSchema:()=>ldt,UserUpsertWithoutStockCountsInputSchema:()=>Lyt,UserUpsertWithoutWasteRecordsInputSchema:()=>Rst,UserWhereInputSchema:()=>M,UserWhereUniqueInputSchema:()=>j,UserWithRelationsSchema:()=>Na,VendorAggregateArgsSchema:()=>rTt,VendorArgsSchema:()=>PM,VendorAvgOrderByAggregateInputSchema:()=>hpt,VendorCountOrderByAggregateInputSchema:()=>mpt,VendorCountOutputTypeArgsSchema:()=>PY,VendorCountOutputTypeSelectSchema:()=>wot,VendorCreateArgsSchema:()=>VZt,VendorCreateInputSchema:()=>P4,VendorCreateManyAndReturnArgsSchema:()=>YZt,VendorCreateManyArgsSchema:()=>QZt,VendorCreateManyInputSchema:()=>MW,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>JI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>qD,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>J5,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>mI,VendorCreateOrConnectWithoutOrdersInputSchema:()=>J8,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>H3,VendorCreateWithoutIngredientsInputSchema:()=>Vs,VendorCreateWithoutOrdersInputSchema:()=>Lw,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>Rv,VendorDeleteArgsSchema:()=>GZt,VendorDeleteManyArgsSchema:()=>XZt,VendorFindFirstArgsSchema:()=>iTt,VendorFindFirstOrThrowArgsSchema:()=>lTt,VendorFindManyArgsSchema:()=>Itt,VendorFindUniqueArgsSchema:()=>cTt,VendorFindUniqueOrThrowArgsSchema:()=>uTt,VendorGroupByArgsSchema:()=>pTt,VendorIncludeSchema:()=>wz,VendorListRelationFilterSchema:()=>I5,VendorMaxOrderByAggregateInputSchema:()=>bpt,VendorMinOrderByAggregateInputSchema:()=>Ipt,VendorOrderByRelationAggregateInputSchema:()=>zrt,VendorOrderByWithAggregationInputSchema:()=>_H,VendorOrderByWithRelationInputSchema:()=>nc,VendorScalarFieldEnumSchema:()=>UC,VendorScalarRelationFilterSchema:()=>QM,VendorScalarWhereInputSchema:()=>Gp,VendorScalarWhereWithAggregatesInputSchema:()=>nS,VendorSchema:()=>tot,VendorSelectSchema:()=>Nz,VendorSumOrderByAggregateInputSchema:()=>gpt,VendorUncheckedCreateInputSchema:()=>W4,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>ig,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>Hs,VendorUncheckedCreateWithoutOrdersInputSchema:()=>Vw,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>Uv,VendorUncheckedUpdateInputSchema:()=>U4,VendorUncheckedUpdateManyInputSchema:()=>k4,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Kzt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>Ag,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>oX,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>cV,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>m_,VendorUpdateArgsSchema:()=>$Zt,VendorUpdateInputSchema:()=>R4,VendorUpdateManyAndReturnArgsSchema:()=>KZt,VendorUpdateManyArgsSchema:()=>JZt,VendorUpdateManyMutationInputSchema:()=>$B,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>$x,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>dg,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>_D,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>X5,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>edt,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>rst,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>Gx,VendorUpdateWithoutIngredientsInputSchema:()=>eX,VendorUpdateWithoutOrdersInputSchema:()=>pV,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>z_,VendorUpsertArgsSchema:()=>HZt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>Yx,VendorUpsertWithoutOrdersInputSchema:()=>tdt,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>lst,VendorWhereInputSchema:()=>Oe,VendorWhereUniqueInputSchema:()=>Yt,VendorWithRelationsSchema:()=>kB,WasteRecordAggregateArgsSchema:()=>Lgt,WasteRecordArgsSchema:()=>Jht,WasteRecordAvgOrderByAggregateInputSchema:()=>tit,WasteRecordCountOrderByAggregateInputSchema:()=>Xat,WasteRecordCreateArgsSchema:()=>tkt,WasteRecordCreateInputSchema:()=>w1,WasteRecordCreateManyAndReturnArgsSchema:()=>nkt,WasteRecordCreateManyArgsSchema:()=>okt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>ow,WasteRecordCreateManyIngredienteInputSchema:()=>y0,WasteRecordCreateManyInputSchema:()=>oW,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>af,WasteRecordCreateManyRecordedByInputSchema:()=>OQ,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>DO,WasteRecordCreateManyRestaurantInputSchema:()=>TQ,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>KI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>Qa,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>lr,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>hI,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>vb,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>Sb,WasteRecordCreateWithoutIngredienteInputSchema:()=>Qs,WasteRecordCreateWithoutRecordedByInputSchema:()=>Uu,WasteRecordCreateWithoutRestaurantInputSchema:()=>iu,WasteRecordDeleteArgsSchema:()=>akt,WasteRecordDeleteManyArgsSchema:()=>pkt,WasteRecordFindFirstArgsSchema:()=>Egt,WasteRecordFindFirstOrThrowArgsSchema:()=>_gt,WasteRecordFindManyArgsSchema:()=>qT,WasteRecordFindUniqueArgsSchema:()=>Hgt,WasteRecordFindUniqueOrThrowArgsSchema:()=>Qgt,WasteRecordGroupByArgsSchema:()=>Vgt,WasteRecordIncludeSchema:()=>Od,WasteRecordListRelationFilterSchema:()=>tT,WasteRecordMaxOrderByAggregateInputSchema:()=>eit,WasteRecordMinOrderByAggregateInputSchema:()=>oit,WasteRecordOrderByRelationAggregateInputSchema:()=>Aq,WasteRecordOrderByWithAggregationInputSchema:()=>zH,WasteRecordOrderByWithRelationInputSchema:()=>kh,WasteRecordScalarFieldEnumSchema:()=>Kg,WasteRecordScalarWhereInputSchema:()=>bl,WasteRecordScalarWhereWithAggregatesInputSchema:()=>kA,WasteRecordSchema:()=>bet,WasteRecordSelectSchema:()=>fd,WasteRecordSumOrderByAggregateInputSchema:()=>nit,WasteRecordUncheckedCreateInputSchema:()=>N1,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>lg,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>yi,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>gr,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>Ys,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>ku,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>lu,WasteRecordUncheckedUpdateInputSchema:()=>q1,WasteRecordUncheckedUpdateManyInputSchema:()=>F1,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Xzt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>Sg,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>hzt,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Ki,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>izt,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Hr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>aX,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>BJ,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>hJ,WasteRecordUpdateArgsSchema:()=>ikt,WasteRecordUpdateInputSchema:()=>B1,WasteRecordUpdateManyAndReturnArgsSchema:()=>rkt,WasteRecordUpdateManyArgsSchema:()=>lkt,WasteRecordUpdateManyMutationInputSchema:()=>pP,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>Xx,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>$U,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>bU,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>zg,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>vi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>Kx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>GU,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>hU,WasteRecordUpdateWithoutIngredienteInputSchema:()=>nX,WasteRecordUpdateWithoutRecordedByInputSchema:()=>NJ,WasteRecordUpdateWithoutRestaurantInputSchema:()=>mJ,WasteRecordUpsertArgsSchema:()=>ekt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>Jx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>YU,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>mU,WasteRecordWhereInputSchema:()=>ba,WasteRecordWhereUniqueInputSchema:()=>E,WasteRecordWithRelationsSchema:()=>gB});var ze;(function(c){c.assertEqual=m=>m;function i(m){}c.assertIs=i;function p(m){throw new Error}c.assertNever=p,c.arrayToEnum=m=>{let b={};for(let P of m)b[P]=P;return b},c.getValidEnumValues=m=>{let b=c.objectKeys(m).filter(k=>typeof m[m[k]]!="number"),P={};for(let k of b)P[k]=m[k];return c.objectValues(P)},c.objectValues=m=>c.objectKeys(m).map(function(b){return m[b]}),c.objectKeys=typeof Object.keys=="function"?m=>Object.keys(m):m=>{let b=[];for(let P in m)Object.prototype.hasOwnProperty.call(m,P)&&b.push(P);return b},c.find=(m,b)=>{for(let P of m)if(b(P))return P},c.isInteger=typeof Number.isInteger=="function"?m=>Number.isInteger(m):m=>typeof m=="number"&&isFinite(m)&&Math.floor(m)===m;function y(m,b=" | "){return m.map(P=>typeof P=="string"?`'${P}'`:P).join(b)}c.joinValues=y,c.jsonStringifyReplacer=(m,b)=>typeof b=="bigint"?b.toString():b;})(ze||(ze={}));var EV;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(EV||(EV={}));var X=ze.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),sh=c=>{switch(typeof c){case "undefined":return X.undefined;case "string":return X.string;case "number":return isNaN(c)?X.nan:X.number;case "boolean":return X.boolean;case "function":return X.function;case "bigint":return X.bigint;case "symbol":return X.symbol;case "object":return Array.isArray(c)?X.array:c===null?X.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?X.promise:typeof Map<"u"&&c instanceof Map?X.map:typeof Set<"u"&&c instanceof Set?X.set:typeof Date<"u"&&c instanceof Date?X.date:X.object;default:return X.unknown}},O=ze.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Umt=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),ap=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=y=>{this.issues=[...this.issues,y];},this.addIssues=(y=[])=>{this.issues=[...this.issues,...y];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(b){return b.message},y={_errors:[]},m=b=>{for(let P of b.issues)if(P.code==="invalid_union")P.unionErrors.map(m);else if(P.code==="invalid_return_type")m(P.returnTypeError);else if(P.code==="invalid_arguments")m(P.argumentsError);else if(P.path.length===0)y._errors.push(p(P));else {let k=y,J=0;for(;J<P.path.length;){let Y=P.path[J];J===P.path.length-1?(k[Y]=k[Y]||{_errors:[]},k[Y]._errors.push(p(P))):k[Y]=k[Y]||{_errors:[]},k=k[Y],J++;}}};return m(this),y}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ze.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},y=[];for(let m of this.issues)m.path.length>0?(p[m.path[0]]=p[m.path[0]]||[],p[m.path[0]].push(i(m))):y.push(i(m));return {formErrors:y,fieldErrors:p}}get formErrors(){return this.flatten()}};ap.create=c=>new ap(c);var YT=(c,i)=>{let p;switch(c.code){case O.invalid_type:c.received===X.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case O.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,ze.jsonStringifyReplacer)}`;break;case O.unrecognized_keys:p=`Unrecognized key(s) in object: ${ze.joinValues(c.keys,", ")}`;break;case O.invalid_union:p="Invalid input";break;case O.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${ze.joinValues(c.options)}`;break;case O.invalid_enum_value:p=`Invalid enum value. Expected ${ze.joinValues(c.options)}, received '${c.received}'`;break;case O.invalid_arguments:p="Invalid function arguments";break;case O.invalid_return_type:p="Invalid function return type";break;case O.invalid_date:p="Invalid date";break;case O.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:ze.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case O.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case O.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case O.custom:p="Invalid input";break;case O.invalid_intersection_types:p="Intersection results could not be merged";break;case O.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case O.not_finite:p="Number must be finite";break;default:p=i.defaultError,ze.assertNever(c);}return {message:p}},ktt=YT;function kmt(c){ktt=c;}function KN(){return ktt}var XN=c=>{let{data:i,path:p,errorMaps:y,issueData:m}=c,b=[...p,...m.path||[]],P={...m,path:b};if(m.message!==void 0)return {...m,path:b,message:m.message};let k="",J=y.filter(Y=>!!Y).slice().reverse();for(let Y of J)k=Y(P,{data:i,defaultError:k}).message;return {...m,path:b,message:k}},xmt=[];function G(c,i){let p=KN(),y=XN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===YT?void 0:YT].filter(m=>!!m)});c.common.issues.push(y);}var Rl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let y=[];for(let m of p){if(m.status==="aborted")return xt;m.status==="dirty"&&i.dirty(),y.push(m.value);}return {status:i.value,value:y}}static async mergeObjectAsync(i,p){let y=[];for(let m of p){let b=await m.key,P=await m.value;y.push({key:b,value:P});}return c.mergeObjectSync(i,y)}static mergeObjectSync(i,p){let y={};for(let m of p){let{key:b,value:P}=m;if(b.status==="aborted"||P.status==="aborted")return xt;b.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),b.value!=="__proto__"&&(typeof P.value<"u"||m.alwaysSet)&&(y[b.value]=P.value);}return {status:i.value,value:y}}},xt=Object.freeze({status:"aborted"}),QT=c=>({status:"dirty",value:c}),_l=c=>({status:"valid",value:c}),_V=c=>c.status==="aborted",LV=c=>c.status==="dirty",LC=c=>c.status==="valid",MP=c=>typeof Promise<"u"&&c instanceof Promise;function tB(c,i,p,y){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function xtt(c,i,p,y,m){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var it;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(it||(it={}));var xP,jP,Sp=class{constructor(i,p,y,m){this._cachedPath=[],this.parent=i,this.data=p,this._path=y,this._key=m;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},Wtt=(c,i)=>{if(LC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new ap(c.common.issues);return this._error=p,this._error}}};function Dt(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:y,description:m}=c;if(i&&(p||y))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:m}:{errorMap:(P,k)=>{var J,Y;let{message:Rt}=c;return P.code==="invalid_enum_value"?{message:Rt??k.defaultError}:typeof k.data>"u"?{message:(J=Rt??y)!==null&&J!==void 0?J:k.defaultError}:P.code!=="invalid_type"?{message:k.defaultError}:{message:(Y=Rt??p)!==null&&Y!==void 0?Y:k.defaultError}},description:m}}var Et=class{get description(){return this._def.description}_getType(i){return sh(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:sh(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new Rl,ctx:{common:i.parent.common,data:i.data,parsedType:sh(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(MP(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let y=this.safeParse(i,p);if(y.success)return y.data;throw y.error}safeParse(i,p){var y;let m={common:{issues:[],async:(y=p?.async)!==null&&y!==void 0?y:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:sh(i)},b=this._parseSync({data:i,path:m.path,parent:m});return Wtt(m,b)}"~validate"(i){var p,y;let m={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:sh(i)};if(!this["~standard"].async)try{let b=this._parseSync({data:i,path:[],parent:m});return LC(b)?{value:b.value}:{issues:m.common.issues}}catch(b){!((y=(p=b?.message)===null||p===void 0?void 0:p.toLowerCase())===null||y===void 0)&&y.includes("encountered")&&(this["~standard"].async=true),m.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:m}).then(b=>LC(b)?{value:b.value}:{issues:m.common.issues})}async parseAsync(i,p){let y=await this.safeParseAsync(i,p);if(y.success)return y.data;throw y.error}async safeParseAsync(i,p){let y={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:sh(i)},m=this._parse({data:i,path:y.path,parent:y}),b=await(MP(m)?m:Promise.resolve(m));return Wtt(y,b)}refine(i,p){let y=m=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(m):p;return this._refinement((m,b)=>{let P=i(m),k=()=>b.addIssue({code:O.custom,...y(m)});return typeof Promise<"u"&&P instanceof Promise?P.then(J=>J?true:(k(),false)):P?true:(k(),false)})}refinement(i,p){return this._refinement((y,m)=>i(y)?true:(m.addIssue(typeof p=="function"?p(y,m):p),false))}_refinement(i){return new ip({schema:this,typeName:kt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return Ap.create(this,this._def)}nullable(){return _m.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return dh.create(this)}promise(){return xg.create(this,this._def)}or(i){return JC.create([this,i],this._def)}and(i){return KC.create(this,i,this._def)}transform(i){return new ip({...Dt(this._def),schema:this,typeName:kt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new nA({...Dt(this._def),innerType:this,defaultValue:p,typeName:kt.ZodDefault})}brand(){return new ZP({typeName:kt.ZodBranded,type:this,...Dt(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new aA({...Dt(this._def),innerType:this,catchValue:p,typeName:kt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return vP.create(this,i)}readonly(){return iA.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},jmt=/^c[^\s-]{8,}$/i,Mmt=/^[0-9a-z]+$/,Zmt=/^[0-9A-HJKMNP-TV-Z]{26}$/i,vmt=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Omt=/^[a-z0-9_-]{21}$/i,fmt=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,wmt=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Nmt=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Bmt="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",DV,qmt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Fmt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,Dmt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,Emt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,_mt=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Lmt=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,jtt="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Vmt=new RegExp(`^${jtt}$`);function Mtt(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function Hmt(c){return new RegExp(`^${Mtt(c)}$`)}function Ztt(c){let i=`${jtt}T${Mtt(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Qmt(c,i){return !!((i==="v4"||!i)&&qmt.test(c)||(i==="v6"||!i)&&Dmt.test(c))}function Ymt(c,i){if(!fmt.test(c))return  false;try{let[p]=c.split("."),y=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),m=JSON.parse(atob(y));return !(typeof m!="object"||m===null||!m.typ||!m.alg||i&&m.alg!==i)}catch{return  false}}function Gmt(c,i){return !!((i==="v4"||!i)&&Fmt.test(c)||(i==="v6"||!i)&&Emt.test(c))}var Ug=class c extends Et{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==X.string){let b=this._getOrReturnCtx(i);return G(b,{code:O.invalid_type,expected:X.string,received:b.parsedType}),xt}let y=new Rl,m;for(let b of this._def.checks)if(b.kind==="min")i.data.length<b.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_small,minimum:b.value,type:"string",inclusive:true,exact:false,message:b.message}),y.dirty());else if(b.kind==="max")i.data.length>b.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_big,maximum:b.value,type:"string",inclusive:true,exact:false,message:b.message}),y.dirty());else if(b.kind==="length"){let P=i.data.length>b.value,k=i.data.length<b.value;(P||k)&&(m=this._getOrReturnCtx(i,m),P?G(m,{code:O.too_big,maximum:b.value,type:"string",inclusive:true,exact:true,message:b.message}):k&&G(m,{code:O.too_small,minimum:b.value,type:"string",inclusive:true,exact:true,message:b.message}),y.dirty());}else if(b.kind==="email")Nmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"email",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="emoji")DV||(DV=new RegExp(Bmt,"u")),DV.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"emoji",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="uuid")vmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"uuid",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="nanoid")Omt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"nanoid",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="cuid")jmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="cuid2")Mmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid2",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="ulid")Zmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ulid",code:O.invalid_string,message:b.message}),y.dirty());else if(b.kind==="url")try{new URL(i.data);}catch{m=this._getOrReturnCtx(i,m),G(m,{validation:"url",code:O.invalid_string,message:b.message}),y.dirty();}else b.kind==="regex"?(b.regex.lastIndex=0,b.regex.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"regex",code:O.invalid_string,message:b.message}),y.dirty())):b.kind==="trim"?i.data=i.data.trim():b.kind==="includes"?i.data.includes(b.value,b.position)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{includes:b.value,position:b.position},message:b.message}),y.dirty()):b.kind==="toLowerCase"?i.data=i.data.toLowerCase():b.kind==="toUpperCase"?i.data=i.data.toUpperCase():b.kind==="startsWith"?i.data.startsWith(b.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{startsWith:b.value},message:b.message}),y.dirty()):b.kind==="endsWith"?i.data.endsWith(b.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{endsWith:b.value},message:b.message}),y.dirty()):b.kind==="datetime"?Ztt(b).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"datetime",message:b.message}),y.dirty()):b.kind==="date"?Vmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"date",message:b.message}),y.dirty()):b.kind==="time"?Hmt(b).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"time",message:b.message}),y.dirty()):b.kind==="duration"?wmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"duration",code:O.invalid_string,message:b.message}),y.dirty()):b.kind==="ip"?Qmt(i.data,b.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ip",code:O.invalid_string,message:b.message}),y.dirty()):b.kind==="jwt"?Ymt(i.data,b.alg)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"jwt",code:O.invalid_string,message:b.message}),y.dirty()):b.kind==="cidr"?Gmt(i.data,b.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cidr",code:O.invalid_string,message:b.message}),y.dirty()):b.kind==="base64"?_mt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64",code:O.invalid_string,message:b.message}),y.dirty()):b.kind==="base64url"?Lmt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64url",code:O.invalid_string,message:b.message}),y.dirty()):ze.assertNever(b);return {status:y.value,value:i.data}}_regex(i,p,y){return this.refinement(m=>i.test(m),{validation:p,code:O.invalid_string,...it.errToObj(y)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...it.errToObj(i)})}url(i){return this._addCheck({kind:"url",...it.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...it.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...it.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...it.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...it.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...it.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...it.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...it.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...it.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...it.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...it.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...it.errToObj(i)})}datetime(i){var p,y;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(y=i?.local)!==null&&y!==void 0?y:false,...it.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...it.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...it.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...it.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...it.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...it.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...it.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...it.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...it.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...it.errToObj(p)})}nonempty(i){return this.min(1,it.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};Ug.create=c=>{var i;return new Ug({checks:[],typeName:kt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Dt(c)})};function $mt(c,i){let p=(c.toString().split(".")[1]||"").length,y=(i.toString().split(".")[1]||"").length,m=p>y?p:y,b=parseInt(c.toFixed(m).replace(".","")),P=parseInt(i.toFixed(m).replace(".",""));return b%P/Math.pow(10,m)}var VC=class c extends Et{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==X.number){let b=this._getOrReturnCtx(i);return G(b,{code:O.invalid_type,expected:X.number,received:b.parsedType}),xt}let y,m=new Rl;for(let b of this._def.checks)b.kind==="int"?ze.isInteger(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.invalid_type,expected:"integer",received:"float",message:b.message}),m.dirty()):b.kind==="min"?(b.inclusive?i.data<b.value:i.data<=b.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,minimum:b.value,type:"number",inclusive:b.inclusive,exact:false,message:b.message}),m.dirty()):b.kind==="max"?(b.inclusive?i.data>b.value:i.data>=b.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,maximum:b.value,type:"number",inclusive:b.inclusive,exact:false,message:b.message}),m.dirty()):b.kind==="multipleOf"?$mt(i.data,b.value)!==0&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:b.value,message:b.message}),m.dirty()):b.kind==="finite"?Number.isFinite(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_finite,message:b.message}),m.dirty()):ze.assertNever(b);return {status:m.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,it.toString(p))}gt(i,p){return this.setLimit("min",i,false,it.toString(p))}lte(i,p){return this.setLimit("max",i,true,it.toString(p))}lt(i,p){return this.setLimit("max",i,false,it.toString(p))}setLimit(i,p,y,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:it.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:it.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:it.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:it.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:it.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:it.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:it.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:it.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:it.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:it.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&ze.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let y of this._def.checks){if(y.kind==="finite"||y.kind==="int"||y.kind==="multipleOf")return  true;y.kind==="min"?(p===null||y.value>p)&&(p=y.value):y.kind==="max"&&(i===null||y.value<i)&&(i=y.value);}return Number.isFinite(p)&&Number.isFinite(i)}};VC.create=c=>new VC({checks:[],typeName:kt.ZodNumber,coerce:c?.coerce||false,...Dt(c)});var HC=class c extends Et{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==X.bigint)return this._getInvalidInput(i);let y,m=new Rl;for(let b of this._def.checks)b.kind==="min"?(b.inclusive?i.data<b.value:i.data<=b.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,type:"bigint",minimum:b.value,inclusive:b.inclusive,message:b.message}),m.dirty()):b.kind==="max"?(b.inclusive?i.data>b.value:i.data>=b.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,type:"bigint",maximum:b.value,inclusive:b.inclusive,message:b.message}),m.dirty()):b.kind==="multipleOf"?i.data%b.value!==BigInt(0)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:b.value,message:b.message}),m.dirty()):ze.assertNever(b);return {status:m.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return G(p,{code:O.invalid_type,expected:X.bigint,received:p.parsedType}),xt}gte(i,p){return this.setLimit("min",i,true,it.toString(p))}gt(i,p){return this.setLimit("min",i,false,it.toString(p))}lte(i,p){return this.setLimit("max",i,true,it.toString(p))}lt(i,p){return this.setLimit("max",i,false,it.toString(p))}setLimit(i,p,y,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:it.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:it.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:it.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:it.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:it.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:it.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};HC.create=c=>{var i;return new HC({checks:[],typeName:kt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Dt(c)})};var QC=class extends Et{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==X.boolean){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.boolean,received:y.parsedType}),xt}return _l(i.data)}};QC.create=c=>new QC({typeName:kt.ZodBoolean,coerce:c?.coerce||false,...Dt(c)});var YC=class c extends Et{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==X.date){let b=this._getOrReturnCtx(i);return G(b,{code:O.invalid_type,expected:X.date,received:b.parsedType}),xt}if(isNaN(i.data.getTime())){let b=this._getOrReturnCtx(i);return G(b,{code:O.invalid_date}),xt}let y=new Rl,m;for(let b of this._def.checks)b.kind==="min"?i.data.getTime()<b.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_small,message:b.message,inclusive:true,exact:false,minimum:b.value,type:"date"}),y.dirty()):b.kind==="max"?i.data.getTime()>b.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_big,message:b.message,inclusive:true,exact:false,maximum:b.value,type:"date"}),y.dirty()):ze.assertNever(b);return {status:y.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:it.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:it.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};YC.create=c=>new YC({checks:[],coerce:c?.coerce||false,typeName:kt.ZodDate,...Dt(c)});var GT=class extends Et{_parse(i){if(this._getType(i)!==X.symbol){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.symbol,received:y.parsedType}),xt}return _l(i.data)}};GT.create=c=>new GT({typeName:kt.ZodSymbol,...Dt(c)});var GC=class extends Et{_parse(i){if(this._getType(i)!==X.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.undefined,received:y.parsedType}),xt}return _l(i.data)}};GC.create=c=>new GC({typeName:kt.ZodUndefined,...Dt(c)});var $C=class extends Et{_parse(i){if(this._getType(i)!==X.null){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.null,received:y.parsedType}),xt}return _l(i.data)}};$C.create=c=>new $C({typeName:kt.ZodNull,...Dt(c)});var kg=class extends Et{constructor(){super(...arguments),this._any=true;}_parse(i){return _l(i.data)}};kg.create=c=>new kg({typeName:kt.ZodAny,...Dt(c)});var yh=class extends Et{constructor(){super(...arguments),this._unknown=true;}_parse(i){return _l(i.data)}};yh.create=c=>new yh({typeName:kt.ZodUnknown,...Dt(c)});var Rp=class extends Et{_parse(i){let p=this._getOrReturnCtx(i);return G(p,{code:O.invalid_type,expected:X.never,received:p.parsedType}),xt}};Rp.create=c=>new Rp({typeName:kt.ZodNever,...Dt(c)});var $T=class extends Et{_parse(i){if(this._getType(i)!==X.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.void,received:y.parsedType}),xt}return _l(i.data)}};$T.create=c=>new $T({typeName:kt.ZodVoid,...Dt(c)});var dh=class c extends Et{_parse(i){let{ctx:p,status:y}=this._processInputParams(i),m=this._def;if(p.parsedType!==X.array)return G(p,{code:O.invalid_type,expected:X.array,received:p.parsedType}),xt;if(m.exactLength!==null){let P=p.data.length>m.exactLength.value,k=p.data.length<m.exactLength.value;(P||k)&&(G(p,{code:P?O.too_big:O.too_small,minimum:k?m.exactLength.value:void 0,maximum:P?m.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:m.exactLength.message}),y.dirty());}if(m.minLength!==null&&p.data.length<m.minLength.value&&(G(p,{code:O.too_small,minimum:m.minLength.value,type:"array",inclusive:true,exact:false,message:m.minLength.message}),y.dirty()),m.maxLength!==null&&p.data.length>m.maxLength.value&&(G(p,{code:O.too_big,maximum:m.maxLength.value,type:"array",inclusive:true,exact:false,message:m.maxLength.message}),y.dirty()),p.common.async)return Promise.all([...p.data].map((P,k)=>m.type._parseAsync(new Sp(p,P,p.path,k)))).then(P=>Rl.mergeArray(y,P));let b=[...p.data].map((P,k)=>m.type._parseSync(new Sp(p,P,p.path,k)));return Rl.mergeArray(y,b)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:it.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:it.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:it.toString(p)}})}nonempty(i){return this.min(1,i)}};dh.create=(c,i)=>new dh({type:c,minLength:null,maxLength:null,exactLength:null,typeName:kt.ZodArray,...Dt(i)});function HT(c){if(c instanceof Jr){let i={};for(let p in c.shape){let y=c.shape[p];i[p]=Ap.create(HT(y));}return new Jr({...c._def,shape:()=>i})}else return c instanceof dh?new dh({...c._def,type:HT(c.element)}):c instanceof Ap?Ap.create(HT(c.unwrap())):c instanceof _m?_m.create(HT(c.unwrap())):c instanceof Em?Em.create(c.items.map(i=>HT(i))):c}var Jr=class c extends Et{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=ze.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==X.object){let Y=this._getOrReturnCtx(i);return G(Y,{code:O.invalid_type,expected:X.object,received:Y.parsedType}),xt}let{status:y,ctx:m}=this._processInputParams(i),{shape:b,keys:P}=this._getCached(),k=[];if(!(this._def.catchall instanceof Rp&&this._def.unknownKeys==="strip"))for(let Y in m.data)P.includes(Y)||k.push(Y);let J=[];for(let Y of P){let Rt=b[Y],El=m.data[Y];J.push({key:{status:"valid",value:Y},value:Rt._parse(new Sp(m,El,m.path,Y)),alwaysSet:Y in m.data});}if(this._def.catchall instanceof Rp){let Y=this._def.unknownKeys;if(Y==="passthrough")for(let Rt of k)J.push({key:{status:"valid",value:Rt},value:{status:"valid",value:m.data[Rt]}});else if(Y==="strict")k.length>0&&(G(m,{code:O.unrecognized_keys,keys:k}),y.dirty());else if(Y!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Y=this._def.catchall;for(let Rt of k){let El=m.data[Rt];J.push({key:{status:"valid",value:Rt},value:Y._parse(new Sp(m,El,m.path,Rt)),alwaysSet:Rt in m.data});}}return m.common.async?Promise.resolve().then(async()=>{let Y=[];for(let Rt of J){let El=await Rt.key,JN=await Rt.value;Y.push({key:El,value:JN,alwaysSet:Rt.alwaysSet});}return Y}).then(Y=>Rl.mergeObjectSync(y,Y)):Rl.mergeObjectSync(y,J)}get shape(){return this._def.shape()}strict(i){return it.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,y)=>{var m,b,P,k;let J=(P=(b=(m=this._def).errorMap)===null||b===void 0?void 0:b.call(m,p,y).message)!==null&&P!==void 0?P:y.defaultError;return p.code==="unrecognized_keys"?{message:(k=it.errToObj(i).message)!==null&&k!==void 0?k:J}:{message:J}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:kt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return ze.objectKeys(i).forEach(y=>{i[y]&&this.shape[y]&&(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{i[y]||(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}deepPartial(){return HT(this)}partial(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{let m=this.shape[y];i&&!i[y]?p[y]=m:p[y]=m.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{if(i&&!i[y])p[y]=this.shape[y];else {let b=this.shape[y];for(;b instanceof Ap;)b=b._def.innerType;p[y]=b;}}),new c({...this._def,shape:()=>p})}keyof(){return vtt(ze.objectKeys(this.shape))}};Jr.create=(c,i)=>new Jr({shape:()=>c,unknownKeys:"strip",catchall:Rp.create(),typeName:kt.ZodObject,...Dt(i)});Jr.strictCreate=(c,i)=>new Jr({shape:()=>c,unknownKeys:"strict",catchall:Rp.create(),typeName:kt.ZodObject,...Dt(i)});Jr.lazycreate=(c,i)=>new Jr({shape:c,unknownKeys:"strip",catchall:Rp.create(),typeName:kt.ZodObject,...Dt(i)});var JC=class extends Et{_parse(i){let{ctx:p}=this._processInputParams(i),y=this._def.options;function m(b){for(let k of b)if(k.result.status==="valid")return k.result;for(let k of b)if(k.result.status==="dirty")return p.common.issues.push(...k.ctx.common.issues),k.result;let P=b.map(k=>new ap(k.ctx.common.issues));return G(p,{code:O.invalid_union,unionErrors:P}),xt}if(p.common.async)return Promise.all(y.map(async b=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await b._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(m);{let b,P=[];for(let J of y){let Y={...p,common:{...p.common,issues:[]},parent:null},Rt=J._parseSync({data:p.data,path:p.path,parent:Y});if(Rt.status==="valid")return Rt;Rt.status==="dirty"&&!b&&(b={result:Rt,ctx:Y}),Y.common.issues.length&&P.push(Y.common.issues);}if(b)return p.common.issues.push(...b.ctx.common.issues),b.result;let k=P.map(J=>new ap(J));return G(p,{code:O.invalid_union,unionErrors:k}),xt}}get options(){return this._def.options}};JC.create=(c,i)=>new JC({options:c,typeName:kt.ZodUnion,...Dt(i)});var uh=c=>c instanceof XC?uh(c.schema):c instanceof ip?uh(c.innerType()):c instanceof tA?[c.value]:c instanceof eA?c.options:c instanceof oA?ze.objectValues(c.enum):c instanceof nA?uh(c._def.innerType):c instanceof GC?[void 0]:c instanceof $C?[null]:c instanceof Ap?[void 0,...uh(c.unwrap())]:c instanceof _m?[null,...uh(c.unwrap())]:c instanceof ZP||c instanceof iA?uh(c.unwrap()):c instanceof aA?uh(c._def.innerType):[],eB=class c extends Et{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.object)return G(p,{code:O.invalid_type,expected:X.object,received:p.parsedType}),xt;let y=this.discriminator,m=p.data[y],b=this.optionsMap.get(m);return b?p.common.async?b._parseAsync({data:p.data,path:p.path,parent:p}):b._parseSync({data:p.data,path:p.path,parent:p}):(G(p,{code:O.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[y]}),xt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,y){let m=new Map;for(let b of p){let P=uh(b.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let k of P){if(m.has(k))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(k)}`);m.set(k,b);}}return new c({typeName:kt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:m,...Dt(y)})}};function VV(c,i){let p=sh(c),y=sh(i);if(c===i)return {valid:true,data:c};if(p===X.object&&y===X.object){let m=ze.objectKeys(i),b=ze.objectKeys(c).filter(k=>m.indexOf(k)!==-1),P={...c,...i};for(let k of b){let J=VV(c[k],i[k]);if(!J.valid)return {valid:false};P[k]=J.data;}return {valid:true,data:P}}else if(p===X.array&&y===X.array){if(c.length!==i.length)return {valid:false};let m=[];for(let b=0;b<c.length;b++){let P=c[b],k=i[b],J=VV(P,k);if(!J.valid)return {valid:false};m.push(J.data);}return {valid:true,data:m}}else return p===X.date&&y===X.date&&+c==+i?{valid:true,data:c}:{valid:false}}var KC=class extends Et{_parse(i){let{status:p,ctx:y}=this._processInputParams(i),m=(b,P)=>{if(_V(b)||_V(P))return xt;let k=VV(b.value,P.value);return k.valid?((LV(b)||LV(P))&&p.dirty(),{status:p.value,value:k.data}):(G(y,{code:O.invalid_intersection_types}),xt)};return y.common.async?Promise.all([this._def.left._parseAsync({data:y.data,path:y.path,parent:y}),this._def.right._parseAsync({data:y.data,path:y.path,parent:y})]).then(([b,P])=>m(b,P)):m(this._def.left._parseSync({data:y.data,path:y.path,parent:y}),this._def.right._parseSync({data:y.data,path:y.path,parent:y}))}};KC.create=(c,i,p)=>new KC({left:c,right:i,typeName:kt.ZodIntersection,...Dt(p)});var Em=class c extends Et{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.array)return G(y,{code:O.invalid_type,expected:X.array,received:y.parsedType}),xt;if(y.data.length<this._def.items.length)return G(y,{code:O.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),xt;!this._def.rest&&y.data.length>this._def.items.length&&(G(y,{code:O.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let b=[...y.data].map((P,k)=>{let J=this._def.items[k]||this._def.rest;return J?J._parse(new Sp(y,P,y.path,k)):null}).filter(P=>!!P);return y.common.async?Promise.all(b).then(P=>Rl.mergeArray(p,P)):Rl.mergeArray(p,b)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Em.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Em({items:c,typeName:kt.ZodTuple,rest:null,...Dt(i)})};var oB=class c extends Et{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.object)return G(y,{code:O.invalid_type,expected:X.object,received:y.parsedType}),xt;let m=[],b=this._def.keyType,P=this._def.valueType;for(let k in y.data)m.push({key:b._parse(new Sp(y,k,y.path,k)),value:P._parse(new Sp(y,y.data[k],y.path,k)),alwaysSet:k in y.data});return y.common.async?Rl.mergeObjectAsync(p,m):Rl.mergeObjectSync(p,m)}get element(){return this._def.valueType}static create(i,p,y){return p instanceof Et?new c({keyType:i,valueType:p,typeName:kt.ZodRecord,...Dt(y)}):new c({keyType:Ug.create(),valueType:i,typeName:kt.ZodRecord,...Dt(p)})}},JT=class extends Et{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.map)return G(y,{code:O.invalid_type,expected:X.map,received:y.parsedType}),xt;let m=this._def.keyType,b=this._def.valueType,P=[...y.data.entries()].map(([k,J],Y)=>({key:m._parse(new Sp(y,k,y.path,[Y,"key"])),value:b._parse(new Sp(y,J,y.path,[Y,"value"]))}));if(y.common.async){let k=new Map;return Promise.resolve().then(async()=>{for(let J of P){let Y=await J.key,Rt=await J.value;if(Y.status==="aborted"||Rt.status==="aborted")return xt;(Y.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(Y.value,Rt.value);}return {status:p.value,value:k}})}else {let k=new Map;for(let J of P){let Y=J.key,Rt=J.value;if(Y.status==="aborted"||Rt.status==="aborted")return xt;(Y.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(Y.value,Rt.value);}return {status:p.value,value:k}}}};JT.create=(c,i,p)=>new JT({valueType:i,keyType:c,typeName:kt.ZodMap,...Dt(p)});var KT=class c extends Et{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.set)return G(y,{code:O.invalid_type,expected:X.set,received:y.parsedType}),xt;let m=this._def;m.minSize!==null&&y.data.size<m.minSize.value&&(G(y,{code:O.too_small,minimum:m.minSize.value,type:"set",inclusive:true,exact:false,message:m.minSize.message}),p.dirty()),m.maxSize!==null&&y.data.size>m.maxSize.value&&(G(y,{code:O.too_big,maximum:m.maxSize.value,type:"set",inclusive:true,exact:false,message:m.maxSize.message}),p.dirty());let b=this._def.valueType;function P(J){let Y=new Set;for(let Rt of J){if(Rt.status==="aborted")return xt;Rt.status==="dirty"&&p.dirty(),Y.add(Rt.value);}return {status:p.value,value:Y}}let k=[...y.data.values()].map((J,Y)=>b._parse(new Sp(y,J,y.path,Y)));return y.common.async?Promise.all(k).then(J=>P(J)):P(k)}min(i,p){return new c({...this._def,minSize:{value:i,message:it.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:it.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};KT.create=(c,i)=>new KT({valueType:c,minSize:null,maxSize:null,typeName:kt.ZodSet,...Dt(i)});var nB=class c extends Et{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.function)return G(p,{code:O.invalid_type,expected:X.function,received:p.parsedType}),xt;function y(k,J){return XN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,KN(),YT].filter(Y=>!!Y),issueData:{code:O.invalid_arguments,argumentsError:J}})}function m(k,J){return XN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,KN(),YT].filter(Y=>!!Y),issueData:{code:O.invalid_return_type,returnTypeError:J}})}let b={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof xg){let k=this;return _l(async function(...J){let Y=new ap([]),Rt=await k._def.args.parseAsync(J,b).catch(FV=>{throw Y.addIssue(y(J,FV)),Y}),El=await Reflect.apply(P,this,Rt);return await k._def.returns._def.type.parseAsync(El,b).catch(FV=>{throw Y.addIssue(m(El,FV)),Y})})}else {let k=this;return _l(function(...J){let Y=k._def.args.safeParse(J,b);if(!Y.success)throw new ap([y(J,Y.error)]);let Rt=Reflect.apply(P,this,Y.data),El=k._def.returns.safeParse(Rt,b);if(!El.success)throw new ap([m(Rt,El.error)]);return El.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Em.create(i).rest(yh.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,y){return new c({args:i||Em.create([]).rest(yh.create()),returns:p||yh.create(),typeName:kt.ZodFunction,...Dt(y)})}},XC=class extends Et{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};XC.create=(c,i)=>new XC({getter:c,typeName:kt.ZodLazy,...Dt(i)});var tA=class extends Et{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return G(p,{received:p.data,code:O.invalid_literal,expected:this._def.value}),xt}return {status:"valid",value:i.data}}get value(){return this._def.value}};tA.create=(c,i)=>new tA({value:c,typeName:kt.ZodLiteral,...Dt(i)});function vtt(c,i){return new eA({values:c,typeName:kt.ZodEnum,...Dt(i)})}var eA=class c extends Et{constructor(){super(...arguments),xP.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{expected:ze.joinValues(y),received:p.parsedType,code:O.invalid_type}),xt}if(tB(this,xP)||xtt(this,xP,new Set(this._def.values)),!tB(this,xP).has(i.data)){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{received:p.data,code:O.invalid_enum_value,options:y}),xt}return _l(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(y=>!i.includes(y)),{...this._def,...p})}};xP=new WeakMap;eA.create=vtt;var oA=class extends Et{constructor(){super(...arguments),jP.set(this,void 0);}_parse(i){let p=ze.getValidEnumValues(this._def.values),y=this._getOrReturnCtx(i);if(y.parsedType!==X.string&&y.parsedType!==X.number){let m=ze.objectValues(p);return G(y,{expected:ze.joinValues(m),received:y.parsedType,code:O.invalid_type}),xt}if(tB(this,jP)||xtt(this,jP,new Set(ze.getValidEnumValues(this._def.values))),!tB(this,jP).has(i.data)){let m=ze.objectValues(p);return G(y,{received:y.data,code:O.invalid_enum_value,options:m}),xt}return _l(i.data)}get enum(){return this._def.values}};jP=new WeakMap;oA.create=(c,i)=>new oA({values:c,typeName:kt.ZodNativeEnum,...Dt(i)});var xg=class extends Et{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.promise&&p.common.async===false)return G(p,{code:O.invalid_type,expected:X.promise,received:p.parsedType}),xt;let y=p.parsedType===X.promise?p.data:Promise.resolve(p.data);return _l(y.then(m=>this._def.type.parseAsync(m,{path:p.path,errorMap:p.common.contextualErrorMap})))}};xg.create=(c,i)=>new xg({type:c,typeName:kt.ZodPromise,...Dt(i)});var ip=class extends Et{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===kt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:y}=this._processInputParams(i),m=this._def.effect||null,b={addIssue:P=>{G(y,P),P.fatal?p.abort():p.dirty();},get path(){return y.path}};if(b.addIssue=b.addIssue.bind(b),m.type==="preprocess"){let P=m.transform(y.data,b);if(y.common.async)return Promise.resolve(P).then(async k=>{if(p.value==="aborted")return xt;let J=await this._def.schema._parseAsync({data:k,path:y.path,parent:y});return J.status==="aborted"?xt:J.status==="dirty"||p.value==="dirty"?QT(J.value):J});{if(p.value==="aborted")return xt;let k=this._def.schema._parseSync({data:P,path:y.path,parent:y});return k.status==="aborted"?xt:k.status==="dirty"||p.value==="dirty"?QT(k.value):k}}if(m.type==="refinement"){let P=k=>{let J=m.refinement(k,b);if(y.common.async)return Promise.resolve(J);if(J instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return k};if(y.common.async===false){let k=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});return k.status==="aborted"?xt:(k.status==="dirty"&&p.dirty(),P(k.value),{status:p.value,value:k.value})}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(k=>k.status==="aborted"?xt:(k.status==="dirty"&&p.dirty(),P(k.value).then(()=>({status:p.value,value:k.value}))))}if(m.type==="transform")if(y.common.async===false){let P=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});if(!LC(P))return P;let k=m.transform(P.value,b);if(k instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:k}}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(P=>LC(P)?Promise.resolve(m.transform(P.value,b)).then(k=>({status:p.value,value:k})):P);ze.assertNever(m);}};ip.create=(c,i,p)=>new ip({schema:c,typeName:kt.ZodEffects,effect:i,...Dt(p)});ip.createWithPreprocess=(c,i,p)=>new ip({schema:i,effect:{type:"preprocess",transform:c},typeName:kt.ZodEffects,...Dt(p)});var Ap=class extends Et{_parse(i){return this._getType(i)===X.undefined?_l(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Ap.create=(c,i)=>new Ap({innerType:c,typeName:kt.ZodOptional,...Dt(i)});var _m=class extends Et{_parse(i){return this._getType(i)===X.null?_l(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};_m.create=(c,i)=>new _m({innerType:c,typeName:kt.ZodNullable,...Dt(i)});var nA=class extends Et{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return p.parsedType===X.undefined&&(y=this._def.defaultValue()),this._def.innerType._parse({data:y,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};nA.create=(c,i)=>new nA({innerType:c,typeName:kt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Dt(i)});var aA=class extends Et{_parse(i){let{ctx:p}=this._processInputParams(i),y={...p,common:{...p.common,issues:[]}},m=this._def.innerType._parse({data:y.data,path:y.path,parent:{...y}});return MP(m)?m.then(b=>({status:"valid",value:b.status==="valid"?b.value:this._def.catchValue({get error(){return new ap(y.common.issues)},input:y.data})})):{status:"valid",value:m.status==="valid"?m.value:this._def.catchValue({get error(){return new ap(y.common.issues)},input:y.data})}}removeCatch(){return this._def.innerType}};aA.create=(c,i)=>new aA({innerType:c,typeName:kt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Dt(i)});var XT=class extends Et{_parse(i){if(this._getType(i)!==X.nan){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.nan,received:y.parsedType}),xt}return {status:"valid",value:i.data}}};XT.create=c=>new XT({typeName:kt.ZodNaN,...Dt(c)});var Jmt=Symbol("zod_brand"),ZP=class extends Et{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return this._def.type._parse({data:y,path:p.path,parent:p})}unwrap(){return this._def.type}},vP=class c extends Et{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.common.async)return (async()=>{let b=await this._def.in._parseAsync({data:y.data,path:y.path,parent:y});return b.status==="aborted"?xt:b.status==="dirty"?(p.dirty(),QT(b.value)):this._def.out._parseAsync({data:b.value,path:y.path,parent:y})})();{let m=this._def.in._parseSync({data:y.data,path:y.path,parent:y});return m.status==="aborted"?xt:m.status==="dirty"?(p.dirty(),{status:"dirty",value:m.value}):this._def.out._parseSync({data:m.value,path:y.path,parent:y})}}static create(i,p){return new c({in:i,out:p,typeName:kt.ZodPipeline})}},iA=class extends Et{_parse(i){let p=this._def.innerType._parse(i),y=m=>(LC(m)&&(m.value=Object.freeze(m.value)),m);return MP(p)?p.then(m=>y(m)):y(p)}unwrap(){return this._def.innerType}};iA.create=(c,i)=>new iA({innerType:c,typeName:kt.ZodReadonly,...Dt(i)});function Rtt(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function Ott(c,i={},p){return c?kg.create().superRefine((y,m)=>{var b,P;let k=c(y);if(k instanceof Promise)return k.then(J=>{var Y,Rt;if(!J){let El=Rtt(i,y),JN=(Rt=(Y=El.fatal)!==null&&Y!==void 0?Y:p)!==null&&Rt!==void 0?Rt:true;m.addIssue({code:"custom",...El,fatal:JN});}});if(!k){let J=Rtt(i,y),Y=(P=(b=J.fatal)!==null&&b!==void 0?b:p)!==null&&P!==void 0?P:true;m.addIssue({code:"custom",...J,fatal:Y});}}):kg.create()}var Kmt={object:Jr.lazycreate},kt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(kt||(kt={}));var Xmt=(c,i={message:`Input not instance of ${c.name}`})=>Ott(p=>p instanceof c,i),ftt=Ug.create,wtt=VC.create,tht=XT.create,eht=HC.create,Ntt=QC.create,oht=YC.create,nht=GT.create,aht=GC.create,iht=$C.create,lht=kg.create,rht=yh.create,pht=Rp.create,cht=$T.create,uht=dh.create,sht=Jr.create,yht=Jr.strictCreate,dht=JC.create,zht=eB.create,mht=KC.create,hht=Em.create,bht=oB.create,Iht=JT.create,ght=KT.create,Cht=nB.create,Aht=XC.create,Sht=tA.create,Tht=eA.create,Pht=oA.create,Wht=xg.create,Utt=ip.create,Rht=Ap.create,Uht=_m.create,kht=ip.createWithPreprocess,xht=vP.create,jht=()=>ftt().optional(),Mht=()=>wtt().optional(),Zht=()=>Ntt().optional(),vht={string:c=>Ug.create({...c,coerce:true}),number:c=>VC.create({...c,coerce:true}),boolean:c=>QC.create({...c,coerce:true}),bigint:c=>HC.create({...c,coerce:true}),date:c=>YC.create({...c,coerce:true})},Oht=xt,t=Object.freeze({__proto__:null,defaultErrorMap:YT,setErrorMap:kmt,getErrorMap:KN,makeIssue:XN,EMPTY_PATH:xmt,addIssueToContext:G,ParseStatus:Rl,INVALID:xt,DIRTY:QT,OK:_l,isAborted:_V,isDirty:LV,isValid:LC,isAsync:MP,get util(){return ze},get objectUtil(){return EV},ZodParsedType:X,getParsedType:sh,ZodType:Et,datetimeRegex:Ztt,ZodString:Ug,ZodNumber:VC,ZodBigInt:HC,ZodBoolean:QC,ZodDate:YC,ZodSymbol:GT,ZodUndefined:GC,ZodNull:$C,ZodAny:kg,ZodUnknown:yh,ZodNever:Rp,ZodVoid:$T,ZodArray:dh,ZodObject:Jr,ZodUnion:JC,ZodDiscriminatedUnion:eB,ZodIntersection:KC,ZodTuple:Em,ZodRecord:oB,ZodMap:JT,ZodSet:KT,ZodFunction:nB,ZodLazy:XC,ZodLiteral:tA,ZodEnum:eA,ZodNativeEnum:oA,ZodPromise:xg,ZodEffects:ip,ZodTransformer:ip,ZodOptional:Ap,ZodNullable:_m,ZodDefault:nA,ZodCatch:aA,ZodNaN:XT,BRAND:Jmt,ZodBranded:ZP,ZodPipeline:vP,ZodReadonly:iA,custom:Ott,Schema:Et,ZodSchema:Et,late:Kmt,get ZodFirstPartyTypeKind(){return kt},coerce:vht,any:lht,array:uht,bigint:eht,boolean:Ntt,date:oht,discriminatedUnion:zht,effect:Utt,enum:Tht,function:Cht,instanceof:Xmt,intersection:mht,lazy:Aht,literal:Sht,map:Iht,nan:tht,nativeEnum:Pht,never:pht,null:iht,nullable:Uht,number:wtt,object:sht,oboolean:Zht,onumber:Mht,optional:Rht,ostring:jht,pipeline:xht,preprocess:kht,promise:Wht,record:bht,set:ght,strictObject:yht,string:ftt,symbol:nht,transformer:Utt,tuple:hht,undefined:aht,union:dht,unknown:rht,void:cht,NEVER:Oht,ZodIssueCode:O,quotelessJson:Umt,ZodError:ap});var fht=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),jg=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium","containsGluten","containsDairy","containsNuts","containsEggs","containsSoy","containsFish","containsShellfish","containsSesame"]),Mg=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),Zg=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),vg=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),Og=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),fg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),wg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),Ng=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),Bg=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),qg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),Fg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),Dg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),Eg=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),_g=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),Lg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),Vg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Hg=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),Qg=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Yg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Gg=t.enum(["id","name","description","icon","createdAt","updatedAt"]),$g=t.enum(["id","name","description","createdAt","updatedAt"]),Jg=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),Kg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),Xg=t.enum(["id","restaurantId","date","status","createdById","createdAt","updatedAt"]),tC=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),eC=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),oC=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),nC=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),aC=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),iC=t.enum(["id","name","description"]),lC=t.enum(["id","ingredientId","allergenId"]),rC=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),pC=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),cC=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),uC=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),sC=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),yC=t.enum(["id","email","sub","firstName","lastName","profileImage","organizationId","restaurantId","createdAt","updatedAt"]),dC=t.enum(["id","userId","passwordHash","role"]),zC=t.enum(["id","userId","verificationCode","verified","expiresAt","createdAt"]),mC=t.enum(["id","name","imageUrl","category","restaurantId"]),hC=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel","category"]),bC=t.enum(["id","name","category","price","density","dietaryRestrictionId","calories","protein","carbohydrates","fat","fiber","sugar","sodium","usdaFoodId","nutritionSource","nutritionUpdatedAt"]),IC=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),gC=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),CC=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),AC=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),SC=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),TC=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),PC=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),WC=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),RC=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),UC=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),kC=t.enum(["id","userId","startTime","endTime","status"]),xC=t.enum(["id","name","status","createdAt","updatedAt"]),jC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),MC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),ZC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),vC=t.enum(["id","menuItemId","recipeId","joinAt"]),OC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),fC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),wC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),NC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),IM=t.enum(["default","insensitive"]),Btt=t.enum(["first","last"]),Lt=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),Bt=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),re=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),qt=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),_t=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Mt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),Zt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),Ot=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED","HAS_NOT_START"]),pe=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),ce=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ue=t.enum(["UNAVAILABLE","PREFERRED"]),W=t.enum(["APPETIZER","SOUP","SALAD","MAIN_COURSE","SIDE_DISH","DESSERT","BEVERAGE","BREAKFAST","BRUNCH","LUNCH","DINNER","SNACK","BAKED_GOOD","SAUCE","CONDIMENT","SPECIAL"]),Nt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),vt=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),ft=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),se=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),wt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Vt=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),tt=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),R=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),ye=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),ot=t.enum(["MANUAL","USDA","CUSTOM","ESTIMATED"]),qtt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean(),containsDairy:t.boolean(),containsNuts:t.boolean(),containsEggs:t.boolean(),containsSoy:t.boolean(),containsFish:t.boolean(),containsShellfish:t.boolean(),containsSesame:t.boolean()}),Ftt=qtt.merge(t.object({recipe:t.lazy(()=>uo)})),Dtt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ett=Dtt.merge(t.object({recipe:t.lazy(()=>uo)})),_tt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ltt=_tt.merge(t.object({recipe:t.lazy(()=>uo)})),Vtt=t.object({type:ye,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Htt=Vtt.merge(t.object({recipe:t.lazy(()=>uo)})),Qtt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ytt=Qtt.merge(t.object({recipe:t.lazy(()=>uo)})),Gtt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),$tt=Gtt.merge(t.object({recipe:t.lazy(()=>uo)})),Jtt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ktt=Jtt.merge(t.object({recipe:t.lazy(()=>uo)})),Xtt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Z0=Xtt.merge(t.object({restaurant:t.lazy(()=>Hl),menuItem:t.lazy(()=>_y)})),tet=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),v0=tet.merge(t.object({menu:t.lazy(()=>jB),menuItems:t.lazy(()=>_y).array()})),eet=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),oP=eet.merge(t.object({recipe:t.lazy(()=>uo),ingredients:t.lazy(()=>TB).array(),instructions:t.lazy(()=>PB).array(),createdBy:t.lazy(()=>Na),approvedBy:t.lazy(()=>Na).nullable()})),oet=t.object({status:Bt,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),yB=oet.merge(t.object({restaurant:t.lazy(()=>Hl),recipes:t.lazy(()=>dB).array(),maintenanceLogs:t.lazy(()=>iet).array()})),net=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),dB=net.merge(t.object({recipe:t.lazy(()=>uo),equipment:t.lazy(()=>yB),RecipeInstruction:t.lazy(()=>PB).nullable()})),aet=t.object({type:re,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),iet=aet.merge(t.object({equipment:t.lazy(()=>yB)})),ret=t.object({frequency:qt,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),zB=ret.merge(t.object({restaurant:t.lazy(()=>Hl),items:t.lazy(()=>O0).array(),completions:t.lazy(()=>mB).array()})),pet=t.object({type:Lt,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),O0=pet.merge(t.object({checklist:t.lazy(()=>zB),completions:t.lazy(()=>f0).array()})),cet=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),mB=cet.merge(t.object({checklist:t.lazy(()=>zB),completedBy:t.lazy(()=>Na),items:t.lazy(()=>f0).array()})),uet=t.object({status:_t,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),f0=uet.merge(t.object({checklistComplete:t.lazy(()=>mB),checklistItem:t.lazy(()=>O0)})),set=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),w0=set.merge(t.object({vendor:t.lazy(()=>kB),ingredient:t.lazy(()=>DI)})),yet=t.object({source:Mt,status:Zt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hB=yet.merge(t.object({restaurant:t.lazy(()=>Hl),menuItem:t.lazy(()=>_y).nullable(),respondedBy:t.lazy(()=>Na).nullable()})),det=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),bB=det.merge(t.object({menuItems:t.lazy(()=>_y).array(),recipes:t.lazy(()=>uo).array(),ingredients:t.lazy(()=>DI).array()})),zet=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),met=zet.merge(t.object({recipes:t.lazy(()=>uo).array()})),het=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),IB=het.merge(t.object({restaurant:t.lazy(()=>Hl),menuItem:t.lazy(()=>_y),recordedBy:t.lazy(()=>Na)})),bet=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gB=bet.merge(t.object({restaurant:t.lazy(()=>Hl),ingrediente:t.lazy(()=>DI),recordedBy:t.lazy(()=>Na)})),Iet=t.object({status:Ot,id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),CB=Iet.merge(t.object({restaurant:t.lazy(()=>Hl),createdBy:t.lazy(()=>Na),items:t.lazy(()=>AB).array()})),get=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),AB=get.merge(t.object({productionPlan:t.lazy(()=>CB),recipe:t.lazy(()=>uo),assignedTo:t.lazy(()=>Na).nullable()})),Cet=t.object({taskType:pe,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Aet=Cet.merge(t.object({shift:t.lazy(()=>E0)})),Tet=t.object({dayOfWeek:ce,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pet=Tet.merge(t.object({user:t.lazy(()=>Na)})),Wet=t.object({constraintsType:ue,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ret=Wet.merge(t.object({user:t.lazy(()=>Na)})),Uet=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),SB=Uet.merge(t.object({inventoryItem:t.lazy(()=>_S),recipe:t.lazy(()=>uo).nullable(),createdBy:t.lazy(()=>Na)})),ket=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),xet=ket.merge(t.object({ingredients:t.lazy(()=>N0).array()})),jet=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),N0=jet.merge(t.object({ingredient:t.lazy(()=>DI),allergen:t.lazy(()=>xet)})),Met=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zet=Met.merge(t.object({menuItem:t.lazy(()=>_y)})),wht=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vet=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),B0=vet.merge(t.object({restaurants:t.lazy(()=>Hl).array(),users:t.lazy(()=>Na).array()})),Oet=t.object({type:Nt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gM=Oet.merge(t.object({restaurant:t.lazy(()=>Hl),items:t.lazy(()=>_S).array(),transactions:t.lazy(()=>WB).array(),stockCounts:t.lazy(()=>RB).array()})),fet=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),Hl=fet.merge(t.object({organization:t.lazy(()=>B0).nullable(),users:t.lazy(()=>Na).array(),cookbooks:t.lazy(()=>q0).array(),inventory:t.lazy(()=>gM).nullable(),orders:t.lazy(()=>UB).array(),recipes:t.lazy(()=>uo).array(),menus:t.lazy(()=>jB).array(),salesTransactions:t.lazy(()=>Z0).array(),leftoverItems:t.lazy(()=>IB).array(),wasteRecords:t.lazy(()=>gB).array(),productionPlans:t.lazy(()=>CB).array(),equipments:t.lazy(()=>yB).array(),qualityChecklists:t.lazy(()=>zB).array(),customerFeedbacks:t.lazy(()=>hB).array()})),wet=t.object({id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Na=wet.merge(t.object({organization:t.lazy(()=>B0).nullable(),restaurant:t.lazy(()=>Hl).nullable(),shifts:t.lazy(()=>E0).array(),prepItems:t.lazy(()=>xB).array(),inventoryUpdates:t.lazy(()=>_S).array(),sessions:t.lazy(()=>Fet).array(),passwordResets:t.lazy(()=>iot).array(),leftoverItems:t.lazy(()=>IB).array(),wasteRecords:t.lazy(()=>gB).array(),productionPlans:t.lazy(()=>CB).array(),productionPlanItems:t.lazy(()=>AB).array(),availability:t.lazy(()=>Pet).array(),schedulingConstraints:t.lazy(()=>Ret).array(),inventoryWithdrawals:t.lazy(()=>SB).array(),checklistCompletes:t.lazy(()=>mB).array(),customerFeedbackResponses:t.lazy(()=>hB).array(),recipeVersionsCreated:t.lazy(()=>oP).array(),recipeVersionsApproved:t.lazy(()=>oP).array(),InventoryTransactions:t.lazy(()=>WB).array(),StockCounts:t.lazy(()=>RB).array(),auth:t.lazy(()=>Bet).array()})),Net=t.object({role:se,id:t.string().uuid(),userId:t.number().int(),passwordHash:t.string()}),Bet=Net.merge(t.object({user:t.lazy(()=>Na)})),qet=t.object({id:t.string().uuid(),userId:t.number().int(),verificationCode:t.string(),verified:t.boolean(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),Fet=qet.merge(t.object({user:t.lazy(()=>Na)})),Det=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),q0=Det.merge(t.object({recipes:t.lazy(()=>uo).array(),restaurant:t.lazy(()=>Hl).nullable()})),Eet=t.object({skillLevel:R,category:W,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),uo=Eet.merge(t.object({restaurant:t.lazy(()=>Hl),cookBook:t.lazy(()=>q0),ingredients:t.lazy(()=>TB).array(),instructions:t.lazy(()=>PB).array(),menuItems:t.lazy(()=>_y).array(),foodCostHistory:t.lazy(()=>yot).array(),prepHistory:t.lazy(()=>zot).array(),prepBoards:t.lazy(()=>_0).array(),prepItems:t.lazy(()=>xB).array(),menuItemRecipes:t.lazy(()=>L0).array(),productionPlanItems:t.lazy(()=>AB).array(),withdrawals:t.lazy(()=>SB).array(),tags:t.lazy(()=>met).array(),versions:t.lazy(()=>oP).array(),equipments:t.lazy(()=>dB).array(),dietaryRestrictions:t.lazy(()=>bB).array(),temperatures:t.lazy(()=>Ytt).array(),yields:t.lazy(()=>$tt).array(),laborCosts:t.lazy(()=>Ktt).array(),nutritionalInfo:t.lazy(()=>Ftt).nullable(),criticalPoints:t.lazy(()=>Ett).array(),storage:t.lazy(()=>Ltt).nullable(),photos:t.lazy(()=>Htt).array(),recipeStats:t.lazy(()=>Jet).nullable()})),_et=t.object({nutritionSource:ot.nullable(),id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),density:t.number().nullable(),dietaryRestrictionId:t.number().int().nullable(),calories:t.number().nullable(),protein:t.number().nullable(),carbohydrates:t.number().nullable(),fat:t.number().nullable(),fiber:t.number().nullable(),sugar:t.number().nullable(),sodium:t.number().nullable(),usdaFoodId:t.string().nullable(),nutritionUpdatedAt:t.coerce.date().nullable()}),DI=_et.merge(t.object({recipeIngredients:t.lazy(()=>TB).array(),inventoryItems:t.lazy(()=>_S).array(),orderItems:t.lazy(()=>D0).array(),vendors:t.lazy(()=>kB).array(),WasteRecords:t.lazy(()=>gB).array(),IngredientAllergens:t.lazy(()=>N0).array(),priceHistory:t.lazy(()=>w0).array(),DietaryRestrictions:t.lazy(()=>bB).array()})),Let=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),TB=Let.merge(t.object({recipe:t.lazy(()=>uo),ingredient:t.lazy(()=>DI),recipeVersion:t.lazy(()=>oP).nullable()})),Vet=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),PB=Vet.merge(t.object({recipe:t.lazy(()=>uo),RecipeVersion:t.lazy(()=>oP).nullable(),equipment:t.lazy(()=>dB).array()})),Het=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),_S=Het.merge(t.object({inventory:t.lazy(()=>gM),ingredient:t.lazy(()=>DI),lastUpdatedBy:t.lazy(()=>Na).nullable(),transactions:t.lazy(()=>WB).array(),withdrawals:t.lazy(()=>SB).array(),stockCounts:t.lazy(()=>F0).array()})),Qet=t.object({type:vt,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),WB=Qet.merge(t.object({inventory:t.lazy(()=>gM),item:t.lazy(()=>_S),createdBy:t.lazy(()=>Na)})),Yet=t.object({status:ft,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),RB=Yet.merge(t.object({inventory:t.lazy(()=>gM),createdBy:t.lazy(()=>Na),items:t.lazy(()=>F0).array()})),Get=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),F0=Get.merge(t.object({stockCount:t.lazy(()=>RB),item:t.lazy(()=>_S)})),$et=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),Jet=$et.merge(t.object({recipe:t.lazy(()=>uo)})),Ket=t.object({status:wt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),UB=Ket.merge(t.object({restaurant:t.lazy(()=>Hl),vendor:t.lazy(()=>kB),items:t.lazy(()=>D0).array()})),Xet=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),D0=Xet.merge(t.object({order:t.lazy(()=>UB),ingredient:t.lazy(()=>DI)})),tot=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kB=tot.merge(t.object({orders:t.lazy(()=>UB).array(),ingredients:t.lazy(()=>DI).array(),supplierPriceHistory:t.lazy(()=>w0).array()})),eot=t.object({status:Vt,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),E0=eot.merge(t.object({user:t.lazy(()=>Na),tasks:t.lazy(()=>Aet).array()})),oot=t.object({status:tt,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_0=oot.merge(t.object({recipes:t.lazy(()=>uo).array(),prepItems:t.lazy(()=>xB).array()})),not=t.object({status:tt,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),xB=not.merge(t.object({prepBoard:t.lazy(()=>_0),recipe:t.lazy(()=>uo),assignedTo:t.lazy(()=>Na)})),aot=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),iot=aot.merge(t.object({user:t.lazy(()=>Na)})),lot=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jB=lot.merge(t.object({restaurant:t.lazy(()=>Hl),menuItems:t.lazy(()=>_y).array(),MenuCategory:t.lazy(()=>v0).array()})),rot=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),L0=rot.merge(t.object({menuItem:t.lazy(()=>_y),recipe:t.lazy(()=>uo)})),pot=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),_y=pot.merge(t.object({menu:t.lazy(()=>jB),category:t.lazy(()=>v0).nullable(),recipes:t.lazy(()=>uo).array(),menuItemRecipes:t.lazy(()=>L0).array(),nutritionalInfo:t.lazy(()=>uot).nullable(),recommendations:t.lazy(()=>Zet).array(),salesTransactions:t.lazy(()=>Z0).array(),leftoverItems:t.lazy(()=>IB).array(),feedback:t.lazy(()=>hB).array(),dietaryRestrictions:t.lazy(()=>bB).array()})),cot=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),uot=cot.merge(t.object({menuItem:t.lazy(()=>_y).nullable()})),sot=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),yot=sot.merge(t.object({recipe:t.lazy(()=>uo)})),dot=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),zot=dot.merge(t.object({recipe:t.lazy(()=>uo)})),Ly=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),V0=t.object({select:t.lazy(()=>Vy).optional(),include:t.lazy(()=>Ly).optional()}).strict(),Vy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Hy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Nht=t.object({select:t.lazy(()=>Qy).optional(),include:t.lazy(()=>Hy).optional()}).strict(),Qy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Yy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),H0=t.object({select:t.lazy(()=>Gy).optional(),include:t.lazy(()=>Yy).optional()}).strict(),Gy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),$y=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Bht=t.object({select:t.lazy(()=>Jy).optional(),include:t.lazy(()=>$y).optional()}).strict(),Jy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Ky=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),qht=t.object({select:t.lazy(()=>Xy).optional(),include:t.lazy(()=>Ky).optional()}).strict(),Xy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),td=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Fht=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),ed=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),od=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Dht=t.object({select:t.lazy(()=>nd).optional(),include:t.lazy(()=>od).optional()}).strict(),nd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),ad=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),Eht=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>ad).optional()}).strict(),id=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),ld=t.object({menu:t.union([t.boolean(),t.lazy(()=>WM)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>Y0)]).optional()}).strict(),Q0=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),Y0=t.object({select:t.lazy(()=>mot).nullish()}).strict(),mot=t.object({menuItems:t.boolean().optional()}).strict(),rd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>WM)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>Y0)]).optional()}).strict(),pd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>VN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>G0)]).optional()}).strict(),CM=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),G0=t.object({select:t.lazy(()=>hot).nullish()}).strict(),hot=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),cd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>VN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>G0)]).optional()}).strict(),ud=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>ltt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$0)]).optional()}).strict(),AM=t.object({select:t.lazy(()=>sd).optional(),include:t.lazy(()=>ud).optional()}).strict(),$0=t.object({select:t.lazy(()=>bot).nullish()}).strict(),bot=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),sd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>ltt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$0)]).optional()}).strict(),yd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>AM)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>hY)]).optional()}).strict(),_ht=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>yd).optional()}).strict(),dd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>AM)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>hY)]).optional()}).strict(),zd=t.object({equipment:t.union([t.boolean(),t.lazy(()=>AM)]).optional()}).strict(),Lht=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),md=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>AM)]).optional()}).strict(),hd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>ptt)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>J0)]).optional()}).strict(),SM=t.object({select:t.lazy(()=>bd).optional(),include:t.lazy(()=>hd).optional()}).strict(),J0=t.object({select:t.lazy(()=>Iot).nullish()}).strict(),Iot=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),bd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>ptt)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>J0)]).optional()}).strict(),Id=t.object({checklist:t.union([t.boolean(),t.lazy(()=>SM)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>X0)]).optional()}).strict(),K0=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),X0=t.object({select:t.lazy(()=>got).nullish()}).strict(),got=t.object({completions:t.boolean().optional()}).strict(),gd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>SM)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>X0)]).optional()}).strict(),Cd=t.object({checklist:t.union([t.boolean(),t.lazy(()=>SM)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>eY)]).optional()}).strict(),tY=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),eY=t.object({select:t.lazy(()=>Cot).nullish()}).strict(),Cot=t.object({items:t.boolean().optional()}).strict(),Ad=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>SM)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>eY)]).optional()}).strict(),Sd=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>tY)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>K0)]).optional()}).strict(),Vht=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>tY)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>K0)]).optional()}).strict(),Pd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>PM)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional()}).strict(),Hht=t.object({select:t.lazy(()=>Wd).optional(),include:t.lazy(()=>Pd).optional()}).strict(),Wd=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>PM)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional()}).strict(),Rd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Qht=t.object({select:t.lazy(()=>Ud).optional(),include:t.lazy(()=>Rd).optional()}).strict(),Ud=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),kd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>LN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>oY)]).optional()}).strict(),Yht=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),oY=t.object({select:t.lazy(()=>Aot).nullish()}).strict(),Aot=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),xd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>LN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>oY)]).optional()}).strict(),jd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>nY)]).optional()}).strict(),Ght=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),nY=t.object({select:t.lazy(()=>Sot).nullish()}).strict(),Sot=t.object({recipes:t.boolean().optional()}).strict(),Md=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>nY)]).optional()}).strict(),Zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),$ht=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),vd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Od=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Jht=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),fd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),wd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>iY)]).optional()}).strict(),aY=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),iY=t.object({select:t.lazy(()=>Tot).nullish()}).strict(),Tot=t.object({items:t.boolean().optional()}).strict(),Nd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),status:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>iY)]).optional()}).strict(),Bd=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>aY)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Kht=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),qd=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>aY)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Fd=t.object({shift:t.union([t.boolean(),t.lazy(()=>WY)]).optional()}).strict(),Xht=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),Dd=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>WY)]).optional()}).strict(),Ed=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),tbt=t.object({select:t.lazy(()=>_d).optional(),include:t.lazy(()=>Ed).optional()}).strict(),_d=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Ld=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ebt=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),Vd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Hd=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>LS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),obt=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),Qd=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>LS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Yd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>EN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>rY)]).optional()}).strict(),lY=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),rY=t.object({select:t.lazy(()=>Pot).nullish()}).strict(),Pot=t.object({ingredients:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>EN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>rY)]).optional()}).strict(),$d=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>lY)]).optional()}).strict(),nbt=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),Jd=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>lY)]).optional()}).strict(),Kd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),abt=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),Xd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),ih=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),tz=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>ztt)]).optional(),users:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>pY)]).optional()}).strict(),TM=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),pY=t.object({select:t.lazy(()=>Wot).nullish()}).strict(),Wot=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>ztt)]).optional(),users:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>pY)]).optional()}).strict(),oz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>HN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>cY)]).optional()}).strict(),EI=t.object({select:t.lazy(()=>nz).optional(),include:t.lazy(()=>oz).optional()}).strict(),cY=t.object({select:t.lazy(()=>Rot).nullish()}).strict(),Rot=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),nz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>HN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>cY)]).optional()}).strict(),az=t.object({organization:t.union([t.boolean(),t.lazy(()=>TM)]).optional(),users:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>btt)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>YN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>Stt)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>itt)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>rtt)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>uY)]).optional()}).strict(),no=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>az).optional()}).strict(),uY=t.object({select:t.lazy(()=>Uot).nullish()}).strict(),Uot=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),equipments:t.boolean().optional(),qualityChecklists:t.boolean().optional(),customerFeedbacks:t.boolean().optional()}).strict(),iz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>TM)]).optional(),users:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>btt)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>YN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>Stt)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>itt)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>rtt)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>uY)]).optional()}).strict(),lz=t.object({organization:t.union([t.boolean(),t.lazy(()=>TM)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>gtt)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>htt)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>Att)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>stt)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>ytt)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>HN)]).optional(),auth:t.union([t.boolean(),t.lazy(()=>mtt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>sY)]).optional()}).strict(),Jt=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),sY=t.object({select:t.lazy(()=>kot).nullish()}).strict(),kot=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),productionPlanItems:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraints:t.boolean().optional(),inventoryWithdrawals:t.boolean().optional(),checklistCompletes:t.boolean().optional(),customerFeedbackResponses:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransactions:t.boolean().optional(),StockCounts:t.boolean().optional(),auth:t.boolean().optional()}).strict(),rz=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>TM)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>gtt)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>htt)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>Att)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>stt)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>ytt)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>HN)]).optional(),auth:t.union([t.boolean(),t.lazy(()=>mtt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>sY)]).optional()}).strict(),pz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ibt=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),cz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),passwordHash:t.boolean().optional(),role:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),uz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),lbt=t.object({select:t.lazy(()=>sz).optional(),include:t.lazy(()=>uz).optional()}).strict(),sz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),verificationCode:t.boolean().optional(),verified:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),yz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>dY)]).optional()}).strict(),yY=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>yz).optional()}).strict(),dY=t.object({select:t.lazy(()=>xot).nullish()}).strict(),xot=t.object({recipes:t.boolean().optional()}).strict(),dz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>dY)]).optional()}).strict(),zz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>yY)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>VN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>Ttt)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>Ptt)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>Ctt)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>$N)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>ctt)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>ett)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>ott)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>ntt)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>V0)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>XX)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>H0)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>ttt)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>AY)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>zY)]).optional()}).strict(),Kt=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),zY=t.object({select:t.lazy(()=>jot).nullish()}).strict(),jot=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipments:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),mz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),category:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>yY)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>VN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>Ttt)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>Ptt)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>Ctt)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>$N)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>FT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>ctt)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>ES)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>ett)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>ott)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>ntt)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>V0)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>XX)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>H0)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>ttt)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>AY)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>zY)]).optional()}).strict(),hz=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>GN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>Itt)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>EN)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>mY)]).optional()}).strict(),cp=t.object({select:t.lazy(()=>bz).optional(),include:t.lazy(()=>hz).optional()}).strict(),mY=t.object({select:t.lazy(()=>Mot).nullish()}).strict(),Mot=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecords:t.boolean().optional(),IngredientAllergens:t.boolean().optional(),priceHistory:t.boolean().optional(),DietaryRestrictions:t.boolean().optional()}).strict(),bz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),density:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),usdaFoodId:t.boolean().optional(),nutritionSource:t.boolean().optional(),nutritionUpdatedAt:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>ET)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>_T)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>GN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>Itt)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>EN)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>mY)]).optional()}).strict(),Iz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>CM)]).optional()}).strict(),rbt=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),gz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>CM)]).optional()}).strict(),Cz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>CM)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>bY)]).optional()}).strict(),hY=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),bY=t.object({select:t.lazy(()=>Zot).nullish()}).strict(),Zot=t.object({equipment:t.boolean().optional()}).strict(),Az=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>CM)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>bY)]).optional()}).strict(),Sz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>QN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>IY)]).optional()}).strict(),LS=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),IY=t.object({select:t.lazy(()=>vot).nullish()}).strict(),vot=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Tz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>LT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>DT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>QN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>IY)]).optional()}).strict(),Pz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>LS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),pbt=t.object({select:t.lazy(()=>Wz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),Wz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>LS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Rz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>QN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CY)]).optional()}).strict(),gY=t.object({select:t.lazy(()=>Uz).optional(),include:t.lazy(()=>Rz).optional()}).strict(),CY=t.object({select:t.lazy(()=>Oot).nullish()}).strict(),Oot=t.object({items:t.boolean().optional()}).strict(),Uz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>EI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>QN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>CY)]).optional()}).strict(),kz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>gY)]).optional(),item:t.union([t.boolean(),t.lazy(()=>LS)]).optional()}).strict(),cbt=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),xz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>gY)]).optional(),item:t.union([t.boolean(),t.lazy(()=>LS)]).optional()}).strict(),jz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),AY=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Zz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>PM)]).optional(),items:t.union([t.boolean(),t.lazy(()=>GN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TY)]).optional()}).strict(),SY=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),TY=t.object({select:t.lazy(()=>fot).nullish()}).strict(),fot=t.object({items:t.boolean().optional()}).strict(),vz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>PM)]).optional(),items:t.union([t.boolean(),t.lazy(()=>GN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TY)]).optional()}).strict(),Oz=t.object({order:t.union([t.boolean(),t.lazy(()=>SY)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional()}).strict(),ubt=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>SY)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>cp)]).optional()}).strict(),wz=t.object({orders:t.union([t.boolean(),t.lazy(()=>YN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>LN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PY)]).optional()}).strict(),PM=t.object({select:t.lazy(()=>Nz).optional(),include:t.lazy(()=>wz).optional()}).strict(),PY=t.object({select:t.lazy(()=>wot).nullish()}).strict(),wot=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),Nz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>YN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>LN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PY)]).optional()}).strict(),Bz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>utt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RY)]).optional()}).strict(),WY=t.object({select:t.lazy(()=>qz).optional(),include:t.lazy(()=>Bz).optional()}).strict(),RY=t.object({select:t.lazy(()=>Not).nullish()}).strict(),Not=t.object({tasks:t.boolean().optional()}).strict(),qz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>utt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>RY)]).optional()}).strict(),Fz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kY)]).optional()}).strict(),UY=t.object({select:t.lazy(()=>Dz).optional(),include:t.lazy(()=>Fz).optional()}).strict(),kY=t.object({select:t.lazy(()=>Bot).nullish()}).strict(),Bot=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),Dz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>VT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kY)]).optional()}).strict(),Ez=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>UY)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),sbt=t.object({select:t.lazy(()=>_z).optional(),include:t.lazy(()=>Ez).optional()}).strict(),_z=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>UY)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Lz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ybt=t.object({select:t.lazy(()=>Vz).optional(),include:t.lazy(()=>Lz).optional()}).strict(),Vz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Hz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>att)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xY)]).optional()}).strict(),WM=t.object({select:t.lazy(()=>Qz).optional(),include:t.lazy(()=>Hz).optional()}).strict(),xY=t.object({select:t.lazy(()=>qot).nullish()}).strict(),qot=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),Qz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Rg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>att)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>xY)]).optional()}).strict(),Yz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),dbt=t.object({select:t.lazy(()=>Gz).optional(),include:t.lazy(()=>Yz).optional()}).strict(),Gz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),$z=t.object({menu:t.union([t.boolean(),t.lazy(()=>WM)]).optional(),category:t.union([t.boolean(),t.lazy(()=>Q0)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>$N)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>MY)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>dtt)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jY)]).optional()}).strict(),up=t.object({select:t.lazy(()=>Jz).optional(),include:t.lazy(()=>$z).optional()}).strict(),jY=t.object({select:t.lazy(()=>Fot).nullish()}).strict(),Fot=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),Jz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>WM)]).optional(),category:t.union([t.boolean(),t.lazy(()=>Q0)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>Cp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>$N)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>MY)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>dtt)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jY)]).optional()}).strict(),Kz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),MY=t.object({select:t.lazy(()=>Xz).optional(),include:t.lazy(()=>Kz).optional()}).strict(),Xz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>up)]).optional()}).strict(),tm=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),zbt=t.object({select:t.lazy(()=>em).optional(),include:t.lazy(()=>tm).optional()}).strict(),em=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),om=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),mbt=t.object({select:t.lazy(()=>nm).optional(),include:t.lazy(()=>om).optional()}).strict(),nm=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),qe=t.object({AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>zt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Lm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ql=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),servingSize:t.union([t.lazy(()=>U),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>zt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>zt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),HV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dot).optional(),_avg:t.lazy(()=>Eot).optional(),_max:t.lazy(()=>_ot).optional(),_min:t.lazy(()=>Lot).optional(),_sum:t.lazy(()=>Vot).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>Wt),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>mt),t.string()]).optional(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>Kn),t.boolean()]).optional()}).strict(),na=t.object({AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),zh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),QV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hot).optional(),_avg:t.lazy(()=>Qot).optional(),_max:t.lazy(()=>Yot).optional(),_min:t.lazy(()=>Got).optional(),_sum:t.lazy(()=>$ot).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>mt),t.string()]).optional(),threshold:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>mt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Fe=t.object({AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Vm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Yl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),YV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jot).optional(),_avg:t.lazy(()=>Kot).optional(),_max:t.lazy(()=>Xot).optional(),_min:t.lazy(()=>tnt).optional(),_sum:t.lazy(()=>ent).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>mt),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),aa=t.object({AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>nq),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),mh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>nq),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),GV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ont).optional(),_avg:t.lazy(()=>nnt).optional(),_max:t.lazy(()=>ant).optional(),_min:t.lazy(()=>int).optional(),_sum:t.lazy(()=>lnt).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>mt),t.string()]).optional(),type:t.union([t.lazy(()=>rnt),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ia=t.object({AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),hh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),$V=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>pnt).optional(),_avg:t.lazy(()=>cnt).optional(),_max:t.lazy(()=>unt).optional(),_min:t.lazy(()=>snt).optional(),_sum:t.lazy(()=>ynt).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),la=t.object({AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),bh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),JV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dnt).optional(),_avg:t.lazy(()=>znt).optional(),_max:t.lazy(()=>mnt).optional(),_min:t.lazy(()=>hnt).optional(),_sum:t.lazy(()=>bnt).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ra=t.object({AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Ih=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),KV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Int).optional(),_avg:t.lazy(()=>gnt).optional(),_max:t.lazy(()=>Cnt).optional(),_min:t.lazy(()=>Ant).optional(),_sum:t.lazy(()=>Snt).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>Wt),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),pa=t.object({AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional()}).strict(),gh=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),menuItem:t.lazy(()=>Vl).optional()}).strict(),ht=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional()}).strict()),XV=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Tnt).optional(),_avg:t.lazy(()=>Pnt).optional(),_max:t.lazy(()=>Wnt).optional(),_min:t.lazy(()=>Rnt).optional(),_sum:t.lazy(()=>Unt).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),total:t.union([t.lazy(()=>Wt),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>FM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>VI).optional()}).strict(),Hm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>ac).optional(),menuItems:t.lazy(()=>DM).optional()}).strict(),Xt=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>aB)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>aB)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>aB).optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>FM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>VI).optional()}).strict()),tH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>knt).optional(),_avg:t.lazy(()=>xnt).optional(),_max:t.lazy(()=>jnt).optional(),_min:t.lazy(()=>Mnt).optional(),_sum:t.lazy(()=>Znt).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ae=t.object({AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>HS).optional(),instructions:t.lazy(()=>EM).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),approvedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict(),Xp=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional(),ingredients:t.lazy(()=>aq).optional(),instructions:t.lazy(()=>R2).optional(),createdBy:t.lazy(()=>eo).optional(),approvedBy:t.lazy(()=>eo).optional()}).strict(),w=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>iB)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>iB)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>iB).optional(),AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>HS).optional(),instructions:t.lazy(()=>EM).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),approvedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict()),eH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vnt).optional(),_avg:t.lazy(()=>Ont).optional(),_max:t.lazy(()=>fnt).optional(),_min:t.lazy(()=>wnt).optional(),_sum:t.lazy(()=>Nnt).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>iq),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>QS).optional(),maintenanceLogs:t.lazy(()=>U2).optional()}).strict(),tc=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),recipes:t.lazy(()=>lq).optional(),maintenanceLogs:t.lazy(()=>Bnt).optional()}).strict(),Ht=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>iq),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>QS).optional(),maintenanceLogs:t.lazy(()=>U2).optional()}).strict()),oH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qnt).optional(),_avg:t.lazy(()=>Fnt).optional(),_max:t.lazy(()=>Dnt).optional(),_min:t.lazy(()=>Ent).optional(),_sum:t.lazy(()=>_nt).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>Lnt),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ca=t.object({AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>_M),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>k2),t.lazy(()=>Be)]).optional().nullable()}).strict(),Ch=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),equipment:t.lazy(()=>tc).optional(),RecipeInstruction:t.lazy(()=>Km).optional()}).strict(),B=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>lB)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>lB)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>lB).optional(),AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>_M),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>k2),t.lazy(()=>Be)]).optional().nullable()}).strict()),nH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Vnt).optional(),_avg:t.lazy(()=>Hnt).optional(),_max:t.lazy(()=>Qnt).optional(),_min:t.lazy(()=>Ynt).optional(),_sum:t.lazy(()=>Gnt).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable()}).strict(),ua=t.object({AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>rq),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>_M),t.lazy(()=>Ze)]).optional()}).strict(),Ah=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>tc).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>rq),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>_M),t.lazy(()=>Ze)]).optional()}).strict()),aH=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>$nt).optional(),_avg:t.lazy(()=>Jnt).optional(),_max:t.lazy(()=>Knt).optional(),_min:t.lazy(()=>Xnt).optional(),_sum:t.lazy(()=>tat).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>eat),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>mt),t.string()]).optional(),cost:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>mt),t.string()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>pq),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),items:t.lazy(()=>x2).optional(),completions:t.lazy(()=>LM).optional()}).strict(),ec=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),items:t.lazy(()=>oat).optional(),completions:t.lazy(()=>j2).optional()}).strict(),Qt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>pq),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),items:t.lazy(()=>x2).optional(),completions:t.lazy(()=>LM).optional()}).strict()),iH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>nat).optional(),_avg:t.lazy(()=>aat).optional(),_max:t.lazy(()=>iat).optional(),_min:t.lazy(()=>lat).optional(),_sum:t.lazy(()=>rat).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>pat),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>cq),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>VM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>HM).optional()}).strict(),Qm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>ec).optional(),completions:t.lazy(()=>M2).optional()}).strict(),te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>cq),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>VM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>HM).optional()}).strict()),lH=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>cat).optional(),_avg:t.lazy(()=>uat).optional(),_max:t.lazy(()=>sat).optional(),_min:t.lazy(()=>yat).optional(),_sum:t.lazy(()=>dat).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>mt),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>zat),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>VM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>HM).optional()}).strict(),Ym=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>ec).optional(),completedBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>M2).optional()}).strict(),lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>VM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>HM).optional()}).strict()),rH=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mat).optional(),_avg:t.lazy(()=>hat).optional(),_max:t.lazy(()=>bat).optional(),_min:t.lazy(()=>Iat).optional(),_sum:t.lazy(()=>gat).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),sa=t.object({AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>uq),t.lazy(()=>_t)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Wl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>Z2),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>v2),t.lazy(()=>Qe)]).optional()}).strict(),Sh=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>Ym).optional(),checklistItem:t.lazy(()=>Qm).optional()}).strict(),bt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>uq),t.lazy(()=>_t)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Wl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>Z2),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>v2),t.lazy(()=>Qe)]).optional()}).strict()),pH=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cat).optional(),_avg:t.lazy(()=>Aat).optional(),_max:t.lazy(()=>Sat).optional(),_min:t.lazy(()=>Tat).optional(),_sum:t.lazy(()=>Pat).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Wat),t.lazy(()=>_t)]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Wl).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ya=t.object({AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>QM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional()}).strict(),Th=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>nc).optional(),ingredient:t.lazy(()=>Ll).optional()}).strict(),It=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>QM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional()}).strict()),cH=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Rat).optional(),_avg:t.lazy(()=>Uat).optional(),_max:t.lazy(()=>kat).optional(),_min:t.lazy(()=>xat).optional(),_sum:t.lazy(()=>jat).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),startDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),da=t.object({AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>sq),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Wl).optional(),status:t.union([t.lazy(()=>yq),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>YM),t.lazy(()=>Tt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict(),Ph=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),menuItem:t.lazy(()=>Vl).optional(),respondedBy:t.lazy(()=>eo).optional()}).strict(),q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>sq),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Wl).optional(),status:t.union([t.lazy(()=>yq),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>YM),t.lazy(()=>Tt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict()),uH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mat).optional(),_avg:t.lazy(()=>Zat).optional(),_max:t.lazy(()=>vat).optional(),_min:t.lazy(()=>Oat).optional(),_sum:t.lazy(()=>fat).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>wat),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Wl).optional(),status:t.union([t.lazy(()=>Nat),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),za=t.object({AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>VI).optional(),recipes:t.lazy(()=>dp).optional(),ingredients:t.lazy(()=>GM).optional()}).strict(),Wh=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>DM).optional(),recipes:t.lazy(()=>YS).optional(),ingredients:t.lazy(()=>O2).optional()}).strict(),F=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>VI).optional(),recipes:t.lazy(()=>dp).optional(),ingredients:t.lazy(()=>GM).optional()}).strict()),sH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Bat).optional(),_avg:t.lazy(()=>qat).optional(),_max:t.lazy(()=>Fat).optional(),_min:t.lazy(()=>Dat).optional(),_sum:t.lazy(()=>Eat).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ma=t.object({AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>dp).optional()}).strict(),Rh=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>YS).optional()}).strict(),Ae=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>dp).optional()}).strict()),yH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>_at).optional(),_avg:t.lazy(()=>Lat).optional(),_max:t.lazy(()=>Vat).optional(),_min:t.lazy(()=>Hat).optional(),_sum:t.lazy(()=>Qat).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ha=t.object({AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Uh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),menuItem:t.lazy(()=>Vl).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),dH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yat).optional(),_avg:t.lazy(()=>Gat).optional(),_max:t.lazy(()=>$at).optional(),_min:t.lazy(()=>Jat).optional(),_sum:t.lazy(()=>Kat).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>mt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ba=t.object({AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),kh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),ingrediente:t.lazy(()=>Ll).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),zH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xat).optional(),_avg:t.lazy(()=>tit).optional(),_max:t.lazy(()=>eit).optional(),_min:t.lazy(()=>oit).optional(),_sum:t.lazy(()=>nit).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),reason:t.union([t.lazy(()=>mt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>dq),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>GS).optional()}).strict(),Gm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>zq).optional()}).strict(),rt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>dq),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>GS).optional()}).strict()),mH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ait).optional(),_avg:t.lazy(()=>iit).optional(),_max:t.lazy(()=>lit).optional(),_min:t.lazy(()=>rit).optional(),_sum:t.lazy(()=>pit).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>cit),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ia=t.object({AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>f2),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict(),xh=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>Gm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>f2),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable()}).strict()),hH=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uit).optional(),_avg:t.lazy(()=>sit).optional(),_max:t.lazy(()=>yit).optional(),_min:t.lazy(()=>dit).optional(),_sum:t.lazy(()=>zit).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ga=t.object({AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>mq),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>w2),t.lazy(()=>Xe)]).optional()}).strict(),jh=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>oh).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>mq),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>w2),t.lazy(()=>Xe)]).optional()}).strict()),bH=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mit).optional(),_avg:t.lazy(()=>hit).optional(),_max:t.lazy(()=>bit).optional(),_min:t.lazy(()=>Iit).optional(),_sum:t.lazy(()=>git).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>Cit),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ca=t.object({AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>hq),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Mh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>hq),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),IH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ait).optional(),_avg:t.lazy(()=>Sit).optional(),_max:t.lazy(()=>Tit).optional(),_min:t.lazy(()=>Pit).optional(),_sum:t.lazy(()=>Wit).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>Rit),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Aa=t.object({AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>bq),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Zh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Pe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>bq),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),gH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Uit).optional(),_avg:t.lazy(()=>kit).optional(),_max:t.lazy(()=>xit).optional(),_min:t.lazy(()=>jit).optional(),_sum:t.lazy(()=>Mit).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>Zit),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Sa=t.object({AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional(),recipe:t.union([t.lazy(()=>N2),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),vh=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>Tp).optional(),recipe:t.lazy(()=>oo).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),L=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional(),recipe:t.union([t.lazy(()=>N2),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),CH=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>vit).optional(),_avg:t.lazy(()=>Oit).optional(),_max:t.lazy(()=>fit).optional(),_min:t.lazy(()=>wit).optional(),_sum:t.lazy(()=>Nit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),recipeId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),co=t.object({AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>$M).optional()}).strict(),$m=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),ingredients:t.lazy(()=>B2).optional()}).strict(),sp=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>$M).optional()}).strict()),AH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Bit).optional(),_avg:t.lazy(()=>qit).optional(),_max:t.lazy(()=>Fit).optional(),_min:t.lazy(()=>Dit).optional(),_sum:t.lazy(()=>Eit).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),Ta=t.object({AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),allergen:t.union([t.lazy(()=>q2),t.lazy(()=>co)]).optional()}).strict(),Oh=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>Ll).optional(),allergen:t.lazy(()=>$m).optional()}).strict(),gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),allergen:t.union([t.lazy(()=>q2),t.lazy(()=>co)]).optional()}).strict()),SH=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>_it).optional(),_avg:t.lazy(()=>Lit).optional(),_max:t.lazy(()=>Vit).optional(),_min:t.lazy(()=>Hit).optional(),_sum:t.lazy(()=>Qit).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Pa=t.object({AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional()}).strict(),fh=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Vl).optional()}).strict(),We=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional()}).strict()),TH=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yit).optional(),_avg:t.lazy(()=>Git).optional(),_max:t.lazy(()=>$it).optional(),_min:t.lazy(()=>Jit).optional(),_sum:t.lazy(()=>Kit).optional()}).strict(),NA=t.object({AND:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),OR:t.lazy(()=>NA).array().optional(),NOT:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>mt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),wh=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lh=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict()),PH=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Xit).optional(),_avg:t.lazy(()=>tlt).optional(),_max:t.lazy(()=>elt).optional(),_min:t.lazy(()=>olt).optional(),_sum:t.lazy(()=>nlt).optional()}).strict(),BA=t.object({AND:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),OR:t.lazy(()=>BA).array().optional(),NOT:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>mt),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>F2).optional(),users:t.lazy(()=>JM).optional()}).strict(),oc=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>alt).optional(),users:t.lazy(()=>D2).optional()}).strict(),Dl=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>F2).optional(),users:t.lazy(()=>JM).optional()}).strict()),WH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ilt).optional(),_avg:t.lazy(()=>llt).optional(),_max:t.lazy(()=>rlt).optional(),_min:t.lazy(()=>plt).optional(),_sum:t.lazy(()=>clt).optional()}).strict(),qA=t.object({AND:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),OR:t.lazy(()=>qA).array().optional(),NOT:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ft=t.object({AND:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),OR:t.lazy(()=>Ft).array().optional(),NOT:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>E2),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),items:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),stockCounts:t.lazy(()=>KM).optional()}).strict(),pp=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),items:t.lazy(()=>Iq).optional(),transactions:t.lazy(()=>gq).optional(),stockCounts:t.lazy(()=>_2).optional()}).strict(),Jn=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),OR:t.lazy(()=>Ft).array().optional(),NOT:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>E2),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),items:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),stockCounts:t.lazy(()=>KM).optional()}).strict()),RH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ult).optional(),_avg:t.lazy(()=>slt).optional(),_max:t.lazy(()=>ylt).optional(),_min:t.lazy(()=>dlt).optional(),_sum:t.lazy(()=>zlt).optional()}).strict(),FA=t.object({AND:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),OR:t.lazy(()=>FA).array().optional(),NOT:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>mlt),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),N=t.object({AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>XM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>JM).optional(),cookbooks:t.lazy(()=>L2).optional(),inventory:t.union([t.lazy(()=>V2),t.lazy(()=>Ft)]).optional().nullable(),orders:t.lazy(()=>tZ).optional(),recipes:t.lazy(()=>dp).optional(),menus:t.lazy(()=>H2).optional(),salesTransactions:t.lazy(()=>eZ).optional(),leftoverItems:t.lazy(()=>XS).optional(),wasteRecords:t.lazy(()=>tT).optional(),productionPlans:t.lazy(()=>oZ).optional(),equipments:t.lazy(()=>Q2).optional(),qualityChecklists:t.lazy(()=>Y2).optional(),customerFeedbacks:t.lazy(()=>eT).optional()}).strict(),Ba=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organization:t.lazy(()=>oc).optional(),users:t.lazy(()=>D2).optional(),cookbooks:t.lazy(()=>hlt).optional(),inventory:t.lazy(()=>pp).optional(),orders:t.lazy(()=>G2).optional(),recipes:t.lazy(()=>YS).optional(),menus:t.lazy(()=>blt).optional(),salesTransactions:t.lazy(()=>$2).optional(),leftoverItems:t.lazy(()=>Cq).optional(),wasteRecords:t.lazy(()=>Aq).optional(),productionPlans:t.lazy(()=>J2).optional(),equipments:t.lazy(()=>Ilt).optional(),qualityChecklists:t.lazy(()=>glt).optional(),customerFeedbacks:t.lazy(()=>Sq).optional()}).strict(),K=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>XM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>JM).optional(),cookbooks:t.lazy(()=>L2).optional(),inventory:t.union([t.lazy(()=>V2),t.lazy(()=>Ft)]).optional().nullable(),orders:t.lazy(()=>tZ).optional(),recipes:t.lazy(()=>dp).optional(),menus:t.lazy(()=>H2).optional(),salesTransactions:t.lazy(()=>eZ).optional(),leftoverItems:t.lazy(()=>XS).optional(),wasteRecords:t.lazy(()=>tT).optional(),productionPlans:t.lazy(()=>oZ).optional(),equipments:t.lazy(()=>Q2).optional(),qualityChecklists:t.lazy(()=>Y2).optional(),customerFeedbacks:t.lazy(()=>eT).optional()}).strict()),UH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Clt).optional(),_avg:t.lazy(()=>Alt).optional(),_max:t.lazy(()=>Slt).optional(),_min:t.lazy(()=>Tlt).optional(),_sum:t.lazy(()=>Plt).optional()}).strict(),DA=t.object({AND:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),OR:t.lazy(()=>DA).array().optional(),NOT:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>mt),t.string()]).optional(),city:t.union([t.lazy(()=>mt),t.string()]).optional(),zipCode:t.union([t.lazy(()=>mt),t.string()]).optional(),state:t.union([t.lazy(()=>mt),t.string()]).optional(),owner:t.union([t.lazy(()=>mt),t.string()]).optional(),organizationId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable()}).strict(),M=t.object({AND:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),OR:t.lazy(()=>M).array().optional(),NOT:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>XM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>nZ),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>K2).optional(),prepItems:t.lazy(()=>oT).optional(),inventoryUpdates:t.lazy(()=>JS).optional(),sessions:t.lazy(()=>X2).optional(),passwordResets:t.lazy(()=>t5).optional(),leftoverItems:t.lazy(()=>XS).optional(),wasteRecords:t.lazy(()=>tT).optional(),productionPlans:t.lazy(()=>oZ).optional(),productionPlanItems:t.lazy(()=>GS).optional(),availability:t.lazy(()=>e5).optional(),schedulingConstraints:t.lazy(()=>o5).optional(),inventoryWithdrawals:t.lazy(()=>nT).optional(),checklistCompletes:t.lazy(()=>LM).optional(),customerFeedbackResponses:t.lazy(()=>eT).optional(),recipeVersionsCreated:t.lazy(()=>zS).optional(),recipeVersionsApproved:t.lazy(()=>zS).optional(),InventoryTransactions:t.lazy(()=>KS).optional(),StockCounts:t.lazy(()=>KM).optional(),auth:t.lazy(()=>n5).optional()}).strict(),eo=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>oc).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>Wlt).optional(),prepItems:t.lazy(()=>Tq).optional(),inventoryUpdates:t.lazy(()=>Iq).optional(),sessions:t.lazy(()=>Rlt).optional(),passwordResets:t.lazy(()=>Ult).optional(),leftoverItems:t.lazy(()=>Cq).optional(),wasteRecords:t.lazy(()=>Aq).optional(),productionPlans:t.lazy(()=>J2).optional(),productionPlanItems:t.lazy(()=>zq).optional(),availability:t.lazy(()=>klt).optional(),schedulingConstraints:t.lazy(()=>xlt).optional(),inventoryWithdrawals:t.lazy(()=>Pq).optional(),checklistCompletes:t.lazy(()=>j2).optional(),customerFeedbackResponses:t.lazy(()=>Sq).optional(),recipeVersionsCreated:t.lazy(()=>sB).optional(),recipeVersionsApproved:t.lazy(()=>sB).optional(),InventoryTransactions:t.lazy(()=>gq).optional(),StockCounts:t.lazy(()=>_2).optional(),auth:t.lazy(()=>jlt).optional()}).strict(),j=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),OR:t.lazy(()=>M).array().optional(),NOT:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>XM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>nZ),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>K2).optional(),prepItems:t.lazy(()=>oT).optional(),inventoryUpdates:t.lazy(()=>JS).optional(),sessions:t.lazy(()=>X2).optional(),passwordResets:t.lazy(()=>t5).optional(),leftoverItems:t.lazy(()=>XS).optional(),wasteRecords:t.lazy(()=>tT).optional(),productionPlans:t.lazy(()=>oZ).optional(),productionPlanItems:t.lazy(()=>GS).optional(),availability:t.lazy(()=>e5).optional(),schedulingConstraints:t.lazy(()=>o5).optional(),inventoryWithdrawals:t.lazy(()=>nT).optional(),checklistCompletes:t.lazy(()=>LM).optional(),customerFeedbackResponses:t.lazy(()=>eT).optional(),recipeVersionsCreated:t.lazy(()=>zS).optional(),recipeVersionsApproved:t.lazy(()=>zS).optional(),InventoryTransactions:t.lazy(()=>KS).optional(),StockCounts:t.lazy(()=>KM).optional(),auth:t.lazy(()=>n5).optional()}).strict()),kH=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mlt).optional(),_avg:t.lazy(()=>Zlt).optional(),_max:t.lazy(()=>vlt).optional(),_min:t.lazy(()=>Olt).optional(),_sum:t.lazy(()=>flt).optional()}).strict(),EA=t.object({AND:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),OR:t.lazy(()=>EA).array().optional(),NOT:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>mt),t.string()]).optional(),sub:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>mt),t.string()]).optional(),lastName:t.union([t.lazy(()=>mt),t.string()]).optional(),profileImage:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Wa=t.object({AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>Wq),t.lazy(()=>se)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Nh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Re=t.union([t.object({id:t.string().uuid(),userId:t.number().int()}),t.object({id:t.string().uuid()}),t.object({userId:t.number().int()})]).and(t.object({id:t.string().uuid().optional(),userId:t.number().int().optional(),AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>Wq),t.lazy(()=>se)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),xH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),_count:t.lazy(()=>wlt).optional(),_avg:t.lazy(()=>Nlt).optional(),_max:t.lazy(()=>Blt).optional(),_min:t.lazy(()=>qlt).optional(),_sum:t.lazy(()=>Flt).optional()}).strict(),_A=t.object({AND:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),OR:t.lazy(()=>_A).array().optional(),NOT:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),id:t.union([t.lazy(()=>mt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>mt),t.string()]).optional(),role:t.union([t.lazy(()=>Dlt),t.lazy(()=>se)]).optional()}).strict(),Ra=t.object({AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>S),t.string()]).optional(),verified:t.union([t.lazy(()=>zt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Bh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Ue=t.union([t.object({id:t.string().uuid(),verificationCode:t.string()}),t.object({id:t.string().uuid()}),t.object({verificationCode:t.string()})]).and(t.object({id:t.string().uuid().optional(),verificationCode:t.string().optional(),AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),verified:t.union([t.lazy(()=>zt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),jH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Elt).optional(),_avg:t.lazy(()=>_lt).optional(),_max:t.lazy(()=>Llt).optional(),_min:t.lazy(()=>Vlt).optional(),_sum:t.lazy(()=>Hlt).optional()}).strict(),LA=t.object({AND:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),OR:t.lazy(()=>LA).array().optional(),NOT:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),id:t.union([t.lazy(()=>mt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>mt),t.string()]).optional(),verified:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipes:t.lazy(()=>dp).optional(),restaurant:t.union([t.lazy(()=>nZ),t.lazy(()=>N)]).optional().nullable()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipes:t.lazy(()=>YS).optional(),restaurant:t.lazy(()=>Ba).optional()}).strict(),ee=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>dp).optional(),restaurant:t.union([t.lazy(()=>nZ),t.lazy(()=>N)]).optional().nullable()}).strict()),MH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Qlt).optional(),_avg:t.lazy(()=>Ylt).optional(),_max:t.lazy(()=>Glt).optional(),_min:t.lazy(()=>$lt).optional(),_sum:t.lazy(()=>Jlt).optional()}).strict(),VA=t.object({AND:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),OR:t.lazy(()=>VA).array().optional(),NOT:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>mt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Wl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>zt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Rq),t.lazy(()=>R)]).optional(),category:t.union([t.lazy(()=>Uq),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>a5),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>HS).optional(),instructions:t.lazy(()=>EM).optional(),menuItems:t.lazy(()=>VI).optional(),foodCostHistory:t.lazy(()=>i5).optional(),prepHistory:t.lazy(()=>l5).optional(),prepBoards:t.lazy(()=>r5).optional(),prepItems:t.lazy(()=>oT).optional(),menuItemRecipes:t.lazy(()=>aZ).optional(),productionPlanItems:t.lazy(()=>GS).optional(),withdrawals:t.lazy(()=>nT).optional(),tags:t.lazy(()=>p5).optional(),versions:t.lazy(()=>zS).optional(),equipments:t.lazy(()=>QS).optional(),dietaryRestrictions:t.lazy(()=>aT).optional(),temperatures:t.lazy(()=>c5).optional(),yields:t.lazy(()=>u5).optional(),laborCosts:t.lazy(()=>s5).optional(),nutritionalInfo:t.union([t.lazy(()=>y5),t.lazy(()=>qe)]).optional().nullable(),criticalPoints:t.lazy(()=>d5).optional(),storage:t.union([t.lazy(()=>z5),t.lazy(()=>Fe)]).optional().nullable(),photos:t.lazy(()=>m5).optional(),recipeStats:t.union([t.lazy(()=>h5),t.lazy(()=>De)]).optional().nullable()}).strict(),oo=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),cookBook:t.lazy(()=>Jm).optional(),ingredients:t.lazy(()=>aq).optional(),instructions:t.lazy(()=>R2).optional(),menuItems:t.lazy(()=>DM).optional(),foodCostHistory:t.lazy(()=>Klt).optional(),prepHistory:t.lazy(()=>Xlt).optional(),prepBoards:t.lazy(()=>trt).optional(),prepItems:t.lazy(()=>Tq).optional(),menuItemRecipes:t.lazy(()=>b5).optional(),productionPlanItems:t.lazy(()=>zq).optional(),withdrawals:t.lazy(()=>Pq).optional(),tags:t.lazy(()=>ert).optional(),versions:t.lazy(()=>sB).optional(),equipments:t.lazy(()=>lq).optional(),dietaryRestrictions:t.lazy(()=>kq).optional(),temperatures:t.lazy(()=>ort).optional(),yields:t.lazy(()=>nrt).optional(),laborCosts:t.lazy(()=>art).optional(),nutritionalInfo:t.lazy(()=>Lm).optional(),criticalPoints:t.lazy(()=>irt).optional(),storage:t.lazy(()=>Vm).optional(),photos:t.lazy(()=>lrt).optional(),recipeStats:t.lazy(()=>th).optional()}).strict(),C=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Wl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>zt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Rq),t.lazy(()=>R)]).optional(),category:t.union([t.lazy(()=>Uq),t.lazy(()=>W)]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>a5),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>HS).optional(),instructions:t.lazy(()=>EM).optional(),menuItems:t.lazy(()=>VI).optional(),foodCostHistory:t.lazy(()=>i5).optional(),prepHistory:t.lazy(()=>l5).optional(),prepBoards:t.lazy(()=>r5).optional(),prepItems:t.lazy(()=>oT).optional(),menuItemRecipes:t.lazy(()=>aZ).optional(),productionPlanItems:t.lazy(()=>GS).optional(),withdrawals:t.lazy(()=>nT).optional(),tags:t.lazy(()=>p5).optional(),versions:t.lazy(()=>zS).optional(),equipments:t.lazy(()=>QS).optional(),dietaryRestrictions:t.lazy(()=>aT).optional(),temperatures:t.lazy(()=>c5).optional(),yields:t.lazy(()=>u5).optional(),laborCosts:t.lazy(()=>s5).optional(),nutritionalInfo:t.union([t.lazy(()=>y5),t.lazy(()=>qe)]).optional().nullable(),criticalPoints:t.lazy(()=>d5).optional(),storage:t.union([t.lazy(()=>z5),t.lazy(()=>Fe)]).optional().nullable(),photos:t.lazy(()=>m5).optional(),recipeStats:t.union([t.lazy(()=>h5),t.lazy(()=>De)]).optional().nullable()}).strict()),ZH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),_count:t.lazy(()=>rrt).optional(),_avg:t.lazy(()=>prt).optional(),_max:t.lazy(()=>crt).optional(),_min:t.lazy(()=>urt).optional(),_sum:t.lazy(()=>srt).optional()}).strict(),HA=t.object({AND:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),OR:t.lazy(()=>HA).array().optional(),NOT:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),imageUrls:t.lazy(()=>Wl).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>mt),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>yrt),t.lazy(()=>R)]).optional(),category:t.union([t.lazy(()=>drt),t.lazy(()=>W)]).optional()}).strict(),jt=t.object({AND:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),OR:t.lazy(()=>jt).array().optional(),NOT:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>xq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>HS).optional(),inventoryItems:t.lazy(()=>JS).optional(),orderItems:t.lazy(()=>iZ).optional(),vendors:t.lazy(()=>I5).optional(),WasteRecords:t.lazy(()=>tT).optional(),IngredientAllergens:t.lazy(()=>$M).optional(),priceHistory:t.lazy(()=>lZ).optional(),DietaryRestrictions:t.lazy(()=>aT).optional()}).strict(),Ll=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeIngredients:t.lazy(()=>aq).optional(),inventoryItems:t.lazy(()=>Iq).optional(),orderItems:t.lazy(()=>g5).optional(),vendors:t.lazy(()=>zrt).optional(),WasteRecords:t.lazy(()=>Aq).optional(),IngredientAllergens:t.lazy(()=>B2).optional(),priceHistory:t.lazy(()=>C5).optional(),DietaryRestrictions:t.lazy(()=>kq).optional()}).strict(),$=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),OR:t.lazy(()=>jt).array().optional(),NOT:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>xq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>HS).optional(),inventoryItems:t.lazy(()=>JS).optional(),orderItems:t.lazy(()=>iZ).optional(),vendors:t.lazy(()=>I5).optional(),WasteRecords:t.lazy(()=>tT).optional(),IngredientAllergens:t.lazy(()=>$M).optional(),priceHistory:t.lazy(()=>lZ).optional(),DietaryRestrictions:t.lazy(()=>aT).optional()}).strict()),vH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>mrt).optional(),_avg:t.lazy(()=>hrt).optional(),_max:t.lazy(()=>brt).optional(),_min:t.lazy(()=>Irt).optional(),_sum:t.lazy(()=>grt).optional()}).strict(),QA=t.object({AND:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),OR:t.lazy(()=>QA).array().optional(),NOT:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),category:t.union([t.lazy(()=>mt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),density:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>Crt),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable()}).strict(),Ua=t.object({AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>QI).optional(),isOptional:t.union([t.lazy(()=>zt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),recipeVersion:t.union([t.lazy(()=>rZ),t.lazy(()=>ae)]).optional().nullable()}).strict(),qh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),ingredient:t.lazy(()=>Ll).optional(),recipeVersion:t.lazy(()=>Xp).optional()}).strict(),V=t.union([t.object({id:t.number().int(),recipeId_recipeVersionId:t.lazy(()=>tP),recipeId_ingredientId:t.lazy(()=>eP)}),t.object({id:t.number().int(),recipeId_recipeVersionId:t.lazy(()=>tP)}),t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>eP)}),t.object({id:t.number().int()}),t.object({recipeId_recipeVersionId:t.lazy(()=>tP),recipeId_ingredientId:t.lazy(()=>eP)}),t.object({recipeId_recipeVersionId:t.lazy(()=>tP)}),t.object({recipeId_ingredientId:t.lazy(()=>eP)})]).and(t.object({id:t.number().int().optional(),recipeId_recipeVersionId:t.lazy(()=>tP).optional(),recipeId_ingredientId:t.lazy(()=>eP).optional(),AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>QI).optional(),isOptional:t.union([t.lazy(()=>zt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),recipeVersion:t.union([t.lazy(()=>rZ),t.lazy(()=>ae)]).optional().nullable()}).strict()),OH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Art).optional(),_avg:t.lazy(()=>Srt).optional(),_max:t.lazy(()=>Trt).optional(),_min:t.lazy(()=>Prt).optional(),_sum:t.lazy(()=>Wrt).optional()}).strict(),YA=t.object({AND:t.union([t.lazy(()=>YA),t.lazy(()=>YA).array()]).optional(),OR:t.lazy(()=>YA).array().optional(),NOT:t.union([t.lazy(()=>YA),t.lazy(()=>YA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>QI).optional(),isOptional:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>rZ),t.lazy(()=>ae)]).optional().nullable(),equipment:t.lazy(()=>QS).optional()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),RecipeVersion:t.lazy(()=>Xp).optional(),equipment:t.lazy(()=>lq).optional()}).strict(),pt=t.union([t.object({id:t.number().int(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>rB)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber_recipeVersionId:t.lazy(()=>rB)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>rB).optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>rZ),t.lazy(()=>ae)]).optional().nullable(),equipment:t.lazy(()=>QS).optional()}).strict()),fH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Rrt).optional(),_avg:t.lazy(()=>Urt).optional(),_max:t.lazy(()=>krt).optional(),_min:t.lazy(()=>xrt).optional(),_sum:t.lazy(()=>jrt).optional()}).strict(),GA=t.object({AND:t.union([t.lazy(()=>GA),t.lazy(()=>GA).array()]).optional(),OR:t.lazy(()=>GA).array().optional(),NOT:t.union([t.lazy(()=>GA),t.lazy(()=>GA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>mt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),ie=t.object({AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>nT).optional(),stockCounts:t.lazy(()=>pZ).optional()}).strict(),Tp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>pp).optional(),ingredient:t.lazy(()=>Ll).optional(),lastUpdatedBy:t.lazy(()=>eo).optional(),transactions:t.lazy(()=>gq).optional(),withdrawals:t.lazy(()=>Pq).optional(),stockCounts:t.lazy(()=>A5).optional()}).strict(),f=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>pB)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>pB)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>pB).optional(),AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>HI),t.lazy(()=>M)]).optional().nullable(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>nT).optional(),stockCounts:t.lazy(()=>pZ).optional()}).strict()),wH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Mrt).optional(),_avg:t.lazy(()=>Zrt).optional(),_max:t.lazy(()=>vrt).optional(),_min:t.lazy(()=>Ort).optional(),_sum:t.lazy(()=>frt).optional()}).strict(),$A=t.object({AND:t.union([t.lazy(()=>$A),t.lazy(()=>$A).array()]).optional(),OR:t.lazy(()=>$A).array().optional(),NOT:t.union([t.lazy(()=>$A),t.lazy(()=>$A).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>Wt),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable()}).strict(),ka=t.object({AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>jq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),item:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Fh=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>pp).optional(),item:t.lazy(()=>Tp).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>jq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),item:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),NH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>wrt).optional(),_avg:t.lazy(()=>Nrt).optional(),_max:t.lazy(()=>Brt).optional(),_min:t.lazy(()=>qrt).optional(),_sum:t.lazy(()=>Frt).optional()}).strict(),JA=t.object({AND:t.union([t.lazy(()=>JA),t.lazy(()=>JA).array()]).optional(),OR:t.lazy(()=>JA).array().optional(),NOT:t.union([t.lazy(()=>JA),t.lazy(()=>JA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>Drt),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),previousQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),newQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),cost:t.union([t.lazy(()=>Xn),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>Mq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>pZ).optional()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>pp).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>A5).optional()}).strict(),ct=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>Mq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>iT),t.lazy(()=>Ft)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>pZ).optional()}).strict()),BH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Ert).optional(),_avg:t.lazy(()=>_rt).optional(),_max:t.lazy(()=>Lrt).optional(),_min:t.lazy(()=>Vrt).optional(),_sum:t.lazy(()=>Hrt).optional()}).strict(),KA=t.object({AND:t.union([t.lazy(()=>KA),t.lazy(()=>KA).array()]).optional(),OR:t.lazy(()=>KA).array().optional(),NOT:t.union([t.lazy(()=>KA),t.lazy(()=>KA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Qrt),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),xa=t.object({AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>S5),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional()}).strict(),Dh=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),stockCount:t.lazy(()=>Xm).optional(),item:t.lazy(()=>Tp).optional()}).strict(),Ct=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>cB)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>cB)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>cB).optional(),AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>S5),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>$S),t.lazy(()=>ie)]).optional()}).strict()),qH=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Yrt).optional(),_avg:t.lazy(()=>Grt).optional(),_max:t.lazy(()=>$rt).optional(),_min:t.lazy(()=>Jrt).optional(),_sum:t.lazy(()=>Krt).optional()}).strict(),XA=t.object({AND:t.union([t.lazy(()=>XA),t.lazy(()=>XA).array()]).optional(),OR:t.lazy(()=>XA).array().optional(),NOT:t.union([t.lazy(()=>XA),t.lazy(()=>XA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),difference:t.union([t.lazy(()=>Wt),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),De=t.object({AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),th=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Gl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),totalCost:t.union([t.lazy(()=>U),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>U),t.number()]).optional(),averageRating:t.union([t.lazy(()=>U),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),FH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Xrt).optional(),_avg:t.lazy(()=>tpt).optional(),_max:t.lazy(()=>ept).optional(),_min:t.lazy(()=>opt).optional(),_sum:t.lazy(()=>npt).optional()}).strict(),tS=t.object({AND:t.union([t.lazy(()=>tS),t.lazy(()=>tS).array()]).optional(),OR:t.lazy(()=>tS).array().optional(),NOT:t.union([t.lazy(()=>tS),t.lazy(()=>tS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageRating:t.union([t.lazy(()=>Wt),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Kr),t.coerce.date()]).optional().nullable()}).strict(),Ke=t.object({AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>Zq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>QM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>iZ).optional()}).strict(),eh=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),vendor:t.lazy(()=>nc).optional(),items:t.lazy(()=>g5).optional()}).strict(),ut=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>Zq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>QM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>iZ).optional()}).strict()),DH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>apt).optional(),_avg:t.lazy(()=>ipt).optional(),_max:t.lazy(()=>lpt).optional(),_min:t.lazy(()=>rpt).optional(),_sum:t.lazy(()=>ppt).optional()}).strict(),eS=t.object({AND:t.union([t.lazy(()=>eS),t.lazy(()=>eS).array()]).optional(),OR:t.lazy(()=>eS).array().optional(),NOT:t.union([t.lazy(()=>eS),t.lazy(()=>eS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>cpt),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ja=t.object({AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>T5),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional()}).strict(),Eh=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>eh).optional(),ingredient:t.lazy(()=>Ll).optional()}).strict(),At=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),orderId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),order:t.union([t.lazy(()=>T5),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>yp),t.lazy(()=>jt)]).optional()}).strict()),EH=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>upt).optional(),_avg:t.lazy(()=>spt).optional(),_max:t.lazy(()=>ypt).optional(),_min:t.lazy(()=>dpt).optional(),_sum:t.lazy(()=>zpt).optional()}).strict(),oS=t.object({AND:t.union([t.lazy(()=>oS),t.lazy(()=>oS).array()]).optional(),OR:t.lazy(()=>oS).array().optional(),NOT:t.union([t.lazy(()=>oS),t.lazy(()=>oS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>mt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>tZ).optional(),ingredients:t.lazy(()=>GM).optional(),supplierPriceHistory:t.lazy(()=>lZ).optional()}).strict(),nc=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>G2).optional(),ingredients:t.lazy(()=>O2).optional(),supplierPriceHistory:t.lazy(()=>C5).optional()}).strict(),Yt=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>tZ).optional(),ingredients:t.lazy(()=>GM).optional(),supplierPriceHistory:t.lazy(()=>lZ).optional()}).strict()),_H=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mpt).optional(),_avg:t.lazy(()=>hpt).optional(),_max:t.lazy(()=>bpt).optional(),_min:t.lazy(()=>Ipt).optional(),_sum:t.lazy(()=>gpt).optional()}).strict(),nS=t.object({AND:t.union([t.lazy(()=>nS),t.lazy(()=>nS).array()]).optional(),OR:t.lazy(()=>nS).array().optional(),NOT:t.union([t.lazy(()=>nS),t.lazy(()=>nS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),contact:t.union([t.lazy(()=>mt),t.string()]).optional(),email:t.union([t.lazy(()=>mt),t.string()]).optional(),phone:t.union([t.lazy(()=>mt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Xe=t.object({AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>vq),t.lazy(()=>Vt)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),tasks:t.lazy(()=>P5).optional()}).strict(),oh=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional(),tasks:t.lazy(()=>Cpt).optional()}).strict(),oe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>vq),t.lazy(()=>Vt)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),tasks:t.lazy(()=>P5).optional()}).strict()),LH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>Apt).optional(),_avg:t.lazy(()=>Spt).optional(),_max:t.lazy(()=>Tpt).optional(),_min:t.lazy(()=>Ppt).optional(),_sum:t.lazy(()=>Wpt).optional()}).strict(),aS=t.object({AND:t.union([t.lazy(()=>aS),t.lazy(()=>aS).array()]).optional(),OR:t.lazy(()=>aS).array().optional(),NOT:t.union([t.lazy(()=>aS),t.lazy(()=>aS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>Rpt),t.lazy(()=>Vt)]).optional()}).strict(),to=t.object({AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>dp).optional(),prepItems:t.lazy(()=>oT).optional()}).strict(),nh=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>YS).optional(),prepItems:t.lazy(()=>Tq).optional()}).strict(),ne=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>dp).optional(),prepItems:t.lazy(()=>oT).optional()}).strict()),VH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Upt).optional(),_avg:t.lazy(()=>kpt).optional(),_max:t.lazy(()=>xpt).optional(),_min:t.lazy(()=>jpt).optional(),_sum:t.lazy(()=>Mpt).optional()}).strict(),iS=t.object({AND:t.union([t.lazy(()=>iS),t.lazy(()=>iS).array()]).optional(),OR:t.lazy(()=>iS).array().optional(),NOT:t.union([t.lazy(()=>iS),t.lazy(()=>iS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),status:t.union([t.lazy(()=>W5),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ma=t.object({AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>R5),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),_h=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>nh).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),Q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>R5),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),HH=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>Zpt).optional(),_avg:t.lazy(()=>vpt).optional(),_max:t.lazy(()=>Opt).optional(),_min:t.lazy(()=>fpt).optional(),_sum:t.lazy(()=>wpt).optional()}).strict(),lS=t.object({AND:t.union([t.lazy(()=>lS),t.lazy(()=>lS).array()]).optional(),OR:t.lazy(()=>lS).array().optional(),NOT:t.union([t.lazy(()=>lS),t.lazy(()=>lS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>W5),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Za=t.object({AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Lh=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),ke=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),QH=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Npt).optional(),_avg:t.lazy(()=>Bpt).optional(),_max:t.lazy(()=>qpt).optional(),_min:t.lazy(()=>Fpt).optional(),_sum:t.lazy(()=>Dpt).optional()}).strict(),rS=t.object({AND:t.union([t.lazy(()=>rS),t.lazy(()=>rS).array()]).optional(),OR:t.lazy(()=>rS).array().optional(),NOT:t.union([t.lazy(()=>rS),t.lazy(()=>rS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>mt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>VI).optional(),MenuCategory:t.lazy(()=>U5).optional()}).strict(),ac=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ba).optional(),menuItems:t.lazy(()=>DM).optional(),MenuCategory:t.lazy(()=>Ept).optional()}).strict(),Gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>ta),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>VI).optional(),MenuCategory:t.lazy(()=>U5).optional()}).strict()),YH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>_pt).optional(),_avg:t.lazy(()=>Lpt).optional(),_max:t.lazy(()=>Vpt).optional(),_min:t.lazy(()=>Hpt).optional(),_sum:t.lazy(()=>Qpt).optional()}).strict(),pS=t.object({AND:t.union([t.lazy(()=>pS),t.lazy(()=>pS).array()]).optional(),OR:t.lazy(()=>pS).array().optional(),NOT:t.union([t.lazy(()=>pS),t.lazy(()=>pS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),va=t.object({AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Vh=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Vl).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),St=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>uB)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>uB)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>uB).optional(),AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>LI),t.lazy(()=>Tt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),GH=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ypt).optional(),_avg:t.lazy(()=>Gpt).optional(),_max:t.lazy(()=>$pt).optional(),_min:t.lazy(()=>Jpt).optional(),_sum:t.lazy(()=>Kpt).optional()}).strict(),cS=t.object({AND:t.union([t.lazy(()=>cS),t.lazy(()=>cS).array()]).optional(),OR:t.lazy(()=>cS).array().optional(),NOT:t.union([t.lazy(()=>cS),t.lazy(()=>cS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Tt=t.object({AND:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),OR:t.lazy(()=>Tt).array().optional(),NOT:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),recipeIds:t.lazy(()=>QI).optional(),recipeServingsAmount:t.lazy(()=>Yh).optional(),recipeServingsCost:t.lazy(()=>Yh).optional(),allergens:t.lazy(()=>Wl).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>FM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>k5),t.lazy(()=>Ne)]).optional().nullable(),recipes:t.lazy(()=>dp).optional(),menuItemRecipes:t.lazy(()=>aZ).optional(),nutritionalInfo:t.union([t.lazy(()=>x5),t.lazy(()=>Ee)]).optional().nullable(),recommendations:t.lazy(()=>j5).optional(),salesTransactions:t.lazy(()=>eZ).optional(),leftoverItems:t.lazy(()=>XS).optional(),feedback:t.lazy(()=>eT).optional(),dietaryRestrictions:t.lazy(()=>aT).optional()}).strict(),Vl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),menu:t.lazy(()=>ac).optional(),category:t.lazy(()=>Hm).optional(),recipes:t.lazy(()=>YS).optional(),menuItemRecipes:t.lazy(()=>b5).optional(),nutritionalInfo:t.lazy(()=>ah).optional(),recommendations:t.lazy(()=>Xpt).optional(),salesTransactions:t.lazy(()=>$2).optional(),leftoverItems:t.lazy(()=>Cq).optional(),feedback:t.lazy(()=>Sq).optional(),dietaryRestrictions:t.lazy(()=>kq).optional()}).strict(),x=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),OR:t.lazy(()=>Tt).array().optional(),NOT:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),recipeIds:t.lazy(()=>QI).optional(),recipeServingsAmount:t.lazy(()=>Yh).optional(),recipeServingsCost:t.lazy(()=>Yh).optional(),allergens:t.lazy(()=>Wl).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>FM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>k5),t.lazy(()=>Ne)]).optional().nullable(),recipes:t.lazy(()=>dp).optional(),menuItemRecipes:t.lazy(()=>aZ).optional(),nutritionalInfo:t.union([t.lazy(()=>x5),t.lazy(()=>Ee)]).optional().nullable(),recommendations:t.lazy(()=>j5).optional(),salesTransactions:t.lazy(()=>eZ).optional(),leftoverItems:t.lazy(()=>XS).optional(),feedback:t.lazy(()=>eT).optional(),dietaryRestrictions:t.lazy(()=>aT).optional()}).strict()),$H=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>tct).optional(),_avg:t.lazy(()=>ect).optional(),_max:t.lazy(()=>oct).optional(),_min:t.lazy(()=>nct).optional(),_sum:t.lazy(()=>act).optional()}).strict(),uS=t.object({AND:t.union([t.lazy(()=>uS),t.lazy(()=>uS).array()]).optional(),OR:t.lazy(()=>uS).array().optional(),NOT:t.union([t.lazy(()=>uS),t.lazy(()=>uS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>mt),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),isActive:t.union([t.lazy(()=>Kn),t.boolean()]).optional(),recipeIds:t.lazy(()=>QI).optional(),recipeServingsAmount:t.lazy(()=>Yh).optional(),recipeServingsCost:t.lazy(()=>Yh).optional(),allergens:t.lazy(()=>Wl).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable()}).strict(),Ee=t.object({AND:t.union([t.lazy(()=>Ee),t.lazy(()=>Ee).array()]).optional(),OR:t.lazy(()=>Ee).array().optional(),NOT:t.union([t.lazy(()=>Ee),t.lazy(()=>Ee).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>YM),t.lazy(()=>Tt)]).optional().nullable()}).strict(),ah=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Vl).optional()}).strict(),$l=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ee),t.lazy(()=>Ee).array()]).optional(),OR:t.lazy(()=>Ee).array().optional(),NOT:t.union([t.lazy(()=>Ee),t.lazy(()=>Ee).array()]).optional(),calories:t.union([t.lazy(()=>U),t.number()]).optional(),fat:t.union([t.lazy(()=>U),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>U),t.number()]).optional(),transFat:t.union([t.lazy(()=>U),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>U),t.number()]).optional(),sodium:t.union([t.lazy(()=>U),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>U),t.number()]).optional(),fiber:t.union([t.lazy(()=>U),t.number()]).optional(),sugar:t.union([t.lazy(()=>U),t.number()]).optional(),protein:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>YM),t.lazy(()=>Tt)]).optional().nullable()}).strict()),JH=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ict).optional(),_avg:t.lazy(()=>lct).optional(),_max:t.lazy(()=>rct).optional(),_min:t.lazy(()=>pct).optional(),_sum:t.lazy(()=>cct).optional()}).strict(),sS=t.object({AND:t.union([t.lazy(()=>sS),t.lazy(()=>sS).array()]).optional(),OR:t.lazy(()=>sS).array().optional(),NOT:t.union([t.lazy(()=>sS),t.lazy(()=>sS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>wa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),transFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Oa=t.object({AND:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),OR:t.lazy(()=>Oa).array().optional(),NOT:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Hh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),xe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),OR:t.lazy(()=>Oa).array().optional(),NOT:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),KH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uct).optional(),_avg:t.lazy(()=>sct).optional(),_max:t.lazy(()=>yct).optional(),_min:t.lazy(()=>dct).optional(),_sum:t.lazy(()=>zct).optional()}).strict(),yS=t.object({AND:t.union([t.lazy(()=>yS),t.lazy(()=>yS).array()]).optional(),OR:t.lazy(()=>yS).array().optional(),NOT:t.union([t.lazy(()=>yS),t.lazy(()=>yS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>Wt),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),fa=t.object({AND:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),OR:t.lazy(()=>fa).array().optional(),NOT:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Qh=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),je=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),OR:t.lazy(()=>fa).array().optional(),NOT:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),XH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mct).optional(),_avg:t.lazy(()=>hct).optional(),_max:t.lazy(()=>bct).optional(),_min:t.lazy(()=>Ict).optional(),_sum:t.lazy(()=>gct).optional()}).strict(),dS=t.object({AND:t.union([t.lazy(()=>dS),t.lazy(()=>dS).array()]).optional(),OR:t.lazy(()=>dS).array().optional(),NOT:t.union([t.lazy(()=>dS),t.lazy(()=>dS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ZY=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.lazy(()=>Cct)}).strict(),vY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),OY=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipe:t.lazy(()=>Act).optional()}).strict(),fY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),OP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),wY=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),NY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),BY=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Sct)}).strict(),qY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FY=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Tct).optional()}).strict(),DY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MB=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_Y=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Pct)}).strict(),LY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VY=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Wct).optional()}).strict(),HY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QY=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GY=t.object({url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Rct)}).strict(),$Y=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JY=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Uct).optional()}).strict(),KY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZB=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tG=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>kct)}).strict(),eG=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oG=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>xct).optional()}).strict(),nG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vB=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iG=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>jct)}).strict(),lG=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rG=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Mct).optional()}).strict(),pG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OB=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uG=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Zct)}).strict(),sG=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yG=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>vct).optional()}).strict(),dG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fB=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mG=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>M5),menuItem:t.lazy(()=>Z5)}).strict(),hG=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bG=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>v5).optional(),menuItem:t.lazy(()=>O5).optional()}).strict(),IG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RM=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CG=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>f5),menuItems:t.lazy(()=>w5).optional()}).strict(),AG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>N5).optional()}).strict(),SG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>B5).optional(),menuItems:t.lazy(()=>q5).optional()}).strict(),TG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>F5).optional()}).strict(),EP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WG=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mP),ingredients:t.lazy(()=>hP).optional(),instructions:t.lazy(()=>bP).optional(),createdBy:t.lazy(()=>IP),approvedBy:t.lazy(()=>gP).optional()}).strict(),RG=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),UG=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>SP).optional(),ingredients:t.lazy(()=>TP).optional(),instructions:t.lazy(()=>PP).optional(),createdBy:t.lazy(()=>WP).optional(),approvedBy:t.lazy(()=>RP).optional()}).strict(),kG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>UP).optional(),instructions:t.lazy(()=>kP).optional()}).strict(),_P=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nP=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jG=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Oq),recipes:t.lazy(()=>fq).optional(),maintenanceLogs:t.lazy(()=>wq).optional()}).strict(),MG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Nq).optional(),maintenanceLogs:t.lazy(()=>Bq).optional()}).strict(),ZG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qq).optional(),recipes:t.lazy(()=>Fq).optional(),maintenanceLogs:t.lazy(()=>Dq).optional()}).strict(),vG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Eq).optional(),maintenanceLogs:t.lazy(()=>_q).optional()}).strict(),LP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fG=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Lq),equipment:t.lazy(()=>Vq),RecipeInstruction:t.lazy(()=>Hq).optional()}).strict(),wG=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),NG=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Qq).optional(),equipment:t.lazy(()=>Yq).optional(),RecipeInstruction:t.lazy(()=>Gq).optional()}).strict(),BG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),VP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),aP=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),qG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),FG=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>Oct)}).strict(),DG=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>fct).optional()}).strict(),_G=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BB=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VG=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>$q),items:t.lazy(()=>Jq).optional(),completions:t.lazy(()=>Kq).optional()}).strict(),HG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Xq).optional(),completions:t.lazy(()=>tF).optional()}).strict(),QG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eF).optional(),items:t.lazy(()=>oF).optional(),completions:t.lazy(()=>nF).optional()}).strict(),YG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>aF).optional(),completions:t.lazy(()=>iF).optional()}).strict(),QP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$G=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>D5),completions:t.lazy(()=>E5).optional()}).strict(),JG=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>_5).optional()}).strict(),KG=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>L5).optional(),completions:t.lazy(()=>V5).optional()}).strict(),XG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>H5).optional()}).strict(),YP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FB=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e1=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>lF),completedBy:t.lazy(()=>rF),items:t.lazy(()=>pF).optional()}).strict(),o1=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>cF).optional()}).strict(),n1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>uF).optional(),completedBy:t.lazy(()=>sF).optional(),items:t.lazy(()=>yF).optional()}).strict(),a1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>dF).optional()}).strict(),GP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l1=t.object({status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>Q5),checklistItem:t.lazy(()=>Y5)}).strict(),r1=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),p1=t.object({status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>G5).optional(),checklistItem:t.lazy(()=>$5).optional()}).strict(),c1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$P=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kM=t.object({status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s1=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>J5),ingredient:t.lazy(()=>K5)}).strict(),y1=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d1=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>X5).optional(),ingredient:t.lazy(()=>t6).optional()}).strict(),z1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xM=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h1=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>zF),menuItem:t.lazy(()=>mF).optional(),respondedBy:t.lazy(()=>hF).optional()}).strict(),b1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),I1=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bF).optional(),menuItem:t.lazy(()=>IF).optional(),respondedBy:t.lazy(()=>gF).optional()}).strict(),g1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iP=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A1=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>CF).optional(),recipes:t.lazy(()=>AF).optional(),ingredients:t.lazy(()=>SF).optional()}).strict(),S1=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>TF).optional(),recipes:t.lazy(()=>PF).optional(),ingredients:t.lazy(()=>WF).optional()}).strict(),T1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>RF).optional(),recipes:t.lazy(()=>UF).optional(),ingredients:t.lazy(()=>kF).optional()}).strict(),P1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>xF).optional(),recipes:t.lazy(()=>jF).optional(),ingredients:t.lazy(()=>MF).optional()}).strict(),XP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lP=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R1=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>wct).optional()}).strict(),U1=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Nct).optional()}).strict(),k1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Bct).optional()}).strict(),x1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>qct).optional()}).strict(),tW=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M1=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>ZF),menuItem:t.lazy(()=>vF),recordedBy:t.lazy(()=>OF)}).strict(),Z1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),menuItem:t.lazy(()=>wF).optional(),recordedBy:t.lazy(()=>NF).optional()}).strict(),O1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eW=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rP=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w1=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BF),ingrediente:t.lazy(()=>qF),recordedBy:t.lazy(()=>FF)}).strict(),N1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>DF).optional(),ingrediente:t.lazy(()=>EF).optional(),recordedBy:t.lazy(()=>_F).optional()}).strict(),q1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oW=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pP=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D1=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>LF),createdBy:t.lazy(()=>VF),items:t.lazy(()=>HF).optional()}).strict(),E1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QF).optional()}).strict(),_1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YF).optional(),createdBy:t.lazy(()=>GF).optional(),items:t.lazy(()=>$F).optional()}).strict(),L1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JF).optional()}).strict(),nW=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H1=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>KF),recipe:t.lazy(()=>XF),assignedTo:t.lazy(()=>tD).optional()}).strict(),Q1=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Y1=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>eD).optional(),recipe:t.lazy(()=>oD).optional(),assignedTo:t.lazy(()=>nD).optional()}).strict(),G1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aW=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cP=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J1=t.object({taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>Fct)}).strict(),K1=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),X1=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>Dct).optional()}).strict(),t9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iW=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EB=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o9=t.object({dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Ect)}).strict(),n9=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),a9=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>_ct).optional()}).strict(),i9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lW=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_B=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r9=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Lct)}).strict(),p9=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c9=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Vct).optional()}).strict(),u9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rW=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LB=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y9=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>aD),recipe:t.lazy(()=>iD).optional(),createdBy:t.lazy(()=>lD)}).strict(),d9=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z9=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>rD).optional(),recipe:t.lazy(()=>pD).optional(),createdBy:t.lazy(()=>cD).optional()}).strict(),m9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pW=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uP=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b9=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Hct).optional()}).strict(),I9=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Qct).optional()}).strict(),g9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Yct).optional()}).strict(),C9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Gct).optional()}).strict(),cW=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),A9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),S9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),T9=t.object({ingredient:t.lazy(()=>e6),allergen:t.lazy(()=>o6)}).strict(),P9=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),W9=t.object({ingredient:t.lazy(()=>n6).optional(),allergen:t.lazy(()=>a6).optional()}).strict(),R9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),uW=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),MM=t.object({}).strict(),U9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),k9=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>$ct)}).strict(),x9=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),j9=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Jct).optional()}).strict(),M9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sW=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VB=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v9=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),O9=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),f9=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yW=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),N9=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>i6).optional(),users:t.lazy(()=>l6).optional()}).strict(),F9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>r6).optional(),users:t.lazy(()=>p6).optional()}).strict(),D9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>c6).optional(),users:t.lazy(()=>u6).optional()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>s6).optional(),users:t.lazy(()=>y6).optional()}).strict(),dW=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V9=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>cZ),items:t.lazy(()=>uZ).optional(),transactions:t.lazy(()=>sZ).optional(),stockCounts:t.lazy(()=>yZ).optional()}).strict(),H9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>dZ).optional(),transactions:t.lazy(()=>zZ).optional(),stockCounts:t.lazy(()=>mZ).optional()}).strict(),Q9=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>hZ).optional(),items:t.lazy(()=>bZ).optional(),transactions:t.lazy(()=>IZ).optional(),stockCounts:t.lazy(()=>gZ).optional()}).strict(),Y9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>CZ).optional(),transactions:t.lazy(()=>AZ).optional(),stockCounts:t.lazy(()=>SZ).optional()}).strict(),zW=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G9=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),K9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),X9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),t$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),mW=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),HB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),e$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),o$=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),n$=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),a$=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),i$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),hW=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZM=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r$=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional(),user:t.lazy(()=>Kct)}).strict(),p$=t.object({id:t.string().uuid().optional(),userId:t.number().int(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),c$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional(),user:t.lazy(()=>Xct).optional()}).strict(),u$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),bW=t.object({id:t.string().uuid().optional(),userId:t.number().int(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),QB=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),s$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),y$=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>tut)}).strict(),d$=t.object({id:t.string().uuid().optional(),userId:t.number().int(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),z$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>eut).optional()}).strict(),m$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IW=t.object({id:t.string().uuid().optional(),userId:t.number().int(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),YB=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h$=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b$=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>d6).optional(),restaurant:t.lazy(()=>z6).optional()}).strict(),I$=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>m6).optional()}).strict(),g$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>h6).optional(),restaurant:t.lazy(()=>b6).optional()}).strict(),C$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>I6).optional()}).strict(),gW=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),GB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),A$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),S$=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),T$=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),P$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),W$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),CW=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional()}).strict(),_I=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),R$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),U$=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),k$=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),x$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),j$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),AW=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),vM=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),M$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Z$=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>uD),ingredient:t.lazy(()=>sD),recipeVersion:t.lazy(()=>yD).optional()}).strict(),v$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),O$=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>dD).optional(),ingredient:t.lazy(()=>zD).optional(),recipeVersion:t.lazy(()=>mD).optional()}).strict(),f$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),SW=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),sP=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),N$=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>hD),RecipeVersion:t.lazy(()=>bD).optional(),equipment:t.lazy(()=>ID).optional()}).strict(),B$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>gD).optional()}).strict(),q$=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>CD).optional(),RecipeVersion:t.lazy(()=>AD).optional(),equipment:t.lazy(()=>SD).optional()}).strict(),F$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>TD).optional()}).strict(),TW=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),OM=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),D$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),E$=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),ingredient:t.lazy(()=>pT),lastUpdatedBy:t.lazy(()=>cT).optional(),transactions:t.lazy(()=>uT).optional(),withdrawals:t.lazy(()=>sT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),_$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),L$=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),ingredient:t.lazy(()=>bT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),transactions:t.lazy(()=>gT).optional(),withdrawals:t.lazy(()=>CT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),V$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),withdrawals:t.lazy(()=>TT).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),PW=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),yP=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),H$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),Q$=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>PD),item:t.lazy(()=>WD),createdBy:t.lazy(()=>RD)}).strict(),Y$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),G$=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>UD).optional(),item:t.lazy(()=>kD).optional(),createdBy:t.lazy(()=>xD).optional()}).strict(),$$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WW=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),dP=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K$=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>jD),createdBy:t.lazy(()=>MD),items:t.lazy(()=>ZD).optional()}).strict(),X$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>vD).optional()}).strict(),t4=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>OD).optional(),createdBy:t.lazy(()=>fD).optional(),items:t.lazy(()=>wD).optional()}).strict(),e4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>ND).optional()}).strict(),RW=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),fM=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),o4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),n4=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>g6),item:t.lazy(()=>C6)}).strict(),a4=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),i4=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>A6).optional(),item:t.lazy(()=>S6).optional()}).strict(),l4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),UW=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),wM=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),r4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),p4=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>out)}).strict(),c4=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),u4=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>nut).optional()}).strict(),s4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),kW=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),y4=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),d4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),z4=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),vendor:t.lazy(()=>qD),items:t.lazy(()=>FD).optional()}).strict(),m4=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>DD).optional()}).strict(),h4=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),vendor:t.lazy(()=>_D).optional(),items:t.lazy(()=>LD).optional()}).strict(),b4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>VD).optional()}).strict(),xW=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NM=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g4=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>T6),ingredient:t.lazy(()=>P6)}).strict(),C4=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),A4=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>W6).optional(),ingredient:t.lazy(()=>R6).optional()}).strict(),S4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),jW=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),BM=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),T4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),P4=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>HD).optional(),ingredients:t.lazy(()=>QD).optional(),supplierPriceHistory:t.lazy(()=>YD).optional()}).strict(),W4=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>GD).optional(),ingredients:t.lazy(()=>$D).optional(),supplierPriceHistory:t.lazy(()=>JD).optional()}).strict(),R4=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>KD).optional(),ingredients:t.lazy(()=>XD).optional(),supplierPriceHistory:t.lazy(()=>tE).optional()}).strict(),U4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>eE).optional(),ingredients:t.lazy(()=>oE).optional(),supplierPriceHistory:t.lazy(()=>nE).optional()}).strict(),MW=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$B=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x4=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),user:t.lazy(()=>U6),tasks:t.lazy(()=>k6).optional()}).strict(),j4=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>x6).optional()}).strict(),M4=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional(),user:t.lazy(()=>j6).optional(),tasks:t.lazy(()=>M6).optional()}).strict(),Z4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional(),tasks:t.lazy(()=>Z6).optional()}).strict(),ZW=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),JB=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional()}).strict(),v4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional()}).strict(),O4=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>v6).optional(),prepItems:t.lazy(()=>O6).optional()}).strict(),f4=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>f6).optional(),prepItems:t.lazy(()=>w6).optional()}).strict(),w4=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>N6).optional(),prepItems:t.lazy(()=>B6).optional()}).strict(),N4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>q6).optional(),prepItems:t.lazy(()=>F6).optional()}).strict(),vW=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q4=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>aE),recipe:t.lazy(()=>iE),assignedTo:t.lazy(()=>lE)}).strict(),F4=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),D4=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),prepBoard:t.lazy(()=>rE).optional(),recipe:t.lazy(()=>pE).optional(),assignedTo:t.lazy(()=>cE).optional()}).strict(),E4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),OW=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),zP=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional()}).strict(),_4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),L4=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>aut)}).strict(),V4=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),H4=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>iut).optional()}).strict(),Q4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fW=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XB=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G4=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>uE),menuItems:t.lazy(()=>sE).optional(),MenuCategory:t.lazy(()=>yE).optional()}).strict(),$4=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dE).optional(),MenuCategory:t.lazy(()=>zE).optional()}).strict(),J4=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mE).optional(),menuItems:t.lazy(()=>hE).optional(),MenuCategory:t.lazy(()=>bE).optional()}).strict(),K4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>IE).optional(),MenuCategory:t.lazy(()=>gE).optional()}).strict(),wW=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tq=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t2=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>D6),recipe:t.lazy(()=>E6)}).strict(),e2=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),o2=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>_6).optional(),recipe:t.lazy(()=>L6).optional()}).strict(),n2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NW=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),qM=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i2=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),l2=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),r2=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),p2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),BW=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),VS=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional()}).strict(),c2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),u2=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>lut).optional()}).strict(),s2=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),y2=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>rut).optional()}).strict(),d2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qW=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z2=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h2=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>put)}).strict(),b2=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),I2=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>cut).optional()}).strict(),g2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FW=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eq=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A2=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>uut)}).strict(),S2=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T2=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>sut).optional()}).strict(),P2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DW=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oq=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W2=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>nt)]).optional()}).strict(),U=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>lp)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>IM).optional(),not:t.union([t.string(),t.lazy(()=>mS)]).optional()}).strict(),zt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>hS)]).optional()}).strict(),de=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>V6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>lp).optional(),_sum:t.lazy(()=>nt).optional(),_min:t.lazy(()=>nt).optional(),_max:t.lazy(()=>nt).optional()}).strict(),Wt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>H6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>lp).optional(),_sum:t.lazy(()=>lp).optional(),_min:t.lazy(()=>lp).optional(),_max:t.lazy(()=>lp).optional()}).strict(),mt=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>IM).optional(),not:t.union([t.string(),t.lazy(()=>Q6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),Kn=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>Y6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),et=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>rp)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>IM).optional(),not:t.union([t.string(),t.lazy(()=>bS)]).optional().nullable()}).strict(),z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>IS)]).optional()}).strict(),g=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>Btt).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Xn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>G6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_avg:t.lazy(()=>rp).optional(),_sum:t.lazy(()=>rp).optional(),_min:t.lazy(()=>rp).optional(),_max:t.lazy(()=>rp).optional()}).strict(),Ut=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>IM).optional(),not:t.union([t.string(),t.lazy(()=>$6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),Z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>J6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),Xot=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),nq=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>gS)]).optional()}).strict(),at=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Pl)]).optional().nullable()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),rnt=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>K6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),wa=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>X6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_avg:t.lazy(()=>rp).optional(),_sum:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>Pl).optional(),_max:t.lazy(()=>Pl).optional()}).strict(),pnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),dnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),Int=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Cnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ant=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Snt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),ta=t.object({is:t.lazy(()=>N).optional(),isNot:t.lazy(()=>N).optional()}).strict(),LI=t.object({is:t.lazy(()=>Tt).optional(),isNot:t.lazy(()=>Tt).optional()}).strict(),Tnt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),FM=t.object({is:t.lazy(()=>fe).optional(),isNot:t.lazy(()=>fe).optional()}).strict(),VI=t.object({every:t.lazy(()=>Tt).optional(),some:t.lazy(()=>Tt).optional(),none:t.lazy(()=>Tt).optional()}).strict(),DM=t.object({_count:t.lazy(()=>e).optional()}).strict(),aB=t.object({menuId:t.number(),name:t.string()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),jnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Znt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),$t=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>CS)]).optional().nullable()}).strict(),HS=t.object({every:t.lazy(()=>Ua).optional(),some:t.lazy(()=>Ua).optional(),none:t.lazy(()=>Ua).optional()}).strict(),EM=t.object({every:t.lazy(()=>Be).optional(),some:t.lazy(()=>Be).optional(),none:t.lazy(()=>Be).optional()}).strict(),we=t.object({is:t.lazy(()=>M).optional(),isNot:t.lazy(()=>M).optional()}).strict(),HI=t.object({is:t.lazy(()=>M).optional().nullable(),isNot:t.lazy(()=>M).optional().nullable()}).strict(),aq=t.object({_count:t.lazy(()=>e).optional()}).strict(),R2=t.object({_count:t.lazy(()=>e).optional()}).strict(),iB=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Kr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>t3)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),iq=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>AS)]).optional()}).strict(),QS=t.object({every:t.lazy(()=>ca).optional(),some:t.lazy(()=>ca).optional(),none:t.lazy(()=>ca).optional()}).strict(),U2=t.object({every:t.lazy(()=>ua).optional(),some:t.lazy(()=>ua).optional(),none:t.lazy(()=>ua).optional()}).strict(),lq=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),qnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Dnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ent=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_nt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>e3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),_M=t.object({is:t.lazy(()=>Ze).optional(),isNot:t.lazy(()=>Ze).optional()}).strict(),k2=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),lB=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),Vnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),rq=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>SS)]).optional()}).strict(),$nt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tat=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),eat=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>o3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>SS).optional(),_max:t.lazy(()=>SS).optional()}).strict(),pq=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>TS)]).optional()}).strict(),x2=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),LM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),j2=t.object({_count:t.lazy(()=>e).optional()}).strict(),nat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),pat=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>n3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>TS).optional(),_max:t.lazy(()=>TS).optional()}).strict(),cq=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>PS)]).optional()}).strict(),VM=t.object({is:t.lazy(()=>ve).optional(),isNot:t.lazy(()=>ve).optional()}).strict(),HM=t.object({every:t.lazy(()=>sa).optional(),some:t.lazy(()=>sa).optional(),none:t.lazy(()=>sa).optional()}).strict(),M2=t.object({_count:t.lazy(()=>e).optional()}).strict(),cat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),uat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),sat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),zat=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>a3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>PS).optional(),_max:t.lazy(()=>PS).optional()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),uq=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>WS)]).optional()}).strict(),Wl=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),Z2=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),v2=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pat=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),Wat=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>i3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>WS).optional(),_max:t.lazy(()=>WS).optional()}).strict(),QM=t.object({is:t.lazy(()=>Oe).optional(),isNot:t.lazy(()=>Oe).optional()}).strict(),yp=t.object({is:t.lazy(()=>jt).optional(),isNot:t.lazy(()=>jt).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jat=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),sq=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>RS)]).optional()}).strict(),yq=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>US)]).optional()}).strict(),YM=t.object({is:t.lazy(()=>Tt).optional().nullable(),isNot:t.lazy(()=>Tt).optional().nullable()}).strict(),Mat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),vat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),wat=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>l3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>RS).optional(),_max:t.lazy(()=>RS).optional()}).strict(),Nat=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>r3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>US).optional(),_max:t.lazy(()=>US).optional()}).strict(),dp=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),GM=t.object({every:t.lazy(()=>jt).optional(),some:t.lazy(()=>jt).optional(),none:t.lazy(()=>jt).optional()}).strict(),YS=t.object({_count:t.lazy(()=>e).optional()}).strict(),O2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qat=t.object({id:t.lazy(()=>e).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lat=t.object({id:t.lazy(()=>e).optional()}).strict(),Vat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),dq=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>kS)]).optional()}).strict(),GS=t.object({every:t.lazy(()=>Ia).optional(),some:t.lazy(()=>Ia).optional(),none:t.lazy(()=>Ia).optional()}).strict(),zq=t.object({_count:t.lazy(()=>e).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),cit=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>p3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>kS).optional(),_max:t.lazy(()=>kS).optional()}).strict(),f2=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),mq=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>xS)]).optional()}).strict(),w2=t.object({is:t.lazy(()=>Xe).optional(),isNot:t.lazy(()=>Xe).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iit=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),Cit=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>c3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>xS).optional(),_max:t.lazy(()=>xS).optional()}).strict(),hq=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>jS)]).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Rit=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>u3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>jS).optional(),_max:t.lazy(()=>jS).optional()}).strict(),bq=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>MS)]).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Zit=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>s3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>MS).optional(),_max:t.lazy(()=>MS).optional()}).strict(),$S=t.object({is:t.lazy(()=>ie).optional(),isNot:t.lazy(()=>ie).optional()}).strict(),N2=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),$M=t.object({every:t.lazy(()=>Ta).optional(),some:t.lazy(()=>Ta).optional(),none:t.lazy(()=>Ta).optional()}).strict(),B2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional()}).strict(),q2=t.object({is:t.lazy(()=>co).optional(),isNot:t.lazy(()=>co).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),$it=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Xit=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tlt=t.object({id:t.lazy(()=>e).optional()}).strict(),elt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),olt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nlt=t.object({id:t.lazy(()=>e).optional()}).strict(),F2=t.object({every:t.lazy(()=>N).optional(),some:t.lazy(()=>N).optional(),none:t.lazy(()=>N).optional()}).strict(),JM=t.object({every:t.lazy(()=>M).optional(),some:t.lazy(()=>M).optional(),none:t.lazy(()=>M).optional()}).strict(),alt=t.object({_count:t.lazy(()=>e).optional()}).strict(),D2=t.object({_count:t.lazy(()=>e).optional()}).strict(),ilt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),llt=t.object({id:t.lazy(()=>e).optional()}).strict(),rlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),plt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),clt=t.object({id:t.lazy(()=>e).optional()}).strict(),E2=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>ZS)]).optional()}).strict(),JS=t.object({every:t.lazy(()=>ie).optional(),some:t.lazy(()=>ie).optional(),none:t.lazy(()=>ie).optional()}).strict(),KS=t.object({every:t.lazy(()=>ka).optional(),some:t.lazy(()=>ka).optional(),none:t.lazy(()=>ka).optional()}).strict(),KM=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),Iq=t.object({_count:t.lazy(()=>e).optional()}).strict(),gq=t.object({_count:t.lazy(()=>e).optional()}).strict(),_2=t.object({_count:t.lazy(()=>e).optional()}).strict(),ult=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),slt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),ylt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dlt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zlt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),mlt=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>y3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>ZS).optional(),_max:t.lazy(()=>ZS).optional()}).strict(),XM=t.object({is:t.lazy(()=>Me).optional().nullable(),isNot:t.lazy(()=>Me).optional().nullable()}).strict(),L2=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),V2=t.object({is:t.lazy(()=>Ft).optional().nullable(),isNot:t.lazy(()=>Ft).optional().nullable()}).strict(),tZ=t.object({every:t.lazy(()=>Ke).optional(),some:t.lazy(()=>Ke).optional(),none:t.lazy(()=>Ke).optional()}).strict(),H2=t.object({every:t.lazy(()=>fe).optional(),some:t.lazy(()=>fe).optional(),none:t.lazy(()=>fe).optional()}).strict(),eZ=t.object({every:t.lazy(()=>pa).optional(),some:t.lazy(()=>pa).optional(),none:t.lazy(()=>pa).optional()}).strict(),XS=t.object({every:t.lazy(()=>ha).optional(),some:t.lazy(()=>ha).optional(),none:t.lazy(()=>ha).optional()}).strict(),tT=t.object({every:t.lazy(()=>ba).optional(),some:t.lazy(()=>ba).optional(),none:t.lazy(()=>ba).optional()}).strict(),oZ=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),Q2=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),Y2=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),eT=t.object({every:t.lazy(()=>da).optional(),some:t.lazy(()=>da).optional(),none:t.lazy(()=>da).optional()}).strict(),hlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),G2=t.object({_count:t.lazy(()=>e).optional()}).strict(),blt=t.object({_count:t.lazy(()=>e).optional()}).strict(),$2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Cq=t.object({_count:t.lazy(()=>e).optional()}).strict(),Aq=t.object({_count:t.lazy(()=>e).optional()}).strict(),J2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ilt=t.object({_count:t.lazy(()=>e).optional()}).strict(),glt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Sq=t.object({_count:t.lazy(()=>e).optional()}).strict(),Clt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Alt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Slt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Tlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Plt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),nZ=t.object({is:t.lazy(()=>N).optional().nullable(),isNot:t.lazy(()=>N).optional().nullable()}).strict(),K2=t.object({every:t.lazy(()=>Xe).optional(),some:t.lazy(()=>Xe).optional(),none:t.lazy(()=>Xe).optional()}).strict(),oT=t.object({every:t.lazy(()=>Ma).optional(),some:t.lazy(()=>Ma).optional(),none:t.lazy(()=>Ma).optional()}).strict(),X2=t.object({every:t.lazy(()=>Ra).optional(),some:t.lazy(()=>Ra).optional(),none:t.lazy(()=>Ra).optional()}).strict(),t5=t.object({every:t.lazy(()=>Za).optional(),some:t.lazy(()=>Za).optional(),none:t.lazy(()=>Za).optional()}).strict(),e5=t.object({every:t.lazy(()=>Ca).optional(),some:t.lazy(()=>Ca).optional(),none:t.lazy(()=>Ca).optional()}).strict(),o5=t.object({every:t.lazy(()=>Aa).optional(),some:t.lazy(()=>Aa).optional(),none:t.lazy(()=>Aa).optional()}).strict(),nT=t.object({every:t.lazy(()=>Sa).optional(),some:t.lazy(()=>Sa).optional(),none:t.lazy(()=>Sa).optional()}).strict(),zS=t.object({every:t.lazy(()=>ae).optional(),some:t.lazy(()=>ae).optional(),none:t.lazy(()=>ae).optional()}).strict(),n5=t.object({every:t.lazy(()=>Wa).optional(),some:t.lazy(()=>Wa).optional(),none:t.lazy(()=>Wa).optional()}).strict(),Wlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Tq=t.object({_count:t.lazy(()=>e).optional()}).strict(),Rlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ult=t.object({_count:t.lazy(()=>e).optional()}).strict(),klt=t.object({_count:t.lazy(()=>e).optional()}).strict(),xlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Pq=t.object({_count:t.lazy(()=>e).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),jlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Mlt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zlt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),vlt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Olt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),flt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Wq=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>vS)]).optional()}).strict(),wlt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),Nlt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Blt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),qlt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),Flt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Dlt=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>d3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>vS).optional(),_max:t.lazy(()=>vS).optional()}).strict(),Elt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),_lt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Llt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Vlt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Hlt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Qlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ylt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Glt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),$lt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Jlt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Rq=t.object({equals:t.lazy(()=>R).optional(),in:t.lazy(()=>R).array().optional(),notIn:t.lazy(()=>R).array().optional(),not:t.union([t.lazy(()=>R),t.lazy(()=>OS)]).optional()}).strict(),Uq=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>fS)]).optional()}).strict(),a5=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),i5=t.object({every:t.lazy(()=>Oa).optional(),some:t.lazy(()=>Oa).optional(),none:t.lazy(()=>Oa).optional()}).strict(),l5=t.object({every:t.lazy(()=>fa).optional(),some:t.lazy(()=>fa).optional(),none:t.lazy(()=>fa).optional()}).strict(),r5=t.object({every:t.lazy(()=>to).optional(),some:t.lazy(()=>to).optional(),none:t.lazy(()=>to).optional()}).strict(),aZ=t.object({every:t.lazy(()=>va).optional(),some:t.lazy(()=>va).optional(),none:t.lazy(()=>va).optional()}).strict(),p5=t.object({every:t.lazy(()=>ma).optional(),some:t.lazy(()=>ma).optional(),none:t.lazy(()=>ma).optional()}).strict(),aT=t.object({every:t.lazy(()=>za).optional(),some:t.lazy(()=>za).optional(),none:t.lazy(()=>za).optional()}).strict(),c5=t.object({every:t.lazy(()=>ia).optional(),some:t.lazy(()=>ia).optional(),none:t.lazy(()=>ia).optional()}).strict(),u5=t.object({every:t.lazy(()=>la).optional(),some:t.lazy(()=>la).optional(),none:t.lazy(()=>la).optional()}).strict(),s5=t.object({every:t.lazy(()=>ra).optional(),some:t.lazy(()=>ra).optional(),none:t.lazy(()=>ra).optional()}).strict(),y5=t.object({is:t.lazy(()=>qe).optional().nullable(),isNot:t.lazy(()=>qe).optional().nullable()}).strict(),d5=t.object({every:t.lazy(()=>na).optional(),some:t.lazy(()=>na).optional(),none:t.lazy(()=>na).optional()}).strict(),z5=t.object({is:t.lazy(()=>Fe).optional().nullable(),isNot:t.lazy(()=>Fe).optional().nullable()}).strict(),m5=t.object({every:t.lazy(()=>aa).optional(),some:t.lazy(()=>aa).optional(),none:t.lazy(()=>aa).optional()}).strict(),h5=t.object({is:t.lazy(()=>De).optional().nullable(),isNot:t.lazy(()=>De).optional().nullable()}).strict(),Klt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Xlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),trt=t.object({_count:t.lazy(()=>e).optional()}).strict(),b5=t.object({_count:t.lazy(()=>e).optional()}).strict(),ert=t.object({_count:t.lazy(()=>e).optional()}).strict(),kq=t.object({_count:t.lazy(()=>e).optional()}).strict(),ort=t.object({_count:t.lazy(()=>e).optional()}).strict(),nrt=t.object({_count:t.lazy(()=>e).optional()}).strict(),art=t.object({_count:t.lazy(()=>e).optional()}).strict(),irt=t.object({_count:t.lazy(()=>e).optional()}).strict(),lrt=t.object({_count:t.lazy(()=>e).optional()}).strict(),rrt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),prt=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),crt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),urt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),srt=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),yrt=t.object({equals:t.lazy(()=>R).optional(),in:t.lazy(()=>R).array().optional(),notIn:t.lazy(()=>R).array().optional(),not:t.union([t.lazy(()=>R),t.lazy(()=>z3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>OS).optional(),_max:t.lazy(()=>OS).optional()}).strict(),drt=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>m3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>fS).optional(),_max:t.lazy(()=>fS).optional()}).strict(),xq=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>wS)]).optional().nullable()}).strict(),iZ=t.object({every:t.lazy(()=>ja).optional(),some:t.lazy(()=>ja).optional(),none:t.lazy(()=>ja).optional()}).strict(),I5=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),lZ=t.object({every:t.lazy(()=>ya).optional(),some:t.lazy(()=>ya).optional(),none:t.lazy(()=>ya).optional()}).strict(),g5=t.object({_count:t.lazy(()=>e).optional()}).strict(),zrt=t.object({_count:t.lazy(()=>e).optional()}).strict(),C5=t.object({_count:t.lazy(()=>e).optional()}).strict(),mrt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),hrt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),brt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),Irt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),grt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),Crt=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>h3)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>wS).optional(),_max:t.lazy(()=>wS).optional()}).strict(),QI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),rZ=t.object({is:t.lazy(()=>ae).optional().nullable(),isNot:t.lazy(()=>ae).optional().nullable()}).strict(),tP=t.object({recipeId:t.number(),recipeVersionId:t.number()}).strict(),eP=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),Art=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Srt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Trt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Prt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Wrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),rB=t.object({recipeId:t.number(),stepNumber:t.number(),recipeVersionId:t.number()}).strict(),Rrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),Urt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),krt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),xrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),jrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),iT=t.object({is:t.lazy(()=>Ft).optional(),isNot:t.lazy(()=>Ft).optional()}).strict(),pZ=t.object({every:t.lazy(()=>xa).optional(),some:t.lazy(()=>xa).optional(),none:t.lazy(()=>xa).optional()}).strict(),A5=t.object({_count:t.lazy(()=>e).optional()}).strict(),pB=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),Mrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Zrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),vrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Ort=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),frt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),jq=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>NS)]).optional()}).strict(),wrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Nrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Brt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),qrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Frt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Drt=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>b3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>NS).optional(),_max:t.lazy(()=>NS).optional()}).strict(),Mq=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>BS)]).optional()}).strict(),Ert=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),_rt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Lrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Vrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Hrt=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Qrt=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>I3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>BS).optional(),_max:t.lazy(()=>BS).optional()}).strict(),S5=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),cB=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Yrt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Grt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),$rt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Jrt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Krt=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Xrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),tpt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),ept=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),opt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),npt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Zq=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>qS)]).optional()}).strict(),apt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ipt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),lpt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rpt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ppt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),cpt=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>g3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>qS).optional(),_max:t.lazy(()=>qS).optional()}).strict(),T5=t.object({is:t.lazy(()=>Ke).optional(),isNot:t.lazy(()=>Ke).optional()}).strict(),upt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),spt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),ypt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),dpt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),zpt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),mpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hpt=t.object({id:t.lazy(()=>e).optional()}).strict(),bpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ipt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gpt=t.object({id:t.lazy(()=>e).optional()}).strict(),vq=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>FS)]).optional()}).strict(),P5=t.object({every:t.lazy(()=>ga).optional(),some:t.lazy(()=>ga).optional(),none:t.lazy(()=>ga).optional()}).strict(),Cpt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Apt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Spt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Tpt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Ppt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Wpt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Rpt=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>C3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>FS).optional(),_max:t.lazy(()=>FS).optional()}).strict(),lT=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>DS)]).optional()}).strict(),Upt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),kpt=t.object({id:t.lazy(()=>e).optional()}).strict(),xpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mpt=t.object({id:t.lazy(()=>e).optional()}).strict(),W5=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>A3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>DS).optional(),_max:t.lazy(()=>DS).optional()}).strict(),R5=t.object({is:t.lazy(()=>to).optional(),isNot:t.lazy(()=>to).optional()}).strict(),Zpt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),vpt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Opt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),fpt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),wpt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Npt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bpt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),qpt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fpt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dpt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),U5=t.object({every:t.lazy(()=>Ne).optional(),some:t.lazy(()=>Ne).optional(),none:t.lazy(()=>Ne).optional()}).strict(),Ept=t.object({_count:t.lazy(()=>e).optional()}).strict(),_pt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lpt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Vpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hpt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qpt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),uB=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Ypt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Gpt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),$pt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Jpt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Kpt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Yh=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),k5=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),x5=t.object({is:t.lazy(()=>Ee).optional().nullable(),isNot:t.lazy(()=>Ee).optional().nullable()}).strict(),j5=t.object({every:t.lazy(()=>Pa).optional(),some:t.lazy(()=>Pa).optional(),none:t.lazy(()=>Pa).optional()}).strict(),Xpt=t.object({_count:t.lazy(()=>e).optional()}).strict(),tct=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),ect=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),oct=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),nct=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),act=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),ict=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lct=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),rct=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pct=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cct=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),uct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),yct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),mct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),bct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ict=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gct=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),Cct=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>C).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),a=t.object({set:t.string().optional()}).strict(),d=t.object({set:t.boolean().optional()}).strict(),Act=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>yut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>dut),t.lazy(()=>CE),t.lazy(()=>AE)]).optional()}).strict(),n=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Sct=t.object({create:t.union([t.lazy(()=>WZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>C).optional()}).strict(),u=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),Tct=t.object({create:t.union([t.lazy(()=>WZ),t.lazy(()=>RZ)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>zut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>mut),t.lazy(()=>SE),t.lazy(()=>TE)]).optional()}).strict(),Pct=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Wct=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>hut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>but),t.lazy(()=>PE),t.lazy(()=>WE)]).optional()}).strict(),Rct=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>C).optional()}).strict(),BC=t.object({set:t.lazy(()=>ye).optional()}).strict(),h=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Uct=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Iut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>gut),t.lazy(()=>RE),t.lazy(()=>UE)]).optional()}).strict(),kct=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>C).optional()}).strict(),xct=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>Cut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Aut),t.lazy(()=>kE),t.lazy(()=>xE)]).optional()}).strict(),jct=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Mct=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>Sut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Tut),t.lazy(()=>jE),t.lazy(()=>ME)]).optional()}).strict(),Zct=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>C).optional()}).strict(),vct=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>Put).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Wut),t.lazy(()=>ZE),t.lazy(()=>vE)]).optional()}).strict(),M5=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),connect:t.lazy(()=>K).optional()}).strict(),Z5=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>x).optional()}).strict(),v5=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),upsert:t.lazy(()=>Rut).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Uut),t.lazy(()=>OE),t.lazy(()=>fE)]).optional()}).strict(),O5=t.object({create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>kut).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>xut),t.lazy(()=>wE),t.lazy(()=>NE)]).optional()}).strict(),f5=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),w5=t.object({create:t.union([t.lazy(()=>ic),t.lazy(()=>ic).array(),t.lazy(()=>lc),t.lazy(()=>lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>_Z).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),N5=t.object({create:t.union([t.lazy(()=>ic),t.lazy(()=>ic).array(),t.lazy(()=>lc),t.lazy(()=>lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>_Z).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),B5=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>jut).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Mut),t.lazy(()=>BE),t.lazy(()=>qE)]).optional()}).strict(),q5=t.object({create:t.union([t.lazy(()=>ic),t.lazy(()=>ic).array(),t.lazy(()=>lc),t.lazy(()=>lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>_Z).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),F5=t.object({create:t.union([t.lazy(()=>ic),t.lazy(()=>ic).array(),t.lazy(()=>lc),t.lazy(()=>lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>_Z).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),mP=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>C).optional()}).strict(),hP=t.object({create:t.union([t.lazy(()=>rc),t.lazy(()=>rc).array(),t.lazy(()=>pc),t.lazy(()=>pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),bP=t.object({create:t.union([t.lazy(()=>cc),t.lazy(()=>cc).array(),t.lazy(()=>uc),t.lazy(()=>uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),IP=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>j).optional()}).strict(),gP=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),connect:t.lazy(()=>j).optional()}).strict(),CP=t.object({create:t.union([t.lazy(()=>rc),t.lazy(()=>rc).array(),t.lazy(()=>pc),t.lazy(()=>pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),AP=t.object({create:t.union([t.lazy(()=>cc),t.lazy(()=>cc).array(),t.lazy(()=>uc),t.lazy(()=>uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),SP=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>Zut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>vut),t.lazy(()=>FE),t.lazy(()=>DE)]).optional()}).strict(),TP=t.object({create:t.union([t.lazy(()=>rc),t.lazy(()=>rc).array(),t.lazy(()=>pc),t.lazy(()=>pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),PP=t.object({create:t.union([t.lazy(()=>cc),t.lazy(()=>cc).array(),t.lazy(()=>uc),t.lazy(()=>uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),WP=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>Out).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>fut),t.lazy(()=>EE),t.lazy(()=>_E)]).optional()}).strict(),RP=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),upsert:t.lazy(()=>wut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Nut),t.lazy(()=>LE),t.lazy(()=>VE)]).optional()}).strict(),UP=t.object({create:t.union([t.lazy(()=>rc),t.lazy(()=>rc).array(),t.lazy(()=>pc),t.lazy(()=>pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),kP=t.object({create:t.union([t.lazy(()=>cc),t.lazy(()=>cc).array(),t.lazy(()=>uc),t.lazy(()=>uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),connect:t.lazy(()=>K).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>tv).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>dc),t.lazy(()=>dc).array(),t.lazy(()=>zc),t.lazy(()=>zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>ev).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>tv).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>dc),t.lazy(()=>dc).array(),t.lazy(()=>zc),t.lazy(()=>zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>ev).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Pp=t.object({set:t.lazy(()=>Bt).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),upsert:t.lazy(()=>But).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>qut),t.lazy(()=>HE),t.lazy(()=>QE)]).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>tv).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>dc),t.lazy(()=>dc).array(),t.lazy(()=>zc),t.lazy(()=>zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>ev).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>tv).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>dc),t.lazy(()=>dc).array(),t.lazy(()=>zc),t.lazy(()=>zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>ev).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),connect:t.lazy(()=>pt).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),upsert:t.lazy(()=>Fut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Dut),t.lazy(()=>YE),t.lazy(()=>GE)]).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),upsert:t.lazy(()=>Eut).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>_ut),t.lazy(()=>$E),t.lazy(()=>JE)]).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),upsert:t.lazy(()=>Lut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>pt).optional(),update:t.union([t.lazy(()=>Vut),t.lazy(()=>KE),t.lazy(()=>XE)]).optional()}).strict(),Oct=t.object({create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),qC=t.object({set:t.lazy(()=>re).optional()}).strict(),fct=t.object({create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),upsert:t.lazy(()=>Hut).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>Qut),t.lazy(()=>t_),t.lazy(()=>e_)]).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),connect:t.lazy(()=>K).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>mc),t.lazy(()=>mc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>yv).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>Ic),t.lazy(()=>Ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>dv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>mc),t.lazy(()=>mc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),createMany:t.lazy(()=>yv).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>Ic),t.lazy(()=>Ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),createMany:t.lazy(()=>dv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Wp=t.object({set:t.lazy(()=>qt).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>sv)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),upsert:t.lazy(()=>Yut).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Gut),t.lazy(()=>o_),t.lazy(()=>n_)]).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>mc),t.lazy(()=>mc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>yv).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>Ic),t.lazy(()=>Ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>dv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>mc),t.lazy(()=>mc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tb),t.lazy(()=>tb).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>yv).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>Ic),t.lazy(()=>Ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eb),t.lazy(()=>eb).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>dv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),D5=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),E5=t.object({create:t.union([t.lazy(()=>gc),t.lazy(()=>gc).array(),t.lazy(()=>Cc),t.lazy(()=>Cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>hv).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),_5=t.object({create:t.union([t.lazy(()=>gc),t.lazy(()=>gc).array(),t.lazy(()=>Cc),t.lazy(()=>Cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),createMany:t.lazy(()=>hv).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),rh=t.object({set:t.lazy(()=>Lt).optional()}).strict(),L5=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),upsert:t.lazy(()=>$ut).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Jut),t.lazy(()=>a_),t.lazy(()=>i_)]).optional()}).strict(),V5=t.object({create:t.union([t.lazy(()=>gc),t.lazy(()=>gc).array(),t.lazy(()=>Cc),t.lazy(()=>Cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>hv).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),H5=t.object({create:t.union([t.lazy(()=>gc),t.lazy(()=>gc).array(),t.lazy(()=>Cc),t.lazy(()=>Cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ob),t.lazy(()=>ob).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>hv).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),connect:t.lazy(()=>j).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>Ac),t.lazy(()=>Ac).array(),t.lazy(()=>Sc),t.lazy(()=>Sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>Av).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Ac),t.lazy(()=>Ac).array(),t.lazy(()=>Sc),t.lazy(()=>Sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),createMany:t.lazy(()=>Av).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),upsert:t.lazy(()=>Kut).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Xut),t.lazy(()=>l_),t.lazy(()=>r_)]).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),upsert:t.lazy(()=>tst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>est),t.lazy(()=>p_),t.lazy(()=>c_)]).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>Ac),t.lazy(()=>Ac).array(),t.lazy(()=>Sc),t.lazy(()=>Sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),createMany:t.lazy(()=>Av).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>Ac),t.lazy(()=>Ac).array(),t.lazy(()=>Sc),t.lazy(()=>Sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nb),t.lazy(()=>nb).array()]).optional(),upsert:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),createMany:t.lazy(()=>Av).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),ph=t.object({set:t.string().array()}).strict(),Q5=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>L3).optional(),connect:t.lazy(()=>lt).optional()}).strict(),Y5=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Wv)]).optional(),connectOrCreate:t.lazy(()=>V3).optional(),connect:t.lazy(()=>te).optional()}).strict(),am=t.object({set:t.lazy(()=>_t).optional()}).strict(),im=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),G5=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>L3).optional(),upsert:t.lazy(()=>ost).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>nst),t.lazy(()=>u_),t.lazy(()=>s_)]).optional()}).strict(),$5=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Wv)]).optional(),connectOrCreate:t.lazy(()=>V3).optional(),upsert:t.lazy(()=>ast).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>ist),t.lazy(()=>y_),t.lazy(()=>d_)]).optional()}).strict(),J5=t.object({create:t.union([t.lazy(()=>Rv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>H3).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),K5=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>Q3).optional(),connect:t.lazy(()=>$).optional()}).strict(),X5=t.object({create:t.union([t.lazy(()=>Rv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>H3).optional(),upsert:t.lazy(()=>lst).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>rst),t.lazy(()=>z_),t.lazy(()=>m_)]).optional()}).strict(),t6=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>Q3).optional(),upsert:t.lazy(()=>pst).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>cst),t.lazy(()=>h_),t.lazy(()=>b_)]).optional()}).strict(),zp=t.object({set:t.string().array()}).strict(),zF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>Y3).optional(),connect:t.lazy(()=>K).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),connect:t.lazy(()=>x).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>$3).optional(),connect:t.lazy(()=>j).optional()}).strict(),Xr=t.object({set:t.lazy(()=>Mt).optional()}).strict(),tp=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),ep=t.object({set:t.lazy(()=>Zt).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>Y3).optional(),upsert:t.lazy(()=>ust).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>sst),t.lazy(()=>I_),t.lazy(()=>g_)]).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),upsert:t.lazy(()=>yst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>dst),t.lazy(()=>C_),t.lazy(()=>A_)]).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>$3).optional(),upsert:t.lazy(()=>zst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>mst),t.lazy(()=>S_),t.lazy(()=>T_)]).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>Tc),t.lazy(()=>Tc).array(),t.lazy(()=>Pc),t.lazy(()=>Pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>kc),t.lazy(()=>kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Tc),t.lazy(()=>Tc).array(),t.lazy(()=>Pc),t.lazy(()=>Pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>kc),t.lazy(()=>kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Tc),t.lazy(()=>Tc).array(),t.lazy(()=>Pc),t.lazy(()=>Pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>kc),t.lazy(()=>kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Tc),t.lazy(()=>Tc).array(),t.lazy(()=>Pc),t.lazy(()=>Pc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ab),t.lazy(()=>ab).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ib),t.lazy(()=>ib).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>Uc),t.lazy(()=>Uc).array(),t.lazy(()=>kc),t.lazy(()=>kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lb),t.lazy(()=>lb).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),wct=t.object({create:t.union([t.lazy(()=>xc),t.lazy(()=>xc).array(),t.lazy(()=>jc),t.lazy(()=>jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Nct=t.object({create:t.union([t.lazy(()=>xc),t.lazy(()=>xc).array(),t.lazy(()=>jc),t.lazy(()=>jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Bct=t.object({create:t.union([t.lazy(()=>xc),t.lazy(()=>xc).array(),t.lazy(()=>jc),t.lazy(()=>jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),qct=t.object({create:t.union([t.lazy(()=>xc),t.lazy(()=>xc).array(),t.lazy(()=>jc),t.lazy(()=>jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rb),t.lazy(()=>rb).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>J3).optional(),connect:t.lazy(()=>K).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>K3).optional(),connect:t.lazy(()=>x).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>X3).optional(),connect:t.lazy(()=>j).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>J3).optional(),upsert:t.lazy(()=>hst).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>bst),t.lazy(()=>P_),t.lazy(()=>W_)]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>K3).optional(),upsert:t.lazy(()=>Ist).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>gst),t.lazy(()=>R_),t.lazy(()=>U_)]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>X3).optional(),upsert:t.lazy(()=>Cst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ast),t.lazy(()=>k_),t.lazy(()=>x_)]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>Ev),t.lazy(()=>_v)]).optional(),connectOrCreate:t.lazy(()=>t8).optional(),connect:t.lazy(()=>K).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Lv),t.lazy(()=>Vv)]).optional(),connectOrCreate:t.lazy(()=>e8).optional(),connect:t.lazy(()=>$).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>Hv),t.lazy(()=>Qv)]).optional(),connectOrCreate:t.lazy(()=>o8).optional(),connect:t.lazy(()=>j).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>Ev),t.lazy(()=>_v)]).optional(),connectOrCreate:t.lazy(()=>t8).optional(),upsert:t.lazy(()=>Sst).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Tst),t.lazy(()=>j_),t.lazy(()=>M_)]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>Lv),t.lazy(()=>Vv)]).optional(),connectOrCreate:t.lazy(()=>e8).optional(),upsert:t.lazy(()=>Pst).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Wst),t.lazy(()=>Z_),t.lazy(()=>v_)]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>Hv),t.lazy(()=>Qv)]).optional(),connectOrCreate:t.lazy(()=>o8).optional(),upsert:t.lazy(()=>Rst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ust),t.lazy(()=>O_),t.lazy(()=>f_)]).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>Yv),t.lazy(()=>Gv)]).optional(),connectOrCreate:t.lazy(()=>n8).optional(),connect:t.lazy(()=>K).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>$v),t.lazy(()=>Jv)]).optional(),connectOrCreate:t.lazy(()=>a8).optional(),connect:t.lazy(()=>j).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>Mc),t.lazy(()=>Mc).array(),t.lazy(()=>Zc),t.lazy(()=>Zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>Mc),t.lazy(()=>Mc).array(),t.lazy(()=>Zc),t.lazy(()=>Zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),mp=t.object({set:t.lazy(()=>Ot).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>Yv),t.lazy(()=>Gv)]).optional(),connectOrCreate:t.lazy(()=>n8).optional(),upsert:t.lazy(()=>kst).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>xst),t.lazy(()=>w_),t.lazy(()=>N_)]).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>$v),t.lazy(()=>Jv)]).optional(),connectOrCreate:t.lazy(()=>a8).optional(),upsert:t.lazy(()=>jst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Mst),t.lazy(()=>B_),t.lazy(()=>q_)]).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>Mc),t.lazy(()=>Mc).array(),t.lazy(()=>Zc),t.lazy(()=>Zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>Mc),t.lazy(()=>Mc).array(),t.lazy(()=>Zc),t.lazy(()=>Zc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pb),t.lazy(()=>pb).array()]).optional(),upsert:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>i8).optional(),connect:t.lazy(()=>rt).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]).optional(),connectOrCreate:t.lazy(()=>l8).optional(),connect:t.lazy(()=>C).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>r8).optional(),connect:t.lazy(()=>j).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>i8).optional(),upsert:t.lazy(()=>Zst).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>vst),t.lazy(()=>F_),t.lazy(()=>D_)]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]).optional(),connectOrCreate:t.lazy(()=>l8).optional(),upsert:t.lazy(()=>Ost).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>fst),t.lazy(()=>E_),t.lazy(()=>__)]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>r8).optional(),upsert:t.lazy(()=>wst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Nst),t.lazy(()=>L_),t.lazy(()=>V_)]).optional()}).strict(),Fct=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>p8).optional(),connect:t.lazy(()=>oe).optional()}).strict(),FC=t.object({set:t.lazy(()=>pe).optional()}).strict(),Dct=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>p8).optional(),upsert:t.lazy(()=>Bst).optional(),connect:t.lazy(()=>oe).optional(),update:t.union([t.lazy(()=>qst),t.lazy(()=>H_),t.lazy(()=>Q_)]).optional()}).strict(),Ect=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>c8).optional(),connect:t.lazy(()=>j).optional()}).strict(),DC=t.object({set:t.lazy(()=>ce).optional()}).strict(),_ct=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>c8).optional(),upsert:t.lazy(()=>Fst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Dst),t.lazy(()=>Y_),t.lazy(()=>G_)]).optional()}).strict(),Lct=t.object({create:t.union([t.lazy(()=>cO),t.lazy(()=>uO)]).optional(),connectOrCreate:t.lazy(()=>u8).optional(),connect:t.lazy(()=>j).optional()}).strict(),EC=t.object({set:t.lazy(()=>ue).optional()}).strict(),Vct=t.object({create:t.union([t.lazy(()=>cO),t.lazy(()=>uO)]).optional(),connectOrCreate:t.lazy(()=>u8).optional(),upsert:t.lazy(()=>Est).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>_st),t.lazy(()=>$_),t.lazy(()=>J_)]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>sO),t.lazy(()=>yO)]).optional(),connectOrCreate:t.lazy(()=>s8).optional(),connect:t.lazy(()=>f).optional()}).strict(),iD=t.object({create:t.union([t.lazy(()=>dO),t.lazy(()=>zO)]).optional(),connectOrCreate:t.lazy(()=>y8).optional(),connect:t.lazy(()=>C).optional()}).strict(),lD=t.object({create:t.union([t.lazy(()=>mO),t.lazy(()=>hO)]).optional(),connectOrCreate:t.lazy(()=>d8).optional(),connect:t.lazy(()=>j).optional()}).strict(),rD=t.object({create:t.union([t.lazy(()=>sO),t.lazy(()=>yO)]).optional(),connectOrCreate:t.lazy(()=>s8).optional(),upsert:t.lazy(()=>Lst).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Vst),t.lazy(()=>K_),t.lazy(()=>X_)]).optional()}).strict(),pD=t.object({create:t.union([t.lazy(()=>dO),t.lazy(()=>zO)]).optional(),connectOrCreate:t.lazy(()=>y8).optional(),upsert:t.lazy(()=>Hst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Qst),t.lazy(()=>tL),t.lazy(()=>eL)]).optional()}).strict(),cD=t.object({create:t.union([t.lazy(()=>mO),t.lazy(()=>hO)]).optional(),connectOrCreate:t.lazy(()=>d8).optional(),upsert:t.lazy(()=>Yst).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Gst),t.lazy(()=>oL),t.lazy(()=>nL)]).optional()}).strict(),Hct=t.object({create:t.union([t.lazy(()=>vc),t.lazy(()=>vc).array(),t.lazy(()=>Oc),t.lazy(()=>Oc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),Qct=t.object({create:t.union([t.lazy(()=>vc),t.lazy(()=>vc).array(),t.lazy(()=>Oc),t.lazy(()=>Oc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),Yct=t.object({create:t.union([t.lazy(()=>vc),t.lazy(()=>vc).array(),t.lazy(()=>Oc),t.lazy(()=>Oc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),Gct=t.object({create:t.union([t.lazy(()=>vc),t.lazy(()=>vc).array(),t.lazy(()=>Oc),t.lazy(()=>Oc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cb),t.lazy(()=>cb).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),e6=t.object({create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]).optional(),connectOrCreate:t.lazy(()=>z8).optional(),connect:t.lazy(()=>$).optional()}).strict(),o6=t.object({create:t.union([t.lazy(()=>CO),t.lazy(()=>AO)]).optional(),connectOrCreate:t.lazy(()=>m8).optional(),connect:t.lazy(()=>sp).optional()}).strict(),n6=t.object({create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]).optional(),connectOrCreate:t.lazy(()=>z8).optional(),upsert:t.lazy(()=>$st).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Jst),t.lazy(()=>aL),t.lazy(()=>iL)]).optional()}).strict(),a6=t.object({create:t.union([t.lazy(()=>CO),t.lazy(()=>AO)]).optional(),connectOrCreate:t.lazy(()=>m8).optional(),upsert:t.lazy(()=>Kst).optional(),connect:t.lazy(()=>sp).optional(),update:t.union([t.lazy(()=>Xst),t.lazy(()=>lL),t.lazy(()=>rL)]).optional()}).strict(),$ct=t.object({create:t.union([t.lazy(()=>SO),t.lazy(()=>TO)]).optional(),connectOrCreate:t.lazy(()=>h8).optional(),connect:t.lazy(()=>x).optional()}).strict(),Jct=t.object({create:t.union([t.lazy(()=>SO),t.lazy(()=>TO)]).optional(),connectOrCreate:t.lazy(()=>h8).optional(),upsert:t.lazy(()=>tyt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>eyt),t.lazy(()=>pL),t.lazy(()=>cL)]).optional()}).strict(),i6=t.object({create:t.union([t.lazy(()=>fc),t.lazy(()=>fc).array(),t.lazy(()=>wc),t.lazy(()=>wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),l6=t.object({create:t.union([t.lazy(()=>Nc),t.lazy(()=>Nc).array(),t.lazy(()=>Bc),t.lazy(()=>Bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),r6=t.object({create:t.union([t.lazy(()=>fc),t.lazy(()=>fc).array(),t.lazy(()=>wc),t.lazy(()=>wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),p6=t.object({create:t.union([t.lazy(()=>Nc),t.lazy(()=>Nc).array(),t.lazy(()=>Bc),t.lazy(()=>Bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),c6=t.object({create:t.union([t.lazy(()=>fc),t.lazy(()=>fc).array(),t.lazy(()=>wc),t.lazy(()=>wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),u6=t.object({create:t.union([t.lazy(()=>Nc),t.lazy(()=>Nc).array(),t.lazy(()=>Bc),t.lazy(()=>Bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),s6=t.object({create:t.union([t.lazy(()=>fc),t.lazy(()=>fc).array(),t.lazy(()=>wc),t.lazy(()=>wc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ub),t.lazy(()=>ub).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),y6=t.object({create:t.union([t.lazy(()=>Nc),t.lazy(()=>Nc).array(),t.lazy(()=>Bc),t.lazy(()=>Bc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sb),t.lazy(()=>sb).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),cZ=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>UO)]).optional(),connectOrCreate:t.lazy(()=>b8).optional(),connect:t.lazy(()=>K).optional()}).strict(),uZ=t.object({create:t.union([t.lazy(()=>qc),t.lazy(()=>qc).array(),t.lazy(()=>Fc),t.lazy(()=>Fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),sZ=t.object({create:t.union([t.lazy(()=>Dc),t.lazy(()=>Dc).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),yZ=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Lc),t.lazy(()=>Lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),dZ=t.object({create:t.union([t.lazy(()=>qc),t.lazy(()=>qc).array(),t.lazy(()=>Fc),t.lazy(()=>Fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),zZ=t.object({create:t.union([t.lazy(()=>Dc),t.lazy(()=>Dc).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),mZ=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Lc),t.lazy(()=>Lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),hp=t.object({set:t.lazy(()=>Nt).optional()}).strict(),hZ=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>UO)]).optional(),connectOrCreate:t.lazy(()=>b8).optional(),upsert:t.lazy(()=>oyt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>nyt),t.lazy(()=>uL),t.lazy(()=>sL)]).optional()}).strict(),bZ=t.object({create:t.union([t.lazy(()=>qc),t.lazy(()=>qc).array(),t.lazy(()=>Fc),t.lazy(()=>Fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),IZ=t.object({create:t.union([t.lazy(()=>Dc),t.lazy(()=>Dc).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),gZ=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Lc),t.lazy(()=>Lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),CZ=t.object({create:t.union([t.lazy(()=>qc),t.lazy(()=>qc).array(),t.lazy(()=>Fc),t.lazy(()=>Fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yb),t.lazy(()=>yb).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),AZ=t.object({create:t.union([t.lazy(()=>Dc),t.lazy(()=>Dc).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>db),t.lazy(()=>db).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),SZ=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Lc),t.lazy(()=>Lc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zb),t.lazy(()=>zb).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>I8).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>Vc),t.lazy(()=>Vc).array(),t.lazy(()=>Hc),t.lazy(()=>Hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>Qc),t.lazy(()=>Qc).array(),t.lazy(()=>Yc),t.lazy(()=>Yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)]).optional(),connectOrCreate:t.lazy(()=>fO).optional(),connect:t.lazy(()=>Jn).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>Gc),t.lazy(()=>Gc).array(),t.lazy(()=>$c),t.lazy(()=>$c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>Jc),t.lazy(()=>Jc).array(),t.lazy(()=>Kc),t.lazy(()=>Kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>Xc),t.lazy(()=>Xc).array(),t.lazy(()=>tu),t.lazy(()=>tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>eu),t.lazy(()=>eu).array(),t.lazy(()=>ou),t.lazy(()=>ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>iu),t.lazy(()=>iu).array(),t.lazy(()=>lu),t.lazy(()=>lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>ru),t.lazy(()=>ru).array(),t.lazy(()=>pu),t.lazy(()=>pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>cu),t.lazy(()=>cu).array(),t.lazy(()=>uu),t.lazy(()=>uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>du),t.lazy(()=>du).array(),t.lazy(()=>zu),t.lazy(()=>zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>Vc),t.lazy(()=>Vc).array(),t.lazy(()=>Hc),t.lazy(()=>Hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>Qc),t.lazy(()=>Qc).array(),t.lazy(()=>Yc),t.lazy(()=>Yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)]).optional(),connectOrCreate:t.lazy(()=>fO).optional(),connect:t.lazy(()=>Jn).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>Gc),t.lazy(()=>Gc).array(),t.lazy(()=>$c),t.lazy(()=>$c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>Jc),t.lazy(()=>Jc).array(),t.lazy(()=>Kc),t.lazy(()=>Kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>Xc),t.lazy(()=>Xc).array(),t.lazy(()=>tu),t.lazy(()=>tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>eu),t.lazy(()=>eu).array(),t.lazy(()=>ou),t.lazy(()=>ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>iu),t.lazy(()=>iu).array(),t.lazy(()=>lu),t.lazy(()=>lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>ru),t.lazy(()=>ru).array(),t.lazy(()=>pu),t.lazy(()=>pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>cu),t.lazy(()=>cu).array(),t.lazy(()=>uu),t.lazy(()=>uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>du),t.lazy(()=>du).array(),t.lazy(()=>zu),t.lazy(()=>zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]).optional(),connectOrCreate:t.lazy(()=>I8).optional(),upsert:t.lazy(()=>ayt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>iyt),t.lazy(()=>yL),t.lazy(()=>dL)]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>Vc),t.lazy(()=>Vc).array(),t.lazy(()=>Hc),t.lazy(()=>Hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>Qc),t.lazy(()=>Qc).array(),t.lazy(()=>Yc),t.lazy(()=>Yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)]).optional(),connectOrCreate:t.lazy(()=>fO).optional(),upsert:t.lazy(()=>g8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),connect:t.lazy(()=>Jn).optional(),update:t.union([t.lazy(()=>C8),t.lazy(()=>HO),t.lazy(()=>QO)]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>Gc),t.lazy(()=>Gc).array(),t.lazy(()=>$c),t.lazy(()=>$c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>Jc),t.lazy(()=>Jc).array(),t.lazy(()=>Kc),t.lazy(()=>Kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>Xc),t.lazy(()=>Xc).array(),t.lazy(()=>tu),t.lazy(()=>tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>eu),t.lazy(()=>eu).array(),t.lazy(()=>ou),t.lazy(()=>ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>iu),t.lazy(()=>iu).array(),t.lazy(()=>lu),t.lazy(()=>lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>ru),t.lazy(()=>ru).array(),t.lazy(()=>pu),t.lazy(()=>pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>cu),t.lazy(()=>cu).array(),t.lazy(()=>uu),t.lazy(()=>uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>du),t.lazy(()=>du).array(),t.lazy(()=>zu),t.lazy(()=>zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Br=t.object({create:t.union([t.lazy(()=>Vc),t.lazy(()=>Vc).array(),t.lazy(()=>Hc),t.lazy(()=>Hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mb),t.lazy(()=>mb).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),qr=t.object({create:t.union([t.lazy(()=>Qc),t.lazy(()=>Qc).array(),t.lazy(()=>Yc),t.lazy(()=>Yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hb),t.lazy(()=>hb).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Fr=t.object({create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)]).optional(),connectOrCreate:t.lazy(()=>fO).optional(),upsert:t.lazy(()=>g8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),connect:t.lazy(()=>Jn).optional(),update:t.union([t.lazy(()=>C8),t.lazy(()=>HO),t.lazy(()=>QO)]).optional()}).strict(),Dr=t.object({create:t.union([t.lazy(()=>Gc),t.lazy(()=>Gc).array(),t.lazy(()=>$c),t.lazy(()=>$c).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bb),t.lazy(()=>bb).array()]).optional(),upsert:t.union([t.lazy(()=>tU),t.lazy(()=>tU).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>eU),t.lazy(()=>eU).array()]).optional(),updateMany:t.union([t.lazy(()=>oU),t.lazy(()=>oU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),Er=t.object({create:t.union([t.lazy(()=>Jc),t.lazy(()=>Jc).array(),t.lazy(()=>Kc),t.lazy(()=>Kc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ib),t.lazy(()=>Ib).array()]).optional(),upsert:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),_r=t.object({create:t.union([t.lazy(()=>Xc),t.lazy(()=>Xc).array(),t.lazy(()=>tu),t.lazy(()=>tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gb),t.lazy(()=>gb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Lr=t.object({create:t.union([t.lazy(()=>eu),t.lazy(()=>eu).array(),t.lazy(()=>ou),t.lazy(()=>ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Cb),t.lazy(()=>Cb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),Vr=t.object({create:t.union([t.lazy(()=>nu),t.lazy(()=>nu).array(),t.lazy(()=>au),t.lazy(()=>au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ab),t.lazy(()=>Ab).array()]).optional(),upsert:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Hr=t.object({create:t.union([t.lazy(()=>iu),t.lazy(()=>iu).array(),t.lazy(()=>lu),t.lazy(()=>lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sb),t.lazy(()=>Sb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),updateMany:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Qr=t.object({create:t.union([t.lazy(()=>ru),t.lazy(()=>ru).array(),t.lazy(()=>pu),t.lazy(()=>pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Tb),t.lazy(()=>Tb).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),Yr=t.object({create:t.union([t.lazy(()=>cu),t.lazy(()=>cu).array(),t.lazy(()=>uu),t.lazy(()=>uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Pb),t.lazy(()=>Pb).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Gr=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wb),t.lazy(()=>Wb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),$r=t.object({create:t.union([t.lazy(()=>du),t.lazy(()=>du).array(),t.lazy(()=>zu),t.lazy(()=>zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rb),t.lazy(()=>Rb).array()]).optional(),upsert:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),qa=t.object({create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]).optional(),connectOrCreate:t.lazy(()=>A8).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),Fa=t.object({create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]).optional(),connectOrCreate:t.lazy(()=>S8).optional(),connect:t.lazy(()=>K).optional()}).strict(),Da=t.object({create:t.union([t.lazy(()=>mu),t.lazy(()=>mu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),Ea=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>Iu),t.lazy(()=>Iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),_a=t.object({create:t.union([t.lazy(()=>gu),t.lazy(()=>gu).array(),t.lazy(()=>Cu),t.lazy(()=>Cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),La=t.object({create:t.union([t.lazy(()=>Au),t.lazy(()=>Au).array(),t.lazy(()=>Su),t.lazy(()=>Su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),Va=t.object({create:t.union([t.lazy(()=>Tu),t.lazy(()=>Tu).array(),t.lazy(()=>Pu),t.lazy(()=>Pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),Ha=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Qa=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>ku),t.lazy(()=>ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ya=t.object({create:t.union([t.lazy(()=>xu),t.lazy(()=>xu).array(),t.lazy(()=>ju),t.lazy(()=>ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Ga=t.object({create:t.union([t.lazy(()=>Mu),t.lazy(()=>Mu).array(),t.lazy(()=>Zu),t.lazy(()=>Zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),$a=t.object({create:t.union([t.lazy(()=>vu),t.lazy(()=>vu).array(),t.lazy(()=>Ou),t.lazy(()=>Ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Ja=t.object({create:t.union([t.lazy(()=>fu),t.lazy(()=>fu).array(),t.lazy(()=>wu),t.lazy(()=>wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Ka=t.object({create:t.union([t.lazy(()=>Nu),t.lazy(()=>Nu).array(),t.lazy(()=>Bu),t.lazy(()=>Bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Xa=t.object({create:t.union([t.lazy(()=>qu),t.lazy(()=>qu).array(),t.lazy(()=>Fu),t.lazy(()=>Fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>Du),t.lazy(()=>Du).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Lu),t.lazy(()=>Lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>Vu),t.lazy(()=>Vu).array(),t.lazy(()=>Hu),t.lazy(()=>Hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Qu),t.lazy(()=>Qu).array(),t.lazy(()=>Yu),t.lazy(()=>Yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>Gu),t.lazy(()=>Gu).array(),t.lazy(()=>$u),t.lazy(()=>$u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>hf).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ju).array(),t.lazy(()=>Ku),t.lazy(()=>Ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>bf).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>mu),t.lazy(()=>mu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>Iu),t.lazy(()=>Iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>gu),t.lazy(()=>gu).array(),t.lazy(()=>Cu),t.lazy(()=>Cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>Au),t.lazy(()=>Au).array(),t.lazy(()=>Su),t.lazy(()=>Su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>Tu),t.lazy(()=>Tu).array(),t.lazy(()=>Pu),t.lazy(()=>Pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>ku),t.lazy(()=>ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>xu),t.lazy(()=>xu).array(),t.lazy(()=>ju),t.lazy(()=>ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>Mu),t.lazy(()=>Mu).array(),t.lazy(()=>Zu),t.lazy(()=>Zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>vu),t.lazy(()=>vu).array(),t.lazy(()=>Ou),t.lazy(()=>Ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>fu),t.lazy(()=>fu).array(),t.lazy(()=>wu),t.lazy(()=>wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>Nu),t.lazy(()=>Nu).array(),t.lazy(()=>Bu),t.lazy(()=>Bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>qu),t.lazy(()=>qu).array(),t.lazy(()=>Fu),t.lazy(()=>Fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>Du),t.lazy(()=>Du).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Lu),t.lazy(()=>Lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>Vu),t.lazy(()=>Vu).array(),t.lazy(()=>Hu),t.lazy(()=>Hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Qu),t.lazy(()=>Qu).array(),t.lazy(()=>Yu),t.lazy(()=>Yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>Gu),t.lazy(()=>Gu).array(),t.lazy(()=>$u),t.lazy(()=>$u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>hf).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ju).array(),t.lazy(()=>Ku),t.lazy(()=>Ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>bf).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]).optional(),connectOrCreate:t.lazy(()=>A8).optional(),upsert:t.lazy(()=>lyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>ryt),t.lazy(()=>zL),t.lazy(()=>mL)]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]).optional(),connectOrCreate:t.lazy(()=>S8).optional(),upsert:t.lazy(()=>pyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>cyt),t.lazy(()=>hL),t.lazy(()=>bL)]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>mu),t.lazy(()=>mu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>Iu),t.lazy(()=>Iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>gu),t.lazy(()=>gu).array(),t.lazy(()=>Cu),t.lazy(()=>Cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>Au),t.lazy(()=>Au).array(),t.lazy(()=>Su),t.lazy(()=>Su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>Tu),t.lazy(()=>Tu).array(),t.lazy(()=>Pu),t.lazy(()=>Pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>ku),t.lazy(()=>ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>xu),t.lazy(()=>xu).array(),t.lazy(()=>ju),t.lazy(()=>ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>Mu),t.lazy(()=>Mu).array(),t.lazy(()=>Zu),t.lazy(()=>Zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>vu),t.lazy(()=>vu).array(),t.lazy(()=>Ou),t.lazy(()=>Ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>fu),t.lazy(()=>fu).array(),t.lazy(()=>wu),t.lazy(()=>wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>Nu),t.lazy(()=>Nu).array(),t.lazy(()=>Bu),t.lazy(()=>Bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>qu),t.lazy(()=>qu).array(),t.lazy(()=>Fu),t.lazy(()=>Fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>Du),t.lazy(()=>Du).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Lu),t.lazy(()=>Lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Vu),t.lazy(()=>Vu).array(),t.lazy(()=>Hu),t.lazy(()=>Hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Qu),t.lazy(()=>Qu).array(),t.lazy(()=>Yu),t.lazy(()=>Yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>Gu),t.lazy(()=>Gu).array(),t.lazy(()=>$u),t.lazy(()=>$u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),createMany:t.lazy(()=>hf).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ju).array(),t.lazy(()=>Ku),t.lazy(()=>Ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>bf).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>mu),t.lazy(()=>mu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ub),t.lazy(()=>Ub).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>Iu),t.lazy(()=>Iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>gu),t.lazy(()=>gu).array(),t.lazy(()=>Cu),t.lazy(()=>Cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>Au),t.lazy(()=>Au).array(),t.lazy(()=>Su),t.lazy(()=>Su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>Tu),t.lazy(()=>Tu).array(),t.lazy(()=>Pu),t.lazy(()=>Pu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>Uu),t.lazy(()=>Uu).array(),t.lazy(()=>ku),t.lazy(()=>ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>xu),t.lazy(()=>xu).array(),t.lazy(()=>ju),t.lazy(()=>ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>Mu),t.lazy(()=>Mu).array(),t.lazy(()=>Zu),t.lazy(()=>Zu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>vu),t.lazy(()=>vu).array(),t.lazy(()=>Ou),t.lazy(()=>Ou).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>fu),t.lazy(()=>fu).array(),t.lazy(()=>wu),t.lazy(()=>wu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>Nu),t.lazy(()=>Nu).array(),t.lazy(()=>Bu),t.lazy(()=>Bu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>qu),t.lazy(()=>qu).array(),t.lazy(()=>Fu),t.lazy(()=>Fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>Du),t.lazy(()=>Du).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Lu),t.lazy(()=>Lu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Vu),t.lazy(()=>Vu).array(),t.lazy(()=>Hu),t.lazy(()=>Hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),pl=t.object({create:t.union([t.lazy(()=>Qu),t.lazy(()=>Qu).array(),t.lazy(()=>Yu),t.lazy(()=>Yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),cl=t.object({create:t.union([t.lazy(()=>Gu),t.lazy(()=>Gu).array(),t.lazy(()=>$u),t.lazy(()=>$u).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),createMany:t.lazy(()=>hf).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),ul=t.object({create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ju).array(),t.lazy(()=>Ku),t.lazy(()=>Ku).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>bf).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),Kct=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>T8).optional(),connect:t.lazy(()=>j).optional()}).strict(),_C=t.object({set:t.lazy(()=>se).optional()}).strict(),Xct=t.object({create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]).optional(),connectOrCreate:t.lazy(()=>T8).optional(),upsert:t.lazy(()=>uyt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>syt),t.lazy(()=>IL),t.lazy(()=>gL)]).optional()}).strict(),tut=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>P8).optional(),connect:t.lazy(()=>j).optional()}).strict(),eut=t.object({create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]).optional(),connectOrCreate:t.lazy(()=>P8).optional(),upsert:t.lazy(()=>yyt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>dyt),t.lazy(()=>CL),t.lazy(()=>AL)]).optional()}).strict(),d6=t.object({create:t.union([t.lazy(()=>Xu),t.lazy(()=>Xu).array(),t.lazy(()=>ts),t.lazy(()=>ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),z6=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>W8).optional(),connect:t.lazy(()=>K).optional()}).strict(),m6=t.object({create:t.union([t.lazy(()=>Xu),t.lazy(()=>Xu).array(),t.lazy(()=>ts),t.lazy(()=>ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),h6=t.object({create:t.union([t.lazy(()=>Xu),t.lazy(()=>Xu).array(),t.lazy(()=>ts),t.lazy(()=>ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),b6=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>W8).optional(),upsert:t.lazy(()=>zyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>myt),t.lazy(()=>SL),t.lazy(()=>TL)]).optional()}).strict(),I6=t.object({create:t.union([t.lazy(()=>Xu),t.lazy(()=>Xu).array(),t.lazy(()=>ts),t.lazy(()=>ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Pt=t.object({set:t.string().array()}).strict(),so=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>R8).optional(),connect:t.lazy(()=>K).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>Uf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>U8).optional(),connect:t.lazy(()=>ee).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>es),t.lazy(()=>es).array(),t.lazy(()=>os),t.lazy(()=>os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>is),t.lazy(()=>is).array(),t.lazy(()=>ls),t.lazy(()=>ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>rs),t.lazy(()=>rs).array(),t.lazy(()=>ps),t.lazy(()=>ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>cs),t.lazy(()=>cs).array(),t.lazy(()=>us),t.lazy(()=>us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>ds),t.lazy(()=>ds).array(),t.lazy(()=>zs),t.lazy(()=>zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ms),t.lazy(()=>ms).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Of).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>Is),t.lazy(()=>Is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>gs),t.lazy(()=>gs).array(),t.lazy(()=>Cs),t.lazy(()=>Cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>wf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>As),t.lazy(()=>As).array(),t.lazy(()=>Ss),t.lazy(()=>Ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ts).array(),t.lazy(()=>Ps),t.lazy(()=>Ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>Bf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>Us),t.lazy(()=>Us).array(),t.lazy(()=>ks),t.lazy(()=>ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>xs),t.lazy(()=>xs).array(),t.lazy(()=>js),t.lazy(()=>js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>qf).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>Ms),t.lazy(()=>Ms).array(),t.lazy(()=>Zs),t.lazy(()=>Zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Ff).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>vs),t.lazy(()=>vs).array(),t.lazy(()=>Os),t.lazy(()=>Os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Df).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>Ef).optional(),connect:t.lazy(()=>Ql).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>fs),t.lazy(()=>fs).array(),t.lazy(()=>ws),t.lazy(()=>ws).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)]).optional(),connectOrCreate:t.lazy(()=>Lf).optional(),connect:t.lazy(()=>Yl).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>Ns),t.lazy(()=>Ns).array(),t.lazy(()=>Bs),t.lazy(()=>Bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)]).optional(),connectOrCreate:t.lazy(()=>Hf).optional(),connect:t.lazy(()=>Gl).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>es),t.lazy(()=>es).array(),t.lazy(()=>os),t.lazy(()=>os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>is),t.lazy(()=>is).array(),t.lazy(()=>ls),t.lazy(()=>ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>rs),t.lazy(()=>rs).array(),t.lazy(()=>ps),t.lazy(()=>ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>cs),t.lazy(()=>cs).array(),t.lazy(()=>us),t.lazy(()=>us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>ds),t.lazy(()=>ds).array(),t.lazy(()=>zs),t.lazy(()=>zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ms),t.lazy(()=>ms).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Of).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>Is),t.lazy(()=>Is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>gs),t.lazy(()=>gs).array(),t.lazy(()=>Cs),t.lazy(()=>Cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>wf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>As),t.lazy(()=>As).array(),t.lazy(()=>Ss),t.lazy(()=>Ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ts).array(),t.lazy(()=>Ps),t.lazy(()=>Ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>Bf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>Us),t.lazy(()=>Us).array(),t.lazy(()=>ks),t.lazy(()=>ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>xs),t.lazy(()=>xs).array(),t.lazy(()=>js),t.lazy(()=>js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>qf).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>Ms),t.lazy(()=>Ms).array(),t.lazy(()=>Zs),t.lazy(()=>Zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Ff).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>vs),t.lazy(()=>vs).array(),t.lazy(()=>Os),t.lazy(()=>Os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Df).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>Ef).optional(),connect:t.lazy(()=>Ql).optional()}).strict(),tn=t.object({create:t.union([t.lazy(()=>fs),t.lazy(()=>fs).array(),t.lazy(()=>ws),t.lazy(()=>ws).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>_f).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),en=t.object({create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)]).optional(),connectOrCreate:t.lazy(()=>Lf).optional(),connect:t.lazy(()=>Yl).optional()}).strict(),on=t.object({create:t.union([t.lazy(()=>Ns),t.lazy(()=>Ns).array(),t.lazy(()=>Bs),t.lazy(()=>Bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),nn=t.object({create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)]).optional(),connectOrCreate:t.lazy(()=>Hf).optional(),connect:t.lazy(()=>Gl).optional()}).strict(),st=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),yt=t.object({set:t.lazy(()=>R).optional()}).strict(),dt=t.object({set:t.lazy(()=>W).optional()}).strict(),an=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>R8).optional(),upsert:t.lazy(()=>hyt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>byt),t.lazy(()=>PL),t.lazy(()=>WL)]).optional()}).strict(),ln=t.object({create:t.union([t.lazy(()=>Uf),t.lazy(()=>kf)]).optional(),connectOrCreate:t.lazy(()=>U8).optional(),upsert:t.lazy(()=>Iyt).optional(),connect:t.lazy(()=>ee).optional(),update:t.union([t.lazy(()=>gyt),t.lazy(()=>RL),t.lazy(()=>UL)]).optional()}).strict(),rn=t.object({create:t.union([t.lazy(()=>es),t.lazy(()=>es).array(),t.lazy(()=>os),t.lazy(()=>os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),pn=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),cn=t.object({create:t.union([t.lazy(()=>is),t.lazy(()=>is).array(),t.lazy(()=>ls),t.lazy(()=>ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),un=t.object({create:t.union([t.lazy(()=>rs),t.lazy(()=>rs).array(),t.lazy(()=>ps),t.lazy(()=>ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),sn=t.object({create:t.union([t.lazy(()=>cs),t.lazy(()=>cs).array(),t.lazy(()=>us),t.lazy(()=>us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),yn=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),dn=t.object({create:t.union([t.lazy(()=>ds),t.lazy(()=>ds).array(),t.lazy(()=>zs),t.lazy(()=>zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),zn=t.object({create:t.union([t.lazy(()=>ms),t.lazy(()=>ms).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>Of).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),mn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>Is),t.lazy(()=>Is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),hn=t.object({create:t.union([t.lazy(()=>gs),t.lazy(()=>gs).array(),t.lazy(()=>Cs),t.lazy(()=>Cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>wf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),bn=t.object({create:t.union([t.lazy(()=>As),t.lazy(()=>As).array(),t.lazy(()=>Ss),t.lazy(()=>Ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),In=t.object({create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ts).array(),t.lazy(()=>Ps),t.lazy(()=>Ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),gn=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>Bf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),Cn=t.object({create:t.union([t.lazy(()=>Us),t.lazy(()=>Us).array(),t.lazy(()=>ks),t.lazy(()=>ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),An=t.object({create:t.union([t.lazy(()=>xs),t.lazy(()=>xs).array(),t.lazy(()=>js),t.lazy(()=>js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>qf).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional()}).strict(),Sn=t.object({create:t.union([t.lazy(()=>Ms),t.lazy(()=>Ms).array(),t.lazy(()=>Zs),t.lazy(()=>Zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),createMany:t.lazy(()=>Ff).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional()}).strict(),Tn=t.object({create:t.union([t.lazy(()=>vs),t.lazy(()=>vs).array(),t.lazy(()=>Os),t.lazy(()=>Os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Df).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional()}).strict(),Pn=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>Ef).optional(),upsert:t.lazy(()=>k8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Ql).optional(),update:t.union([t.lazy(()=>x8),t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional()}).strict(),Wn=t.object({create:t.union([t.lazy(()=>fs),t.lazy(()=>fs).array(),t.lazy(()=>ws),t.lazy(()=>ws).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional()}).strict(),Rn=t.object({create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)]).optional(),connectOrCreate:t.lazy(()=>Lf).optional(),upsert:t.lazy(()=>j8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Yl).optional(),update:t.union([t.lazy(()=>M8),t.lazy(()=>Gf),t.lazy(()=>$f)]).optional()}).strict(),Un=t.object({create:t.union([t.lazy(()=>Ns),t.lazy(()=>Ns).array(),t.lazy(()=>Bs),t.lazy(()=>Bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional()}).strict(),kn=t.object({create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)]).optional(),connectOrCreate:t.lazy(()=>Hf).optional(),upsert:t.lazy(()=>Z8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Gl).optional(),update:t.union([t.lazy(()=>v8),t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional()}).strict(),xn=t.object({create:t.union([t.lazy(()=>es),t.lazy(()=>es).array(),t.lazy(()=>os),t.lazy(()=>os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),jn=t.object({create:t.union([t.lazy(()=>ns),t.lazy(()=>ns).array(),t.lazy(()=>as),t.lazy(()=>as).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Mn=t.object({create:t.union([t.lazy(()=>is),t.lazy(()=>is).array(),t.lazy(()=>ls),t.lazy(()=>ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Zn=t.object({create:t.union([t.lazy(()=>rs),t.lazy(()=>rs).array(),t.lazy(()=>ps),t.lazy(()=>ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),vn=t.object({create:t.union([t.lazy(()=>cs),t.lazy(()=>cs).array(),t.lazy(()=>us),t.lazy(()=>us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),On=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),fn=t.object({create:t.union([t.lazy(()=>ds),t.lazy(()=>ds).array(),t.lazy(()=>zs),t.lazy(()=>zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),wn=t.object({create:t.union([t.lazy(()=>ms),t.lazy(()=>ms).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>Of).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),Nn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>Is),t.lazy(()=>Is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),Bn=t.object({create:t.union([t.lazy(()=>gs),t.lazy(()=>gs).array(),t.lazy(()=>Cs),t.lazy(()=>Cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>wf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),qn=t.object({create:t.union([t.lazy(()=>As),t.lazy(()=>As).array(),t.lazy(()=>Ss),t.lazy(()=>Ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ts).array(),t.lazy(()=>Ps),t.lazy(()=>Ps).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>Bf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>Us),t.lazy(()=>Us).array(),t.lazy(()=>ks),t.lazy(()=>ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>xs),t.lazy(()=>xs).array(),t.lazy(()=>js),t.lazy(()=>js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>qf).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>Ms),t.lazy(()=>Ms).array(),t.lazy(()=>Zs),t.lazy(()=>Zs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),createMany:t.lazy(()=>Ff).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>vs),t.lazy(()=>vs).array(),t.lazy(()=>Os),t.lazy(()=>Os).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Df).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>Ef).optional(),upsert:t.lazy(()=>k8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Ql).optional(),update:t.union([t.lazy(()=>x8),t.lazy(()=>Qf),t.lazy(()=>Yf)]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>fs),t.lazy(()=>fs).array(),t.lazy(()=>ws),t.lazy(()=>ws).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>_f).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)]).optional(),connectOrCreate:t.lazy(()=>Lf).optional(),upsert:t.lazy(()=>j8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Yl).optional(),update:t.union([t.lazy(()=>M8),t.lazy(()=>Gf),t.lazy(()=>$f)]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>Ns),t.lazy(()=>Ns).array(),t.lazy(()=>Bs),t.lazy(()=>Bs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional()}).strict(),$n=t.object({create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)]).optional(),connectOrCreate:t.lazy(()=>Hf).optional(),upsert:t.lazy(()=>Z8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Gl).optional(),update:t.union([t.lazy(()=>v8),t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>qs),t.lazy(()=>qs).array(),t.lazy(()=>Fs),t.lazy(()=>Fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>Ds),t.lazy(()=>Ds).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>tw).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Ls),t.lazy(()=>Ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ew).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>Vs),t.lazy(()=>Vs).array(),t.lazy(()=>Hs),t.lazy(()=>Hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),KI=t.object({create:t.union([t.lazy(()=>Qs),t.lazy(()=>Qs).array(),t.lazy(()=>Ys),t.lazy(()=>Ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>ow).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),XI=t.object({create:t.union([t.lazy(()=>Gs),t.lazy(()=>Gs).array(),t.lazy(()=>$s),t.lazy(()=>$s).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),tg=t.object({create:t.union([t.lazy(()=>Js),t.lazy(()=>Js).array(),t.lazy(()=>Ks),t.lazy(()=>Ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>aw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),eg=t.object({create:t.union([t.lazy(()=>Xs),t.lazy(()=>Xs).array(),t.lazy(()=>ty),t.lazy(()=>ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),og=t.object({create:t.union([t.lazy(()=>qs),t.lazy(()=>qs).array(),t.lazy(()=>Fs),t.lazy(()=>Fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),ng=t.object({create:t.union([t.lazy(()=>Ds),t.lazy(()=>Ds).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>tw).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ag=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Ls),t.lazy(()=>Ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ew).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),ig=t.object({create:t.union([t.lazy(()=>Vs),t.lazy(()=>Vs).array(),t.lazy(()=>Hs),t.lazy(()=>Hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),lg=t.object({create:t.union([t.lazy(()=>Qs),t.lazy(()=>Qs).array(),t.lazy(()=>Ys),t.lazy(()=>Ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>ow).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),rg=t.object({create:t.union([t.lazy(()=>Gs),t.lazy(()=>Gs).array(),t.lazy(()=>$s),t.lazy(()=>$s).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>nw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),pg=t.object({create:t.union([t.lazy(()=>Js),t.lazy(()=>Js).array(),t.lazy(()=>Ks),t.lazy(()=>Ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>aw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),cg=t.object({create:t.union([t.lazy(()=>Xs),t.lazy(()=>Xs).array(),t.lazy(()=>ty),t.lazy(()=>ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ea=t.object({set:t.lazy(()=>ot).optional().nullable()}).strict(),ug=t.object({create:t.union([t.lazy(()=>qs),t.lazy(()=>qs).array(),t.lazy(()=>Fs),t.lazy(()=>Fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),sg=t.object({create:t.union([t.lazy(()=>Ds),t.lazy(()=>Ds).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),createMany:t.lazy(()=>tw).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),yg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Ls),t.lazy(()=>Ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>ew).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),dg=t.object({create:t.union([t.lazy(()=>Vs),t.lazy(()=>Vs).array(),t.lazy(()=>Hs),t.lazy(()=>Hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional()}).strict(),zg=t.object({create:t.union([t.lazy(()=>Qs),t.lazy(()=>Qs).array(),t.lazy(()=>Ys),t.lazy(()=>Ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>ow).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),mg=t.object({create:t.union([t.lazy(()=>Gs),t.lazy(()=>Gs).array(),t.lazy(()=>$s),t.lazy(()=>$s).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),hg=t.object({create:t.union([t.lazy(()=>Js),t.lazy(()=>Js).array(),t.lazy(()=>Ks),t.lazy(()=>Ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>aw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional()}).strict(),bg=t.object({create:t.union([t.lazy(()=>Xs),t.lazy(()=>Xs).array(),t.lazy(()=>ty),t.lazy(()=>ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Ig=t.object({create:t.union([t.lazy(()=>qs),t.lazy(()=>qs).array(),t.lazy(()=>Fs),t.lazy(()=>Fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),createMany:t.lazy(()=>Xf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),gg=t.object({create:t.union([t.lazy(()=>Ds),t.lazy(()=>Ds).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),createMany:t.lazy(()=>tw).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Cg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Ls),t.lazy(()=>Ls).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>ew).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),Ag=t.object({create:t.union([t.lazy(()=>Vs),t.lazy(()=>Vs).array(),t.lazy(()=>Hs),t.lazy(()=>Hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional()}).strict(),Sg=t.object({create:t.union([t.lazy(()=>Qs),t.lazy(()=>Qs).array(),t.lazy(()=>Ys),t.lazy(()=>Ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>ow).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Tg=t.object({create:t.union([t.lazy(()=>Gs),t.lazy(()=>Gs).array(),t.lazy(()=>$s),t.lazy(()=>$s).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>nw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),Pg=t.object({create:t.union([t.lazy(()=>Js),t.lazy(()=>Js).array(),t.lazy(()=>Ks),t.lazy(()=>Ks).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>aw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional()}).strict(),Wg=t.object({create:t.union([t.lazy(()=>Xs),t.lazy(()=>Xs).array(),t.lazy(()=>ty),t.lazy(()=>ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),bp=t.object({set:t.number().array()}).strict(),uD=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>O8).optional(),connect:t.lazy(()=>C).optional()}).strict(),sD=t.object({create:t.union([t.lazy(()=>rw),t.lazy(()=>pw)]).optional(),connectOrCreate:t.lazy(()=>f8).optional(),connect:t.lazy(()=>$).optional()}).strict(),yD=t.object({create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]).optional(),connectOrCreate:t.lazy(()=>w8).optional(),connect:t.lazy(()=>w).optional()}).strict(),op=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),dD=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>O8).optional(),upsert:t.lazy(()=>Cyt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Ayt),t.lazy(()=>kL),t.lazy(()=>xL)]).optional()}).strict(),zD=t.object({create:t.union([t.lazy(()=>rw),t.lazy(()=>pw)]).optional(),connectOrCreate:t.lazy(()=>f8).optional(),upsert:t.lazy(()=>Syt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Tyt),t.lazy(()=>jL),t.lazy(()=>ML)]).optional()}).strict(),mD=t.object({create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]).optional(),connectOrCreate:t.lazy(()=>w8).optional(),upsert:t.lazy(()=>Pyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Wyt),t.lazy(()=>ZL),t.lazy(()=>vL)]).optional()}).strict(),hD=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>N8).optional(),connect:t.lazy(()=>C).optional()}).strict(),bD=t.object({create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]).optional(),connectOrCreate:t.lazy(()=>B8).optional(),connect:t.lazy(()=>w).optional()}).strict(),ID=t.object({create:t.union([t.lazy(()=>ey),t.lazy(()=>ey).array(),t.lazy(()=>oy),t.lazy(()=>oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),gD=t.object({create:t.union([t.lazy(()=>ey),t.lazy(()=>ey).array(),t.lazy(()=>oy),t.lazy(()=>oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),CD=t.object({create:t.union([t.lazy(()=>sw),t.lazy(()=>yw)]).optional(),connectOrCreate:t.lazy(()=>N8).optional(),upsert:t.lazy(()=>Ryt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Uyt),t.lazy(()=>OL),t.lazy(()=>fL)]).optional()}).strict(),AD=t.object({create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]).optional(),connectOrCreate:t.lazy(()=>B8).optional(),upsert:t.lazy(()=>kyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>xyt),t.lazy(()=>wL),t.lazy(()=>NL)]).optional()}).strict(),SD=t.object({create:t.union([t.lazy(()=>ey),t.lazy(()=>ey).array(),t.lazy(()=>oy),t.lazy(()=>oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),TD=t.object({create:t.union([t.lazy(()=>ey),t.lazy(()=>ey).array(),t.lazy(()=>oy),t.lazy(()=>oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),rT=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>q8).optional(),connect:t.lazy(()=>Jn).optional()}).strict(),pT=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>F8).optional(),connect:t.lazy(()=>$).optional()}).strict(),cT=t.object({create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]).optional(),connectOrCreate:t.lazy(()=>D8).optional(),connect:t.lazy(()=>j).optional()}).strict(),uT=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),sT=t.object({create:t.union([t.lazy(()=>iy),t.lazy(()=>iy).array(),t.lazy(()=>ly),t.lazy(()=>ly).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),yT=t.object({create:t.union([t.lazy(()=>ry),t.lazy(()=>ry).array(),t.lazy(()=>py),t.lazy(()=>py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),dT=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),zT=t.object({create:t.union([t.lazy(()=>iy),t.lazy(()=>iy).array(),t.lazy(()=>ly),t.lazy(()=>ly).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),mT=t.object({create:t.union([t.lazy(()=>ry),t.lazy(()=>ry).array(),t.lazy(()=>py),t.lazy(()=>py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),hT=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>q8).optional(),upsert:t.lazy(()=>jyt).optional(),connect:t.lazy(()=>Jn).optional(),update:t.union([t.lazy(()=>Myt),t.lazy(()=>BL),t.lazy(()=>qL)]).optional()}).strict(),bT=t.object({create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]).optional(),connectOrCreate:t.lazy(()=>F8).optional(),upsert:t.lazy(()=>Zyt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>vyt),t.lazy(()=>FL),t.lazy(()=>DL)]).optional()}).strict(),IT=t.object({create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]).optional(),connectOrCreate:t.lazy(()=>D8).optional(),upsert:t.lazy(()=>Oyt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>fyt),t.lazy(()=>EL),t.lazy(()=>_L)]).optional()}).strict(),gT=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),CT=t.object({create:t.union([t.lazy(()=>iy),t.lazy(()=>iy).array(),t.lazy(()=>ly),t.lazy(()=>ly).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),AT=t.object({create:t.union([t.lazy(()=>ry),t.lazy(()=>ry).array(),t.lazy(()=>py),t.lazy(()=>py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional()}).strict(),ST=t.object({create:t.union([t.lazy(()=>ny),t.lazy(()=>ny).array(),t.lazy(()=>ay),t.lazy(()=>ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),TT=t.object({create:t.union([t.lazy(()=>iy),t.lazy(()=>iy).array(),t.lazy(()=>ly),t.lazy(()=>ly).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),PT=t.object({create:t.union([t.lazy(()=>ry),t.lazy(()=>ry).array(),t.lazy(()=>py),t.lazy(()=>py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional()}).strict(),PD=t.object({create:t.union([t.lazy(()=>Ww),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>E8).optional(),connect:t.lazy(()=>Jn).optional()}).strict(),WD=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>_8).optional(),connect:t.lazy(()=>f).optional()}).strict(),RD=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>L8).optional(),connect:t.lazy(()=>j).optional()}).strict(),np=t.object({set:t.lazy(()=>vt).optional()}).strict(),UD=t.object({create:t.union([t.lazy(()=>Ww),t.lazy(()=>Rw)]).optional(),connectOrCreate:t.lazy(()=>E8).optional(),upsert:t.lazy(()=>wyt).optional(),connect:t.lazy(()=>Jn).optional(),update:t.union([t.lazy(()=>Nyt),t.lazy(()=>LL),t.lazy(()=>VL)]).optional()}).strict(),kD=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>_8).optional(),upsert:t.lazy(()=>Byt).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>qyt),t.lazy(()=>HL),t.lazy(()=>QL)]).optional()}).strict(),xD=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>L8).optional(),upsert:t.lazy(()=>Fyt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Dyt),t.lazy(()=>YL),t.lazy(()=>GL)]).optional()}).strict(),jD=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>V8).optional(),connect:t.lazy(()=>Jn).optional()}).strict(),MD=t.object({create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]).optional(),connectOrCreate:t.lazy(()=>H8).optional(),connect:t.lazy(()=>j).optional()}).strict(),ZD=t.object({create:t.union([t.lazy(()=>cy),t.lazy(()=>cy).array(),t.lazy(()=>uy),t.lazy(()=>uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),vD=t.object({create:t.union([t.lazy(()=>cy),t.lazy(()=>cy).array(),t.lazy(()=>uy),t.lazy(()=>uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Ip=t.object({set:t.lazy(()=>ft).optional()}).strict(),OD=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>V8).optional(),upsert:t.lazy(()=>Eyt).optional(),connect:t.lazy(()=>Jn).optional(),update:t.union([t.lazy(()=>_yt),t.lazy(()=>$L),t.lazy(()=>JL)]).optional()}).strict(),fD=t.object({create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]).optional(),connectOrCreate:t.lazy(()=>H8).optional(),upsert:t.lazy(()=>Lyt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Vyt),t.lazy(()=>KL),t.lazy(()=>XL)]).optional()}).strict(),wD=t.object({create:t.union([t.lazy(()=>cy),t.lazy(()=>cy).array(),t.lazy(()=>uy),t.lazy(()=>uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional()}).strict(),ND=t.object({create:t.union([t.lazy(()=>cy),t.lazy(()=>cy).array(),t.lazy(()=>uy),t.lazy(()=>uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional()}).strict(),g6=t.object({create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]).optional(),connectOrCreate:t.lazy(()=>Q8).optional(),connect:t.lazy(()=>ct).optional()}).strict(),C6=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>Y8).optional(),connect:t.lazy(()=>f).optional()}).strict(),A6=t.object({create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]).optional(),connectOrCreate:t.lazy(()=>Q8).optional(),upsert:t.lazy(()=>Hyt).optional(),connect:t.lazy(()=>ct).optional(),update:t.union([t.lazy(()=>Qyt),t.lazy(()=>tV),t.lazy(()=>eV)]).optional()}).strict(),S6=t.object({create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]).optional(),connectOrCreate:t.lazy(()=>Y8).optional(),upsert:t.lazy(()=>Yyt).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Gyt),t.lazy(()=>oV),t.lazy(()=>nV)]).optional()}).strict(),out=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>G8).optional(),connect:t.lazy(()=>C).optional()}).strict(),nut=t.object({create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]).optional(),connectOrCreate:t.lazy(()=>G8).optional(),upsert:t.lazy(()=>$yt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Jyt),t.lazy(()=>aV),t.lazy(()=>iV)]).optional()}).strict(),BD=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>$8).optional(),connect:t.lazy(()=>K).optional()}).strict(),qD=t.object({create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]).optional(),connectOrCreate:t.lazy(()=>J8).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),FD=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),createMany:t.lazy(()=>Hw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),DD=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),createMany:t.lazy(()=>Hw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),gp=t.object({set:t.lazy(()=>wt).optional()}).strict(),ED=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>$8).optional(),upsert:t.lazy(()=>Kyt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Xyt),t.lazy(()=>lV),t.lazy(()=>rV)]).optional()}).strict(),_D=t.object({create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]).optional(),connectOrCreate:t.lazy(()=>J8).optional(),upsert:t.lazy(()=>tdt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>edt),t.lazy(()=>pV),t.lazy(()=>cV)]).optional()}).strict(),LD=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),createMany:t.lazy(()=>Hw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),VD=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),createMany:t.lazy(()=>Hw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),T6=t.object({create:t.union([t.lazy(()=>Qw),t.lazy(()=>Yw)]).optional(),connectOrCreate:t.lazy(()=>K8).optional(),connect:t.lazy(()=>ut).optional()}).strict(),P6=t.object({create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]).optional(),connectOrCreate:t.lazy(()=>X8).optional(),connect:t.lazy(()=>$).optional()}).strict(),W6=t.object({create:t.union([t.lazy(()=>Qw),t.lazy(()=>Yw)]).optional(),connectOrCreate:t.lazy(()=>K8).optional(),upsert:t.lazy(()=>odt).optional(),connect:t.lazy(()=>ut).optional(),update:t.union([t.lazy(()=>ndt),t.lazy(()=>uV),t.lazy(()=>sV)]).optional()}).strict(),R6=t.object({create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]).optional(),connectOrCreate:t.lazy(()=>X8).optional(),upsert:t.lazy(()=>adt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>idt),t.lazy(()=>yV),t.lazy(()=>dV)]).optional()}).strict(),HD=t.object({create:t.union([t.lazy(()=>dy),t.lazy(()=>dy).array(),t.lazy(()=>zy),t.lazy(()=>zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),QD=t.object({create:t.union([t.lazy(()=>my),t.lazy(()=>my).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),YD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>Iy),t.lazy(()=>Iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),GD=t.object({create:t.union([t.lazy(()=>dy),t.lazy(()=>dy).array(),t.lazy(()=>zy),t.lazy(()=>zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),$D=t.object({create:t.union([t.lazy(()=>my),t.lazy(()=>my).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),JD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>Iy),t.lazy(()=>Iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),KD=t.object({create:t.union([t.lazy(()=>dy),t.lazy(()=>dy).array(),t.lazy(()=>zy),t.lazy(()=>zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),upsert:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),updateMany:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),XD=t.object({create:t.union([t.lazy(()=>my),t.lazy(()=>my).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),upsert:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),updateMany:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),tE=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>Iy),t.lazy(()=>Iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),upsert:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),updateMany:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional()}).strict(),eE=t.object({create:t.union([t.lazy(()=>dy),t.lazy(()=>dy).array(),t.lazy(()=>zy),t.lazy(()=>zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),upsert:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),updateMany:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),oE=t.object({create:t.union([t.lazy(()=>my),t.lazy(()=>my).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),upsert:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),updateMany:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),nE=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>Iy),t.lazy(()=>Iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),upsert:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),updateMany:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional()}).strict(),U6=t.object({create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]).optional(),connectOrCreate:t.lazy(()=>t7).optional(),connect:t.lazy(()=>j).optional()}).strict(),k6=t.object({create:t.union([t.lazy(()=>gy),t.lazy(()=>gy).array(),t.lazy(()=>Cy),t.lazy(()=>Cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),createMany:t.lazy(()=>eN).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),x6=t.object({create:t.union([t.lazy(()=>gy),t.lazy(()=>gy).array(),t.lazy(()=>Cy),t.lazy(()=>Cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),createMany:t.lazy(()=>eN).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),ch=t.object({set:t.lazy(()=>Vt).optional()}).strict(),j6=t.object({create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]).optional(),connectOrCreate:t.lazy(()=>t7).optional(),upsert:t.lazy(()=>ldt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>rdt),t.lazy(()=>zV),t.lazy(()=>mV)]).optional()}).strict(),M6=t.object({create:t.union([t.lazy(()=>gy),t.lazy(()=>gy).array(),t.lazy(()=>Cy),t.lazy(()=>Cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),upsert:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),createMany:t.lazy(()=>eN).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),updateMany:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array()]).optional()}).strict(),Z6=t.object({create:t.union([t.lazy(()=>gy),t.lazy(()=>gy).array(),t.lazy(()=>Cy),t.lazy(()=>Cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),upsert:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),createMany:t.lazy(()=>eN).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),updateMany:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array()]).optional()}).strict(),v6=t.object({create:t.union([t.lazy(()=>Ay),t.lazy(()=>Ay).array(),t.lazy(()=>Sy),t.lazy(()=>Sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),O6=t.object({create:t.union([t.lazy(()=>Ty),t.lazy(()=>Ty).array(),t.lazy(()=>Py),t.lazy(()=>Py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),createMany:t.lazy(()=>oN).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),f6=t.object({create:t.union([t.lazy(()=>Ay),t.lazy(()=>Ay).array(),t.lazy(()=>Sy),t.lazy(()=>Sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),w6=t.object({create:t.union([t.lazy(()=>Ty),t.lazy(()=>Ty).array(),t.lazy(()=>Py),t.lazy(()=>Py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),createMany:t.lazy(()=>oN).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),oa=t.object({set:t.lazy(()=>tt).optional()}).strict(),N6=t.object({create:t.union([t.lazy(()=>Ay),t.lazy(()=>Ay).array(),t.lazy(()=>Sy),t.lazy(()=>Sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),upsert:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),updateMany:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),B6=t.object({create:t.union([t.lazy(()=>Ty),t.lazy(()=>Ty).array(),t.lazy(()=>Py),t.lazy(()=>Py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),upsert:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),createMany:t.lazy(()=>oN).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),updateMany:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),q6=t.object({create:t.union([t.lazy(()=>Ay),t.lazy(()=>Ay).array(),t.lazy(()=>Sy),t.lazy(()=>Sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),upsert:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),updateMany:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),F6=t.object({create:t.union([t.lazy(()=>Ty),t.lazy(()=>Ty).array(),t.lazy(()=>Py),t.lazy(()=>Py).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),upsert:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),createMany:t.lazy(()=>oN).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),updateMany:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),aE=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>e7).optional(),connect:t.lazy(()=>ne).optional()}).strict(),iE=t.object({create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]).optional(),connectOrCreate:t.lazy(()=>o7).optional(),connect:t.lazy(()=>C).optional()}).strict(),lE=t.object({create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]).optional(),connectOrCreate:t.lazy(()=>n7).optional(),connect:t.lazy(()=>j).optional()}).strict(),rE=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>e7).optional(),upsert:t.lazy(()=>pdt).optional(),connect:t.lazy(()=>ne).optional(),update:t.union([t.lazy(()=>cdt),t.lazy(()=>hV),t.lazy(()=>bV)]).optional()}).strict(),pE=t.object({create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]).optional(),connectOrCreate:t.lazy(()=>o7).optional(),upsert:t.lazy(()=>udt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>sdt),t.lazy(()=>IV),t.lazy(()=>gV)]).optional()}).strict(),cE=t.object({create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]).optional(),connectOrCreate:t.lazy(()=>n7).optional(),upsert:t.lazy(()=>ydt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ddt),t.lazy(()=>CV),t.lazy(()=>AV)]).optional()}).strict(),aut=t.object({create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]).optional(),connectOrCreate:t.lazy(()=>a7).optional(),connect:t.lazy(()=>j).optional()}).strict(),iut=t.object({create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]).optional(),connectOrCreate:t.lazy(()=>a7).optional(),upsert:t.lazy(()=>zdt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>mdt),t.lazy(()=>SV),t.lazy(()=>TV)]).optional()}).strict(),uE=t.object({create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]).optional(),connectOrCreate:t.lazy(()=>i7).optional(),connect:t.lazy(()=>K).optional()}).strict(),sE=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),createMany:t.lazy(()=>dN).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),yE=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>ky),t.lazy(()=>ky).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),createMany:t.lazy(()=>zN).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),dE=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),createMany:t.lazy(()=>dN).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),zE=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>ky),t.lazy(()=>ky).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),createMany:t.lazy(()=>zN).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),mE=t.object({create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]).optional(),connectOrCreate:t.lazy(()=>i7).optional(),upsert:t.lazy(()=>hdt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>bdt),t.lazy(()=>PV),t.lazy(()=>WV)]).optional()}).strict(),hE=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),upsert:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),createMany:t.lazy(()=>dN).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>Hj),t.lazy(()=>Hj).array()]).optional(),updateMany:t.union([t.lazy(()=>Qj),t.lazy(()=>Qj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),bE=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>ky),t.lazy(()=>ky).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),upsert:t.union([t.lazy(()=>Yj),t.lazy(()=>Yj).array()]).optional(),createMany:t.lazy(()=>zN).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>Gj),t.lazy(()=>Gj).array()]).optional(),updateMany:t.union([t.lazy(()=>$j),t.lazy(()=>$j).array()]).optional(),deleteMany:t.union([t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional()}).strict(),IE=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),upsert:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),createMany:t.lazy(()=>dN).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>Hj),t.lazy(()=>Hj).array()]).optional(),updateMany:t.union([t.lazy(()=>Qj),t.lazy(()=>Qj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),gE=t.object({create:t.union([t.lazy(()=>Uy),t.lazy(()=>Uy).array(),t.lazy(()=>ky),t.lazy(()=>ky).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),upsert:t.union([t.lazy(()=>Yj),t.lazy(()=>Yj).array()]).optional(),createMany:t.lazy(()=>zN).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>Gj),t.lazy(()=>Gj).array()]).optional(),updateMany:t.union([t.lazy(()=>$j),t.lazy(()=>$j).array()]).optional(),deleteMany:t.union([t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional()}).strict(),D6=t.object({create:t.union([t.lazy(()=>mN),t.lazy(()=>hN)]).optional(),connectOrCreate:t.lazy(()=>l7).optional(),connect:t.lazy(()=>x).optional()}).strict(),E6=t.object({create:t.union([t.lazy(()=>bN),t.lazy(()=>IN)]).optional(),connectOrCreate:t.lazy(()=>r7).optional(),connect:t.lazy(()=>C).optional()}).strict(),_6=t.object({create:t.union([t.lazy(()=>mN),t.lazy(()=>hN)]).optional(),connectOrCreate:t.lazy(()=>l7).optional(),upsert:t.lazy(()=>Idt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>gdt),t.lazy(()=>RV),t.lazy(()=>UV)]).optional()}).strict(),L6=t.object({create:t.union([t.lazy(()=>bN),t.lazy(()=>IN)]).optional(),connectOrCreate:t.lazy(()=>r7).optional(),upsert:t.lazy(()=>Cdt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Adt),t.lazy(()=>kV),t.lazy(()=>xV)]).optional()}).strict(),io=t.object({set:t.number().array()}).strict(),lo=t.object({set:t.number().array()}).strict(),ro=t.object({set:t.number().array()}).strict(),po=t.object({set:t.string().array()}).strict(),lm=t.object({create:t.union([t.lazy(()=>gN),t.lazy(()=>CN)]).optional(),connectOrCreate:t.lazy(()=>p7).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>AN),t.lazy(()=>SN)]).optional(),connectOrCreate:t.lazy(()=>c7).optional(),connect:t.lazy(()=>Xt).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>xy),t.lazy(()=>xy).array(),t.lazy(()=>jy),t.lazy(()=>jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>My),t.lazy(()=>My).array(),t.lazy(()=>Zy),t.lazy(()=>Zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),createMany:t.lazy(()=>TN).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)]).optional(),connectOrCreate:t.lazy(()=>PN).optional(),connect:t.lazy(()=>$l).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>vy),t.lazy(()=>vy).array(),t.lazy(()=>Oy),t.lazy(()=>Oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),createMany:t.lazy(()=>WN).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>fy),t.lazy(()=>fy).array(),t.lazy(()=>wy),t.lazy(()=>wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>NI),t.lazy(()=>NI).array()]).optional(),createMany:t.lazy(()=>RN).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>Ny),t.lazy(()=>Ny).array(),t.lazy(()=>By),t.lazy(()=>By).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>BI),t.lazy(()=>BI).array()]).optional(),createMany:t.lazy(()=>UN).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>qy),t.lazy(()=>qy).array(),t.lazy(()=>Fy),t.lazy(()=>Fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qI),t.lazy(()=>qI).array()]).optional(),createMany:t.lazy(()=>kN).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>Dy),t.lazy(()=>Dy).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>FI),t.lazy(()=>FI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>xy),t.lazy(()=>xy).array(),t.lazy(()=>jy),t.lazy(()=>jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>My),t.lazy(()=>My).array(),t.lazy(()=>Zy),t.lazy(()=>Zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),createMany:t.lazy(()=>TN).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)]).optional(),connectOrCreate:t.lazy(()=>PN).optional(),connect:t.lazy(()=>$l).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>vy),t.lazy(()=>vy).array(),t.lazy(()=>Oy),t.lazy(()=>Oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),createMany:t.lazy(()=>WN).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),Cm=t.object({create:t.union([t.lazy(()=>fy),t.lazy(()=>fy).array(),t.lazy(()=>wy),t.lazy(()=>wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>NI),t.lazy(()=>NI).array()]).optional(),createMany:t.lazy(()=>RN).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Am=t.object({create:t.union([t.lazy(()=>Ny),t.lazy(()=>Ny).array(),t.lazy(()=>By),t.lazy(()=>By).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>BI),t.lazy(()=>BI).array()]).optional(),createMany:t.lazy(()=>UN).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Sm=t.object({create:t.union([t.lazy(()=>qy),t.lazy(()=>qy).array(),t.lazy(()=>Fy),t.lazy(()=>Fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qI),t.lazy(()=>qI).array()]).optional(),createMany:t.lazy(()=>kN).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Tm=t.object({create:t.union([t.lazy(()=>Dy),t.lazy(()=>Dy).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>FI),t.lazy(()=>FI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),_e=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Le=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ve=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),He=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Pm=t.object({create:t.union([t.lazy(()=>gN),t.lazy(()=>CN)]).optional(),connectOrCreate:t.lazy(()=>p7).optional(),upsert:t.lazy(()=>Sdt).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Tdt),t.lazy(()=>jV),t.lazy(()=>MV)]).optional()}).strict(),Wm=t.object({create:t.union([t.lazy(()=>AN),t.lazy(()=>SN)]).optional(),connectOrCreate:t.lazy(()=>c7).optional(),upsert:t.lazy(()=>Pdt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>Xt).optional(),update:t.union([t.lazy(()=>Wdt),t.lazy(()=>ZV),t.lazy(()=>vV)]).optional()}).strict(),Rm=t.object({create:t.union([t.lazy(()=>xy),t.lazy(()=>xy).array(),t.lazy(()=>jy),t.lazy(()=>jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),upsert:t.union([t.lazy(()=>Jj),t.lazy(()=>Jj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Kj),t.lazy(()=>Kj).array()]).optional(),updateMany:t.union([t.lazy(()=>Xj),t.lazy(()=>Xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Um=t.object({create:t.union([t.lazy(()=>My),t.lazy(()=>My).array(),t.lazy(()=>Zy),t.lazy(()=>Zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),upsert:t.union([t.lazy(()=>tM),t.lazy(()=>tM).array()]).optional(),createMany:t.lazy(()=>TN).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>eM),t.lazy(()=>eM).array()]).optional(),updateMany:t.union([t.lazy(()=>oM),t.lazy(()=>oM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),km=t.object({create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)]).optional(),connectOrCreate:t.lazy(()=>PN).optional(),upsert:t.lazy(()=>u7).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ee)]).optional(),connect:t.lazy(()=>$l).optional(),update:t.union([t.lazy(()=>s7),t.lazy(()=>xN),t.lazy(()=>jN)]).optional()}).strict(),xm=t.object({create:t.union([t.lazy(()=>vy),t.lazy(()=>vy).array(),t.lazy(()=>Oy),t.lazy(()=>Oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),upsert:t.union([t.lazy(()=>nM),t.lazy(()=>nM).array()]).optional(),createMany:t.lazy(()=>WN).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>aM),t.lazy(()=>aM).array()]).optional(),updateMany:t.union([t.lazy(()=>iM),t.lazy(()=>iM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array()]).optional()}).strict(),jm=t.object({create:t.union([t.lazy(()=>fy),t.lazy(()=>fy).array(),t.lazy(()=>wy),t.lazy(()=>wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>NI),t.lazy(()=>NI).array()]).optional(),upsert:t.union([t.lazy(()=>lM),t.lazy(()=>lM).array()]).optional(),createMany:t.lazy(()=>RN).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>rM),t.lazy(()=>rM).array()]).optional(),updateMany:t.union([t.lazy(()=>pM),t.lazy(()=>pM).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),Mm=t.object({create:t.union([t.lazy(()=>Ny),t.lazy(()=>Ny).array(),t.lazy(()=>By),t.lazy(()=>By).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>BI),t.lazy(()=>BI).array()]).optional(),upsert:t.union([t.lazy(()=>cM),t.lazy(()=>cM).array()]).optional(),createMany:t.lazy(()=>UN).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uM),t.lazy(()=>uM).array()]).optional(),updateMany:t.union([t.lazy(()=>sM),t.lazy(()=>sM).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Zm=t.object({create:t.union([t.lazy(()=>qy),t.lazy(()=>qy).array(),t.lazy(()=>Fy),t.lazy(()=>Fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qI),t.lazy(()=>qI).array()]).optional(),upsert:t.union([t.lazy(()=>yM),t.lazy(()=>yM).array()]).optional(),createMany:t.lazy(()=>kN).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>dM),t.lazy(()=>dM).array()]).optional(),updateMany:t.union([t.lazy(()=>zM),t.lazy(()=>zM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),vm=t.object({create:t.union([t.lazy(()=>Dy),t.lazy(()=>Dy).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>FI),t.lazy(()=>FI).array()]).optional(),upsert:t.union([t.lazy(()=>mM),t.lazy(()=>mM).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hM),t.lazy(()=>hM).array()]).optional(),updateMany:t.union([t.lazy(()=>bM),t.lazy(()=>bM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Om=t.object({create:t.union([t.lazy(()=>xy),t.lazy(()=>xy).array(),t.lazy(()=>jy),t.lazy(()=>jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),upsert:t.union([t.lazy(()=>Jj),t.lazy(()=>Jj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Kj),t.lazy(()=>Kj).array()]).optional(),updateMany:t.union([t.lazy(()=>Xj),t.lazy(()=>Xj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),fm=t.object({create:t.union([t.lazy(()=>My),t.lazy(()=>My).array(),t.lazy(()=>Zy),t.lazy(()=>Zy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),upsert:t.union([t.lazy(()=>tM),t.lazy(()=>tM).array()]).optional(),createMany:t.lazy(()=>TN).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>eM),t.lazy(()=>eM).array()]).optional(),updateMany:t.union([t.lazy(()=>oM),t.lazy(()=>oM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),wm=t.object({create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)]).optional(),connectOrCreate:t.lazy(()=>PN).optional(),upsert:t.lazy(()=>u7).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ee)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ee)]).optional(),connect:t.lazy(()=>$l).optional(),update:t.union([t.lazy(()=>s7),t.lazy(()=>xN),t.lazy(()=>jN)]).optional()}).strict(),Nm=t.object({create:t.union([t.lazy(()=>vy),t.lazy(()=>vy).array(),t.lazy(()=>Oy),t.lazy(()=>Oy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),upsert:t.union([t.lazy(()=>nM),t.lazy(()=>nM).array()]).optional(),createMany:t.lazy(()=>WN).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>aM),t.lazy(()=>aM).array()]).optional(),updateMany:t.union([t.lazy(()=>iM),t.lazy(()=>iM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array()]).optional()}).strict(),Bm=t.object({create:t.union([t.lazy(()=>fy),t.lazy(()=>fy).array(),t.lazy(()=>wy),t.lazy(()=>wy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>NI),t.lazy(()=>NI).array()]).optional(),upsert:t.union([t.lazy(()=>lM),t.lazy(()=>lM).array()]).optional(),createMany:t.lazy(()=>RN).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>rM),t.lazy(()=>rM).array()]).optional(),updateMany:t.union([t.lazy(()=>pM),t.lazy(()=>pM).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),qm=t.object({create:t.union([t.lazy(()=>Ny),t.lazy(()=>Ny).array(),t.lazy(()=>By),t.lazy(()=>By).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>BI),t.lazy(()=>BI).array()]).optional(),upsert:t.union([t.lazy(()=>cM),t.lazy(()=>cM).array()]).optional(),createMany:t.lazy(()=>UN).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uM),t.lazy(()=>uM).array()]).optional(),updateMany:t.union([t.lazy(()=>sM),t.lazy(()=>sM).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Fm=t.object({create:t.union([t.lazy(()=>qy),t.lazy(()=>qy).array(),t.lazy(()=>Fy),t.lazy(()=>Fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qI),t.lazy(()=>qI).array()]).optional(),upsert:t.union([t.lazy(()=>yM),t.lazy(()=>yM).array()]).optional(),createMany:t.lazy(()=>kN).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>dM),t.lazy(()=>dM).array()]).optional(),updateMany:t.union([t.lazy(()=>zM),t.lazy(()=>zM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Dm=t.object({create:t.union([t.lazy(()=>Dy),t.lazy(()=>Dy).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>FI),t.lazy(()=>FI).array()]).optional(),upsert:t.union([t.lazy(()=>mM),t.lazy(()=>mM).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>hM),t.lazy(()=>hM).array()]).optional(),updateMany:t.union([t.lazy(()=>bM),t.lazy(()=>bM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),lut=t.object({create:t.union([t.lazy(()=>MN),t.lazy(()=>ZN)]).optional(),connectOrCreate:t.lazy(()=>y7).optional(),connect:t.lazy(()=>x).optional()}).strict(),rut=t.object({create:t.union([t.lazy(()=>MN),t.lazy(()=>ZN)]).optional(),connectOrCreate:t.lazy(()=>y7).optional(),upsert:t.lazy(()=>Rdt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>Udt),t.lazy(()=>OV),t.lazy(()=>fV)]).optional()}).strict(),put=t.object({create:t.union([t.lazy(()=>vN),t.lazy(()=>ON)]).optional(),connectOrCreate:t.lazy(()=>d7).optional(),connect:t.lazy(()=>C).optional()}).strict(),cut=t.object({create:t.union([t.lazy(()=>vN),t.lazy(()=>ON)]).optional(),connectOrCreate:t.lazy(()=>d7).optional(),upsert:t.lazy(()=>kdt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>xdt),t.lazy(()=>wV),t.lazy(()=>NV)]).optional()}).strict(),uut=t.object({create:t.union([t.lazy(()=>fN),t.lazy(()=>wN)]).optional(),connectOrCreate:t.lazy(()=>z7).optional(),connect:t.lazy(()=>C).optional()}).strict(),sut=t.object({create:t.union([t.lazy(()=>fN),t.lazy(()=>wN)]).optional(),connectOrCreate:t.lazy(()=>z7).optional(),upsert:t.lazy(()=>jdt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Mdt),t.lazy(()=>BV),t.lazy(()=>qV)]).optional()}).strict(),nt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>nt)]).optional()}).strict(),lp=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>lp)]).optional()}).strict(),mS=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>mS)]).optional()}).strict(),hS=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>hS)]).optional()}).strict(),V6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>V6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>lp).optional(),_sum:t.lazy(()=>nt).optional(),_min:t.lazy(()=>nt).optional(),_max:t.lazy(()=>nt).optional()}).strict(),H6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>H6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>lp).optional(),_sum:t.lazy(()=>lp).optional(),_min:t.lazy(()=>lp).optional(),_max:t.lazy(()=>lp).optional()}).strict(),Q6=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>Q6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),Y6=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>Y6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),rp=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>rp)]).optional().nullable()}).strict(),bS=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>bS)]).optional().nullable()}).strict(),IS=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>IS)]).optional()}).strict(),G6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>G6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_avg:t.lazy(()=>rp).optional(),_sum:t.lazy(()=>rp).optional(),_min:t.lazy(()=>rp).optional(),_max:t.lazy(()=>rp).optional()}).strict(),Pl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Pl)]).optional().nullable()}).strict(),$6=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>$6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),J6=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>J6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),gS=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>gS)]).optional()}).strict(),K6=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>K6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),X6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>X6)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_avg:t.lazy(()=>rp).optional(),_sum:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>Pl).optional(),_max:t.lazy(()=>Pl).optional()}).strict(),CS=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>CS)]).optional().nullable()}).strict(),t3=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>t3)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),AS=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>AS)]).optional()}).strict(),e3=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>e3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),SS=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>SS)]).optional()}).strict(),o3=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>o3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>SS).optional(),_max:t.lazy(()=>SS).optional()}).strict(),TS=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>TS)]).optional()}).strict(),n3=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>n3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>TS).optional(),_max:t.lazy(()=>TS).optional()}).strict(),PS=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>PS)]).optional()}).strict(),a3=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>a3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>PS).optional(),_max:t.lazy(()=>PS).optional()}).strict(),WS=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>WS)]).optional()}).strict(),i3=t.object({equals:t.lazy(()=>_t).optional(),in:t.lazy(()=>_t).array().optional(),notIn:t.lazy(()=>_t).array().optional(),not:t.union([t.lazy(()=>_t),t.lazy(()=>i3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>WS).optional(),_max:t.lazy(()=>WS).optional()}).strict(),RS=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>RS)]).optional()}).strict(),US=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>US)]).optional()}).strict(),l3=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>l3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>RS).optional(),_max:t.lazy(()=>RS).optional()}).strict(),r3=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>r3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>US).optional(),_max:t.lazy(()=>US).optional()}).strict(),kS=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>kS)]).optional()}).strict(),p3=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>p3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>kS).optional(),_max:t.lazy(()=>kS).optional()}).strict(),xS=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>xS)]).optional()}).strict(),c3=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>c3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>xS).optional(),_max:t.lazy(()=>xS).optional()}).strict(),jS=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>jS)]).optional()}).strict(),u3=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>u3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>jS).optional(),_max:t.lazy(()=>jS).optional()}).strict(),MS=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>MS)]).optional()}).strict(),s3=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>s3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>MS).optional(),_max:t.lazy(()=>MS).optional()}).strict(),ZS=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>ZS)]).optional()}).strict(),y3=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>y3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>ZS).optional(),_max:t.lazy(()=>ZS).optional()}).strict(),vS=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>vS)]).optional()}).strict(),d3=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>d3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>vS).optional(),_max:t.lazy(()=>vS).optional()}).strict(),OS=t.object({equals:t.lazy(()=>R).optional(),in:t.lazy(()=>R).array().optional(),notIn:t.lazy(()=>R).array().optional(),not:t.union([t.lazy(()=>R),t.lazy(()=>OS)]).optional()}).strict(),fS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>fS)]).optional()}).strict(),z3=t.object({equals:t.lazy(()=>R).optional(),in:t.lazy(()=>R).array().optional(),notIn:t.lazy(()=>R).array().optional(),not:t.union([t.lazy(()=>R),t.lazy(()=>z3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>OS).optional(),_max:t.lazy(()=>OS).optional()}).strict(),m3=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>m3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>fS).optional(),_max:t.lazy(()=>fS).optional()}).strict(),wS=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>wS)]).optional().nullable()}).strict(),h3=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>h3)]).optional().nullable(),_count:t.lazy(()=>Pl).optional(),_min:t.lazy(()=>wS).optional(),_max:t.lazy(()=>wS).optional()}).strict(),NS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>NS)]).optional()}).strict(),b3=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>b3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>NS).optional(),_max:t.lazy(()=>NS).optional()}).strict(),BS=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>BS)]).optional()}).strict(),I3=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>I3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>BS).optional(),_max:t.lazy(()=>BS).optional()}).strict(),qS=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>qS)]).optional()}).strict(),g3=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>g3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>qS).optional(),_max:t.lazy(()=>qS).optional()}).strict(),FS=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>FS)]).optional()}).strict(),C3=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>C3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>FS).optional(),_max:t.lazy(()=>FS).optional()}).strict(),DS=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>DS)]).optional()}).strict(),A3=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>A3)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>DS).optional(),_max:t.lazy(()=>DS).optional()}).strict(),TZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),PZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),S3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)])}).strict(),yut=t.object({update:t.union([t.lazy(()=>CE),t.lazy(()=>AE)]),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]),where:t.lazy(()=>v).optional()}).strict(),dut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>CE),t.lazy(()=>AE)])}).strict(),CE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),AE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),WZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),RZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),T3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>WZ),t.lazy(()=>RZ)])}).strict(),zut=t.object({update:t.union([t.lazy(()=>SE),t.lazy(()=>TE)]),create:t.union([t.lazy(()=>WZ),t.lazy(()=>RZ)]),where:t.lazy(()=>v).optional()}).strict(),mut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>SE),t.lazy(()=>TE)])}).strict(),SE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),TE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),UZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),kZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),P3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>UZ),t.lazy(()=>kZ)])}).strict(),hut=t.object({update:t.union([t.lazy(()=>PE),t.lazy(()=>WE)]),create:t.union([t.lazy(()=>UZ),t.lazy(()=>kZ)]),where:t.lazy(()=>v).optional()}).strict(),but=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>PE),t.lazy(()=>WE)])}).strict(),PE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),WE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),xZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),jZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),W3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),Iut=t.object({update:t.union([t.lazy(()=>RE),t.lazy(()=>UE)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>v).optional()}).strict(),gut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>RE),t.lazy(()=>UE)])}).strict(),RE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),UE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),MZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),ZZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),R3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)])}).strict(),Cut=t.object({update:t.union([t.lazy(()=>kE),t.lazy(()=>xE)]),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]),where:t.lazy(()=>v).optional()}).strict(),Aut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>kE),t.lazy(()=>xE)])}).strict(),kE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),xE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),vZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),OZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),U3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)])}).strict(),Sut=t.object({update:t.union([t.lazy(()=>jE),t.lazy(()=>ME)]),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]),where:t.lazy(()=>v).optional()}).strict(),Tut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>jE),t.lazy(()=>ME)])}).strict(),jE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),ME=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),fZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),wZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),k3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)])}).strict(),Put=t.object({update:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)]),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]),where:t.lazy(()=>v).optional()}).strict(),Wut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)])}).strict(),ZE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),vE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),NZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),BZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),x3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)])}).strict(),qZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),FZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),j3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)])}).strict(),Rut=t.object({update:t.union([t.lazy(()=>OE),t.lazy(()=>fE)]),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]),where:t.lazy(()=>N).optional()}).strict(),Uut=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>OE),t.lazy(()=>fE)])}).strict(),OE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),fE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),kut=t.object({update:t.union([t.lazy(()=>wE),t.lazy(()=>NE)]),create:t.union([t.lazy(()=>qZ),t.lazy(()=>FZ)]),where:t.lazy(()=>Tt).optional()}).strict(),xut=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>wE),t.lazy(()=>NE)])}).strict(),wE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),NE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),DZ=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>uE),menuItems:t.lazy(()=>sE).optional()}).strict(),EZ=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dE).optional()}).strict(),M3=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)])}).strict(),ic=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),lc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),Gh=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>ic),t.lazy(()=>lc)])}).strict(),_Z=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),jut=t.object({update:t.union([t.lazy(()=>BE),t.lazy(()=>qE)]),create:t.union([t.lazy(()=>DZ),t.lazy(()=>EZ)]),where:t.lazy(()=>fe).optional()}).strict(),Mut=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>BE),t.lazy(()=>qE)])}).strict(),BE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mE).optional(),menuItems:t.lazy(()=>hE).optional()}).strict(),qE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>IE).optional()}).strict(),EW=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>m7),t.lazy(()=>h7)]),create:t.union([t.lazy(()=>ic),t.lazy(()=>lc)])}).strict(),_W=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>m7),t.lazy(()=>h7)])}).strict(),LW=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>VS),t.lazy(()=>Zdt)])}).strict(),ao=t.object({AND:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),OR:t.lazy(()=>ao).array().optional(),NOT:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>U),t.number()]).optional(),foodCost:t.union([t.lazy(()=>U),t.number()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),recipeIds:t.lazy(()=>QI).optional(),recipeServingsAmount:t.lazy(()=>Yh).optional(),recipeServingsCost:t.lazy(()=>Yh).optional(),allergens:t.lazy(()=>Wl).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),LZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),Z3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),rc=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>uD),ingredient:t.lazy(()=>sD)}).strict(),pc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),$h=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>rc),t.lazy(()=>pc)])}).strict(),HZ=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),cc=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>hD),equipment:t.lazy(()=>ID).optional()}).strict(),uc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>gD).optional()}).strict(),Jh=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>cc),t.lazy(()=>uc)])}).strict(),QZ=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),YZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),GZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),v3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)])}).strict(),$Z=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),JZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),O3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)])}).strict(),Zut=t.object({update:t.union([t.lazy(()=>FE),t.lazy(()=>DE)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>v).optional()}).strict(),vut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>FE),t.lazy(()=>DE)])}).strict(),FE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),DE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),VW=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>b7),t.lazy(()=>I7)]),create:t.union([t.lazy(()=>rc),t.lazy(()=>pc)])}).strict(),HW=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>b7),t.lazy(()=>I7)])}).strict(),QW=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>sP),t.lazy(()=>vdt)])}).strict(),sl=t.object({AND:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),OR:t.lazy(()=>sl).array().optional(),NOT:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>QI).optional(),isOptional:t.union([t.lazy(()=>zt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),YW=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>g7),t.lazy(()=>C7)]),create:t.union([t.lazy(()=>cc),t.lazy(()=>uc)])}).strict(),GW=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>g7),t.lazy(()=>C7)])}).strict(),$W=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>OM),t.lazy(()=>Odt)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Out=t.object({update:t.union([t.lazy(()=>EE),t.lazy(()=>_E)]),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]),where:t.lazy(()=>M).optional()}).strict(),fut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>EE),t.lazy(()=>_E)])}).strict(),EE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),_E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),wut=t.object({update:t.union([t.lazy(()=>LE),t.lazy(()=>VE)]),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]),where:t.lazy(()=>M).optional()}).strict(),Nut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>LE),t.lazy(()=>VE)])}).strict(),LE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),VE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),KZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),XZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),f3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)])}).strict(),sc=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Lq),RecipeInstruction:t.lazy(()=>Hq).optional()}).strict(),yc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Kh=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>sc),t.lazy(()=>yc)])}).strict(),tv=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),dc=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zc=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xh=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>dc),t.lazy(()=>zc)])}).strict(),ev=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),But=t.object({update:t.union([t.lazy(()=>HE),t.lazy(()=>QE)]),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]),where:t.lazy(()=>N).optional()}).strict(),qut=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>HE),t.lazy(()=>QE)])}).strict(),HE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),QE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),JW=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>A7),t.lazy(()=>S7)]),create:t.union([t.lazy(()=>sc),t.lazy(()=>yc)])}).strict(),KW=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>A7),t.lazy(()=>S7)])}).strict(),XW=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>aP),t.lazy(()=>fdt)])}).strict(),yl=t.object({AND:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),OR:t.lazy(()=>yl).array().optional(),NOT:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),tR=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>T7),t.lazy(()=>P7)]),create:t.union([t.lazy(()=>dc),t.lazy(()=>zc)])}).strict(),eR=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>T7),t.lazy(()=>P7)])}).strict(),oR=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>BB),t.lazy(()=>wdt)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>rq),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ov=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),nv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),w3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)])}).strict(),av=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Oq),maintenanceLogs:t.lazy(()=>wq).optional()}).strict(),iv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>Bq).optional()}).strict(),N3=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>av),t.lazy(()=>iv)])}).strict(),lv=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>hD),RecipeVersion:t.lazy(()=>bD).optional()}).strict(),rv=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),B3=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)])}).strict(),Fut=t.object({update:t.union([t.lazy(()=>YE),t.lazy(()=>GE)]),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]),where:t.lazy(()=>v).optional()}).strict(),Dut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>YE),t.lazy(()=>GE)])}).strict(),YE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),GE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),Eut=t.object({update:t.union([t.lazy(()=>$E),t.lazy(()=>JE)]),create:t.union([t.lazy(()=>av),t.lazy(()=>iv)]),where:t.lazy(()=>Ze).optional()}).strict(),_ut=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>$E),t.lazy(()=>JE)])}).strict(),$E=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qq).optional(),maintenanceLogs:t.lazy(()=>Dq).optional()}).strict(),JE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>_q).optional()}).strict(),Lut=t.object({update:t.union([t.lazy(()=>KE),t.lazy(()=>XE)]),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]),where:t.lazy(()=>Be).optional()}).strict(),Vut=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>KE),t.lazy(()=>XE)])}).strict(),KE=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>CD).optional(),RecipeVersion:t.lazy(()=>AD).optional()}).strict(),XE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),pv=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Oq),recipes:t.lazy(()=>fq).optional()}).strict(),cv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Nq).optional()}).strict(),q3=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)])}).strict(),Hut=t.object({update:t.union([t.lazy(()=>t_),t.lazy(()=>e_)]),create:t.union([t.lazy(()=>pv),t.lazy(()=>cv)]),where:t.lazy(()=>Ze).optional()}).strict(),Qut=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>t_),t.lazy(()=>e_)])}).strict(),t_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>qq).optional(),recipes:t.lazy(()=>Fq).optional()}).strict(),e_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Eq).optional()}).strict(),uv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),sv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),F3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>uv),t.lazy(()=>sv)])}).strict(),mc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>E5).optional()}).strict(),hc=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>_5).optional()}).strict(),tb=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>mc),t.lazy(()=>hc)])}).strict(),yv=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>rF),items:t.lazy(()=>pF).optional()}).strict(),Ic=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>cF).optional()}).strict(),eb=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>bc),t.lazy(()=>Ic)])}).strict(),dv=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yut=t.object({update:t.union([t.lazy(()=>o_),t.lazy(()=>n_)]),create:t.union([t.lazy(()=>uv),t.lazy(()=>sv)]),where:t.lazy(()=>N).optional()}).strict(),Gut=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>o_),t.lazy(()=>n_)])}).strict(),o_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),n_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),nR=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>W7),t.lazy(()=>R7)]),create:t.union([t.lazy(()=>mc),t.lazy(()=>hc)])}).strict(),aR=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>W7),t.lazy(()=>R7)])}).strict(),iR=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>FB),t.lazy(()=>Ndt)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>cq),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lR=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>U7),t.lazy(()=>k7)]),create:t.union([t.lazy(()=>bc),t.lazy(()=>Ic)])}).strict(),rR=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>U7),t.lazy(()=>k7)])}).strict(),pR=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>UM),t.lazy(()=>Bdt)])}).strict(),kl=t.object({AND:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),OR:t.lazy(()=>kl).array().optional(),NOT:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),zv=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>$q),completions:t.lazy(()=>Kq).optional()}).strict(),mv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>tF).optional()}).strict(),D3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)])}).strict(),gc=t.object({status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>Q5)}).strict(),Cc=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ob=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>gc),t.lazy(()=>Cc)])}).strict(),hv=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),$ut=t.object({update:t.union([t.lazy(()=>a_),t.lazy(()=>i_)]),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]),where:t.lazy(()=>ve).optional()}).strict(),Jut=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>a_),t.lazy(()=>i_)])}).strict(),a_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eF).optional(),completions:t.lazy(()=>nF).optional()}).strict(),i_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>iF).optional()}).strict(),cR=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>x7),t.lazy(()=>j7)]),create:t.union([t.lazy(()=>gc),t.lazy(()=>Cc)])}).strict(),uR=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>x7),t.lazy(()=>j7)])}).strict(),sR=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>kM),t.lazy(()=>qdt)])}).strict(),xl=t.object({AND:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),OR:t.lazy(()=>xl).array().optional(),NOT:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>uq),t.lazy(()=>_t)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Wl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),bv=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>$q),items:t.lazy(()=>Jq).optional()}).strict(),Iv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Xq).optional()}).strict(),E3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)])}).strict(),gv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Cv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),_3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)])}).strict(),Ac=t.object({status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>Y5)}).strict(),Sc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nb=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Ac),t.lazy(()=>Sc)])}).strict(),Av=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kut=t.object({update:t.union([t.lazy(()=>l_),t.lazy(()=>r_)]),create:t.union([t.lazy(()=>bv),t.lazy(()=>Iv)]),where:t.lazy(()=>ve).optional()}).strict(),Xut=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>l_),t.lazy(()=>r_)])}).strict(),l_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>eF).optional(),items:t.lazy(()=>oF).optional()}).strict(),r_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>aF).optional()}).strict(),tst=t.object({update:t.union([t.lazy(()=>p_),t.lazy(()=>c_)]),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]),where:t.lazy(()=>M).optional()}).strict(),est=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>p_),t.lazy(()=>c_)])}).strict(),p_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),c_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),yR=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)]),create:t.union([t.lazy(()=>Ac),t.lazy(()=>Sc)])}).strict(),dR=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)])}).strict(),zR=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>kM),t.lazy(()=>Fdt)])}).strict(),Sv=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>lF),completedBy:t.lazy(()=>rF)}).strict(),Tv=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L3=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)])}).strict(),Pv=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>D5)}).strict(),Wv=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),V3=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Wv)])}).strict(),ost=t.object({update:t.union([t.lazy(()=>u_),t.lazy(()=>s_)]),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]),where:t.lazy(()=>Ye).optional()}).strict(),nst=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>u_),t.lazy(()=>s_)])}).strict(),u_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>uF).optional(),completedBy:t.lazy(()=>sF).optional()}).strict(),s_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ast=t.object({update:t.union([t.lazy(()=>y_),t.lazy(()=>d_)]),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Wv)]),where:t.lazy(()=>Qe).optional()}).strict(),ist=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>y_),t.lazy(()=>d_)])}).strict(),y_=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>L5).optional()}).strict(),d_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rv=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>HD).optional(),ingredients:t.lazy(()=>QD).optional()}).strict(),Uv=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>GD).optional(),ingredients:t.lazy(()=>$D).optional()}).strict(),H3=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>Rv),t.lazy(()=>Uv)])}).strict(),kv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),xv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),Q3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)])}).strict(),lst=t.object({update:t.union([t.lazy(()=>z_),t.lazy(()=>m_)]),create:t.union([t.lazy(()=>Rv),t.lazy(()=>Uv)]),where:t.lazy(()=>Oe).optional()}).strict(),rst=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>z_),t.lazy(()=>m_)])}).strict(),z_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>KD).optional(),ingredients:t.lazy(()=>XD).optional()}).strict(),m_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>eE).optional(),ingredients:t.lazy(()=>oE).optional()}).strict(),pst=t.object({update:t.union([t.lazy(()=>h_),t.lazy(()=>b_)]),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]),where:t.lazy(()=>jt).optional()}).strict(),cst=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>h_),t.lazy(()=>b_)])}).strict(),h_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),b_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),jv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional()}).strict(),Mv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional()}).strict(),Y3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)])}).strict(),Zv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),vv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),G3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)])}).strict(),Ov=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),fv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),$3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),ust=t.object({update:t.union([t.lazy(()=>I_),t.lazy(()=>g_)]),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]),where:t.lazy(()=>N).optional()}).strict(),sst=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>I_),t.lazy(()=>g_)])}).strict(),I_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional()}).strict(),g_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional()}).strict(),yst=t.object({update:t.union([t.lazy(()=>C_),t.lazy(()=>A_)]),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]),where:t.lazy(()=>Tt).optional()}).strict(),dst=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>C_),t.lazy(()=>A_)])}).strict(),C_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),A_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),zst=t.object({update:t.union([t.lazy(()=>S_),t.lazy(()=>T_)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>M).optional()}).strict(),mst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>S_),t.lazy(()=>T_)])}).strict(),S_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),T_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Tc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional()}).strict(),Pc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional()}).strict(),ab=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Tc),t.lazy(()=>Pc)])}).strict(),Wc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),Rc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),ib=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),Uc=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional()}).strict(),kc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional()}).strict(),lb=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Uc),t.lazy(()=>kc)])}).strict(),mR=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>v7),t.lazy(()=>O7)]),create:t.union([t.lazy(()=>Tc),t.lazy(()=>Pc)])}).strict(),hR=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>v7),t.lazy(()=>O7)])}).strict(),bR=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>VS),t.lazy(()=>Ddt)])}).strict(),IR=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>f7),t.lazy(()=>w7)]),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),gR=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>f7),t.lazy(()=>w7)])}).strict(),CR=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>Edt)])}).strict(),le=t.object({AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Wl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>zt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Rq),t.lazy(()=>R)]).optional(),category:t.union([t.lazy(()=>Uq),t.lazy(()=>W)]).optional()}).strict(),AR=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>N7),t.lazy(()=>B7)]),create:t.union([t.lazy(()=>Uc),t.lazy(()=>kc)])}).strict(),SR=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>N7),t.lazy(()=>B7)])}).strict(),TR=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>vM),t.lazy(()=>_dt)])}).strict(),jl=t.object({AND:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),OR:t.lazy(()=>jl).array().optional(),NOT:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>xq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable()}).strict(),xc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),jc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),rb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xc),t.lazy(()=>jc)])}).strict(),PR=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>q7),t.lazy(()=>F7)]),create:t.union([t.lazy(()=>xc),t.lazy(()=>jc)])}).strict(),WR=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>q7),t.lazy(()=>F7)])}).strict(),RR=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>Ldt)])}).strict(),wv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),Nv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),J3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)])}).strict(),Bv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),qv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),K3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)])}).strict(),Fv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Dv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),X3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)])}).strict(),hst=t.object({update:t.union([t.lazy(()=>P_),t.lazy(()=>W_)]),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]),where:t.lazy(()=>N).optional()}).strict(),bst=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>P_),t.lazy(()=>W_)])}).strict(),P_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),W_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Ist=t.object({update:t.union([t.lazy(()=>R_),t.lazy(()=>U_)]),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]),where:t.lazy(()=>Tt).optional()}).strict(),gst=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>R_),t.lazy(()=>U_)])}).strict(),R_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),U_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),Cst=t.object({update:t.union([t.lazy(()=>k_),t.lazy(()=>x_)]),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]),where:t.lazy(()=>M).optional()}).strict(),Ast=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>k_),t.lazy(()=>x_)])}).strict(),k_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),x_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Ev=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),_v=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),t8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Ev),t.lazy(()=>_v)])}).strict(),Lv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),Vv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),e8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Lv),t.lazy(()=>Vv)])}).strict(),Hv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Qv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),o8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Hv),t.lazy(()=>Qv)])}).strict(),Sst=t.object({update:t.union([t.lazy(()=>j_),t.lazy(()=>M_)]),create:t.union([t.lazy(()=>Ev),t.lazy(()=>_v)]),where:t.lazy(()=>N).optional()}).strict(),Tst=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>j_),t.lazy(()=>M_)])}).strict(),j_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),M_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Pst=t.object({update:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)]),create:t.union([t.lazy(()=>Lv),t.lazy(()=>Vv)]),where:t.lazy(()=>jt).optional()}).strict(),Wst=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)])}).strict(),Z_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),v_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),Rst=t.object({update:t.union([t.lazy(()=>O_),t.lazy(()=>f_)]),create:t.union([t.lazy(()=>Hv),t.lazy(()=>Qv)]),where:t.lazy(()=>M).optional()}).strict(),Ust=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>O_),t.lazy(()=>f_)])}).strict(),O_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),f_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Yv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),Gv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),n8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Yv),t.lazy(()=>Gv)])}).strict(),$v=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Jv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),a8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>$v),t.lazy(()=>Jv)])}).strict(),Mc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>XF),assignedTo:t.lazy(()=>tD).optional()}).strict(),Zc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Mc),t.lazy(()=>Zc)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),kst=t.object({update:t.union([t.lazy(()=>w_),t.lazy(()=>N_)]),create:t.union([t.lazy(()=>Yv),t.lazy(()=>Gv)]),where:t.lazy(()=>N).optional()}).strict(),xst=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>w_),t.lazy(()=>N_)])}).strict(),w_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),N_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),jst=t.object({update:t.union([t.lazy(()=>B_),t.lazy(()=>q_)]),create:t.union([t.lazy(()=>$v),t.lazy(()=>Jv)]),where:t.lazy(()=>M).optional()}).strict(),Mst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>B_),t.lazy(()=>q_)])}).strict(),B_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),q_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),UR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>D7),t.lazy(()=>E7)]),create:t.union([t.lazy(()=>Mc),t.lazy(()=>Zc)])}).strict(),kR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>D7),t.lazy(()=>E7)])}).strict(),xR=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>cP),t.lazy(()=>Vdt)])}).strict(),dl=t.object({AND:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),OR:t.lazy(()=>dl).array().optional(),NOT:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Xv=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>LF),createdBy:t.lazy(()=>VF)}).strict(),tO=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i8=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)])}).strict(),eO=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),oO=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),l8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)])}).strict(),nO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),aO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),r8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)])}).strict(),Zst=t.object({update:t.union([t.lazy(()=>F_),t.lazy(()=>D_)]),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]),where:t.lazy(()=>Ge).optional()}).strict(),vst=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>F_),t.lazy(()=>D_)])}).strict(),F_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YF).optional(),createdBy:t.lazy(()=>GF).optional()}).strict(),D_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ost=t.object({update:t.union([t.lazy(()=>E_),t.lazy(()=>__)]),create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]),where:t.lazy(()=>v).optional()}).strict(),fst=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>E_),t.lazy(()=>__)])}).strict(),E_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),__=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),wst=t.object({update:t.union([t.lazy(()=>L_),t.lazy(()=>V_)]),create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]),where:t.lazy(()=>M).optional()}).strict(),Nst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>L_),t.lazy(()=>V_)])}).strict(),L_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),V_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),iO=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),user:t.lazy(()=>U6)}).strict(),lO=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),p8=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)])}).strict(),Bst=t.object({update:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)]),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]),where:t.lazy(()=>Xe).optional()}).strict(),qst=t.object({where:t.lazy(()=>Xe).optional(),data:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)])}).strict(),H_=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional(),user:t.lazy(()=>j6).optional()}).strict(),Q_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional()}).strict(),rO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),pO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),c8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)])}).strict(),Fst=t.object({update:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)]),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]),where:t.lazy(()=>M).optional()}).strict(),Dst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)])}).strict(),Y_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),G_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),cO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),uO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),u8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>cO),t.lazy(()=>uO)])}).strict(),Est=t.object({update:t.union([t.lazy(()=>$_),t.lazy(()=>J_)]),create:t.union([t.lazy(()=>cO),t.lazy(()=>uO)]),where:t.lazy(()=>M).optional()}).strict(),_st=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>$_),t.lazy(()=>J_)])}).strict(),$_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),J_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),sO=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),ingredient:t.lazy(()=>pT),lastUpdatedBy:t.lazy(()=>cT).optional(),transactions:t.lazy(()=>uT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),yO=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),s8=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>sO),t.lazy(()=>yO)])}).strict(),dO=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),zO=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),y8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>dO),t.lazy(()=>zO)])}).strict(),mO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),hO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),d8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>mO),t.lazy(()=>hO)])}).strict(),Lst=t.object({update:t.union([t.lazy(()=>K_),t.lazy(()=>X_)]),create:t.union([t.lazy(()=>sO),t.lazy(()=>yO)]),where:t.lazy(()=>ie).optional()}).strict(),Vst=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>K_),t.lazy(()=>X_)])}).strict(),K_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),ingredient:t.lazy(()=>bT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),transactions:t.lazy(()=>gT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),X_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),Hst=t.object({update:t.union([t.lazy(()=>tL),t.lazy(()=>eL)]),create:t.union([t.lazy(()=>dO),t.lazy(()=>zO)]),where:t.lazy(()=>v).optional()}).strict(),Qst=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>tL),t.lazy(()=>eL)])}).strict(),tL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),eL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),Yst=t.object({update:t.union([t.lazy(()=>oL),t.lazy(()=>nL)]),create:t.union([t.lazy(()=>mO),t.lazy(()=>hO)]),where:t.lazy(()=>M).optional()}).strict(),Gst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>oL),t.lazy(()=>nL)])}).strict(),oL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),nL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),vc=t.object({ingredient:t.lazy(()=>e6)}).strict(),Oc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),cb=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>vc),t.lazy(()=>Oc)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),jR=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>_7),t.lazy(()=>L7)]),create:t.union([t.lazy(()=>vc),t.lazy(()=>Oc)])}).strict(),MR=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>_7),t.lazy(()=>L7)])}).strict(),ZR=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>MM),t.lazy(()=>Hdt)])}).strict(),Ml=t.object({AND:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),OR:t.lazy(()=>Ml).array().optional(),NOT:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),IO=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),gO=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),z8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)])}).strict(),CO=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),AO=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),m8=t.object({where:t.lazy(()=>sp),create:t.union([t.lazy(()=>CO),t.lazy(()=>AO)])}).strict(),$st=t.object({update:t.union([t.lazy(()=>aL),t.lazy(()=>iL)]),create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]),where:t.lazy(()=>jt).optional()}).strict(),Jst=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>aL),t.lazy(()=>iL)])}).strict(),aL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),iL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),Kst=t.object({update:t.union([t.lazy(()=>lL),t.lazy(()=>rL)]),create:t.union([t.lazy(()=>CO),t.lazy(()=>AO)]),where:t.lazy(()=>co).optional()}).strict(),Xst=t.object({where:t.lazy(()=>co).optional(),data:t.union([t.lazy(()=>lL),t.lazy(()=>rL)])}).strict(),lL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),rL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),SO=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),TO=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),h8=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>SO),t.lazy(()=>TO)])}).strict(),tyt=t.object({update:t.union([t.lazy(()=>pL),t.lazy(()=>cL)]),create:t.union([t.lazy(()=>SO),t.lazy(()=>TO)]),where:t.lazy(()=>Tt).optional()}).strict(),eyt=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>pL),t.lazy(()=>cL)])}).strict(),pL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),cL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),fc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),wc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),ub=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>fc),t.lazy(()=>wc)])}).strict(),PO=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Nc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Bc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),sb=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Nc),t.lazy(()=>Bc)])}).strict(),WO=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),vR=t.object({where:t.lazy(()=>K),update:t.union([t.lazy(()=>V7),t.lazy(()=>H7)]),create:t.union([t.lazy(()=>fc),t.lazy(()=>wc)])}).strict(),OR=t.object({where:t.lazy(()=>K),data:t.union([t.lazy(()=>V7),t.lazy(()=>H7)])}).strict(),fR=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>HB),t.lazy(()=>Qdt)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>zt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable()}).strict(),wR=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)]),create:t.union([t.lazy(()=>Nc),t.lazy(()=>Bc)])}).strict(),NR=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)])}).strict(),BR=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>ZM),t.lazy(()=>Ydt)])}).strict(),Zl=t.object({AND:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),OR:t.lazy(()=>Zl).array().optional(),NOT:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),RO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),UO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),b8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>RO),t.lazy(()=>UO)])}).strict(),qc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>pT),lastUpdatedBy:t.lazy(()=>cT).optional(),transactions:t.lazy(()=>uT).optional(),withdrawals:t.lazy(()=>sT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),Fc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),yb=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>qc),t.lazy(()=>Fc)])}).strict(),kO=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Dc=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>WD),createdBy:t.lazy(()=>RD)}).strict(),Ec=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),db=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Dc),t.lazy(()=>Ec)])}).strict(),xO=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_c=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>MD),items:t.lazy(()=>ZD).optional()}).strict(),Lc=t.object({id:t.number().int().optional(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>vD).optional()}).strict(),zb=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>_c),t.lazy(()=>Lc)])}).strict(),jO=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),oyt=t.object({update:t.union([t.lazy(()=>uL),t.lazy(()=>sL)]),create:t.union([t.lazy(()=>RO),t.lazy(()=>UO)]),where:t.lazy(()=>N).optional()}).strict(),nyt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>uL),t.lazy(()=>sL)])}).strict(),uL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),sL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),qR=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>G7),t.lazy(()=>$7)]),create:t.union([t.lazy(()=>qc),t.lazy(()=>Fc)])}).strict(),FR=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>G7),t.lazy(()=>$7)])}).strict(),DR=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>yP),t.lazy(()=>Gdt)])}).strict(),zl=t.object({AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>U),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>U),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>U),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>U),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>U),t.number()]).optional(),averageCost:t.union([t.lazy(()=>U),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable()}).strict(),ER=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>J7),t.lazy(()=>K7)]),create:t.union([t.lazy(()=>Dc),t.lazy(()=>Ec)])}).strict(),_R=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>J7),t.lazy(()=>K7)])}).strict(),LR=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>dP),t.lazy(()=>$dt)])}).strict(),ml=t.object({AND:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),OR:t.lazy(()=>ml).array().optional(),NOT:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>jq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>U),t.number()]).optional(),newQty:t.union([t.lazy(()=>U),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),VR=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>X7),t.lazy(()=>tJ)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Lc)])}).strict(),HR=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>X7),t.lazy(()=>tJ)])}).strict(),QR=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>fM),t.lazy(()=>Jdt)])}).strict(),vl=t.object({AND:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),OR:t.lazy(()=>vl).array().optional(),NOT:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>Mq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),MO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>l6).optional()}).strict(),ZO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>p6).optional()}).strict(),I8=t.object({where:t.lazy(()=>Dl),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)])}).strict(),Vc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Hc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),mb=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Vc),t.lazy(()=>Hc)])}).strict(),vO=t.object({data:t.union([t.lazy(()=>hQ),t.lazy(()=>hQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>d6).optional()}).strict(),Yc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>m6).optional()}).strict(),hb=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>Qc),t.lazy(()=>Yc)])}).strict(),OO=t.object({data:t.union([t.lazy(()=>bQ),t.lazy(()=>bQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),WT=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>uZ).optional(),transactions:t.lazy(()=>sZ).optional(),stockCounts:t.lazy(()=>yZ).optional()}).strict(),RT=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>dZ).optional(),transactions:t.lazy(()=>zZ).optional(),stockCounts:t.lazy(()=>mZ).optional()}).strict(),fO=t.object({where:t.lazy(()=>Jn),create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)])}).strict(),Gc=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>qD),items:t.lazy(()=>FD).optional()}).strict(),$c=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>DD).optional()}).strict(),bb=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Gc),t.lazy(()=>$c)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>IQ),t.lazy(()=>IQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Jc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),Kc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),Ib=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Jc),t.lazy(()=>Kc)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>gQ),t.lazy(()=>gQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Xc=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>sE).optional(),MenuCategory:t.lazy(()=>yE).optional()}).strict(),tu=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>dE).optional(),MenuCategory:t.lazy(()=>zE).optional()}).strict(),gb=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>Xc),t.lazy(()=>tu)])}).strict(),BO=t.object({data:t.union([t.lazy(()=>CQ),t.lazy(()=>CQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),eu=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Z5)}).strict(),ou=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Cb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>eu),t.lazy(()=>ou)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>AQ),t.lazy(()=>AQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),nu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>vF),recordedBy:t.lazy(()=>OF)}).strict(),au=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ab=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>nu),t.lazy(()=>au)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>SQ),t.lazy(()=>SQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),iu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>qF),recordedBy:t.lazy(()=>FF)}).strict(),lu=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Sb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>iu),t.lazy(()=>lu)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>TQ),t.lazy(()=>TQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ru=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>VF),items:t.lazy(()=>HF).optional()}).strict(),pu=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QF).optional()}).strict(),Tb=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>ru),t.lazy(()=>pu)])}).strict(),EO=t.object({data:t.union([t.lazy(()=>PQ),t.lazy(()=>PQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),cu=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>fq).optional(),maintenanceLogs:t.lazy(()=>wq).optional()}).strict(),uu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Nq).optional(),maintenanceLogs:t.lazy(()=>Bq).optional()}).strict(),Pb=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>cu),t.lazy(()=>uu)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>WQ),t.lazy(()=>WQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),su=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Jq).optional(),completions:t.lazy(()=>Kq).optional()}).strict(),yu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Xq).optional(),completions:t.lazy(()=>tF).optional()}).strict(),Wb=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>su),t.lazy(()=>yu)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>RQ),t.lazy(()=>RQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),du=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>mF).optional(),respondedBy:t.lazy(()=>hF).optional()}).strict(),zu=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Rb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>du),t.lazy(()=>zu)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>UQ),t.lazy(()=>UQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ayt=t.object({update:t.union([t.lazy(()=>yL),t.lazy(()=>dL)]),create:t.union([t.lazy(()=>MO),t.lazy(()=>ZO)]),where:t.lazy(()=>Me).optional()}).strict(),iyt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>yL),t.lazy(()=>dL)])}).strict(),yL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>u6).optional()}).strict(),dL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>y6).optional()}).strict(),YR=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)]),create:t.union([t.lazy(()=>Vc),t.lazy(()=>Hc)])}).strict(),GR=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)])}).strict(),$R=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>ZM),t.lazy(()=>Kdt)])}).strict(),JR=t.object({where:t.lazy(()=>ee),update:t.union([t.lazy(()=>nJ),t.lazy(()=>aJ)]),create:t.union([t.lazy(()=>Qc),t.lazy(()=>Yc)])}).strict(),KR=t.object({where:t.lazy(()=>ee),data:t.union([t.lazy(()=>nJ),t.lazy(()=>aJ)])}).strict(),XR=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>GB),t.lazy(()=>Xdt)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),g8=t.object({update:t.union([t.lazy(()=>HO),t.lazy(()=>QO)]),create:t.union([t.lazy(()=>WT),t.lazy(()=>RT)]),where:t.lazy(()=>Ft).optional()}).strict(),C8=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>HO),t.lazy(()=>QO)])}).strict(),HO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>bZ).optional(),transactions:t.lazy(()=>IZ).optional(),stockCounts:t.lazy(()=>gZ).optional()}).strict(),QO=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>CZ).optional(),transactions:t.lazy(()=>AZ).optional(),stockCounts:t.lazy(()=>SZ).optional()}).strict(),tU=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)]),create:t.union([t.lazy(()=>Gc),t.lazy(()=>$c)])}).strict(),eU=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)])}).strict(),oU=t.object({where:t.lazy(()=>Ol),data:t.union([t.lazy(()=>NM),t.lazy(()=>tzt)])}).strict(),Ol=t.object({AND:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional(),OR:t.lazy(()=>Ol).array().optional(),NOT:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>Zq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),nU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)]),create:t.union([t.lazy(()=>Jc),t.lazy(()=>Kc)])}).strict(),aU=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)])}).strict(),iU=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>ezt)])}).strict(),lU=t.object({where:t.lazy(()=>Gt),update:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)]),create:t.union([t.lazy(()=>Xc),t.lazy(()=>tu)])}).strict(),rU=t.object({where:t.lazy(()=>Gt),data:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)])}).strict(),pU=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>tq),t.lazy(()=>ozt)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),cU=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>sJ),t.lazy(()=>yJ)]),create:t.union([t.lazy(()=>eu),t.lazy(()=>ou)])}).strict(),uU=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>sJ),t.lazy(()=>yJ)])}).strict(),sU=t.object({where:t.lazy(()=>fl),data:t.union([t.lazy(()=>RM),t.lazy(()=>nzt)])}).strict(),fl=t.object({AND:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional(),OR:t.lazy(()=>fl).array().optional(),NOT:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),total:t.union([t.lazy(()=>U),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),yU=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)]),create:t.union([t.lazy(()=>nu),t.lazy(()=>au)])}).strict(),dU=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)])}).strict(),zU=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>azt)])}).strict(),hl=t.object({AND:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),OR:t.lazy(()=>hl).array().optional(),NOT:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),mU=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>mJ),t.lazy(()=>hJ)]),create:t.union([t.lazy(()=>iu),t.lazy(()=>lu)])}).strict(),hU=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>mJ),t.lazy(()=>hJ)])}).strict(),bU=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>pP),t.lazy(()=>izt)])}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),IU=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>bJ),t.lazy(()=>IJ)]),create:t.union([t.lazy(()=>ru),t.lazy(()=>pu)])}).strict(),gU=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>bJ),t.lazy(()=>IJ)])}).strict(),CU=t.object({where:t.lazy(()=>wl),data:t.union([t.lazy(()=>jM),t.lazy(()=>lzt)])}).strict(),wl=t.object({AND:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional(),OR:t.lazy(()=>wl).array().optional(),NOT:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>dq),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),AU=t.object({where:t.lazy(()=>Ht),update:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)]),create:t.union([t.lazy(()=>cu),t.lazy(()=>uu)])}).strict(),SU=t.object({where:t.lazy(()=>Ht),data:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)])}).strict(),TU=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>NB),t.lazy(()=>rzt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>iq),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),PU=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)]),create:t.union([t.lazy(()=>su),t.lazy(()=>yu)])}).strict(),WU=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)])}).strict(),RU=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>qB),t.lazy(()=>pzt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>pq),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),UU=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)]),create:t.union([t.lazy(()=>du),t.lazy(()=>zu)])}).strict(),kU=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)])}).strict(),xU=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>iP),t.lazy(()=>czt)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>sq),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Wl).optional(),status:t.union([t.lazy(()=>yq),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),YO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>i6).optional()}).strict(),GO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>r6).optional()}).strict(),A8=t.object({where:t.lazy(()=>Dl),create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)])}).strict(),$O=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),JO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),S8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)])}).strict(),mu=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>k6).optional()}).strict(),hu=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>x6).optional()}).strict(),Ub=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>mu),t.lazy(()=>hu)])}).strict(),KO=t.object({data:t.union([t.lazy(()=>kQ),t.lazy(()=>kQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bu=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>aE),recipe:t.lazy(()=>iE)}).strict(),Iu=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),kb=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>bu),t.lazy(()=>Iu)])}).strict(),XO=t.object({data:t.union([t.lazy(()=>xQ),t.lazy(()=>xQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),gu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),ingredient:t.lazy(()=>pT),transactions:t.lazy(()=>uT).optional(),withdrawals:t.lazy(()=>sT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),Cu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),xb=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>gu),t.lazy(()=>Cu)])}).strict(),tf=t.object({data:t.union([t.lazy(()=>jQ),t.lazy(()=>jQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Au=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),Su=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),jb=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>Au),t.lazy(()=>Su)])}).strict(),ef=t.object({data:t.union([t.lazy(()=>MQ),t.lazy(()=>MQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Tu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Pu=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mb=t.object({where:t.lazy(()=>ke),create:t.union([t.lazy(()=>Tu),t.lazy(()=>Pu)])}).strict(),of=t.object({data:t.union([t.lazy(()=>ZQ),t.lazy(()=>ZQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>ZF),menuItem:t.lazy(()=>vF)}).strict(),Ru=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zb=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),nf=t.object({data:t.union([t.lazy(()=>vQ),t.lazy(()=>vQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BF),ingrediente:t.lazy(()=>qF)}).strict(),ku=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vb=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Uu),t.lazy(()=>ku)])}).strict(),af=t.object({data:t.union([t.lazy(()=>OQ),t.lazy(()=>OQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),xu=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>LF),items:t.lazy(()=>HF).optional()}).strict(),ju=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>QF).optional()}).strict(),Ob=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>xu),t.lazy(()=>ju)])}).strict(),lf=t.object({data:t.union([t.lazy(()=>fQ),t.lazy(()=>fQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Mu=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>KF),recipe:t.lazy(()=>XF)}).strict(),Zu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fb=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Mu),t.lazy(()=>Zu)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>wQ),t.lazy(()=>wQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),vu=t.object({dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ou=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wb=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>vu),t.lazy(()=>Ou)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>NQ),t.lazy(()=>NQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),fu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wu=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nb=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>fu),t.lazy(()=>wu)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>BQ),t.lazy(()=>BQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Nu=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>aD),recipe:t.lazy(()=>iD).optional()}).strict(),Bu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bb=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Nu),t.lazy(()=>Bu)])}).strict(),uf=t.object({data:t.union([t.lazy(()=>qQ),t.lazy(()=>qQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),qu=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>lF),items:t.lazy(()=>pF).optional()}).strict(),Fu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>cF).optional()}).strict(),qb=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>qu),t.lazy(()=>Fu)])}).strict(),sf=t.object({data:t.union([t.lazy(()=>FQ),t.lazy(()=>FQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Du=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>zF),menuItem:t.lazy(()=>mF).optional()}).strict(),Eu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Du),t.lazy(()=>Eu)])}).strict(),yf=t.object({data:t.union([t.lazy(()=>DQ),t.lazy(()=>DQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_u=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mP),ingredients:t.lazy(()=>hP).optional(),instructions:t.lazy(()=>bP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),Lu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),Db=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>_u),t.lazy(()=>Lu)])}).strict(),df=t.object({data:t.union([t.lazy(()=>EQ),t.lazy(()=>EQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vu=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mP),ingredients:t.lazy(()=>hP).optional(),instructions:t.lazy(()=>bP).optional(),createdBy:t.lazy(()=>IP)}).strict(),Hu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),Eb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Vu),t.lazy(()=>Hu)])}).strict(),zf=t.object({data:t.union([t.lazy(()=>_Q),t.lazy(()=>_Q).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qu=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>PD),item:t.lazy(()=>WD)}).strict(),Yu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),_b=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Qu),t.lazy(()=>Yu)])}).strict(),mf=t.object({data:t.union([t.lazy(()=>LQ),t.lazy(()=>LQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Gu=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>jD),items:t.lazy(()=>ZD).optional()}).strict(),$u=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>vD).optional()}).strict(),Lb=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Gu),t.lazy(()=>$u)])}).strict(),hf=t.object({data:t.union([t.lazy(()=>VQ),t.lazy(()=>VQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ju=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),Ku=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),Vb=t.object({where:t.lazy(()=>Re),create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ku)])}).strict(),bf=t.object({data:t.union([t.lazy(()=>HQ),t.lazy(()=>HQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),lyt=t.object({update:t.union([t.lazy(()=>zL),t.lazy(()=>mL)]),create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]),where:t.lazy(()=>Me).optional()}).strict(),ryt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>zL),t.lazy(()=>mL)])}).strict(),zL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>c6).optional()}).strict(),mL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>s6).optional()}).strict(),pyt=t.object({update:t.union([t.lazy(()=>hL),t.lazy(()=>bL)]),create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]),where:t.lazy(()=>N).optional()}).strict(),cyt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>hL),t.lazy(()=>bL)])}).strict(),hL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),bL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),jU=t.object({where:t.lazy(()=>oe),update:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)]),create:t.union([t.lazy(()=>mu),t.lazy(()=>hu)])}).strict(),MU=t.object({where:t.lazy(()=>oe),data:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)])}).strict(),ZU=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>JB),t.lazy(()=>uzt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>vq),t.lazy(()=>Vt)]).optional()}).strict(),vU=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>UJ),t.lazy(()=>kJ)]),create:t.union([t.lazy(()=>bu),t.lazy(()=>Iu)])}).strict(),OU=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>UJ),t.lazy(()=>kJ)])}).strict(),fU=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>zP),t.lazy(()=>szt)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),wU=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)]),create:t.union([t.lazy(()=>gu),t.lazy(()=>Cu)])}).strict(),NU=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)])}).strict(),BU=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>yP),t.lazy(()=>yzt)])}).strict(),qU=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)]),create:t.union([t.lazy(()=>Au),t.lazy(()=>Su)])}).strict(),FU=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)])}).strict(),DU=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>YB),t.lazy(()=>dzt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>S),t.string()]).optional(),verified:t.union([t.lazy(()=>zt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),EU=t.object({where:t.lazy(()=>ke),update:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)]),create:t.union([t.lazy(()=>Tu),t.lazy(()=>Pu)])}).strict(),_U=t.object({where:t.lazy(()=>ke),data:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)])}).strict(),LU=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>XB),t.lazy(()=>zzt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),VU=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)]),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),HU=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)])}).strict(),QU=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>mzt)])}).strict(),YU=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)]),create:t.union([t.lazy(()=>Uu),t.lazy(()=>ku)])}).strict(),GU=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)])}).strict(),$U=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>pP),t.lazy(()=>hzt)])}).strict(),JU=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)]),create:t.union([t.lazy(()=>xu),t.lazy(()=>ju)])}).strict(),KU=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)])}).strict(),XU=t.object({where:t.lazy(()=>wl),data:t.union([t.lazy(()=>jM),t.lazy(()=>bzt)])}).strict(),tk=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>DJ),t.lazy(()=>EJ)]),create:t.union([t.lazy(()=>Mu),t.lazy(()=>Zu)])}).strict(),ek=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>DJ),t.lazy(()=>EJ)])}).strict(),ok=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>cP),t.lazy(()=>Izt)])}).strict(),nk=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>_J),t.lazy(()=>LJ)]),create:t.union([t.lazy(()=>vu),t.lazy(()=>Ou)])}).strict(),ak=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>_J),t.lazy(()=>LJ)])}).strict(),ik=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>_B),t.lazy(()=>gzt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>hq),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lk=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)]),create:t.union([t.lazy(()=>fu),t.lazy(()=>wu)])}).strict(),rk=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)])}).strict(),pk=t.object({where:t.lazy(()=>Bp),data:t.union([t.lazy(()=>LB),t.lazy(()=>Czt)])}).strict(),Bp=t.object({AND:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),OR:t.lazy(()=>Bp).array().optional(),NOT:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>bq),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ck=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)]),create:t.union([t.lazy(()=>Nu),t.lazy(()=>Bu)])}).strict(),uk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)])}).strict(),sk=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>uP),t.lazy(()=>Azt)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),yk=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)]),create:t.union([t.lazy(()=>qu),t.lazy(()=>Fu)])}).strict(),dk=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)])}).strict(),zk=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>UM),t.lazy(()=>Szt)])}).strict(),mk=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)]),create:t.union([t.lazy(()=>Du),t.lazy(()=>Eu)])}).strict(),hk=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)])}).strict(),bk=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>iP),t.lazy(()=>Tzt)])}).strict(),Ik=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>XJ),t.lazy(()=>tK)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Lu)])}).strict(),gk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>XJ),t.lazy(()=>tK)])}).strict(),Ck=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>nP),t.lazy(()=>Pzt)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ak=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>eK),t.lazy(()=>oK)]),create:t.union([t.lazy(()=>Vu),t.lazy(()=>Hu)])}).strict(),Sk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>eK),t.lazy(()=>oK)])}).strict(),Tk=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>nP),t.lazy(()=>Wzt)])}).strict(),Pk=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>nK),t.lazy(()=>aK)]),create:t.union([t.lazy(()=>Qu),t.lazy(()=>Yu)])}).strict(),Wk=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>nK),t.lazy(()=>aK)])}).strict(),Rk=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>dP),t.lazy(()=>Rzt)])}).strict(),Uk=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>iK),t.lazy(()=>lK)]),create:t.union([t.lazy(()=>Gu),t.lazy(()=>$u)])}).strict(),kk=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>iK),t.lazy(()=>lK)])}).strict(),xk=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>fM),t.lazy(()=>Uzt)])}).strict(),jk=t.object({where:t.lazy(()=>Re),update:t.union([t.lazy(()=>rK),t.lazy(()=>pK)]),create:t.union([t.lazy(()=>Ju),t.lazy(()=>Ku)])}).strict(),Mk=t.object({where:t.lazy(()=>Re),data:t.union([t.lazy(()=>rK),t.lazy(()=>pK)])}).strict(),Zk=t.object({where:t.lazy(()=>qp),data:t.union([t.lazy(()=>QB),t.lazy(()=>kzt)])}).strict(),qp=t.object({AND:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),OR:t.lazy(()=>qp).array().optional(),NOT:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>Wq),t.lazy(()=>se)]).optional()}).strict(),If=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional()}).strict(),gf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional()}).strict(),T8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)])}).strict(),uyt=t.object({update:t.union([t.lazy(()=>IL),t.lazy(()=>gL)]),create:t.union([t.lazy(()=>If),t.lazy(()=>gf)]),where:t.lazy(()=>M).optional()}).strict(),syt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>IL),t.lazy(()=>gL)])}).strict(),IL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional()}).strict(),gL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional()}).strict(),Cf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Af=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),P8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)])}).strict(),yyt=t.object({update:t.union([t.lazy(()=>CL),t.lazy(()=>AL)]),create:t.union([t.lazy(()=>Cf),t.lazy(()=>Af)]),where:t.lazy(()=>M).optional()}).strict(),dyt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>CL),t.lazy(()=>AL)])}).strict(),CL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),AL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Xu=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),ts=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),Hb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Xu),t.lazy(()=>ts)])}).strict(),Sf=t.object({data:t.union([t.lazy(()=>QQ),t.lazy(()=>QQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Tf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),Pf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),W8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)])}).strict(),vk=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>cK),t.lazy(()=>uK)]),create:t.union([t.lazy(()=>Xu),t.lazy(()=>ts)])}).strict(),Ok=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>cK),t.lazy(()=>uK)])}).strict(),fk=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>xzt)])}).strict(),zyt=t.object({update:t.union([t.lazy(()=>SL),t.lazy(()=>TL)]),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]),where:t.lazy(()=>N).optional()}).strict(),myt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>SL),t.lazy(()=>TL)])}).strict(),SL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),TL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Wf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),Rf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),R8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)])}).strict(),Uf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>z6).optional()}).strict(),kf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),U8=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>Uf),t.lazy(()=>kf)])}).strict(),es=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>sD),recipeVersion:t.lazy(()=>yD).optional()}).strict(),os=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Qb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>es),t.lazy(()=>os)])}).strict(),xf=t.object({data:t.union([t.lazy(()=>YQ),t.lazy(()=>YQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ns=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>bD).optional(),equipment:t.lazy(()=>ID).optional()}).strict(),as=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>gD).optional()}).strict(),Yb=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>ns),t.lazy(()=>as)])}).strict(),jf=t.object({data:t.union([t.lazy(()=>GQ),t.lazy(()=>GQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),is=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),ls=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),Gb=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>is),t.lazy(()=>ls)])}).strict(),rs=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ps=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$b=t.object({where:t.lazy(()=>xe),create:t.union([t.lazy(()=>rs),t.lazy(()=>ps)])}).strict(),Mf=t.object({data:t.union([t.lazy(()=>$Q),t.lazy(()=>$Q).array()]),skipDuplicates:t.boolean().optional()}).strict(),cs=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),us=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Jb=t.object({where:t.lazy(()=>je),create:t.union([t.lazy(()=>cs),t.lazy(()=>us)])}).strict(),Zf=t.object({data:t.union([t.lazy(()=>JQ),t.lazy(()=>JQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ss=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>O6).optional()}).strict(),ys=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>w6).optional()}).strict(),Kb=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>ss),t.lazy(()=>ys)])}).strict(),ds=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>aE),assignedTo:t.lazy(()=>lE)}).strict(),zs=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),Xb=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>ds),t.lazy(()=>zs)])}).strict(),vf=t.object({data:t.union([t.lazy(()=>KQ),t.lazy(()=>KQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ms=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>D6)}).strict(),hs=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),tI=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>ms),t.lazy(()=>hs)])}).strict(),Of=t.object({data:t.union([t.lazy(()=>XQ),t.lazy(()=>XQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bs=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>KF),assignedTo:t.lazy(()=>tD).optional()}).strict(),Is=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eI=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>bs),t.lazy(()=>Is)])}).strict(),ff=t.object({data:t.union([t.lazy(()=>t0),t.lazy(()=>t0).array()]),skipDuplicates:t.boolean().optional()}).strict(),gs=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>aD),createdBy:t.lazy(()=>lD)}).strict(),Cs=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oI=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>gs),t.lazy(()=>Cs)])}).strict(),wf=t.object({data:t.union([t.lazy(()=>e0),t.lazy(()=>e0).array()]),skipDuplicates:t.boolean().optional()}).strict(),As=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ss=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nI=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>As),t.lazy(()=>Ss)])}).strict(),Ts=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>hP).optional(),instructions:t.lazy(()=>bP).optional(),createdBy:t.lazy(()=>IP),approvedBy:t.lazy(()=>gP).optional()}).strict(),Ps=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),aI=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ps)])}).strict(),Nf=t.object({data:t.union([t.lazy(()=>o0),t.lazy(()=>o0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ws=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>Vq),RecipeInstruction:t.lazy(()=>Hq).optional()}).strict(),Rs=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),iI=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),Bf=t.object({data:t.union([t.lazy(()=>n0),t.lazy(()=>n0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Us=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>CF).optional(),ingredients:t.lazy(()=>SF).optional()}).strict(),ks=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>TF).optional(),ingredients:t.lazy(()=>WF).optional()}).strict(),lI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Us),t.lazy(()=>ks)])}).strict(),xs=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),js=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rI=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>xs),t.lazy(()=>js)])}).strict(),qf=t.object({data:t.union([t.lazy(()=>a0),t.lazy(()=>a0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ms=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zs=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pI=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>Ms),t.lazy(()=>Zs)])}).strict(),Ff=t.object({data:t.union([t.lazy(()=>i0),t.lazy(()=>i0).array()]),skipDuplicates:t.boolean().optional()}).strict(),vs=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Os=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cI=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>vs),t.lazy(()=>Os)])}).strict(),Df=t.object({data:t.union([t.lazy(()=>l0),t.lazy(()=>l0).array()]),skipDuplicates:t.boolean().optional()}).strict(),UT=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),kT=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),Ef=t.object({where:t.lazy(()=>Ql),create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)])}).strict(),fs=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ws=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uI=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>fs),t.lazy(()=>ws)])}).strict(),_f=t.object({data:t.union([t.lazy(()=>r0),t.lazy(()=>r0).array()]),skipDuplicates:t.boolean().optional()}).strict(),xT=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jT=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Lf=t.object({where:t.lazy(()=>Yl),create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)])}).strict(),Ns=t.object({url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bs=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sI=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>Ns),t.lazy(()=>Bs)])}).strict(),Vf=t.object({data:t.union([t.lazy(()=>p0),t.lazy(()=>p0).array()]),skipDuplicates:t.boolean().optional()}).strict(),MT=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),ZT=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),Hf=t.object({where:t.lazy(()=>Gl),create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)])}).strict(),hyt=t.object({update:t.union([t.lazy(()=>PL),t.lazy(()=>WL)]),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]),where:t.lazy(()=>N).optional()}).strict(),byt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>PL),t.lazy(()=>WL)])}).strict(),PL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),WL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Iyt=t.object({update:t.union([t.lazy(()=>RL),t.lazy(()=>UL)]),create:t.union([t.lazy(()=>Uf),t.lazy(()=>kf)]),where:t.lazy(()=>$e).optional()}).strict(),gyt=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>RL),t.lazy(()=>UL)])}).strict(),RL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurant:t.lazy(()=>b6).optional()}).strict(),UL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),wk=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>sK),t.lazy(()=>yK)]),create:t.union([t.lazy(()=>es),t.lazy(()=>os)])}).strict(),Nk=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>sK),t.lazy(()=>yK)])}).strict(),Bk=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>sP),t.lazy(()=>jzt)])}).strict(),qk=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>dK),t.lazy(()=>zK)]),create:t.union([t.lazy(()=>ns),t.lazy(()=>as)])}).strict(),Fk=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>dK),t.lazy(()=>zK)])}).strict(),Dk=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>OM),t.lazy(()=>Mzt)])}).strict(),Ek=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>mK),t.lazy(()=>hK)]),create:t.union([t.lazy(()=>is),t.lazy(()=>ls)])}).strict(),_k=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>mK),t.lazy(()=>hK)])}).strict(),Lk=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>VS),t.lazy(()=>Zzt)])}).strict(),Vk=t.object({where:t.lazy(()=>xe),update:t.union([t.lazy(()=>bK),t.lazy(()=>IK)]),create:t.union([t.lazy(()=>rs),t.lazy(()=>ps)])}).strict(),Hk=t.object({where:t.lazy(()=>xe),data:t.union([t.lazy(()=>bK),t.lazy(()=>IK)])}).strict(),Qk=t.object({where:t.lazy(()=>Fp),data:t.union([t.lazy(()=>eq),t.lazy(()=>vzt)])}).strict(),Fp=t.object({AND:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),OR:t.lazy(()=>Fp).array().optional(),NOT:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>U),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Yk=t.object({where:t.lazy(()=>je),update:t.union([t.lazy(()=>gK),t.lazy(()=>CK)]),create:t.union([t.lazy(()=>cs),t.lazy(()=>us)])}).strict(),Gk=t.object({where:t.lazy(()=>je),data:t.union([t.lazy(()=>gK),t.lazy(()=>CK)])}).strict(),$k=t.object({where:t.lazy(()=>Dp),data:t.union([t.lazy(()=>oq),t.lazy(()=>Ozt)])}).strict(),Dp=t.object({AND:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),OR:t.lazy(()=>Dp).array().optional(),NOT:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Jk=t.object({where:t.lazy(()=>ne),update:t.union([t.lazy(()=>AK),t.lazy(()=>SK)]),create:t.union([t.lazy(()=>ss),t.lazy(()=>ys)])}).strict(),Kk=t.object({where:t.lazy(()=>ne),data:t.union([t.lazy(()=>AK),t.lazy(()=>SK)])}).strict(),Xk=t.object({where:t.lazy(()=>Ep),data:t.union([t.lazy(()=>KB),t.lazy(()=>fzt)])}).strict(),Ep=t.object({AND:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),OR:t.lazy(()=>Ep).array().optional(),NOT:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>lT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),tx=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>TK),t.lazy(()=>PK)]),create:t.union([t.lazy(()=>ds),t.lazy(()=>zs)])}).strict(),ex=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>TK),t.lazy(()=>PK)])}).strict(),ox=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>zP),t.lazy(()=>wzt)])}).strict(),nx=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>WK),t.lazy(()=>RK)]),create:t.union([t.lazy(()=>ms),t.lazy(()=>hs)])}).strict(),ax=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>WK),t.lazy(()=>RK)])}).strict(),ix=t.object({where:t.lazy(()=>Nl),data:t.union([t.lazy(()=>qM),t.lazy(()=>Nzt)])}).strict(),Nl=t.object({AND:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional(),OR:t.lazy(()=>Nl).array().optional(),NOT:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lx=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>UK),t.lazy(()=>kK)]),create:t.union([t.lazy(()=>bs),t.lazy(()=>Is)])}).strict(),rx=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>UK),t.lazy(()=>kK)])}).strict(),px=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>cP),t.lazy(()=>Bzt)])}).strict(),cx=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>xK),t.lazy(()=>jK)]),create:t.union([t.lazy(()=>gs),t.lazy(()=>Cs)])}).strict(),ux=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>xK),t.lazy(()=>jK)])}).strict(),sx=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>uP),t.lazy(()=>qzt)])}).strict(),yx=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>MK),t.lazy(()=>ZK)]),create:t.union([t.lazy(()=>As),t.lazy(()=>Ss)])}).strict(),dx=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>MK),t.lazy(()=>ZK)])}).strict(),zx=t.object({where:t.lazy(()=>_p),data:t.union([t.lazy(()=>DB),t.lazy(()=>Fzt)])}).strict(),_p=t.object({AND:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),OR:t.lazy(()=>_p).array().optional(),NOT:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),mx=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>vK),t.lazy(()=>OK)]),create:t.union([t.lazy(()=>Ts),t.lazy(()=>Ps)])}).strict(),hx=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>vK),t.lazy(()=>OK)])}).strict(),bx=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>nP),t.lazy(()=>Dzt)])}).strict(),Ix=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>fK),t.lazy(()=>wK)]),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),gx=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>fK),t.lazy(()=>wK)])}).strict(),Cx=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>aP),t.lazy(()=>Ezt)])}).strict(),Ax=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>NK),t.lazy(()=>BK)]),create:t.union([t.lazy(()=>Us),t.lazy(()=>ks)])}).strict(),Sx=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>NK),t.lazy(()=>BK)])}).strict(),Tx=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>lP),t.lazy(()=>_zt)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Px=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>qK),t.lazy(()=>FK)]),create:t.union([t.lazy(()=>xs),t.lazy(()=>js)])}).strict(),Wx=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>qK),t.lazy(()=>FK)])}).strict(),Rx=t.object({where:t.lazy(()=>Lp),data:t.union([t.lazy(()=>vB),t.lazy(()=>Lzt)])}).strict(),Lp=t.object({AND:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional(),OR:t.lazy(()=>Lp).array().optional(),NOT:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>U),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>U),t.number()]).optional(),isCritical:t.union([t.lazy(()=>zt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ux=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>DK),t.lazy(()=>EK)]),create:t.union([t.lazy(()=>Ms),t.lazy(()=>Zs)])}).strict(),kx=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>DK),t.lazy(()=>EK)])}).strict(),xx=t.object({where:t.lazy(()=>Vp),data:t.union([t.lazy(()=>OB),t.lazy(()=>Vzt)])}).strict(),Vp=t.object({AND:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),OR:t.lazy(()=>Vp).array().optional(),NOT:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>U),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),jx=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>_K),t.lazy(()=>LK)]),create:t.union([t.lazy(()=>vs),t.lazy(()=>Os)])}).strict(),Mx=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>_K),t.lazy(()=>LK)])}).strict(),Zx=t.object({where:t.lazy(()=>Hp),data:t.union([t.lazy(()=>fB),t.lazy(()=>Hzt)])}).strict(),Hp=t.object({AND:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional(),OR:t.lazy(()=>Hp).array().optional(),NOT:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>U),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>U),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),k8=t.object({update:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)]),create:t.union([t.lazy(()=>UT),t.lazy(()=>kT)]),where:t.lazy(()=>qe).optional()}).strict(),x8=t.object({where:t.lazy(()=>qe).optional(),data:t.union([t.lazy(()=>Qf),t.lazy(()=>Yf)])}).strict(),Qf=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),Yf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),vx=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>VK),t.lazy(()=>HK)]),create:t.union([t.lazy(()=>fs),t.lazy(()=>ws)])}).strict(),Ox=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>VK),t.lazy(()=>HK)])}).strict(),fx=t.object({where:t.lazy(()=>Qp),data:t.union([t.lazy(()=>MB),t.lazy(()=>Qzt)])}).strict(),Qp=t.object({AND:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),OR:t.lazy(()=>Qp).array().optional(),NOT:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),j8=t.object({update:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]),create:t.union([t.lazy(()=>xT),t.lazy(()=>jT)]),where:t.lazy(()=>Fe).optional()}).strict(),M8=t.object({where:t.lazy(()=>Fe).optional(),data:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)])}).strict(),Gf=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$f=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wx=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>QK),t.lazy(()=>YK)]),create:t.union([t.lazy(()=>Ns),t.lazy(()=>Bs)])}).strict(),Nx=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>QK),t.lazy(()=>YK)])}).strict(),Bx=t.object({where:t.lazy(()=>Yp),data:t.union([t.lazy(()=>ZB),t.lazy(()=>Yzt)])}).strict(),Yp=t.object({AND:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional(),OR:t.lazy(()=>Yp).array().optional(),NOT:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>nq),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Z8=t.object({update:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),create:t.union([t.lazy(()=>MT),t.lazy(()=>ZT)]),where:t.lazy(()=>De).optional()}).strict(),v8=t.object({where:t.lazy(()=>De).optional(),data:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),Jf=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Kf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),qs=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>uD),recipeVersion:t.lazy(()=>yD).optional()}).strict(),Fs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),yI=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>qs),t.lazy(()=>Fs)])}).strict(),Xf=t.object({data:t.union([t.lazy(()=>c0),t.lazy(()=>c0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ds=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),lastUpdatedBy:t.lazy(()=>cT).optional(),transactions:t.lazy(()=>uT).optional(),withdrawals:t.lazy(()=>sT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),Es=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),dI=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Ds),t.lazy(()=>Es)])}).strict(),tw=t.object({data:t.union([t.lazy(()=>u0),t.lazy(()=>u0).array()]),skipDuplicates:t.boolean().optional()}).strict(),_s=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>T6)}).strict(),Ls=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),zI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>_s),t.lazy(()=>Ls)])}).strict(),ew=t.object({data:t.union([t.lazy(()=>s0),t.lazy(()=>s0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vs=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>HD).optional(),supplierPriceHistory:t.lazy(()=>YD).optional()}).strict(),Hs=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>GD).optional(),supplierPriceHistory:t.lazy(()=>JD).optional()}).strict(),mI=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>Vs),t.lazy(()=>Hs)])}).strict(),Qs=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BF),recordedBy:t.lazy(()=>FF)}).strict(),Ys=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hI=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Qs),t.lazy(()=>Ys)])}).strict(),ow=t.object({data:t.union([t.lazy(()=>y0),t.lazy(()=>y0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Gs=t.object({allergen:t.lazy(()=>o6)}).strict(),$s=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),bI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>Gs),t.lazy(()=>$s)])}).strict(),nw=t.object({data:t.union([t.lazy(()=>d0),t.lazy(()=>d0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Js=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>J5)}).strict(),Ks=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),II=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Js),t.lazy(()=>Ks)])}).strict(),aw=t.object({data:t.union([t.lazy(()=>z0),t.lazy(()=>z0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Xs=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>CF).optional(),recipes:t.lazy(()=>AF).optional()}).strict(),ty=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>TF).optional(),recipes:t.lazy(()=>PF).optional()}).strict(),gI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Xs),t.lazy(()=>ty)])}).strict(),qx=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>GK),t.lazy(()=>$K)]),create:t.union([t.lazy(()=>qs),t.lazy(()=>Fs)])}).strict(),Fx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>GK),t.lazy(()=>$K)])}).strict(),Dx=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>sP),t.lazy(()=>Gzt)])}).strict(),Ex=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>JK),t.lazy(()=>KK)]),create:t.union([t.lazy(()=>Ds),t.lazy(()=>Es)])}).strict(),_x=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>JK),t.lazy(()=>KK)])}).strict(),Lx=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>yP),t.lazy(()=>$zt)])}).strict(),Vx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>XK),t.lazy(()=>tX)]),create:t.union([t.lazy(()=>_s),t.lazy(()=>Ls)])}).strict(),Hx=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>XK),t.lazy(()=>tX)])}).strict(),Qx=t.object({where:t.lazy(()=>Bl),data:t.union([t.lazy(()=>BM),t.lazy(()=>Jzt)])}).strict(),Bl=t.object({AND:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional(),OR:t.lazy(()=>Bl).array().optional(),NOT:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional()}).strict(),Yx=t.object({where:t.lazy(()=>Yt),update:t.union([t.lazy(()=>eX),t.lazy(()=>oX)]),create:t.union([t.lazy(()=>Vs),t.lazy(()=>Hs)])}).strict(),Gx=t.object({where:t.lazy(()=>Yt),data:t.union([t.lazy(()=>eX),t.lazy(()=>oX)])}).strict(),$x=t.object({where:t.lazy(()=>Gp),data:t.union([t.lazy(()=>$B),t.lazy(()=>Kzt)])}).strict(),Gp=t.object({AND:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),OR:t.lazy(()=>Gp).array().optional(),NOT:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Jx=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>nX),t.lazy(()=>aX)]),create:t.union([t.lazy(()=>Qs),t.lazy(()=>Ys)])}).strict(),Kx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>nX),t.lazy(()=>aX)])}).strict(),Xx=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>pP),t.lazy(()=>Xzt)])}).strict(),tj=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>iX),t.lazy(()=>lX)]),create:t.union([t.lazy(()=>Gs),t.lazy(()=>$s)])}).strict(),ej=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>iX),t.lazy(()=>lX)])}).strict(),oj=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>MM),t.lazy(()=>tmt)])}).strict(),nj=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>rX),t.lazy(()=>pX)]),create:t.union([t.lazy(()=>Js),t.lazy(()=>Ks)])}).strict(),aj=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>rX),t.lazy(()=>pX)])}).strict(),ij=t.object({where:t.lazy(()=>ql),data:t.union([t.lazy(()=>xM),t.lazy(()=>emt)])}).strict(),ql=t.object({AND:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional(),OR:t.lazy(()=>ql).array().optional(),NOT:t.union([t.lazy(()=>ql),t.lazy(()=>ql).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>U),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lj=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>cX),t.lazy(()=>uX)]),create:t.union([t.lazy(()=>Xs),t.lazy(()=>ty)])}).strict(),rj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>cX),t.lazy(()=>uX)])}).strict(),pj=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>lP),t.lazy(()=>omt)])}).strict(),iw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),lw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),O8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)])}).strict(),rw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),pw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),f8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>rw),t.lazy(()=>pw)])}).strict(),cw=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mP),instructions:t.lazy(()=>bP).optional(),createdBy:t.lazy(()=>IP),approvedBy:t.lazy(()=>gP).optional()}).strict(),uw=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>AP).optional()}).strict(),w8=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)])}).strict(),Cyt=t.object({update:t.union([t.lazy(()=>kL),t.lazy(()=>xL)]),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]),where:t.lazy(()=>v).optional()}).strict(),Ayt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>kL),t.lazy(()=>xL)])}).strict(),kL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),xL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),Syt=t.object({update:t.union([t.lazy(()=>jL),t.lazy(()=>ML)]),create:t.union([t.lazy(()=>rw),t.lazy(()=>pw)]),where:t.lazy(()=>jt).optional()}).strict(),Tyt=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>jL),t.lazy(()=>ML)])}).strict(),jL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),ML=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),Pyt=t.object({update:t.union([t.lazy(()=>ZL),t.lazy(()=>vL)]),create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]),where:t.lazy(()=>ae).optional()}).strict(),Wyt=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>ZL),t.lazy(()=>vL)])}).strict(),ZL=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>SP).optional(),instructions:t.lazy(()=>PP).optional(),createdBy:t.lazy(()=>WP).optional(),approvedBy:t.lazy(()=>RP).optional()}).strict(),vL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>kP).optional()}).strict(),sw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),yw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),N8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>sw),t.lazy(()=>yw)])}).strict(),dw=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mP),ingredients:t.lazy(()=>hP).optional(),createdBy:t.lazy(()=>IP),approvedBy:t.lazy(()=>gP).optional()}).strict(),zw=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>CP).optional()}).strict(),B8=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)])}).strict(),ey=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Lq),equipment:t.lazy(()=>Vq)}).strict(),oy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),CI=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>ey),t.lazy(()=>oy)])}).strict(),mw=t.object({data:t.union([t.lazy(()=>m0),t.lazy(()=>m0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ryt=t.object({update:t.union([t.lazy(()=>OL),t.lazy(()=>fL)]),create:t.union([t.lazy(()=>sw),t.lazy(()=>yw)]),where:t.lazy(()=>v).optional()}).strict(),Uyt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>OL),t.lazy(()=>fL)])}).strict(),OL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),fL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),kyt=t.object({update:t.union([t.lazy(()=>wL),t.lazy(()=>NL)]),create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]),where:t.lazy(()=>ae).optional()}).strict(),xyt=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>wL),t.lazy(()=>NL)])}).strict(),wL=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>SP).optional(),ingredients:t.lazy(()=>TP).optional(),createdBy:t.lazy(()=>WP).optional(),approvedBy:t.lazy(()=>RP).optional()}).strict(),NL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>UP).optional()}).strict(),cj=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>sX),t.lazy(()=>yX)]),create:t.union([t.lazy(()=>ey),t.lazy(()=>oy)])}).strict(),uj=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>sX),t.lazy(()=>yX)])}).strict(),sj=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>aP),t.lazy(()=>nmt)])}).strict(),hw=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>cZ),transactions:t.lazy(()=>sZ).optional(),stockCounts:t.lazy(()=>yZ).optional()}).strict(),bw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>zZ).optional(),stockCounts:t.lazy(()=>mZ).optional()}).strict(),q8=t.object({where:t.lazy(()=>Jn),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)])}).strict(),Iw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>$I).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),gw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ag).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),F8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)])}).strict(),Cw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Aw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),D8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)])}).strict(),ny=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>PD),createdBy:t.lazy(()=>RD)}).strict(),ay=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),AI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ny),t.lazy(()=>ay)])}).strict(),Sw=t.object({data:t.union([t.lazy(()=>h0),t.lazy(()=>h0).array()]),skipDuplicates:t.boolean().optional()}).strict(),iy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>iD).optional(),createdBy:t.lazy(()=>lD)}).strict(),ly=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SI=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>iy),t.lazy(()=>ly)])}).strict(),Tw=t.object({data:t.union([t.lazy(()=>b0),t.lazy(()=>b0).array()]),skipDuplicates:t.boolean().optional()}).strict(),ry=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>g6)}).strict(),py=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),TI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>ry),t.lazy(()=>py)])}).strict(),Pw=t.object({data:t.union([t.lazy(()=>I0),t.lazy(()=>I0).array()]),skipDuplicates:t.boolean().optional()}).strict(),jyt=t.object({update:t.union([t.lazy(()=>BL),t.lazy(()=>qL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>bw)]),where:t.lazy(()=>Ft).optional()}).strict(),Myt=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>BL),t.lazy(()=>qL)])}).strict(),BL=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>hZ).optional(),transactions:t.lazy(()=>IZ).optional(),stockCounts:t.lazy(()=>gZ).optional()}).strict(),qL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>AZ).optional(),stockCounts:t.lazy(()=>SZ).optional()}).strict(),Zyt=t.object({update:t.union([t.lazy(()=>FL),t.lazy(()=>DL)]),create:t.union([t.lazy(()=>Iw),t.lazy(()=>gw)]),where:t.lazy(()=>jt).optional()}).strict(),vyt=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>FL),t.lazy(()=>DL)])}).strict(),FL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),DL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),Oyt=t.object({update:t.union([t.lazy(()=>EL),t.lazy(()=>_L)]),create:t.union([t.lazy(()=>Cw),t.lazy(()=>Aw)]),where:t.lazy(()=>M).optional()}).strict(),fyt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>EL),t.lazy(()=>_L)])}).strict(),EL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),_L=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),yj=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>dX),t.lazy(()=>zX)]),create:t.union([t.lazy(()=>ny),t.lazy(()=>ay)])}).strict(),dj=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>dX),t.lazy(()=>zX)])}).strict(),zj=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>dP),t.lazy(()=>amt)])}).strict(),mj=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>mX),t.lazy(()=>hX)]),create:t.union([t.lazy(()=>iy),t.lazy(()=>ly)])}).strict(),hj=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>mX),t.lazy(()=>hX)])}).strict(),bj=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>uP),t.lazy(()=>imt)])}).strict(),Ij=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>bX),t.lazy(()=>IX)]),create:t.union([t.lazy(()=>ry),t.lazy(()=>py)])}).strict(),gj=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>bX),t.lazy(()=>IX)])}).strict(),Cj=t.object({where:t.lazy(()=>Fl),data:t.union([t.lazy(()=>wM),t.lazy(()=>lmt)])}).strict(),Fl=t.object({AND:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional(),OR:t.lazy(()=>Fl).array().optional(),NOT:t.union([t.lazy(()=>Fl),t.lazy(()=>Fl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>U),t.number()]).optional(),actualQty:t.union([t.lazy(()=>U),t.number()]).optional(),difference:t.union([t.lazy(()=>U),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Ww=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>cZ),items:t.lazy(()=>uZ).optional(),stockCounts:t.lazy(()=>yZ).optional()}).strict(),Rw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>dZ).optional(),stockCounts:t.lazy(()=>mZ).optional()}).strict(),E8=t.object({where:t.lazy(()=>Jn),create:t.union([t.lazy(()=>Ww),t.lazy(()=>Rw)])}).strict(),Uw=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),ingredient:t.lazy(()=>pT),lastUpdatedBy:t.lazy(()=>cT).optional(),withdrawals:t.lazy(()=>sT).optional(),stockCounts:t.lazy(()=>yT).optional()}).strict(),kw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),_8=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Uw),t.lazy(()=>kw)])}).strict(),xw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),jw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),L8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)])}).strict(),wyt=t.object({update:t.union([t.lazy(()=>LL),t.lazy(()=>VL)]),create:t.union([t.lazy(()=>Ww),t.lazy(()=>Rw)]),where:t.lazy(()=>Ft).optional()}).strict(),Nyt=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>LL),t.lazy(()=>VL)])}).strict(),LL=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>hZ).optional(),items:t.lazy(()=>bZ).optional(),stockCounts:t.lazy(()=>gZ).optional()}).strict(),VL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>CZ).optional(),stockCounts:t.lazy(()=>SZ).optional()}).strict(),Byt=t.object({update:t.union([t.lazy(()=>HL),t.lazy(()=>QL)]),create:t.union([t.lazy(()=>Uw),t.lazy(()=>kw)]),where:t.lazy(()=>ie).optional()}).strict(),qyt=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>HL),t.lazy(()=>QL)])}).strict(),HL=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),ingredient:t.lazy(()=>bT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),withdrawals:t.lazy(()=>CT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),QL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),withdrawals:t.lazy(()=>TT).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),Fyt=t.object({update:t.union([t.lazy(()=>YL),t.lazy(()=>GL)]),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]),where:t.lazy(()=>M).optional()}).strict(),Dyt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>YL),t.lazy(()=>GL)])}).strict(),YL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),GL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Mw=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>cZ),items:t.lazy(()=>uZ).optional(),transactions:t.lazy(()=>sZ).optional()}).strict(),Zw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>dZ).optional(),transactions:t.lazy(()=>zZ).optional()}).strict(),V8=t.object({where:t.lazy(()=>Jn),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)])}).strict(),vw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),auth:t.lazy(()=>ii).optional()}).strict(),Ow=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),H8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)])}).strict(),cy=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>C6)}).strict(),uy=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),PI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>cy),t.lazy(()=>uy)])}).strict(),fw=t.object({data:t.union([t.lazy(()=>g0),t.lazy(()=>g0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Eyt=t.object({update:t.union([t.lazy(()=>$L),t.lazy(()=>JL)]),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]),where:t.lazy(()=>Ft).optional()}).strict(),_yt=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>$L),t.lazy(()=>JL)])}).strict(),$L=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>hZ).optional(),items:t.lazy(()=>bZ).optional(),transactions:t.lazy(()=>IZ).optional()}).strict(),JL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>CZ).optional(),transactions:t.lazy(()=>AZ).optional()}).strict(),Lyt=t.object({update:t.union([t.lazy(()=>KL),t.lazy(()=>XL)]),create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]),where:t.lazy(()=>M).optional()}).strict(),Vyt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>KL),t.lazy(()=>XL)])}).strict(),KL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),XL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Aj=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>gX),t.lazy(()=>CX)]),create:t.union([t.lazy(()=>cy),t.lazy(()=>uy)])}).strict(),Sj=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>gX),t.lazy(()=>CX)])}).strict(),Tj=t.object({where:t.lazy(()=>Fl),data:t.union([t.lazy(()=>wM),t.lazy(()=>rmt)])}).strict(),ww=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>jD),createdBy:t.lazy(()=>MD)}).strict(),Nw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),Q8=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)])}).strict(),Bw=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>rT),ingredient:t.lazy(()=>pT),lastUpdatedBy:t.lazy(()=>cT).optional(),transactions:t.lazy(()=>uT).optional(),withdrawals:t.lazy(()=>sT).optional()}).strict(),qw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional()}).strict(),Y8=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)])}).strict(),Hyt=t.object({update:t.union([t.lazy(()=>tV),t.lazy(()=>eV)]),create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]),where:t.lazy(()=>Je).optional()}).strict(),Qyt=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>tV),t.lazy(()=>eV)])}).strict(),tV=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>OD).optional(),createdBy:t.lazy(()=>fD).optional()}).strict(),eV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Yyt=t.object({update:t.union([t.lazy(()=>oV),t.lazy(()=>nV)]),create:t.union([t.lazy(()=>Bw),t.lazy(()=>qw)]),where:t.lazy(()=>ie).optional()}).strict(),Gyt=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>oV),t.lazy(()=>nV)])}).strict(),oV=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),ingredient:t.lazy(()=>bT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),transactions:t.lazy(()=>gT).optional(),withdrawals:t.lazy(()=>CT).optional()}).strict(),nV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),withdrawals:t.lazy(()=>TT).optional()}).strict(),Fw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional()}).strict(),Dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional()}).strict(),G8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)])}).strict(),$yt=t.object({update:t.union([t.lazy(()=>aV),t.lazy(()=>iV)]),create:t.union([t.lazy(()=>Fw),t.lazy(()=>Dw)]),where:t.lazy(()=>v).optional()}).strict(),Jyt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>aV),t.lazy(()=>iV)])}).strict(),aV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional()}).strict(),iV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional()}).strict(),Ew=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),recipes:t.lazy(()=>or).optional(),menus:t.lazy(()=>nr).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),_w=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),recipes:t.lazy(()=>mr).optional(),menus:t.lazy(()=>hr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),$8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)])}).strict(),Lw=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>QD).optional(),supplierPriceHistory:t.lazy(()=>YD).optional()}).strict(),Vw=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>$D).optional(),supplierPriceHistory:t.lazy(()=>JD).optional()}).strict(),J8=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)])}).strict(),sy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>P6)}).strict(),yy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),WI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>sy),t.lazy(()=>yy)])}).strict(),Hw=t.object({data:t.union([t.lazy(()=>C0),t.lazy(()=>C0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kyt=t.object({update:t.union([t.lazy(()=>lV),t.lazy(()=>rV)]),create:t.union([t.lazy(()=>Ew),t.lazy(()=>_w)]),where:t.lazy(()=>N).optional()}).strict(),Xyt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>lV),t.lazy(()=>rV)])}).strict(),lV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),rV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),tdt=t.object({update:t.union([t.lazy(()=>pV),t.lazy(()=>cV)]),create:t.union([t.lazy(()=>Lw),t.lazy(()=>Vw)]),where:t.lazy(()=>Oe).optional()}).strict(),edt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>pV),t.lazy(()=>cV)])}).strict(),pV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>XD).optional(),supplierPriceHistory:t.lazy(()=>tE).optional()}).strict(),cV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>oE).optional(),supplierPriceHistory:t.lazy(()=>nE).optional()}).strict(),Pj=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>AX),t.lazy(()=>SX)]),create:t.union([t.lazy(()=>sy),t.lazy(()=>yy)])}).strict(),Wj=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>AX),t.lazy(()=>SX)])}).strict(),Rj=t.object({where:t.lazy(()=>Bl),data:t.union([t.lazy(()=>BM),t.lazy(()=>pmt)])}).strict(),Qw=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),vendor:t.lazy(()=>qD)}).strict(),Yw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),K8=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Qw),t.lazy(()=>Yw)])}).strict(),Gw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>JI).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),$w=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ig).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),X8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)])}).strict(),odt=t.object({update:t.union([t.lazy(()=>uV),t.lazy(()=>sV)]),create:t.union([t.lazy(()=>Qw),t.lazy(()=>Yw)]),where:t.lazy(()=>Ke).optional()}).strict(),ndt=t.object({where:t.lazy(()=>Ke).optional(),data:t.union([t.lazy(()=>uV),t.lazy(()=>sV)])}).strict(),uV=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),vendor:t.lazy(()=>_D).optional()}).strict(),sV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),adt=t.object({update:t.union([t.lazy(()=>yV),t.lazy(()=>dV)]),create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]),where:t.lazy(()=>jt).optional()}).strict(),idt=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>yV),t.lazy(()=>dV)])}).strict(),yV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),dV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),dy=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),items:t.lazy(()=>FD).optional()}).strict(),zy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>DD).optional()}).strict(),RI=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>dy),t.lazy(()=>zy)])}).strict(),Jw=t.object({data:t.union([t.lazy(()=>A0),t.lazy(()=>A0).array()]),skipDuplicates:t.boolean().optional()}).strict(),my=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>YI).optional(),inventoryItems:t.lazy(()=>GI).optional(),orderItems:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>KI).optional(),IngredientAllergens:t.lazy(()=>XI).optional(),priceHistory:t.lazy(()=>tg).optional(),DietaryRestrictions:t.lazy(()=>eg).optional()}).strict(),hy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>og).optional(),inventoryItems:t.lazy(()=>ng).optional(),orderItems:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>lg).optional(),IngredientAllergens:t.lazy(()=>rg).optional(),priceHistory:t.lazy(()=>pg).optional(),DietaryRestrictions:t.lazy(()=>cg).optional()}).strict(),UI=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>my),t.lazy(()=>hy)])}).strict(),by=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>K5)}).strict(),Iy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>by),t.lazy(()=>Iy)])}).strict(),Kw=t.object({data:t.union([t.lazy(()=>S0),t.lazy(()=>S0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uj=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>TX),t.lazy(()=>PX)]),create:t.union([t.lazy(()=>dy),t.lazy(()=>zy)])}).strict(),kj=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>TX),t.lazy(()=>PX)])}).strict(),xj=t.object({where:t.lazy(()=>Ol),data:t.union([t.lazy(()=>NM),t.lazy(()=>cmt)])}).strict(),jj=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>WX),t.lazy(()=>RX)]),create:t.union([t.lazy(()=>my),t.lazy(()=>hy)])}).strict(),Mj=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>WX),t.lazy(()=>RX)])}).strict(),Zj=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>vM),t.lazy(()=>umt)])}).strict(),vj=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>UX),t.lazy(()=>kX)]),create:t.union([t.lazy(()=>by),t.lazy(()=>Iy)])}).strict(),Oj=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>UX),t.lazy(()=>kX)])}).strict(),fj=t.object({where:t.lazy(()=>ql),data:t.union([t.lazy(()=>xM),t.lazy(()=>smt)])}).strict(),Xw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),tN=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),t7=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)])}).strict(),gy=t.object({taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Cy=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xI=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>gy),t.lazy(()=>Cy)])}).strict(),eN=t.object({data:t.union([t.lazy(()=>T0),t.lazy(()=>T0).array()]),skipDuplicates:t.boolean().optional()}).strict(),ldt=t.object({update:t.union([t.lazy(()=>zV),t.lazy(()=>mV)]),create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]),where:t.lazy(()=>M).optional()}).strict(),rdt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>zV),t.lazy(()=>mV)])}).strict(),zV=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),mV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),wj=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>xX),t.lazy(()=>jX)]),create:t.union([t.lazy(()=>gy),t.lazy(()=>Cy)])}).strict(),Nj=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>xX),t.lazy(()=>jX)])}).strict(),Bj=t.object({where:t.lazy(()=>$p),data:t.union([t.lazy(()=>EB),t.lazy(()=>ymt)])}).strict(),$p=t.object({AND:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array()]).optional(),OR:t.lazy(()=>$p).array().optional(),NOT:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>mq),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ay=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),Sy=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),jI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Ay),t.lazy(()=>Sy)])}).strict(),Ty=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),recipe:t.lazy(()=>iE),assignedTo:t.lazy(()=>lE)}).strict(),Py=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),MI=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Ty),t.lazy(()=>Py)])}).strict(),oN=t.object({data:t.union([t.lazy(()=>P0),t.lazy(()=>P0).array()]),skipDuplicates:t.boolean().optional()}).strict(),qj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>MX),t.lazy(()=>ZX)]),create:t.union([t.lazy(()=>Ay),t.lazy(()=>Sy)])}).strict(),Fj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>MX),t.lazy(()=>ZX)])}).strict(),Dj=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>dmt)])}).strict(),Ej=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>vX),t.lazy(()=>OX)]),create:t.union([t.lazy(()=>Ty),t.lazy(()=>Py)])}).strict(),_j=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>vX),t.lazy(()=>OX)])}).strict(),Lj=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>zP),t.lazy(()=>zmt)])}).strict(),nN=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>v6).optional()}).strict(),aN=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>f6).optional()}).strict(),e7=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)])}).strict(),iN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),lN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),o7=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)])}).strict(),rN=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),passwordResets:t.lazy(()=>Va).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),pN=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),passwordResets:t.lazy(()=>ui).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),n7=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)])}).strict(),pdt=t.object({update:t.union([t.lazy(()=>hV),t.lazy(()=>bV)]),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]),where:t.lazy(()=>to).optional()}).strict(),cdt=t.object({where:t.lazy(()=>to).optional(),data:t.union([t.lazy(()=>hV),t.lazy(()=>bV)])}).strict(),hV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>N6).optional()}).strict(),bV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>q6).optional()}).strict(),udt=t.object({update:t.union([t.lazy(()=>IV),t.lazy(()=>gV)]),create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]),where:t.lazy(()=>v).optional()}).strict(),sdt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>IV),t.lazy(()=>gV)])}).strict(),IV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),gV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),ydt=t.object({update:t.union([t.lazy(()=>CV),t.lazy(()=>AV)]),create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]),where:t.lazy(()=>M).optional()}).strict(),ddt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>CV),t.lazy(()=>AV)])}).strict(),CV=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),AV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),cN=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>qa).optional(),restaurant:t.lazy(()=>Fa).optional(),shifts:t.lazy(()=>Da).optional(),prepItems:t.lazy(()=>Ea).optional(),inventoryUpdates:t.lazy(()=>_a).optional(),sessions:t.lazy(()=>La).optional(),leftoverItems:t.lazy(()=>Ha).optional(),wasteRecords:t.lazy(()=>Qa).optional(),productionPlans:t.lazy(()=>Ya).optional(),productionPlanItems:t.lazy(()=>Ga).optional(),availability:t.lazy(()=>$a).optional(),schedulingConstraints:t.lazy(()=>Ja).optional(),inventoryWithdrawals:t.lazy(()=>Ka).optional(),checklistCompletes:t.lazy(()=>Xa).optional(),customerFeedbackResponses:t.lazy(()=>ti).optional(),recipeVersionsCreated:t.lazy(()=>ei).optional(),recipeVersionsApproved:t.lazy(()=>oi).optional(),InventoryTransactions:t.lazy(()=>ni).optional(),StockCounts:t.lazy(()=>ai).optional(),auth:t.lazy(()=>ii).optional()}).strict(),uN=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>li).optional(),prepItems:t.lazy(()=>ri).optional(),inventoryUpdates:t.lazy(()=>pi).optional(),sessions:t.lazy(()=>ci).optional(),leftoverItems:t.lazy(()=>si).optional(),wasteRecords:t.lazy(()=>yi).optional(),productionPlans:t.lazy(()=>di).optional(),productionPlanItems:t.lazy(()=>zi).optional(),availability:t.lazy(()=>mi).optional(),schedulingConstraints:t.lazy(()=>hi).optional(),inventoryWithdrawals:t.lazy(()=>bi).optional(),checklistCompletes:t.lazy(()=>Ii).optional(),customerFeedbackResponses:t.lazy(()=>gi).optional(),recipeVersionsCreated:t.lazy(()=>Ci).optional(),recipeVersionsApproved:t.lazy(()=>Ai).optional(),InventoryTransactions:t.lazy(()=>Si).optional(),StockCounts:t.lazy(()=>Ti).optional(),auth:t.lazy(()=>Pi).optional()}).strict(),a7=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)])}).strict(),zdt=t.object({update:t.union([t.lazy(()=>SV),t.lazy(()=>TV)]),create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]),where:t.lazy(()=>M).optional()}).strict(),mdt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>SV),t.lazy(()=>TV)])}).strict(),SV=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),TV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),sN=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Jl).optional(),users:t.lazy(()=>Kl).optional(),cookbooks:t.lazy(()=>Xl).optional(),inventory:t.lazy(()=>tr).optional(),orders:t.lazy(()=>er).optional(),recipes:t.lazy(()=>or).optional(),salesTransactions:t.lazy(()=>ar).optional(),leftoverItems:t.lazy(()=>ir).optional(),wasteRecords:t.lazy(()=>lr).optional(),productionPlans:t.lazy(()=>rr).optional(),equipments:t.lazy(()=>pr).optional(),qualityChecklists:t.lazy(()=>cr).optional(),customerFeedbacks:t.lazy(()=>ur).optional()}).strict(),yN=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>sr).optional(),cookbooks:t.lazy(()=>yr).optional(),inventory:t.lazy(()=>dr).optional(),orders:t.lazy(()=>zr).optional(),recipes:t.lazy(()=>mr).optional(),salesTransactions:t.lazy(()=>br).optional(),leftoverItems:t.lazy(()=>Ir).optional(),wasteRecords:t.lazy(()=>gr).optional(),productionPlans:t.lazy(()=>Cr).optional(),equipments:t.lazy(()=>Ar).optional(),qualityChecklists:t.lazy(()=>Sr).optional(),customerFeedbacks:t.lazy(()=>Tr).optional()}).strict(),i7=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)])}).strict(),Wy=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),Ry=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),ZI=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),dN=t.object({data:t.union([t.lazy(()=>W0),t.lazy(()=>W0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Uy=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>w5).optional()}).strict(),ky=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>N5).optional()}).strict(),vI=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>Uy),t.lazy(()=>ky)])}).strict(),zN=t.object({data:t.union([t.lazy(()=>R0),t.lazy(()=>R0).array()]),skipDuplicates:t.boolean().optional()}).strict(),hdt=t.object({update:t.union([t.lazy(()=>PV),t.lazy(()=>WV)]),create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]),where:t.lazy(()=>N).optional()}).strict(),bdt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>PV),t.lazy(()=>WV)])}).strict(),PV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Pr).optional(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),WV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Vj=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>fX),t.lazy(()=>wX)]),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),Hj=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>fX),t.lazy(()=>wX)])}).strict(),Qj=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>VS),t.lazy(()=>mmt)])}).strict(),Yj=t.object({where:t.lazy(()=>Xt),update:t.union([t.lazy(()=>NX),t.lazy(()=>BX)]),create:t.union([t.lazy(()=>Uy),t.lazy(()=>ky)])}).strict(),Gj=t.object({where:t.lazy(()=>Xt),data:t.union([t.lazy(()=>NX),t.lazy(()=>BX)])}).strict(),$j=t.object({where:t.lazy(()=>Jp),data:t.union([t.lazy(()=>wB),t.lazy(()=>hmt)])}).strict(),Jp=t.object({AND:t.union([t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),OR:t.lazy(()=>Jp).array().optional(),NOT:t.union([t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>zt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),mN=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),nutritionalInfo:t.lazy(()=>um).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),hN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),nutritionalInfo:t.lazy(()=>Im).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),l7=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>mN),t.lazy(()=>hN)])}).strict(),bN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),IN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),r7=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>bN),t.lazy(()=>IN)])}).strict(),Idt=t.object({update:t.union([t.lazy(()=>RV),t.lazy(()=>UV)]),create:t.union([t.lazy(()=>mN),t.lazy(()=>hN)]),where:t.lazy(()=>Tt).optional()}).strict(),gdt=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>RV),t.lazy(()=>UV)])}).strict(),RV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),UV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),Cdt=t.object({update:t.union([t.lazy(()=>kV),t.lazy(()=>xV)]),create:t.union([t.lazy(()=>bN),t.lazy(()=>IN)]),where:t.lazy(()=>v).optional()}).strict(),Adt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>kV),t.lazy(()=>xV)])}).strict(),kV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),xV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),gN=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>uE),MenuCategory:t.lazy(()=>yE).optional()}).strict(),CN=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>zE).optional()}).strict(),p7=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>gN),t.lazy(()=>CN)])}).strict(),AN=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>f5)}).strict(),SN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c7=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>AN),t.lazy(()=>SN)])}).strict(),xy=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),jy=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),OI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xy),t.lazy(()=>jy)])}).strict(),My=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>E6)}).strict(),Zy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),fI=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>My),t.lazy(()=>Zy)])}).strict(),TN=t.object({data:t.union([t.lazy(()=>U0),t.lazy(()=>U0).array()]),skipDuplicates:t.boolean().optional()}).strict(),vT=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OT=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PN=t.object({where:t.lazy(()=>$l),create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)])}).strict(),vy=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oy=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wI=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>vy),t.lazy(()=>Oy)])}).strict(),WN=t.object({data:t.union([t.lazy(()=>k0),t.lazy(()=>k0).array()]),skipDuplicates:t.boolean().optional()}).strict(),fy=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>M5)}).strict(),wy=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NI=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>fy),t.lazy(()=>wy)])}).strict(),RN=t.object({data:t.union([t.lazy(()=>x0),t.lazy(()=>x0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ny=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>ZF),recordedBy:t.lazy(()=>OF)}).strict(),By=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BI=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Ny),t.lazy(()=>By)])}).strict(),UN=t.object({data:t.union([t.lazy(()=>j0),t.lazy(()=>j0).array()]),skipDuplicates:t.boolean().optional()}).strict(),qy=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>zF),respondedBy:t.lazy(()=>hF).optional()}).strict(),Fy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>qy),t.lazy(()=>Fy)])}).strict(),kN=t.object({data:t.union([t.lazy(()=>M0),t.lazy(()=>M0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Dy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>AF).optional(),ingredients:t.lazy(()=>SF).optional()}).strict(),Ey=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>PF).optional(),ingredients:t.lazy(()=>WF).optional()}).strict(),FI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Dy),t.lazy(()=>Ey)])}).strict(),Sdt=t.object({update:t.union([t.lazy(()=>jV),t.lazy(()=>MV)]),create:t.union([t.lazy(()=>gN),t.lazy(()=>CN)]),where:t.lazy(()=>fe).optional()}).strict(),Tdt=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>jV),t.lazy(()=>MV)])}).strict(),jV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mE).optional(),MenuCategory:t.lazy(()=>bE).optional()}).strict(),MV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>gE).optional()}).strict(),Pdt=t.object({update:t.union([t.lazy(()=>ZV),t.lazy(()=>vV)]),create:t.union([t.lazy(()=>AN),t.lazy(()=>SN)]),where:t.lazy(()=>Ne).optional()}).strict(),Wdt=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>ZV),t.lazy(()=>vV)])}).strict(),ZV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>B5).optional()}).strict(),vV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>qX),t.lazy(()=>FX)]),create:t.union([t.lazy(()=>xy),t.lazy(()=>jy)])}).strict(),Kj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>qX),t.lazy(()=>FX)])}).strict(),Xj=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>_I),t.lazy(()=>bmt)])}).strict(),tM=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>DX),t.lazy(()=>EX)]),create:t.union([t.lazy(()=>My),t.lazy(()=>Zy)])}).strict(),eM=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>DX),t.lazy(()=>EX)])}).strict(),oM=t.object({where:t.lazy(()=>Nl),data:t.union([t.lazy(()=>qM),t.lazy(()=>Imt)])}).strict(),u7=t.object({update:t.union([t.lazy(()=>xN),t.lazy(()=>jN)]),create:t.union([t.lazy(()=>vT),t.lazy(()=>OT)]),where:t.lazy(()=>Ee).optional()}).strict(),s7=t.object({where:t.lazy(()=>Ee).optional(),data:t.union([t.lazy(()=>xN),t.lazy(()=>jN)])}).strict(),xN=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jN=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nM=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>_X),t.lazy(()=>LX)]),create:t.union([t.lazy(()=>vy),t.lazy(()=>Oy)])}).strict(),aM=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>_X),t.lazy(()=>LX)])}).strict(),iM=t.object({where:t.lazy(()=>Kp),data:t.union([t.lazy(()=>VB),t.lazy(()=>gmt)])}).strict(),Kp=t.object({AND:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array()]).optional(),OR:t.lazy(()=>Kp).array().optional(),NOT:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lM=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>VX),t.lazy(()=>HX)]),create:t.union([t.lazy(()=>fy),t.lazy(()=>wy)])}).strict(),rM=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>VX),t.lazy(()=>HX)])}).strict(),pM=t.object({where:t.lazy(()=>fl),data:t.union([t.lazy(()=>RM),t.lazy(()=>Cmt)])}).strict(),cM=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>QX),t.lazy(()=>YX)]),create:t.union([t.lazy(()=>Ny),t.lazy(()=>By)])}).strict(),uM=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>QX),t.lazy(()=>YX)])}).strict(),sM=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>Amt)])}).strict(),yM=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>GX),t.lazy(()=>$X)]),create:t.union([t.lazy(()=>qy),t.lazy(()=>Fy)])}).strict(),dM=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>GX),t.lazy(()=>$X)])}).strict(),zM=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>iP),t.lazy(()=>Smt)])}).strict(),mM=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>JX),t.lazy(()=>KX)]),create:t.union([t.lazy(()=>Dy),t.lazy(()=>Ey)])}).strict(),hM=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>JX),t.lazy(()=>KX)])}).strict(),bM=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>lP),t.lazy(()=>Tmt)])}).strict(),MN=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>lm),category:t.lazy(()=>rm).optional(),recipes:t.lazy(()=>pm).optional(),menuItemRecipes:t.lazy(()=>cm).optional(),recommendations:t.lazy(()=>sm).optional(),salesTransactions:t.lazy(()=>ym).optional(),leftoverItems:t.lazy(()=>dm).optional(),feedback:t.lazy(()=>zm).optional(),dietaryRestrictions:t.lazy(()=>mm).optional()}).strict(),ZN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>hm).optional(),menuItemRecipes:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>gm).optional(),salesTransactions:t.lazy(()=>Cm).optional(),leftoverItems:t.lazy(()=>Am).optional(),feedback:t.lazy(()=>Sm).optional(),dietaryRestrictions:t.lazy(()=>Tm).optional()}).strict(),y7=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>MN),t.lazy(()=>ZN)])}).strict(),Rdt=t.object({update:t.union([t.lazy(()=>OV),t.lazy(()=>fV)]),create:t.union([t.lazy(()=>MN),t.lazy(()=>ZN)]),where:t.lazy(()=>Tt).optional()}).strict(),Udt=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>OV),t.lazy(()=>fV)])}).strict(),OV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),fV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),vN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),prepHistory:t.lazy(()=>Io).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),ON=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>Fo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),d7=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>vN),t.lazy(()=>ON)])}).strict(),kdt=t.object({update:t.union([t.lazy(()=>wV),t.lazy(()=>NV)]),create:t.union([t.lazy(()=>vN),t.lazy(()=>ON)]),where:t.lazy(()=>v).optional()}).strict(),xdt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>wV),t.lazy(()=>NV)])}).strict(),wV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),NV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),fN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),restaurant:t.lazy(()=>so),cookBook:t.lazy(()=>yo),ingredients:t.lazy(()=>zo).optional(),instructions:t.lazy(()=>mo).optional(),menuItems:t.lazy(()=>ho).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepBoards:t.lazy(()=>go).optional(),prepItems:t.lazy(()=>Co).optional(),menuItemRecipes:t.lazy(()=>Ao).optional(),productionPlanItems:t.lazy(()=>So).optional(),withdrawals:t.lazy(()=>To).optional(),tags:t.lazy(()=>Po).optional(),versions:t.lazy(()=>Wo).optional(),equipments:t.lazy(()=>Ro).optional(),dietaryRestrictions:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>ko).optional(),yields:t.lazy(()=>xo).optional(),laborCosts:t.lazy(()=>jo).optional(),nutritionalInfo:t.lazy(()=>Mo).optional(),criticalPoints:t.lazy(()=>Zo).optional(),storage:t.lazy(()=>vo).optional(),photos:t.lazy(()=>Oo).optional(),recipeStats:t.lazy(()=>fo).optional()}).strict(),wN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional(),ingredients:t.lazy(()=>wo).optional(),instructions:t.lazy(()=>No).optional(),menuItems:t.lazy(()=>Bo).optional(),foodCostHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Do).optional(),prepItems:t.lazy(()=>Eo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Lo).optional(),withdrawals:t.lazy(()=>Vo).optional(),tags:t.lazy(()=>Ho).optional(),versions:t.lazy(()=>Qo).optional(),equipments:t.lazy(()=>Yo).optional(),dietaryRestrictions:t.lazy(()=>Go).optional(),temperatures:t.lazy(()=>$o).optional(),yields:t.lazy(()=>Jo).optional(),laborCosts:t.lazy(()=>Ko).optional(),nutritionalInfo:t.lazy(()=>Xo).optional(),criticalPoints:t.lazy(()=>tn).optional(),storage:t.lazy(()=>en).optional(),photos:t.lazy(()=>on).optional(),recipeStats:t.lazy(()=>nn).optional()}).strict(),z7=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>fN),t.lazy(()=>wN)])}).strict(),jdt=t.object({update:t.union([t.lazy(()=>BV),t.lazy(()=>qV)]),create:t.union([t.lazy(()=>fN),t.lazy(()=>wN)]),where:t.lazy(()=>v).optional()}).strict(),Mdt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>BV),t.lazy(()=>qV)])}).strict(),BV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),qV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),tQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int()}).strict(),m7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),h7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),Zdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),eQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),oQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),b7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>dD).optional(),ingredient:t.lazy(()=>zD).optional()}).strict(),I7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>CD).optional(),equipment:t.lazy(()=>SD).optional()}).strict(),C7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>TD).optional()}).strict(),Odt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),nQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),aQ=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),A7=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Qq).optional(),RecipeInstruction:t.lazy(()=>Gq).optional()}).strict(),S7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),fdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),T7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>qC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iQ=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lQ=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),W7=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>V5).optional()}).strict(),R7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>H5).optional()}).strict(),Ndt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>rh)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>sF).optional(),items:t.lazy(()=>yF).optional()}).strict(),k7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>dF).optional()}).strict(),Bdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rQ=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x7=t.object({status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>G5).optional()}).strict(),j7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pQ=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>_t),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ph),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),M7=t.object({status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>$5).optional()}).strict(),Z7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>_t),t.lazy(()=>am)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>im),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional()}).strict(),O7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional()}).strict(),Ddt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),f7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),w7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),Edt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),N7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),vendors:t.lazy(()=>dg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional()}).strict(),B7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),vendors:t.lazy(()=>Ag).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional()}).strict(),_dt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),q7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),F7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),Ldt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),cQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),D7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>oD).optional(),assignedTo:t.lazy(()=>nD).optional()}).strict(),E7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),_7=t.object({ingredient:t.lazy(()=>n6).optional()}).strict(),L7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Hdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),sQ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),yQ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),V7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Wr).optional(),cookbooks:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>Ur).optional(),orders:t.lazy(()=>kr).optional(),recipes:t.lazy(()=>xr).optional(),menus:t.lazy(()=>jr).optional(),salesTransactions:t.lazy(()=>Mr).optional(),leftoverItems:t.lazy(()=>Zr).optional(),wasteRecords:t.lazy(()=>vr).optional(),productionPlans:t.lazy(()=>Or).optional(),equipments:t.lazy(()=>fr).optional(),qualityChecklists:t.lazy(()=>wr).optional(),customerFeedbacks:t.lazy(()=>Nr).optional()}).strict(),H7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Br).optional(),cookbooks:t.lazy(()=>qr).optional(),inventory:t.lazy(()=>Fr).optional(),orders:t.lazy(()=>Dr).optional(),recipes:t.lazy(()=>Er).optional(),menus:t.lazy(()=>_r).optional(),salesTransactions:t.lazy(()=>Lr).optional(),leftoverItems:t.lazy(()=>Vr).optional(),wasteRecords:t.lazy(()=>Hr).optional(),productionPlans:t.lazy(()=>Qr).optional(),equipments:t.lazy(()=>Yr).optional(),qualityChecklists:t.lazy(()=>Gr).optional(),customerFeedbacks:t.lazy(()=>$r).optional()}).strict(),Qdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Q7=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),Y7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Ydt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),zQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),mQ=t.object({id:t.number().int().optional(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),G7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),ingredient:t.lazy(()=>bT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),transactions:t.lazy(()=>gT).optional(),withdrawals:t.lazy(()=>CT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),$7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),withdrawals:t.lazy(()=>TT).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),Gdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),J7=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>kD).optional(),createdBy:t.lazy(()=>xD).optional()}).strict(),K7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$dt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X7=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>fD).optional(),items:t.lazy(()=>wD).optional()}).strict(),tJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>ND).optional()}).strict(),Jdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),hQ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bQ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),IQ=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gQ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional()}).strict(),CQ=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SQ=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TQ=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PQ=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UQ=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eJ=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Wi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>ki).optional(),inventoryUpdates:t.lazy(()=>xi).optional(),sessions:t.lazy(()=>ji).optional(),passwordResets:t.lazy(()=>Mi).optional(),leftoverItems:t.lazy(()=>Zi).optional(),wasteRecords:t.lazy(()=>vi).optional(),productionPlans:t.lazy(()=>Oi).optional(),productionPlanItems:t.lazy(()=>fi).optional(),availability:t.lazy(()=>wi).optional(),schedulingConstraints:t.lazy(()=>Ni).optional(),inventoryWithdrawals:t.lazy(()=>Bi).optional(),checklistCompletes:t.lazy(()=>qi).optional(),customerFeedbackResponses:t.lazy(()=>Fi).optional(),recipeVersionsCreated:t.lazy(()=>Di).optional(),recipeVersionsApproved:t.lazy(()=>Ei).optional(),InventoryTransactions:t.lazy(()=>_i).optional(),StockCounts:t.lazy(()=>Li).optional(),auth:t.lazy(()=>Vi).optional()}).strict(),oJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Hi).optional(),prepItems:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>$i).optional(),leftoverItems:t.lazy(()=>Ji).optional(),wasteRecords:t.lazy(()=>Ki).optional(),productionPlans:t.lazy(()=>Xi).optional(),productionPlanItems:t.lazy(()=>tl).optional(),availability:t.lazy(()=>el).optional(),schedulingConstraints:t.lazy(()=>ol).optional(),inventoryWithdrawals:t.lazy(()=>nl).optional(),checklistCompletes:t.lazy(()=>al).optional(),customerFeedbackResponses:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>rl).optional(),InventoryTransactions:t.lazy(()=>pl).optional(),StockCounts:t.lazy(()=>cl).optional(),auth:t.lazy(()=>ul).optional()}).strict(),Kdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>h6).optional()}).strict(),aJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>I6).optional()}).strict(),Xdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),iJ=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>_D).optional(),items:t.lazy(()=>LD).optional()}).strict(),lJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>VD).optional()}).strict(),tzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),pJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),ezt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),cJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>hE).optional(),MenuCategory:t.lazy(()=>bE).optional()}).strict(),uJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>IE).optional(),MenuCategory:t.lazy(()=>gE).optional()}).strict(),ozt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sJ=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>O5).optional()}).strict(),yJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>wF).optional(),recordedBy:t.lazy(()=>NF).optional()}).strict(),zJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),azt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>EF).optional(),recordedBy:t.lazy(()=>_F).optional()}).strict(),hJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),izt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>GF).optional(),items:t.lazy(()=>$F).optional()}).strict(),IJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JF).optional()}).strict(),lzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Fq).optional(),maintenanceLogs:t.lazy(()=>Dq).optional()}).strict(),CJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Eq).optional(),maintenanceLogs:t.lazy(()=>_q).optional()}).strict(),rzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Pp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oF).optional(),completions:t.lazy(()=>nF).optional()}).strict(),SJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>aF).optional(),completions:t.lazy(()=>iF).optional()}).strict(),pzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Wp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TJ=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>IF).optional(),respondedBy:t.lazy(()=>gF).optional()}).strict(),PJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),czt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kQ=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),xQ=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),jQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),MQ=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),ZQ=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wQ=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NQ=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BQ=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qQ=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FQ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_Q=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),VQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),HQ=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),WJ=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional(),tasks:t.lazy(()=>M6).optional()}).strict(),RJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional(),tasks:t.lazy(()=>Z6).optional()}).strict(),uzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ch)]).optional()}).strict(),UJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),prepBoard:t.lazy(()=>rE).optional(),recipe:t.lazy(()=>pE).optional()}).strict(),kJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional()}).strict(),szt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional()}).strict(),xJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),ingredient:t.lazy(()=>bT).optional(),transactions:t.lazy(()=>gT).optional(),withdrawals:t.lazy(()=>CT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),jJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),withdrawals:t.lazy(()=>TT).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),yzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),MJ=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZJ=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dzt=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vJ=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),menuItem:t.lazy(()=>wF).optional()}).strict(),wJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>DF).optional(),ingrediente:t.lazy(()=>EF).optional()}).strict(),BJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>YF).optional(),items:t.lazy(()=>$F).optional()}).strict(),FJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>JF).optional()}).strict(),bzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>mp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>eD).optional(),recipe:t.lazy(()=>oD).optional()}).strict(),EJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Izt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_J=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>DC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Czt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>EC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>rD).optional(),recipe:t.lazy(()=>pD).optional()}).strict(),YJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Azt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>uF).optional(),items:t.lazy(()=>yF).optional()}).strict(),$J=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>dF).optional()}).strict(),Szt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JJ=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bF).optional(),menuItem:t.lazy(()=>IF).optional()}).strict(),KJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Tzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>SP).optional(),ingredients:t.lazy(()=>TP).optional(),instructions:t.lazy(()=>PP).optional(),approvedBy:t.lazy(()=>RP).optional()}).strict(),tK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>UP).optional(),instructions:t.lazy(()=>kP).optional()}).strict(),Pzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eK=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>SP).optional(),ingredients:t.lazy(()=>TP).optional(),instructions:t.lazy(()=>PP).optional(),createdBy:t.lazy(()=>WP).optional()}).strict(),oK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>UP).optional(),instructions:t.lazy(()=>kP).optional()}).strict(),Wzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nK=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>UD).optional(),item:t.lazy(()=>kD).optional()}).strict(),aK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iK=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>OD).optional(),items:t.lazy(()=>wD).optional()}).strict(),lK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>ND).optional()}).strict(),Uzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>Ip)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),rK=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),pK=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),kzt=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>_C)]).optional()}).strict(),QQ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>R).optional(),category:t.lazy(()=>W).optional()}).strict(),cK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),uK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),xzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),YQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),GQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),$Q=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JQ=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KQ=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),XQ=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),t0=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),e0=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),o0=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),n0=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),a0=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i0=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l0=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),r0=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),p0=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>zD).optional(),recipeVersion:t.lazy(()=>mD).optional()}).strict(),yK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),jzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),dK=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>AD).optional(),equipment:t.lazy(()=>SD).optional()}).strict(),zK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>TD).optional()}).strict(),Mzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),mK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Pm).optional(),category:t.lazy(()=>Wm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),hK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),Zzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),bK=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ozt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>B6).optional()}).strict(),SK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>F6).optional()}).strict(),fzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),prepBoard:t.lazy(()=>rE).optional(),assignedTo:t.lazy(()=>cE).optional()}).strict(),PK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),wzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),WK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>_6).optional()}).strict(),RK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>eD).optional(),assignedTo:t.lazy(()=>nD).optional()}).strict(),kK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Bzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xK=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>rD).optional(),createdBy:t.lazy(()=>cD).optional()}).strict(),jK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vK=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>TP).optional(),instructions:t.lazy(()=>PP).optional(),createdBy:t.lazy(()=>WP).optional(),approvedBy:t.lazy(()=>RP).optional()}).strict(),OK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>UP).optional(),instructions:t.lazy(()=>kP).optional()}).strict(),Dzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fK=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>Yq).optional(),RecipeInstruction:t.lazy(()=>Gq).optional()}).strict(),wK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),Ezt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),NK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>RF).optional(),ingredients:t.lazy(()=>kF).optional()}).strict(),BK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>xF).optional(),ingredients:t.lazy(()=>MF).optional()}).strict(),_zt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qK=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DK=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_K=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VK=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Qzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QK=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>BC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>bp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),u0=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),s0=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),y0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d0=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),z0=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>dD).optional(),recipeVersion:t.lazy(()=>mD).optional()}).strict(),$K=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),Gzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>op),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),JK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>hT).optional(),lastUpdatedBy:t.lazy(()=>IT).optional(),transactions:t.lazy(()=>gT).optional(),withdrawals:t.lazy(()=>CT).optional(),stockCounts:t.lazy(()=>AT).optional()}).strict(),KK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ST).optional(),withdrawals:t.lazy(()=>TT).optional(),stockCounts:t.lazy(()=>PT).optional()}).strict(),$zt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),XK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>W6).optional()}).strict(),tX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Jzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),eX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>KD).optional(),supplierPriceHistory:t.lazy(()=>tE).optional()}).strict(),oX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>eE).optional(),supplierPriceHistory:t.lazy(()=>nE).optional()}).strict(),Kzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nX=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>DF).optional(),recordedBy:t.lazy(()=>_F).optional()}).strict(),aX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Xzt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iX=t.object({allergen:t.lazy(()=>a6).optional()}).strict(),lX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),tmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),rX=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>X5).optional()}).strict(),pX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),emt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>RF).optional(),recipes:t.lazy(()=>UF).optional()}).strict(),uX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>xF).optional(),recipes:t.lazy(()=>jF).optional()}).strict(),omt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),sX=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Qq).optional(),equipment:t.lazy(()=>Yq).optional()}).strict(),yX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),nmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),h0=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),b0=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),I0=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),dX=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>UD).optional(),createdBy:t.lazy(()=>xD).optional()}).strict(),zX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),amt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>np)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mX=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>pD).optional(),createdBy:t.lazy(()=>cD).optional()}).strict(),hX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),imt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bX=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>A6).optional()}).strict(),IX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),lmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),g0=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),gX=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>S6).optional()}).strict(),CX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),rmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),C0=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),AX=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>R6).optional()}).strict(),SX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),pmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),A0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),S0=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TX=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),items:t.lazy(()=>LD).optional()}).strict(),PX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>VD).optional()}).strict(),cmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>gp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ug).optional(),inventoryItems:t.lazy(()=>sg).optional(),orderItems:t.lazy(()=>yg).optional(),WasteRecords:t.lazy(()=>zg).optional(),IngredientAllergens:t.lazy(()=>mg).optional(),priceHistory:t.lazy(()=>hg).optional(),DietaryRestrictions:t.lazy(()=>bg).optional()}).strict(),RX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>Ig).optional(),inventoryItems:t.lazy(()=>gg).optional(),orderItems:t.lazy(()=>Cg).optional(),WasteRecords:t.lazy(()=>Sg).optional(),IngredientAllergens:t.lazy(()=>Tg).optional(),priceHistory:t.lazy(()=>Pg).optional(),DietaryRestrictions:t.lazy(()=>Wg).optional()}).strict(),umt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ea)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),UX=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>t6).optional()}).strict(),kX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),smt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T0=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xX=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ymt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>FC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),MX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),menuItems:t.lazy(()=>cn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),ZX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),menuItems:t.lazy(()=>Mn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),dmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),vX=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),recipe:t.lazy(()=>pE).optional(),assignedTo:t.lazy(()=>cE).optional()}).strict(),OX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),zmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>oa)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),W0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),R0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>Rm).optional(),menuItemRecipes:t.lazy(()=>Um).optional(),nutritionalInfo:t.lazy(()=>km).optional(),recommendations:t.lazy(()=>xm).optional(),salesTransactions:t.lazy(()=>jm).optional(),leftoverItems:t.lazy(()=>Mm).optional(),feedback:t.lazy(()=>Zm).optional(),dietaryRestrictions:t.lazy(()=>vm).optional()}).strict(),wX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),recipes:t.lazy(()=>Om).optional(),menuItemRecipes:t.lazy(()=>fm).optional(),nutritionalInfo:t.lazy(()=>wm).optional(),recommendations:t.lazy(()=>Nm).optional(),salesTransactions:t.lazy(()=>Bm).optional(),leftoverItems:t.lazy(()=>qm).optional(),feedback:t.lazy(()=>Fm).optional(),dietaryRestrictions:t.lazy(()=>Dm).optional()}).strict(),mmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>_e),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable()}).strict(),NX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>q5).optional()}).strict(),BX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>F5).optional()}).strict(),hmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),k0=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x0=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),j0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),M0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>zp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>an).optional(),cookBook:t.lazy(()=>ln).optional(),ingredients:t.lazy(()=>rn).optional(),instructions:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>un).optional(),prepHistory:t.lazy(()=>sn).optional(),prepBoards:t.lazy(()=>yn).optional(),prepItems:t.lazy(()=>dn).optional(),menuItemRecipes:t.lazy(()=>zn).optional(),productionPlanItems:t.lazy(()=>mn).optional(),withdrawals:t.lazy(()=>hn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>In).optional(),equipments:t.lazy(()=>gn).optional(),dietaryRestrictions:t.lazy(()=>Cn).optional(),temperatures:t.lazy(()=>An).optional(),yields:t.lazy(()=>Sn).optional(),laborCosts:t.lazy(()=>Tn).optional(),nutritionalInfo:t.lazy(()=>Pn).optional(),criticalPoints:t.lazy(()=>Wn).optional(),storage:t.lazy(()=>Rn).optional(),photos:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>kn).optional()}).strict(),FX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>xn).optional(),instructions:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Zn).optional(),prepHistory:t.lazy(()=>vn).optional(),prepBoards:t.lazy(()=>On).optional(),prepItems:t.lazy(()=>fn).optional(),menuItemRecipes:t.lazy(()=>wn).optional(),productionPlanItems:t.lazy(()=>Nn).optional(),withdrawals:t.lazy(()=>Bn).optional(),tags:t.lazy(()=>qn).optional(),versions:t.lazy(()=>Fn).optional(),equipments:t.lazy(()=>Dn).optional(),dietaryRestrictions:t.lazy(()=>En).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>Ln).optional(),laborCosts:t.lazy(()=>Vn).optional(),nutritionalInfo:t.lazy(()=>Hn).optional(),criticalPoints:t.lazy(()=>Qn).optional(),storage:t.lazy(()=>Yn).optional(),photos:t.lazy(()=>Gn).optional(),recipeStats:t.lazy(()=>$n).optional()}).strict(),bmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>R),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional()}).strict(),DX=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>L6).optional()}).strict(),EX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Imt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_X=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VX=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>v5).optional()}).strict(),HX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QX=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>fF).optional(),recordedBy:t.lazy(()=>NF).optional()}).strict(),YX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Amt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GX=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bF).optional(),respondedBy:t.lazy(()=>gF).optional()}).strict(),$X=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Smt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>Xr)]).optional(),tags:t.union([t.lazy(()=>tp),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>ep)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>h)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>UF).optional(),ingredients:t.lazy(()=>kF).optional()}).strict(),KX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>jF).optional(),ingredients:t.lazy(()=>MF).optional()}).strict(),Tmt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hbt=t.object({select:Vy.optional(),include:Ly.optional(),where:qe.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),bbt=t.object({select:Vy.optional(),include:Ly.optional(),where:qe.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Ibt=t.object({select:Vy.optional(),include:Ly.optional(),where:qe.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),gbt=t.object({where:qe.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Cbt=t.object({where:qe.optional(),orderBy:t.union([HV.array(),HV]).optional(),by:jg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Abt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ql}).strict(),Sbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ql}).strict(),Tbt=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Pbt=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),XX=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Wbt=t.object({where:na.optional(),orderBy:t.union([zh.array(),zh]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rbt=t.object({where:na.optional(),orderBy:t.union([QV.array(),QV]).optional(),by:Mg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ubt=t.object({select:Qy.optional(),include:Hy.optional(),where:me}).strict(),kbt=t.object({select:Qy.optional(),include:Hy.optional(),where:me}).strict(),xbt=t.object({select:Gy.optional(),include:Yy.optional(),where:Fe.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:Yl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),jbt=t.object({select:Gy.optional(),include:Yy.optional(),where:Fe.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:Yl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),Mbt=t.object({select:Gy.optional(),include:Yy.optional(),where:Fe.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:Yl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),Zbt=t.object({where:Fe.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:Yl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vbt=t.object({where:Fe.optional(),orderBy:t.union([YV.array(),YV]).optional(),by:Zg.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Obt=t.object({select:Gy.optional(),include:Yy.optional(),where:Yl}).strict(),fbt=t.object({select:Gy.optional(),include:Yy.optional(),where:Yl}).strict(),wbt=t.object({select:Jy.optional(),include:$y.optional(),where:aa.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),Nbt=t.object({select:Jy.optional(),include:$y.optional(),where:aa.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),ttt=t.object({select:Jy.optional(),include:$y.optional(),where:aa.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),Bbt=t.object({where:aa.optional(),orderBy:t.union([mh.array(),mh]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qbt=t.object({where:aa.optional(),orderBy:t.union([GV.array(),GV]).optional(),by:vg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fbt=t.object({select:Jy.optional(),include:$y.optional(),where:he}).strict(),Dbt=t.object({select:Jy.optional(),include:$y.optional(),where:he}).strict(),Ebt=t.object({select:Xy.optional(),include:Ky.optional(),where:ia.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),_bt=t.object({select:Xy.optional(),include:Ky.optional(),where:ia.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),ett=t.object({select:Xy.optional(),include:Ky.optional(),where:ia.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),Lbt=t.object({where:ia.optional(),orderBy:t.union([hh.array(),hh]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vbt=t.object({where:ia.optional(),orderBy:t.union([$V.array(),$V]).optional(),by:Og.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hbt=t.object({select:Xy.optional(),include:Ky.optional(),where:be}).strict(),Qbt=t.object({select:Xy.optional(),include:Ky.optional(),where:be}).strict(),Ybt=t.object({select:ed.optional(),include:td.optional(),where:la.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),Gbt=t.object({select:ed.optional(),include:td.optional(),where:la.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),ott=t.object({select:ed.optional(),include:td.optional(),where:la.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),$bt=t.object({where:la.optional(),orderBy:t.union([bh.array(),bh]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jbt=t.object({where:la.optional(),orderBy:t.union([JV.array(),JV]).optional(),by:fg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kbt=t.object({select:ed.optional(),include:td.optional(),where:Ie}).strict(),Xbt=t.object({select:ed.optional(),include:td.optional(),where:Ie}).strict(),tIt=t.object({select:nd.optional(),include:od.optional(),where:ra.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),eIt=t.object({select:nd.optional(),include:od.optional(),where:ra.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),ntt=t.object({select:nd.optional(),include:od.optional(),where:ra.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),oIt=t.object({where:ra.optional(),orderBy:t.union([Ih.array(),Ih]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nIt=t.object({where:ra.optional(),orderBy:t.union([KV.array(),KV]).optional(),by:wg.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aIt=t.object({select:nd.optional(),include:od.optional(),where:ge}).strict(),iIt=t.object({select:nd.optional(),include:od.optional(),where:ge}).strict(),lIt=t.object({select:id.optional(),include:ad.optional(),where:pa.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),rIt=t.object({select:id.optional(),include:ad.optional(),where:pa.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),NN=t.object({select:id.optional(),include:ad.optional(),where:pa.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),pIt=t.object({where:pa.optional(),orderBy:t.union([gh.array(),gh]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cIt=t.object({where:pa.optional(),orderBy:t.union([XV.array(),XV]).optional(),by:Ng.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uIt=t.object({select:id.optional(),include:ad.optional(),where:ht}).strict(),sIt=t.object({select:id.optional(),include:ad.optional(),where:ht}).strict(),yIt=t.object({select:rd.optional(),include:ld.optional(),where:Ne.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),dIt=t.object({select:rd.optional(),include:ld.optional(),where:Ne.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),att=t.object({select:rd.optional(),include:ld.optional(),where:Ne.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),zIt=t.object({where:Ne.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mIt=t.object({where:Ne.optional(),orderBy:t.union([tH.array(),tH]).optional(),by:Bg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hIt=t.object({select:rd.optional(),include:ld.optional(),where:Xt}).strict(),bIt=t.object({select:rd.optional(),include:ld.optional(),where:Xt}).strict(),IIt=t.object({select:cd.optional(),include:pd.optional(),where:ae.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),gIt=t.object({select:cd.optional(),include:pd.optional(),where:ae.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),ES=t.object({select:cd.optional(),include:pd.optional(),where:ae.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),CIt=t.object({where:ae.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),AIt=t.object({where:ae.optional(),orderBy:t.union([eH.array(),eH]).optional(),by:qg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SIt=t.object({select:cd.optional(),include:pd.optional(),where:w}).strict(),TIt=t.object({select:cd.optional(),include:pd.optional(),where:w}).strict(),PIt=t.object({select:sd.optional(),include:ud.optional(),where:Ze.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),WIt=t.object({select:sd.optional(),include:ud.optional(),where:Ze.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),itt=t.object({select:sd.optional(),include:ud.optional(),where:Ze.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),RIt=t.object({where:Ze.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UIt=t.object({where:Ze.optional(),orderBy:t.union([oH.array(),oH]).optional(),by:Fg.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kIt=t.object({select:sd.optional(),include:ud.optional(),where:Ht}).strict(),xIt=t.object({select:sd.optional(),include:ud.optional(),where:Ht}).strict(),jIt=t.object({select:dd.optional(),include:yd.optional(),where:ca.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),MIt=t.object({select:dd.optional(),include:yd.optional(),where:ca.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),fT=t.object({select:dd.optional(),include:yd.optional(),where:ca.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),ZIt=t.object({where:ca.optional(),orderBy:t.union([Ch.array(),Ch]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vIt=t.object({where:ca.optional(),orderBy:t.union([nH.array(),nH]).optional(),by:Dg.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OIt=t.object({select:dd.optional(),include:yd.optional(),where:B}).strict(),fIt=t.object({select:dd.optional(),include:yd.optional(),where:B}).strict(),wIt=t.object({select:md.optional(),include:zd.optional(),where:ua.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),NIt=t.object({select:md.optional(),include:zd.optional(),where:ua.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),ltt=t.object({select:md.optional(),include:zd.optional(),where:ua.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),BIt=t.object({where:ua.optional(),orderBy:t.union([Ah.array(),Ah]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qIt=t.object({where:ua.optional(),orderBy:t.union([aH.array(),aH]).optional(),by:Eg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FIt=t.object({select:md.optional(),include:zd.optional(),where:Ce}).strict(),DIt=t.object({select:md.optional(),include:zd.optional(),where:Ce}).strict(),EIt=t.object({select:bd.optional(),include:hd.optional(),where:ve.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),_It=t.object({select:bd.optional(),include:hd.optional(),where:ve.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),rtt=t.object({select:bd.optional(),include:hd.optional(),where:ve.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),LIt=t.object({where:ve.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({where:ve.optional(),orderBy:t.union([iH.array(),iH]).optional(),by:_g.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HIt=t.object({select:bd.optional(),include:hd.optional(),where:Qt}).strict(),QIt=t.object({select:bd.optional(),include:hd.optional(),where:Qt}).strict(),YIt=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),GIt=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),ptt=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),$It=t.object({where:Qe.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({where:Qe.optional(),orderBy:t.union([lH.array(),lH]).optional(),by:Lg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KIt=t.object({select:gd.optional(),include:Id.optional(),where:te}).strict(),XIt=t.object({select:gd.optional(),include:Id.optional(),where:te}).strict(),tgt=t.object({select:Ad.optional(),include:Cd.optional(),where:Ye.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),egt=t.object({select:Ad.optional(),include:Cd.optional(),where:Ye.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),BN=t.object({select:Ad.optional(),include:Cd.optional(),where:Ye.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),ogt=t.object({where:Ye.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ngt=t.object({where:Ye.optional(),orderBy:t.union([rH.array(),rH]).optional(),by:Vg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({select:Ad.optional(),include:Cd.optional(),where:lt}).strict(),igt=t.object({select:Ad.optional(),include:Cd.optional(),where:lt}).strict(),lgt=t.object({select:Td.optional(),include:Sd.optional(),where:sa.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),rgt=t.object({select:Td.optional(),include:Sd.optional(),where:sa.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),qN=t.object({select:Td.optional(),include:Sd.optional(),where:sa.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),pgt=t.object({where:sa.optional(),orderBy:t.union([Sh.array(),Sh]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({where:sa.optional(),orderBy:t.union([pH.array(),pH]).optional(),by:Hg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ugt=t.object({select:Td.optional(),include:Sd.optional(),where:bt}).strict(),sgt=t.object({select:Td.optional(),include:Sd.optional(),where:bt}).strict(),ygt=t.object({select:Wd.optional(),include:Pd.optional(),where:ya.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),dgt=t.object({select:Wd.optional(),include:Pd.optional(),where:ya.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),FN=t.object({select:Wd.optional(),include:Pd.optional(),where:ya.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),zgt=t.object({where:ya.optional(),orderBy:t.union([Th.array(),Th]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({where:ya.optional(),orderBy:t.union([cH.array(),cH]).optional(),by:Qg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hgt=t.object({select:Wd.optional(),include:Pd.optional(),where:It}).strict(),bgt=t.object({select:Wd.optional(),include:Pd.optional(),where:It}).strict(),Igt=t.object({select:Ud.optional(),include:Rd.optional(),where:da.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),ggt=t.object({select:Ud.optional(),include:Rd.optional(),where:da.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),wT=t.object({select:Ud.optional(),include:Rd.optional(),where:da.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),Cgt=t.object({where:da.optional(),orderBy:t.union([Ph.array(),Ph]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({where:da.optional(),orderBy:t.union([uH.array(),uH]).optional(),by:Yg.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sgt=t.object({select:Ud.optional(),include:Rd.optional(),where:q}).strict(),Tgt=t.object({select:Ud.optional(),include:Rd.optional(),where:q}).strict(),Pgt=t.object({select:xd.optional(),include:kd.optional(),where:za.optional(),orderBy:t.union([Wh.array(),Wh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),Wgt=t.object({select:xd.optional(),include:kd.optional(),where:za.optional(),orderBy:t.union([Wh.array(),Wh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),NT=t.object({select:xd.optional(),include:kd.optional(),where:za.optional(),orderBy:t.union([Wh.array(),Wh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),Rgt=t.object({where:za.optional(),orderBy:t.union([Wh.array(),Wh]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ugt=t.object({where:za.optional(),orderBy:t.union([sH.array(),sH]).optional(),by:Gg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kgt=t.object({select:xd.optional(),include:kd.optional(),where:F}).strict(),xgt=t.object({select:xd.optional(),include:kd.optional(),where:F}).strict(),jgt=t.object({select:Md.optional(),include:jd.optional(),where:ma.optional(),orderBy:t.union([Rh.array(),Rh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),Mgt=t.object({select:Md.optional(),include:jd.optional(),where:ma.optional(),orderBy:t.union([Rh.array(),Rh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),ctt=t.object({select:Md.optional(),include:jd.optional(),where:ma.optional(),orderBy:t.union([Rh.array(),Rh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),Zgt=t.object({where:ma.optional(),orderBy:t.union([Rh.array(),Rh]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vgt=t.object({where:ma.optional(),orderBy:t.union([yH.array(),yH]).optional(),by:$g.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ogt=t.object({select:Md.optional(),include:jd.optional(),where:Ae}).strict(),fgt=t.object({select:Md.optional(),include:jd.optional(),where:Ae}).strict(),wgt=t.object({select:vd.optional(),include:Zd.optional(),where:ha.optional(),orderBy:t.union([Uh.array(),Uh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),Ngt=t.object({select:vd.optional(),include:Zd.optional(),where:ha.optional(),orderBy:t.union([Uh.array(),Uh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),BT=t.object({select:vd.optional(),include:Zd.optional(),where:ha.optional(),orderBy:t.union([Uh.array(),Uh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),Bgt=t.object({where:ha.optional(),orderBy:t.union([Uh.array(),Uh]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qgt=t.object({where:ha.optional(),orderBy:t.union([dH.array(),dH]).optional(),by:Jg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fgt=t.object({select:vd.optional(),include:Zd.optional(),where:D}).strict(),Dgt=t.object({select:vd.optional(),include:Zd.optional(),where:D}).strict(),Egt=t.object({select:fd.optional(),include:Od.optional(),where:ba.optional(),orderBy:t.union([kh.array(),kh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),_gt=t.object({select:fd.optional(),include:Od.optional(),where:ba.optional(),orderBy:t.union([kh.array(),kh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),qT=t.object({select:fd.optional(),include:Od.optional(),where:ba.optional(),orderBy:t.union([kh.array(),kh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),Lgt=t.object({where:ba.optional(),orderBy:t.union([kh.array(),kh]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vgt=t.object({where:ba.optional(),orderBy:t.union([zH.array(),zH]).optional(),by:Kg.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hgt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),Qgt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),Ygt=t.object({select:Nd.optional(),include:wd.optional(),where:Ge.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),Ggt=t.object({select:Nd.optional(),include:wd.optional(),where:Ge.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),DN=t.object({select:Nd.optional(),include:wd.optional(),where:Ge.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),$gt=t.object({where:Ge.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jgt=t.object({where:Ge.optional(),orderBy:t.union([mH.array(),mH]).optional(),by:Xg.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kgt=t.object({select:Nd.optional(),include:wd.optional(),where:rt}).strict(),Xgt=t.object({select:Nd.optional(),include:wd.optional(),where:rt}).strict(),tCt=t.object({select:qd.optional(),include:Bd.optional(),where:Ia.optional(),orderBy:t.union([xh.array(),xh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),eCt=t.object({select:qd.optional(),include:Bd.optional(),where:Ia.optional(),orderBy:t.union([xh.array(),xh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),FT=t.object({select:qd.optional(),include:Bd.optional(),where:Ia.optional(),orderBy:t.union([xh.array(),xh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),oCt=t.object({where:Ia.optional(),orderBy:t.union([xh.array(),xh]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nCt=t.object({where:Ia.optional(),orderBy:t.union([hH.array(),hH]).optional(),by:tC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aCt=t.object({select:qd.optional(),include:Bd.optional(),where:_}).strict(),iCt=t.object({select:qd.optional(),include:Bd.optional(),where:_}).strict(),lCt=t.object({select:Dd.optional(),include:Fd.optional(),where:ga.optional(),orderBy:t.union([jh.array(),jh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),rCt=t.object({select:Dd.optional(),include:Fd.optional(),where:ga.optional(),orderBy:t.union([jh.array(),jh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),utt=t.object({select:Dd.optional(),include:Fd.optional(),where:ga.optional(),orderBy:t.union([jh.array(),jh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),pCt=t.object({where:ga.optional(),orderBy:t.union([jh.array(),jh]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cCt=t.object({where:ga.optional(),orderBy:t.union([bH.array(),bH]).optional(),by:eC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uCt=t.object({select:Dd.optional(),include:Fd.optional(),where:Se}).strict(),sCt=t.object({select:Dd.optional(),include:Fd.optional(),where:Se}).strict(),yCt=t.object({select:_d.optional(),include:Ed.optional(),where:Ca.optional(),orderBy:t.union([Mh.array(),Mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),dCt=t.object({select:_d.optional(),include:Ed.optional(),where:Ca.optional(),orderBy:t.union([Mh.array(),Mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),stt=t.object({select:_d.optional(),include:Ed.optional(),where:Ca.optional(),orderBy:t.union([Mh.array(),Mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),zCt=t.object({where:Ca.optional(),orderBy:t.union([Mh.array(),Mh]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mCt=t.object({where:Ca.optional(),orderBy:t.union([IH.array(),IH]).optional(),by:oC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hCt=t.object({select:_d.optional(),include:Ed.optional(),where:Te}).strict(),bCt=t.object({select:_d.optional(),include:Ed.optional(),where:Te}).strict(),ICt=t.object({select:Vd.optional(),include:Ld.optional(),where:Aa.optional(),orderBy:t.union([Zh.array(),Zh]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),gCt=t.object({select:Vd.optional(),include:Ld.optional(),where:Aa.optional(),orderBy:t.union([Zh.array(),Zh]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),ytt=t.object({select:Vd.optional(),include:Ld.optional(),where:Aa.optional(),orderBy:t.union([Zh.array(),Zh]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),CCt=t.object({where:Aa.optional(),orderBy:t.union([Zh.array(),Zh]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ACt=t.object({where:Aa.optional(),orderBy:t.union([gH.array(),gH]).optional(),by:nC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SCt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),TCt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),PCt=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([vh.array(),vh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),WCt=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([vh.array(),vh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),DT=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([vh.array(),vh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),RCt=t.object({where:Sa.optional(),orderBy:t.union([vh.array(),vh]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UCt=t.object({where:Sa.optional(),orderBy:t.union([CH.array(),CH]).optional(),by:aC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kCt=t.object({select:Qd.optional(),include:Hd.optional(),where:L}).strict(),xCt=t.object({select:Qd.optional(),include:Hd.optional(),where:L}).strict(),jCt=t.object({select:Gd.optional(),include:Yd.optional(),where:co.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:sp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),MCt=t.object({select:Gd.optional(),include:Yd.optional(),where:co.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:sp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),ZCt=t.object({select:Gd.optional(),include:Yd.optional(),where:co.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:sp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),vCt=t.object({where:co.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:sp.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OCt=t.object({where:co.optional(),orderBy:t.union([AH.array(),AH]).optional(),by:iC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fCt=t.object({select:Gd.optional(),include:Yd.optional(),where:sp}).strict(),wCt=t.object({select:Gd.optional(),include:Yd.optional(),where:sp}).strict(),NCt=t.object({select:Jd.optional(),include:$d.optional(),where:Ta.optional(),orderBy:t.union([Oh.array(),Oh]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),BCt=t.object({select:Jd.optional(),include:$d.optional(),where:Ta.optional(),orderBy:t.union([Oh.array(),Oh]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),EN=t.object({select:Jd.optional(),include:$d.optional(),where:Ta.optional(),orderBy:t.union([Oh.array(),Oh]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),qCt=t.object({where:Ta.optional(),orderBy:t.union([Oh.array(),Oh]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FCt=t.object({where:Ta.optional(),orderBy:t.union([SH.array(),SH]).optional(),by:lC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DCt=t.object({select:Jd.optional(),include:$d.optional(),where:gt}).strict(),ECt=t.object({select:Jd.optional(),include:$d.optional(),where:gt}).strict(),_Ct=t.object({select:Xd.optional(),include:Kd.optional(),where:Pa.optional(),orderBy:t.union([fh.array(),fh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),LCt=t.object({select:Xd.optional(),include:Kd.optional(),where:Pa.optional(),orderBy:t.union([fh.array(),fh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),dtt=t.object({select:Xd.optional(),include:Kd.optional(),where:Pa.optional(),orderBy:t.union([fh.array(),fh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),VCt=t.object({where:Pa.optional(),orderBy:t.union([fh.array(),fh]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HCt=t.object({where:Pa.optional(),orderBy:t.union([TH.array(),TH]).optional(),by:rC.array(),having:NA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QCt=t.object({select:Xd.optional(),include:Kd.optional(),where:We}).strict(),YCt=t.object({select:Xd.optional(),include:Kd.optional(),where:We}).strict(),GCt=t.object({select:ih.optional(),where:Tl.optional(),orderBy:t.union([wh.array(),wh]).optional(),cursor:lh.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),$Ct=t.object({select:ih.optional(),where:Tl.optional(),orderBy:t.union([wh.array(),wh]).optional(),cursor:lh.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),JCt=t.object({select:ih.optional(),where:Tl.optional(),orderBy:t.union([wh.array(),wh]).optional(),cursor:lh.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),KCt=t.object({where:Tl.optional(),orderBy:t.union([wh.array(),wh]).optional(),cursor:lh.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),XCt=t.object({where:Tl.optional(),orderBy:t.union([PH.array(),PH]).optional(),by:pC.array(),having:BA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tAt=t.object({select:ih.optional(),where:lh}).strict(),eAt=t.object({select:ih.optional(),where:lh}).strict(),oAt=t.object({select:ez.optional(),include:tz.optional(),where:Me.optional(),orderBy:t.union([oc.array(),oc]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),nAt=t.object({select:ez.optional(),include:tz.optional(),where:Me.optional(),orderBy:t.union([oc.array(),oc]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),aAt=t.object({select:ez.optional(),include:tz.optional(),where:Me.optional(),orderBy:t.union([oc.array(),oc]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),iAt=t.object({where:Me.optional(),orderBy:t.union([oc.array(),oc]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lAt=t.object({where:Me.optional(),orderBy:t.union([WH.array(),WH]).optional(),by:cC.array(),having:qA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rAt=t.object({select:ez.optional(),include:tz.optional(),where:Dl}).strict(),pAt=t.object({select:ez.optional(),include:tz.optional(),where:Dl}).strict(),cAt=t.object({select:nz.optional(),include:oz.optional(),where:Ft.optional(),orderBy:t.union([pp.array(),pp]).optional(),cursor:Jn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),uAt=t.object({select:nz.optional(),include:oz.optional(),where:Ft.optional(),orderBy:t.union([pp.array(),pp]).optional(),cursor:Jn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),sAt=t.object({select:nz.optional(),include:oz.optional(),where:Ft.optional(),orderBy:t.union([pp.array(),pp]).optional(),cursor:Jn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),yAt=t.object({where:Ft.optional(),orderBy:t.union([pp.array(),pp]).optional(),cursor:Jn.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dAt=t.object({where:Ft.optional(),orderBy:t.union([RH.array(),RH]).optional(),by:uC.array(),having:FA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zAt=t.object({select:nz.optional(),include:oz.optional(),where:Jn}).strict(),mAt=t.object({select:nz.optional(),include:oz.optional(),where:Jn}).strict(),hAt=t.object({select:iz.optional(),include:az.optional(),where:N.optional(),orderBy:t.union([Ba.array(),Ba]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),bAt=t.object({select:iz.optional(),include:az.optional(),where:N.optional(),orderBy:t.union([Ba.array(),Ba]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),ztt=t.object({select:iz.optional(),include:az.optional(),where:N.optional(),orderBy:t.union([Ba.array(),Ba]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),IAt=t.object({where:N.optional(),orderBy:t.union([Ba.array(),Ba]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gAt=t.object({where:N.optional(),orderBy:t.union([UH.array(),UH]).optional(),by:sC.array(),having:DA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CAt=t.object({select:iz.optional(),include:az.optional(),where:K}).strict(),AAt=t.object({select:iz.optional(),include:az.optional(),where:K}).strict(),SAt=t.object({select:rz.optional(),include:lz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),TAt=t.object({select:rz.optional(),include:lz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),_N=t.object({select:rz.optional(),include:lz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),PAt=t.object({where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WAt=t.object({where:M.optional(),orderBy:t.union([kH.array(),kH]).optional(),by:yC.array(),having:EA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RAt=t.object({select:rz.optional(),include:lz.optional(),where:j}).strict(),UAt=t.object({select:rz.optional(),include:lz.optional(),where:j}).strict(),kAt=t.object({select:cz.optional(),include:pz.optional(),where:Wa.optional(),orderBy:t.union([Nh.array(),Nh]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),xAt=t.object({select:cz.optional(),include:pz.optional(),where:Wa.optional(),orderBy:t.union([Nh.array(),Nh]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),mtt=t.object({select:cz.optional(),include:pz.optional(),where:Wa.optional(),orderBy:t.union([Nh.array(),Nh]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),jAt=t.object({where:Wa.optional(),orderBy:t.union([Nh.array(),Nh]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MAt=t.object({where:Wa.optional(),orderBy:t.union([xH.array(),xH]).optional(),by:dC.array(),having:_A.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZAt=t.object({select:cz.optional(),include:pz.optional(),where:Re}).strict(),vAt=t.object({select:cz.optional(),include:pz.optional(),where:Re}).strict(),OAt=t.object({select:sz.optional(),include:uz.optional(),where:Ra.optional(),orderBy:t.union([Bh.array(),Bh]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),fAt=t.object({select:sz.optional(),include:uz.optional(),where:Ra.optional(),orderBy:t.union([Bh.array(),Bh]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),htt=t.object({select:sz.optional(),include:uz.optional(),where:Ra.optional(),orderBy:t.union([Bh.array(),Bh]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),wAt=t.object({where:Ra.optional(),orderBy:t.union([Bh.array(),Bh]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NAt=t.object({where:Ra.optional(),orderBy:t.union([jH.array(),jH]).optional(),by:zC.array(),having:LA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BAt=t.object({select:sz.optional(),include:uz.optional(),where:Ue}).strict(),qAt=t.object({select:sz.optional(),include:uz.optional(),where:Ue}).strict(),FAt=t.object({select:dz.optional(),include:yz.optional(),where:$e.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),DAt=t.object({select:dz.optional(),include:yz.optional(),where:$e.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),btt=t.object({select:dz.optional(),include:yz.optional(),where:$e.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),EAt=t.object({where:$e.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_At=t.object({where:$e.optional(),orderBy:t.union([MH.array(),MH]).optional(),by:mC.array(),having:VA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LAt=t.object({select:dz.optional(),include:yz.optional(),where:ee}).strict(),VAt=t.object({select:dz.optional(),include:yz.optional(),where:ee}).strict(),HAt=t.object({select:mz.optional(),include:zz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),QAt=t.object({select:mz.optional(),include:zz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),Cp=t.object({select:mz.optional(),include:zz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),YAt=t.object({where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),GAt=t.object({where:v.optional(),orderBy:t.union([ZH.array(),ZH]).optional(),by:hC.array(),having:HA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$At=t.object({select:mz.optional(),include:zz.optional(),where:C}).strict(),JAt=t.object({select:mz.optional(),include:zz.optional(),where:C}).strict(),KAt=t.object({select:bz.optional(),include:hz.optional(),where:jt.optional(),orderBy:t.union([Ll.array(),Ll]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),XAt=t.object({select:bz.optional(),include:hz.optional(),where:jt.optional(),orderBy:t.union([Ll.array(),Ll]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),LN=t.object({select:bz.optional(),include:hz.optional(),where:jt.optional(),orderBy:t.union([Ll.array(),Ll]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),tSt=t.object({where:jt.optional(),orderBy:t.union([Ll.array(),Ll]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eSt=t.object({where:jt.optional(),orderBy:t.union([vH.array(),vH]).optional(),by:bC.array(),having:QA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oSt=t.object({select:bz.optional(),include:hz.optional(),where:$}).strict(),nSt=t.object({select:bz.optional(),include:hz.optional(),where:$}).strict(),aSt=t.object({select:gz.optional(),include:Iz.optional(),where:Ua.optional(),orderBy:t.union([qh.array(),qh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),iSt=t.object({select:gz.optional(),include:Iz.optional(),where:Ua.optional(),orderBy:t.union([qh.array(),qh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),ET=t.object({select:gz.optional(),include:Iz.optional(),where:Ua.optional(),orderBy:t.union([qh.array(),qh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),lSt=t.object({where:Ua.optional(),orderBy:t.union([qh.array(),qh]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rSt=t.object({where:Ua.optional(),orderBy:t.union([OH.array(),OH]).optional(),by:IC.array(),having:YA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pSt=t.object({select:gz.optional(),include:Iz.optional(),where:V}).strict(),cSt=t.object({select:gz.optional(),include:Iz.optional(),where:V}).strict(),uSt=t.object({select:Az.optional(),include:Cz.optional(),where:Be.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),sSt=t.object({select:Az.optional(),include:Cz.optional(),where:Be.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),VN=t.object({select:Az.optional(),include:Cz.optional(),where:Be.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),ySt=t.object({where:Be.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dSt=t.object({where:Be.optional(),orderBy:t.union([fH.array(),fH]).optional(),by:gC.array(),having:GA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zSt=t.object({select:Az.optional(),include:Cz.optional(),where:pt}).strict(),mSt=t.object({select:Az.optional(),include:Cz.optional(),where:pt}).strict(),hSt=t.object({select:Tz.optional(),include:Sz.optional(),where:ie.optional(),orderBy:t.union([Tp.array(),Tp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),bSt=t.object({select:Tz.optional(),include:Sz.optional(),where:ie.optional(),orderBy:t.union([Tp.array(),Tp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),_T=t.object({select:Tz.optional(),include:Sz.optional(),where:ie.optional(),orderBy:t.union([Tp.array(),Tp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),ISt=t.object({where:ie.optional(),orderBy:t.union([Tp.array(),Tp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gSt=t.object({where:ie.optional(),orderBy:t.union([wH.array(),wH]).optional(),by:CC.array(),having:$A.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CSt=t.object({select:Tz.optional(),include:Sz.optional(),where:f}).strict(),ASt=t.object({select:Tz.optional(),include:Sz.optional(),where:f}).strict(),SSt=t.object({select:Wz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Fh.array(),Fh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),TSt=t.object({select:Wz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Fh.array(),Fh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),LT=t.object({select:Wz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Fh.array(),Fh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),PSt=t.object({where:ka.optional(),orderBy:t.union([Fh.array(),Fh]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WSt=t.object({where:ka.optional(),orderBy:t.union([NH.array(),NH]).optional(),by:AC.array(),having:JA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RSt=t.object({select:Wz.optional(),include:Pz.optional(),where:H}).strict(),USt=t.object({select:Wz.optional(),include:Pz.optional(),where:H}).strict(),kSt=t.object({select:Uz.optional(),include:Rz.optional(),where:Je.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),xSt=t.object({select:Uz.optional(),include:Rz.optional(),where:Je.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),HN=t.object({select:Uz.optional(),include:Rz.optional(),where:Je.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),jSt=t.object({where:Je.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MSt=t.object({where:Je.optional(),orderBy:t.union([BH.array(),BH]).optional(),by:SC.array(),having:KA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZSt=t.object({select:Uz.optional(),include:Rz.optional(),where:ct}).strict(),vSt=t.object({select:Uz.optional(),include:Rz.optional(),where:ct}).strict(),OSt=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([Dh.array(),Dh]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),fSt=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([Dh.array(),Dh]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),QN=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([Dh.array(),Dh]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),wSt=t.object({where:xa.optional(),orderBy:t.union([Dh.array(),Dh]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NSt=t.object({where:xa.optional(),orderBy:t.union([qH.array(),qH]).optional(),by:TC.array(),having:XA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BSt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),qSt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),FSt=t.object({select:Mz.optional(),include:jz.optional(),where:De.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:Gl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),DSt=t.object({select:Mz.optional(),include:jz.optional(),where:De.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:Gl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),ESt=t.object({select:Mz.optional(),include:jz.optional(),where:De.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:Gl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),_St=t.object({where:De.optional(),orderBy:t.union([th.array(),th]).optional(),cursor:Gl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LSt=t.object({where:De.optional(),orderBy:t.union([FH.array(),FH]).optional(),by:PC.array(),having:tS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VSt=t.object({select:Mz.optional(),include:jz.optional(),where:Gl}).strict(),HSt=t.object({select:Mz.optional(),include:jz.optional(),where:Gl}).strict(),QSt=t.object({select:vz.optional(),include:Zz.optional(),where:Ke.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),YSt=t.object({select:vz.optional(),include:Zz.optional(),where:Ke.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),YN=t.object({select:vz.optional(),include:Zz.optional(),where:Ke.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),GSt=t.object({where:Ke.optional(),orderBy:t.union([eh.array(),eh]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$St=t.object({where:Ke.optional(),orderBy:t.union([DH.array(),DH]).optional(),by:WC.array(),having:eS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JSt=t.object({select:vz.optional(),include:Zz.optional(),where:ut}).strict(),KSt=t.object({select:vz.optional(),include:Zz.optional(),where:ut}).strict(),XSt=t.object({select:fz.optional(),include:Oz.optional(),where:ja.optional(),orderBy:t.union([Eh.array(),Eh]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),tTt=t.object({select:fz.optional(),include:Oz.optional(),where:ja.optional(),orderBy:t.union([Eh.array(),Eh]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),GN=t.object({select:fz.optional(),include:Oz.optional(),where:ja.optional(),orderBy:t.union([Eh.array(),Eh]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),eTt=t.object({where:ja.optional(),orderBy:t.union([Eh.array(),Eh]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oTt=t.object({where:ja.optional(),orderBy:t.union([EH.array(),EH]).optional(),by:RC.array(),having:oS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nTt=t.object({select:fz.optional(),include:Oz.optional(),where:At}).strict(),aTt=t.object({select:fz.optional(),include:Oz.optional(),where:At}).strict(),iTt=t.object({select:Nz.optional(),include:wz.optional(),where:Oe.optional(),orderBy:t.union([nc.array(),nc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),lTt=t.object({select:Nz.optional(),include:wz.optional(),where:Oe.optional(),orderBy:t.union([nc.array(),nc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),Itt=t.object({select:Nz.optional(),include:wz.optional(),where:Oe.optional(),orderBy:t.union([nc.array(),nc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),rTt=t.object({where:Oe.optional(),orderBy:t.union([nc.array(),nc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pTt=t.object({where:Oe.optional(),orderBy:t.union([_H.array(),_H]).optional(),by:UC.array(),having:nS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cTt=t.object({select:Nz.optional(),include:wz.optional(),where:Yt}).strict(),uTt=t.object({select:Nz.optional(),include:wz.optional(),where:Yt}).strict(),sTt=t.object({select:qz.optional(),include:Bz.optional(),where:Xe.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),yTt=t.object({select:qz.optional(),include:Bz.optional(),where:Xe.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),gtt=t.object({select:qz.optional(),include:Bz.optional(),where:Xe.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),dTt=t.object({where:Xe.optional(),orderBy:t.union([oh.array(),oh]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zTt=t.object({where:Xe.optional(),orderBy:t.union([LH.array(),LH]).optional(),by:kC.array(),having:aS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mTt=t.object({select:qz.optional(),include:Bz.optional(),where:oe}).strict(),hTt=t.object({select:qz.optional(),include:Bz.optional(),where:oe}).strict(),bTt=t.object({select:Dz.optional(),include:Fz.optional(),where:to.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),ITt=t.object({select:Dz.optional(),include:Fz.optional(),where:to.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),Ctt=t.object({select:Dz.optional(),include:Fz.optional(),where:to.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),gTt=t.object({where:to.optional(),orderBy:t.union([nh.array(),nh]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CTt=t.object({where:to.optional(),orderBy:t.union([VH.array(),VH]).optional(),by:xC.array(),having:iS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ATt=t.object({select:Dz.optional(),include:Fz.optional(),where:ne}).strict(),STt=t.object({select:Dz.optional(),include:Fz.optional(),where:ne}).strict(),TTt=t.object({select:_z.optional(),include:Ez.optional(),where:Ma.optional(),orderBy:t.union([_h.array(),_h]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),PTt=t.object({select:_z.optional(),include:Ez.optional(),where:Ma.optional(),orderBy:t.union([_h.array(),_h]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),VT=t.object({select:_z.optional(),include:Ez.optional(),where:Ma.optional(),orderBy:t.union([_h.array(),_h]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),WTt=t.object({where:Ma.optional(),orderBy:t.union([_h.array(),_h]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RTt=t.object({where:Ma.optional(),orderBy:t.union([HH.array(),HH]).optional(),by:jC.array(),having:lS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UTt=t.object({select:_z.optional(),include:Ez.optional(),where:Q}).strict(),kTt=t.object({select:_z.optional(),include:Ez.optional(),where:Q}).strict(),xTt=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Lh.array(),Lh]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),jTt=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Lh.array(),Lh]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),Att=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Lh.array(),Lh]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),MTt=t.object({where:Za.optional(),orderBy:t.union([Lh.array(),Lh]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZTt=t.object({where:Za.optional(),orderBy:t.union([QH.array(),QH]).optional(),by:MC.array(),having:rS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vTt=t.object({select:Vz.optional(),include:Lz.optional(),where:ke}).strict(),OTt=t.object({select:Vz.optional(),include:Lz.optional(),where:ke}).strict(),fTt=t.object({select:Qz.optional(),include:Hz.optional(),where:fe.optional(),orderBy:t.union([ac.array(),ac]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),wTt=t.object({select:Qz.optional(),include:Hz.optional(),where:fe.optional(),orderBy:t.union([ac.array(),ac]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),Stt=t.object({select:Qz.optional(),include:Hz.optional(),where:fe.optional(),orderBy:t.union([ac.array(),ac]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),NTt=t.object({where:fe.optional(),orderBy:t.union([ac.array(),ac]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BTt=t.object({where:fe.optional(),orderBy:t.union([YH.array(),YH]).optional(),by:ZC.array(),having:pS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qTt=t.object({select:Qz.optional(),include:Hz.optional(),where:Gt}).strict(),FTt=t.object({select:Qz.optional(),include:Hz.optional(),where:Gt}).strict(),DTt=t.object({select:Gz.optional(),include:Yz.optional(),where:va.optional(),orderBy:t.union([Vh.array(),Vh]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vC,vC.array()]).optional()}).strict(),ETt=t.object({select:Gz.optional(),include:Yz.optional(),where:va.optional(),orderBy:t.union([Vh.array(),Vh]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vC,vC.array()]).optional()}).strict(),$N=t.object({select:Gz.optional(),include:Yz.optional(),where:va.optional(),orderBy:t.union([Vh.array(),Vh]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vC,vC.array()]).optional()}).strict(),_Tt=t.object({where:va.optional(),orderBy:t.union([Vh.array(),Vh]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LTt=t.object({where:va.optional(),orderBy:t.union([GH.array(),GH]).optional(),by:vC.array(),having:cS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VTt=t.object({select:Gz.optional(),include:Yz.optional(),where:St}).strict(),HTt=t.object({select:Gz.optional(),include:Yz.optional(),where:St}).strict(),QTt=t.object({select:Jz.optional(),include:$z.optional(),where:Tt.optional(),orderBy:t.union([Vl.array(),Vl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([OC,OC.array()]).optional()}).strict(),YTt=t.object({select:Jz.optional(),include:$z.optional(),where:Tt.optional(),orderBy:t.union([Vl.array(),Vl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([OC,OC.array()]).optional()}).strict(),Rg=t.object({select:Jz.optional(),include:$z.optional(),where:Tt.optional(),orderBy:t.union([Vl.array(),Vl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([OC,OC.array()]).optional()}).strict(),GTt=t.object({where:Tt.optional(),orderBy:t.union([Vl.array(),Vl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$Tt=t.object({where:Tt.optional(),orderBy:t.union([$H.array(),$H]).optional(),by:OC.array(),having:uS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JTt=t.object({select:Jz.optional(),include:$z.optional(),where:x}).strict(),KTt=t.object({select:Jz.optional(),include:$z.optional(),where:x}).strict(),XTt=t.object({select:Xz.optional(),include:Kz.optional(),where:Ee.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:$l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fC,fC.array()]).optional()}).strict(),tPt=t.object({select:Xz.optional(),include:Kz.optional(),where:Ee.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:$l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fC,fC.array()]).optional()}).strict(),ePt=t.object({select:Xz.optional(),include:Kz.optional(),where:Ee.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:$l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fC,fC.array()]).optional()}).strict(),oPt=t.object({where:Ee.optional(),orderBy:t.union([ah.array(),ah]).optional(),cursor:$l.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nPt=t.object({where:Ee.optional(),orderBy:t.union([JH.array(),JH]).optional(),by:fC.array(),having:sS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aPt=t.object({select:Xz.optional(),include:Kz.optional(),where:$l}).strict(),iPt=t.object({select:Xz.optional(),include:Kz.optional(),where:$l}).strict(),lPt=t.object({select:em.optional(),include:tm.optional(),where:Oa.optional(),orderBy:t.union([Hh.array(),Hh]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wC,wC.array()]).optional()}).strict(),rPt=t.object({select:em.optional(),include:tm.optional(),where:Oa.optional(),orderBy:t.union([Hh.array(),Hh]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wC,wC.array()]).optional()}).strict(),Ttt=t.object({select:em.optional(),include:tm.optional(),where:Oa.optional(),orderBy:t.union([Hh.array(),Hh]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wC,wC.array()]).optional()}).strict(),pPt=t.object({where:Oa.optional(),orderBy:t.union([Hh.array(),Hh]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cPt=t.object({where:Oa.optional(),orderBy:t.union([KH.array(),KH]).optional(),by:wC.array(),having:yS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uPt=t.object({select:em.optional(),include:tm.optional(),where:xe}).strict(),sPt=t.object({select:em.optional(),include:tm.optional(),where:xe}).strict(),yPt=t.object({select:nm.optional(),include:om.optional(),where:fa.optional(),orderBy:t.union([Qh.array(),Qh]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([NC,NC.array()]).optional()}).strict(),dPt=t.object({select:nm.optional(),include:om.optional(),where:fa.optional(),orderBy:t.union([Qh.array(),Qh]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([NC,NC.array()]).optional()}).strict(),Ptt=t.object({select:nm.optional(),include:om.optional(),where:fa.optional(),orderBy:t.union([Qh.array(),Qh]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([NC,NC.array()]).optional()}).strict(),zPt=t.object({where:fa.optional(),orderBy:t.union([Qh.array(),Qh]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mPt=t.object({where:fa.optional(),orderBy:t.union([XH.array(),XH]).optional(),by:NC.array(),having:dS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hPt=t.object({select:nm.optional(),include:om.optional(),where:je}).strict(),bPt=t.object({select:nm.optional(),include:om.optional(),where:je}).strict(),IPt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([ZY,vY])}).strict(),gPt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ql,create:t.union([ZY,vY]),update:t.union([OY,fY])}).strict(),CPt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),APt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SPt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ql}).strict(),TPt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([OY,fY]),where:Ql}).strict(),PPt=t.object({data:t.union([wY,NY]),where:qe.optional(),limit:t.number().optional()}).strict(),WPt=t.object({data:t.union([wY,NY]),where:qe.optional(),limit:t.number().optional()}).strict(),RPt=t.object({where:qe.optional(),limit:t.number().optional()}).strict(),UPt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([BY,qY])}).strict(),kPt=t.object({select:Qy.optional(),include:Hy.optional(),where:me,create:t.union([BY,qY]),update:t.union([FY,DY])}).strict(),xPt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jPt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MPt=t.object({select:Qy.optional(),include:Hy.optional(),where:me}).strict(),ZPt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([FY,DY]),where:me}).strict(),vPt=t.object({data:t.union([MB,EY]),where:na.optional(),limit:t.number().optional()}).strict(),OPt=t.object({data:t.union([MB,EY]),where:na.optional(),limit:t.number().optional()}).strict(),fPt=t.object({where:na.optional(),limit:t.number().optional()}).strict(),wPt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([_Y,LY])}).strict(),NPt=t.object({select:Gy.optional(),include:Yy.optional(),where:Yl,create:t.union([_Y,LY]),update:t.union([VY,HY])}).strict(),BPt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qPt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FPt=t.object({select:Gy.optional(),include:Yy.optional(),where:Yl}).strict(),DPt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([VY,HY]),where:Yl}).strict(),EPt=t.object({data:t.union([QY,YY]),where:Fe.optional(),limit:t.number().optional()}).strict(),_Pt=t.object({data:t.union([QY,YY]),where:Fe.optional(),limit:t.number().optional()}).strict(),LPt=t.object({where:Fe.optional(),limit:t.number().optional()}).strict(),VPt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([GY,$Y])}).strict(),HPt=t.object({select:Jy.optional(),include:$y.optional(),where:he,create:t.union([GY,$Y]),update:t.union([JY,KY])}).strict(),QPt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YPt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GPt=t.object({select:Jy.optional(),include:$y.optional(),where:he}).strict(),$Pt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([JY,KY]),where:he}).strict(),JPt=t.object({data:t.union([ZB,XY]),where:aa.optional(),limit:t.number().optional()}).strict(),KPt=t.object({data:t.union([ZB,XY]),where:aa.optional(),limit:t.number().optional()}).strict(),XPt=t.object({where:aa.optional(),limit:t.number().optional()}).strict(),tWt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([tG,eG])}).strict(),eWt=t.object({select:Xy.optional(),include:Ky.optional(),where:be,create:t.union([tG,eG]),update:t.union([oG,nG])}).strict(),oWt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nWt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aWt=t.object({select:Xy.optional(),include:Ky.optional(),where:be}).strict(),iWt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([oG,nG]),where:be}).strict(),lWt=t.object({data:t.union([vB,aG]),where:ia.optional(),limit:t.number().optional()}).strict(),rWt=t.object({data:t.union([vB,aG]),where:ia.optional(),limit:t.number().optional()}).strict(),pWt=t.object({where:ia.optional(),limit:t.number().optional()}).strict(),cWt=t.object({select:ed.optional(),include:td.optional(),data:t.union([iG,lG])}).strict(),uWt=t.object({select:ed.optional(),include:td.optional(),where:Ie,create:t.union([iG,lG]),update:t.union([rG,pG])}).strict(),sWt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yWt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dWt=t.object({select:ed.optional(),include:td.optional(),where:Ie}).strict(),zWt=t.object({select:ed.optional(),include:td.optional(),data:t.union([rG,pG]),where:Ie}).strict(),mWt=t.object({data:t.union([OB,cG]),where:la.optional(),limit:t.number().optional()}).strict(),hWt=t.object({data:t.union([OB,cG]),where:la.optional(),limit:t.number().optional()}).strict(),bWt=t.object({where:la.optional(),limit:t.number().optional()}).strict(),IWt=t.object({select:nd.optional(),include:od.optional(),data:t.union([uG,sG])}).strict(),gWt=t.object({select:nd.optional(),include:od.optional(),where:ge,create:t.union([uG,sG]),update:t.union([yG,dG])}).strict(),CWt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),AWt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SWt=t.object({select:nd.optional(),include:od.optional(),where:ge}).strict(),TWt=t.object({select:nd.optional(),include:od.optional(),data:t.union([yG,dG]),where:ge}).strict(),PWt=t.object({data:t.union([fB,zG]),where:ra.optional(),limit:t.number().optional()}).strict(),WWt=t.object({data:t.union([fB,zG]),where:ra.optional(),limit:t.number().optional()}).strict(),RWt=t.object({where:ra.optional(),limit:t.number().optional()}).strict(),UWt=t.object({select:id.optional(),include:ad.optional(),data:t.union([mG,hG])}).strict(),kWt=t.object({select:id.optional(),include:ad.optional(),where:ht,create:t.union([mG,hG]),update:t.union([bG,IG])}).strict(),xWt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jWt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MWt=t.object({select:id.optional(),include:ad.optional(),where:ht}).strict(),ZWt=t.object({select:id.optional(),include:ad.optional(),data:t.union([bG,IG]),where:ht}).strict(),vWt=t.object({data:t.union([RM,gG]),where:pa.optional(),limit:t.number().optional()}).strict(),OWt=t.object({data:t.union([RM,gG]),where:pa.optional(),limit:t.number().optional()}).strict(),fWt=t.object({where:pa.optional(),limit:t.number().optional()}).strict(),wWt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([CG,AG])}).strict(),NWt=t.object({select:rd.optional(),include:ld.optional(),where:Xt,create:t.union([CG,AG]),update:t.union([SG,TG])}).strict(),BWt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qWt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FWt=t.object({select:rd.optional(),include:ld.optional(),where:Xt}).strict(),DWt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([SG,TG]),where:Xt}).strict(),EWt=t.object({data:t.union([wB,PG]),where:Ne.optional(),limit:t.number().optional()}).strict(),_Wt=t.object({data:t.union([wB,PG]),where:Ne.optional(),limit:t.number().optional()}).strict(),LWt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),VWt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([WG,RG])}).strict(),HWt=t.object({select:cd.optional(),include:pd.optional(),where:w,create:t.union([WG,RG]),update:t.union([UG,kG])}).strict(),QWt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),YWt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),GWt=t.object({select:cd.optional(),include:pd.optional(),where:w}).strict(),$Wt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([UG,kG]),where:w}).strict(),JWt=t.object({data:t.union([nP,xG]),where:ae.optional(),limit:t.number().optional()}).strict(),KWt=t.object({data:t.union([nP,xG]),where:ae.optional(),limit:t.number().optional()}).strict(),XWt=t.object({where:ae.optional(),limit:t.number().optional()}).strict(),tRt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([jG,MG])}).strict(),eRt=t.object({select:sd.optional(),include:ud.optional(),where:Ht,create:t.union([jG,MG]),update:t.union([ZG,vG])}).strict(),oRt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),nRt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aRt=t.object({select:sd.optional(),include:ud.optional(),where:Ht}).strict(),iRt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([ZG,vG]),where:Ht}).strict(),lRt=t.object({data:t.union([NB,OG]),where:Ze.optional(),limit:t.number().optional()}).strict(),rRt=t.object({data:t.union([NB,OG]),where:Ze.optional(),limit:t.number().optional()}).strict(),pRt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),cRt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([fG,wG])}).strict(),uRt=t.object({select:dd.optional(),include:yd.optional(),where:B,create:t.union([fG,wG]),update:t.union([NG,BG])}).strict(),sRt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yRt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dRt=t.object({select:dd.optional(),include:yd.optional(),where:B}).strict(),zRt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([NG,BG]),where:B}).strict(),mRt=t.object({data:t.union([aP,qG]),where:ca.optional(),limit:t.number().optional()}).strict(),hRt=t.object({data:t.union([aP,qG]),where:ca.optional(),limit:t.number().optional()}).strict(),bRt=t.object({where:ca.optional(),limit:t.number().optional()}).strict(),IRt=t.object({select:md.optional(),include:zd.optional(),data:t.union([FG,DG])}).strict(),gRt=t.object({select:md.optional(),include:zd.optional(),where:Ce,create:t.union([FG,DG]),update:t.union([EG,_G])}).strict(),CRt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ARt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SRt=t.object({select:md.optional(),include:zd.optional(),where:Ce}).strict(),TRt=t.object({select:md.optional(),include:zd.optional(),data:t.union([EG,_G]),where:Ce}).strict(),PRt=t.object({data:t.union([BB,LG]),where:ua.optional(),limit:t.number().optional()}).strict(),WRt=t.object({data:t.union([BB,LG]),where:ua.optional(),limit:t.number().optional()}).strict(),RRt=t.object({where:ua.optional(),limit:t.number().optional()}).strict(),URt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([VG,HG])}).strict(),kRt=t.object({select:bd.optional(),include:hd.optional(),where:Qt,create:t.union([VG,HG]),update:t.union([QG,YG])}).strict(),xRt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jRt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MRt=t.object({select:bd.optional(),include:hd.optional(),where:Qt}).strict(),ZRt=t.object({select:bd.optional(),include:hd.optional(),data:t.union([QG,YG]),where:Qt}).strict(),vRt=t.object({data:t.union([qB,GG]),where:ve.optional(),limit:t.number().optional()}).strict(),ORt=t.object({data:t.union([qB,GG]),where:ve.optional(),limit:t.number().optional()}).strict(),fRt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),wRt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([$G,JG])}).strict(),NRt=t.object({select:gd.optional(),include:Id.optional(),where:te,create:t.union([$G,JG]),update:t.union([KG,XG])}).strict(),BRt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),qRt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FRt=t.object({select:gd.optional(),include:Id.optional(),where:te}).strict(),DRt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([KG,XG]),where:te}).strict(),ERt=t.object({data:t.union([FB,t1]),where:Qe.optional(),limit:t.number().optional()}).strict(),_Rt=t.object({data:t.union([FB,t1]),where:Qe.optional(),limit:t.number().optional()}).strict(),LRt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),VRt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([e1,o1])}).strict(),HRt=t.object({select:Ad.optional(),include:Cd.optional(),where:lt,create:t.union([e1,o1]),update:t.union([n1,a1])}).strict(),QRt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),YRt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GRt=t.object({select:Ad.optional(),include:Cd.optional(),where:lt}).strict(),$Rt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([n1,a1]),where:lt}).strict(),JRt=t.object({data:t.union([UM,i1]),where:Ye.optional(),limit:t.number().optional()}).strict(),KRt=t.object({data:t.union([UM,i1]),where:Ye.optional(),limit:t.number().optional()}).strict(),XRt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),tUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([l1,r1])}).strict(),eUt=t.object({select:Td.optional(),include:Sd.optional(),where:bt,create:t.union([l1,r1]),update:t.union([p1,c1])}).strict(),oUt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),nUt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),aUt=t.object({select:Td.optional(),include:Sd.optional(),where:bt}).strict(),iUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([p1,c1]),where:bt}).strict(),lUt=t.object({data:t.union([kM,u1]),where:sa.optional(),limit:t.number().optional()}).strict(),rUt=t.object({data:t.union([kM,u1]),where:sa.optional(),limit:t.number().optional()}).strict(),pUt=t.object({where:sa.optional(),limit:t.number().optional()}).strict(),cUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([s1,y1])}).strict(),uUt=t.object({select:Wd.optional(),include:Pd.optional(),where:It,create:t.union([s1,y1]),update:t.union([d1,z1])}).strict(),sUt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),yUt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dUt=t.object({select:Wd.optional(),include:Pd.optional(),where:It}).strict(),zUt=t.object({select:Wd.optional(),include:Pd.optional(),data:t.union([d1,z1]),where:It}).strict(),mUt=t.object({data:t.union([xM,m1]),where:ya.optional(),limit:t.number().optional()}).strict(),hUt=t.object({data:t.union([xM,m1]),where:ya.optional(),limit:t.number().optional()}).strict(),bUt=t.object({where:ya.optional(),limit:t.number().optional()}).strict(),IUt=t.object({select:Ud.optional(),include:Rd.optional(),data:t.union([h1,b1])}).strict(),gUt=t.object({select:Ud.optional(),include:Rd.optional(),where:q,create:t.union([h1,b1]),update:t.union([I1,g1])}).strict(),CUt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),AUt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SUt=t.object({select:Ud.optional(),include:Rd.optional(),where:q}).strict(),TUt=t.object({select:Ud.optional(),include:Rd.optional(),data:t.union([I1,g1]),where:q}).strict(),PUt=t.object({data:t.union([iP,C1]),where:da.optional(),limit:t.number().optional()}).strict(),WUt=t.object({data:t.union([iP,C1]),where:da.optional(),limit:t.number().optional()}).strict(),RUt=t.object({where:da.optional(),limit:t.number().optional()}).strict(),UUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([A1,S1])}).strict(),kUt=t.object({select:xd.optional(),include:kd.optional(),where:F,create:t.union([A1,S1]),update:t.union([T1,P1])}).strict(),xUt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),jUt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MUt=t.object({select:xd.optional(),include:kd.optional(),where:F}).strict(),ZUt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([T1,P1]),where:F}).strict(),vUt=t.object({data:t.union([lP,W1]),where:za.optional(),limit:t.number().optional()}).strict(),OUt=t.object({data:t.union([lP,W1]),where:za.optional(),limit:t.number().optional()}).strict(),fUt=t.object({where:za.optional(),limit:t.number().optional()}).strict(),wUt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([R1,U1])}).strict(),NUt=t.object({select:Md.optional(),include:jd.optional(),where:Ae,create:t.union([R1,U1]),update:t.union([k1,x1])}).strict(),BUt=t.object({data:t.union([tW,tW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qUt=t.object({data:t.union([tW,tW.array()]),skipDuplicates:t.boolean().optional()}).strict(),FUt=t.object({select:Md.optional(),include:jd.optional(),where:Ae}).strict(),DUt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([k1,x1]),where:Ae}).strict(),EUt=t.object({data:t.union([DB,j1]),where:ma.optional(),limit:t.number().optional()}).strict(),_Ut=t.object({data:t.union([DB,j1]),where:ma.optional(),limit:t.number().optional()}).strict(),LUt=t.object({where:ma.optional(),limit:t.number().optional()}).strict(),VUt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([M1,Z1])}).strict(),HUt=t.object({select:vd.optional(),include:Zd.optional(),where:D,create:t.union([M1,Z1]),update:t.union([v1,O1])}).strict(),QUt=t.object({data:t.union([eW,eW.array()]),skipDuplicates:t.boolean().optional()}).strict(),YUt=t.object({data:t.union([eW,eW.array()]),skipDuplicates:t.boolean().optional()}).strict(),GUt=t.object({select:vd.optional(),include:Zd.optional(),where:D}).strict(),$Ut=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([v1,O1]),where:D}).strict(),JUt=t.object({data:t.union([rP,f1]),where:ha.optional(),limit:t.number().optional()}).strict(),KUt=t.object({data:t.union([rP,f1]),where:ha.optional(),limit:t.number().optional()}).strict(),XUt=t.object({where:ha.optional(),limit:t.number().optional()}).strict(),tkt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([w1,N1])}).strict(),ekt=t.object({select:fd.optional(),include:Od.optional(),where:E,create:t.union([w1,N1]),update:t.union([B1,q1])}).strict(),okt=t.object({data:t.union([oW,oW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nkt=t.object({data:t.union([oW,oW.array()]),skipDuplicates:t.boolean().optional()}).strict(),akt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),ikt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([B1,q1]),where:E}).strict(),lkt=t.object({data:t.union([pP,F1]),where:ba.optional(),limit:t.number().optional()}).strict(),rkt=t.object({data:t.union([pP,F1]),where:ba.optional(),limit:t.number().optional()}).strict(),pkt=t.object({where:ba.optional(),limit:t.number().optional()}).strict(),ckt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([D1,E1])}).strict(),ukt=t.object({select:Nd.optional(),include:wd.optional(),where:rt,create:t.union([D1,E1]),update:t.union([_1,L1])}).strict(),skt=t.object({data:t.union([nW,nW.array()]),skipDuplicates:t.boolean().optional()}).strict(),ykt=t.object({data:t.union([nW,nW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dkt=t.object({select:Nd.optional(),include:wd.optional(),where:rt}).strict(),zkt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([_1,L1]),where:rt}).strict(),mkt=t.object({data:t.union([jM,V1]),where:Ge.optional(),limit:t.number().optional()}).strict(),hkt=t.object({data:t.union([jM,V1]),where:Ge.optional(),limit:t.number().optional()}).strict(),bkt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),Ikt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([H1,Q1])}).strict(),gkt=t.object({select:qd.optional(),include:Bd.optional(),where:_,create:t.union([H1,Q1]),update:t.union([Y1,G1])}).strict(),Ckt=t.object({data:t.union([aW,aW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Akt=t.object({data:t.union([aW,aW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Skt=t.object({select:qd.optional(),include:Bd.optional(),where:_}).strict(),Tkt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([Y1,G1]),where:_}).strict(),Pkt=t.object({data:t.union([cP,$1]),where:Ia.optional(),limit:t.number().optional()}).strict(),Wkt=t.object({data:t.union([cP,$1]),where:Ia.optional(),limit:t.number().optional()}).strict(),Rkt=t.object({where:Ia.optional(),limit:t.number().optional()}).strict(),Ukt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([J1,K1])}).strict(),kkt=t.object({select:Dd.optional(),include:Fd.optional(),where:Se,create:t.union([J1,K1]),update:t.union([X1,t9])}).strict(),xkt=t.object({data:t.union([iW,iW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jkt=t.object({data:t.union([iW,iW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mkt=t.object({select:Dd.optional(),include:Fd.optional(),where:Se}).strict(),Zkt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([X1,t9]),where:Se}).strict(),vkt=t.object({data:t.union([EB,e9]),where:ga.optional(),limit:t.number().optional()}).strict(),Okt=t.object({data:t.union([EB,e9]),where:ga.optional(),limit:t.number().optional()}).strict(),fkt=t.object({where:ga.optional(),limit:t.number().optional()}).strict(),wkt=t.object({select:_d.optional(),include:Ed.optional(),data:t.union([o9,n9])}).strict(),Nkt=t.object({select:_d.optional(),include:Ed.optional(),where:Te,create:t.union([o9,n9]),update:t.union([a9,i9])}).strict(),Bkt=t.object({data:t.union([lW,lW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qkt=t.object({data:t.union([lW,lW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fkt=t.object({select:_d.optional(),include:Ed.optional(),where:Te}).strict(),Dkt=t.object({select:_d.optional(),include:Ed.optional(),data:t.union([a9,i9]),where:Te}).strict(),Ekt=t.object({data:t.union([_B,l9]),where:Ca.optional(),limit:t.number().optional()}).strict(),_kt=t.object({data:t.union([_B,l9]),where:Ca.optional(),limit:t.number().optional()}).strict(),Lkt=t.object({where:Ca.optional(),limit:t.number().optional()}).strict(),Vkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([r9,p9])}).strict(),Hkt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe,create:t.union([r9,p9]),update:t.union([c9,u9])}).strict(),Qkt=t.object({data:t.union([rW,rW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ykt=t.object({data:t.union([rW,rW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gkt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),$kt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([c9,u9]),where:Pe}).strict(),Jkt=t.object({data:t.union([LB,s9]),where:Aa.optional(),limit:t.number().optional()}).strict(),Kkt=t.object({data:t.union([LB,s9]),where:Aa.optional(),limit:t.number().optional()}).strict(),Xkt=t.object({where:Aa.optional(),limit:t.number().optional()}).strict(),txt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([y9,d9])}).strict(),ext=t.object({select:Qd.optional(),include:Hd.optional(),where:L,create:t.union([y9,d9]),update:t.union([z9,m9])}).strict(),oxt=t.object({data:t.union([pW,pW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nxt=t.object({data:t.union([pW,pW.array()]),skipDuplicates:t.boolean().optional()}).strict(),axt=t.object({select:Qd.optional(),include:Hd.optional(),where:L}).strict(),ixt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([z9,m9]),where:L}).strict(),lxt=t.object({data:t.union([uP,h9]),where:Sa.optional(),limit:t.number().optional()}).strict(),rxt=t.object({data:t.union([uP,h9]),where:Sa.optional(),limit:t.number().optional()}).strict(),pxt=t.object({where:Sa.optional(),limit:t.number().optional()}).strict(),cxt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([b9,I9])}).strict(),uxt=t.object({select:Gd.optional(),include:Yd.optional(),where:sp,create:t.union([b9,I9]),update:t.union([g9,C9])}).strict(),sxt=t.object({data:t.union([cW,cW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yxt=t.object({data:t.union([cW,cW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dxt=t.object({select:Gd.optional(),include:Yd.optional(),where:sp}).strict(),zxt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([g9,C9]),where:sp}).strict(),mxt=t.object({data:t.union([A9,S9]),where:co.optional(),limit:t.number().optional()}).strict(),hxt=t.object({data:t.union([A9,S9]),where:co.optional(),limit:t.number().optional()}).strict(),bxt=t.object({where:co.optional(),limit:t.number().optional()}).strict(),Ixt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([T9,P9])}).strict(),gxt=t.object({select:Jd.optional(),include:$d.optional(),where:gt,create:t.union([T9,P9]),update:t.union([W9,R9])}).strict(),Cxt=t.object({data:t.union([uW,uW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Axt=t.object({data:t.union([uW,uW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sxt=t.object({select:Jd.optional(),include:$d.optional(),where:gt}).strict(),Txt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([W9,R9]),where:gt}).strict(),Pxt=t.object({data:t.union([MM,U9]),where:Ta.optional(),limit:t.number().optional()}).strict(),Wxt=t.object({data:t.union([MM,U9]),where:Ta.optional(),limit:t.number().optional()}).strict(),Rxt=t.object({where:Ta.optional(),limit:t.number().optional()}).strict(),Uxt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([k9,x9])}).strict(),kxt=t.object({select:Xd.optional(),include:Kd.optional(),where:We,create:t.union([k9,x9]),update:t.union([j9,M9])}).strict(),xxt=t.object({data:t.union([sW,sW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jxt=t.object({data:t.union([sW,sW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mxt=t.object({select:Xd.optional(),include:Kd.optional(),where:We}).strict(),Zxt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([j9,M9]),where:We}).strict(),vxt=t.object({data:t.union([VB,Z9]),where:Pa.optional(),limit:t.number().optional()}).strict(),Oxt=t.object({data:t.union([VB,Z9]),where:Pa.optional(),limit:t.number().optional()}).strict(),fxt=t.object({where:Pa.optional(),limit:t.number().optional()}).strict(),wxt=t.object({select:ih.optional(),data:t.union([v9,O9])}).strict(),Nxt=t.object({select:ih.optional(),where:lh,create:t.union([v9,O9]),update:t.union([f9,w9])}).strict(),Bxt=t.object({data:t.union([yW,yW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qxt=t.object({data:t.union([yW,yW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fxt=t.object({select:ih.optional(),where:lh}).strict(),Dxt=t.object({select:ih.optional(),data:t.union([f9,w9]),where:lh}).strict(),Ext=t.object({data:t.union([N9,B9]),where:Tl.optional(),limit:t.number().optional()}).strict(),_xt=t.object({data:t.union([N9,B9]),where:Tl.optional(),limit:t.number().optional()}).strict(),Lxt=t.object({where:Tl.optional(),limit:t.number().optional()}).strict(),Vxt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([q9,F9])}).strict(),Hxt=t.object({select:ez.optional(),include:tz.optional(),where:Dl,create:t.union([q9,F9]),update:t.union([D9,E9])}).strict(),Qxt=t.object({data:t.union([dW,dW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Yxt=t.object({data:t.union([dW,dW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gxt=t.object({select:ez.optional(),include:tz.optional(),where:Dl}).strict(),$xt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([D9,E9]),where:Dl}).strict(),Jxt=t.object({data:t.union([_9,L9]),where:Me.optional(),limit:t.number().optional()}).strict(),Kxt=t.object({data:t.union([_9,L9]),where:Me.optional(),limit:t.number().optional()}).strict(),Xxt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),tjt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([V9,H9])}).strict(),ejt=t.object({select:nz.optional(),include:oz.optional(),where:Jn,create:t.union([V9,H9]),update:t.union([Q9,Y9])}).strict(),ojt=t.object({data:t.union([zW,zW.array()]),skipDuplicates:t.boolean().optional()}).strict(),njt=t.object({data:t.union([zW,zW.array()]),skipDuplicates:t.boolean().optional()}).strict(),ajt=t.object({select:nz.optional(),include:oz.optional(),where:Jn}).strict(),ijt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([Q9,Y9]),where:Jn}).strict(),ljt=t.object({data:t.union([G9,$9]),where:Ft.optional(),limit:t.number().optional()}).strict(),rjt=t.object({data:t.union([G9,$9]),where:Ft.optional(),limit:t.number().optional()}).strict(),pjt=t.object({where:Ft.optional(),limit:t.number().optional()}).strict(),cjt=t.object({select:iz.optional(),include:az.optional(),data:t.union([J9,K9])}).strict(),ujt=t.object({select:iz.optional(),include:az.optional(),where:K,create:t.union([J9,K9]),update:t.union([X9,t$])}).strict(),sjt=t.object({data:t.union([mW,mW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yjt=t.object({data:t.union([mW,mW.array()]),skipDuplicates:t.boolean().optional()}).strict(),djt=t.object({select:iz.optional(),include:az.optional(),where:K}).strict(),zjt=t.object({select:iz.optional(),include:az.optional(),data:t.union([X9,t$]),where:K}).strict(),mjt=t.object({data:t.union([HB,e$]),where:N.optional(),limit:t.number().optional()}).strict(),hjt=t.object({data:t.union([HB,e$]),where:N.optional(),limit:t.number().optional()}).strict(),bjt=t.object({where:N.optional(),limit:t.number().optional()}).strict(),Ijt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([o$,n$])}).strict(),gjt=t.object({select:rz.optional(),include:lz.optional(),where:j,create:t.union([o$,n$]),update:t.union([a$,i$])}).strict(),Cjt=t.object({data:t.union([hW,hW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ajt=t.object({data:t.union([hW,hW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sjt=t.object({select:rz.optional(),include:lz.optional(),where:j}).strict(),Tjt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([a$,i$]),where:j}).strict(),Pjt=t.object({data:t.union([ZM,l$]),where:M.optional(),limit:t.number().optional()}).strict(),Wjt=t.object({data:t.union([ZM,l$]),where:M.optional(),limit:t.number().optional()}).strict(),Rjt=t.object({where:M.optional(),limit:t.number().optional()}).strict(),Ujt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([r$,p$])}).strict(),kjt=t.object({select:cz.optional(),include:pz.optional(),where:Re,create:t.union([r$,p$]),update:t.union([c$,u$])}).strict(),xjt=t.object({data:t.union([bW,bW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jjt=t.object({data:t.union([bW,bW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mjt=t.object({select:cz.optional(),include:pz.optional(),where:Re}).strict(),Zjt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([c$,u$]),where:Re}).strict(),vjt=t.object({data:t.union([QB,s$]),where:Wa.optional(),limit:t.number().optional()}).strict(),Ojt=t.object({data:t.union([QB,s$]),where:Wa.optional(),limit:t.number().optional()}).strict(),fjt=t.object({where:Wa.optional(),limit:t.number().optional()}).strict(),wjt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([y$,d$])}).strict(),Njt=t.object({select:sz.optional(),include:uz.optional(),where:Ue,create:t.union([y$,d$]),update:t.union([z$,m$])}).strict(),Bjt=t.object({data:t.union([IW,IW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qjt=t.object({data:t.union([IW,IW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fjt=t.object({select:sz.optional(),include:uz.optional(),where:Ue}).strict(),Djt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([z$,m$]),where:Ue}).strict(),Ejt=t.object({data:t.union([YB,h$]),where:Ra.optional(),limit:t.number().optional()}).strict(),_jt=t.object({data:t.union([YB,h$]),where:Ra.optional(),limit:t.number().optional()}).strict(),Ljt=t.object({where:Ra.optional(),limit:t.number().optional()}).strict(),Vjt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([b$,I$])}).strict(),Hjt=t.object({select:dz.optional(),include:yz.optional(),where:ee,create:t.union([b$,I$]),update:t.union([g$,C$])}).strict(),Qjt=t.object({data:t.union([gW,gW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Yjt=t.object({data:t.union([gW,gW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gjt=t.object({select:dz.optional(),include:yz.optional(),where:ee}).strict(),$jt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([g$,C$]),where:ee}).strict(),Jjt=t.object({data:t.union([GB,A$]),where:$e.optional(),limit:t.number().optional()}).strict(),Kjt=t.object({data:t.union([GB,A$]),where:$e.optional(),limit:t.number().optional()}).strict(),Xjt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),tMt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([S$,T$])}).strict(),eMt=t.object({select:mz.optional(),include:zz.optional(),where:C,create:t.union([S$,T$]),update:t.union([P$,W$])}).strict(),oMt=t.object({data:t.union([CW,CW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nMt=t.object({data:t.union([CW,CW.array()]),skipDuplicates:t.boolean().optional()}).strict(),aMt=t.object({select:mz.optional(),include:zz.optional(),where:C}).strict(),iMt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([P$,W$]),where:C}).strict(),lMt=t.object({data:t.union([_I,R$]),where:v.optional(),limit:t.number().optional()}).strict(),rMt=t.object({data:t.union([_I,R$]),where:v.optional(),limit:t.number().optional()}).strict(),pMt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),cMt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([U$,k$])}).strict(),uMt=t.object({select:bz.optional(),include:hz.optional(),where:$,create:t.union([U$,k$]),update:t.union([x$,j$])}).strict(),sMt=t.object({data:t.union([AW,AW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yMt=t.object({data:t.union([AW,AW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dMt=t.object({select:bz.optional(),include:hz.optional(),where:$}).strict(),zMt=t.object({select:bz.optional(),include:hz.optional(),data:t.union([x$,j$]),where:$}).strict(),mMt=t.object({data:t.union([vM,M$]),where:jt.optional(),limit:t.number().optional()}).strict(),hMt=t.object({data:t.union([vM,M$]),where:jt.optional(),limit:t.number().optional()}).strict(),bMt=t.object({where:jt.optional(),limit:t.number().optional()}).strict(),IMt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([Z$,v$])}).strict(),gMt=t.object({select:gz.optional(),include:Iz.optional(),where:V,create:t.union([Z$,v$]),update:t.union([O$,f$])}).strict(),CMt=t.object({data:t.union([SW,SW.array()]),skipDuplicates:t.boolean().optional()}).strict(),AMt=t.object({data:t.union([SW,SW.array()]),skipDuplicates:t.boolean().optional()}).strict(),SMt=t.object({select:gz.optional(),include:Iz.optional(),where:V}).strict(),TMt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([O$,f$]),where:V}).strict(),PMt=t.object({data:t.union([sP,w$]),where:Ua.optional(),limit:t.number().optional()}).strict(),WMt=t.object({data:t.union([sP,w$]),where:Ua.optional(),limit:t.number().optional()}).strict(),RMt=t.object({where:Ua.optional(),limit:t.number().optional()}).strict(),UMt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([N$,B$])}).strict(),kMt=t.object({select:Az.optional(),include:Cz.optional(),where:pt,create:t.union([N$,B$]),update:t.union([q$,F$])}).strict(),xMt=t.object({data:t.union([TW,TW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jMt=t.object({data:t.union([TW,TW.array()]),skipDuplicates:t.boolean().optional()}).strict(),MMt=t.object({select:Az.optional(),include:Cz.optional(),where:pt}).strict(),ZMt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([q$,F$]),where:pt}).strict(),vMt=t.object({data:t.union([OM,D$]),where:Be.optional(),limit:t.number().optional()}).strict(),OMt=t.object({data:t.union([OM,D$]),where:Be.optional(),limit:t.number().optional()}).strict(),fMt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),wMt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([E$,_$])}).strict(),NMt=t.object({select:Tz.optional(),include:Sz.optional(),where:f,create:t.union([E$,_$]),update:t.union([L$,V$])}).strict(),BMt=t.object({data:t.union([PW,PW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qMt=t.object({data:t.union([PW,PW.array()]),skipDuplicates:t.boolean().optional()}).strict(),FMt=t.object({select:Tz.optional(),include:Sz.optional(),where:f}).strict(),DMt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([L$,V$]),where:f}).strict(),EMt=t.object({data:t.union([yP,H$]),where:ie.optional(),limit:t.number().optional()}).strict(),_Mt=t.object({data:t.union([yP,H$]),where:ie.optional(),limit:t.number().optional()}).strict(),LMt=t.object({where:ie.optional(),limit:t.number().optional()}).strict(),VMt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([Q$,Y$])}).strict(),HMt=t.object({select:Wz.optional(),include:Pz.optional(),where:H,create:t.union([Q$,Y$]),update:t.union([G$,$$])}).strict(),QMt=t.object({data:t.union([WW,WW.array()]),skipDuplicates:t.boolean().optional()}).strict(),YMt=t.object({data:t.union([WW,WW.array()]),skipDuplicates:t.boolean().optional()}).strict(),GMt=t.object({select:Wz.optional(),include:Pz.optional(),where:H}).strict(),$Mt=t.object({select:Wz.optional(),include:Pz.optional(),data:t.union([G$,$$]),where:H}).strict(),JMt=t.object({data:t.union([dP,J$]),where:ka.optional(),limit:t.number().optional()}).strict(),KMt=t.object({data:t.union([dP,J$]),where:ka.optional(),limit:t.number().optional()}).strict(),XMt=t.object({where:ka.optional(),limit:t.number().optional()}).strict(),tZt=t.object({select:Uz.optional(),include:Rz.optional(),data:t.union([K$,X$])}).strict(),eZt=t.object({select:Uz.optional(),include:Rz.optional(),where:ct,create:t.union([K$,X$]),update:t.union([t4,e4])}).strict(),oZt=t.object({data:t.union([RW,RW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nZt=t.object({data:t.union([RW,RW.array()]),skipDuplicates:t.boolean().optional()}).strict(),aZt=t.object({select:Uz.optional(),include:Rz.optional(),where:ct}).strict(),iZt=t.object({select:Uz.optional(),include:Rz.optional(),data:t.union([t4,e4]),where:ct}).strict(),lZt=t.object({data:t.union([fM,o4]),where:Je.optional(),limit:t.number().optional()}).strict(),rZt=t.object({data:t.union([fM,o4]),where:Je.optional(),limit:t.number().optional()}).strict(),pZt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),cZt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([n4,a4])}).strict(),uZt=t.object({select:xz.optional(),include:kz.optional(),where:Ct,create:t.union([n4,a4]),update:t.union([i4,l4])}).strict(),sZt=t.object({data:t.union([UW,UW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yZt=t.object({data:t.union([UW,UW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dZt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),zZt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([i4,l4]),where:Ct}).strict(),mZt=t.object({data:t.union([wM,r4]),where:xa.optional(),limit:t.number().optional()}).strict(),hZt=t.object({data:t.union([wM,r4]),where:xa.optional(),limit:t.number().optional()}).strict(),bZt=t.object({where:xa.optional(),limit:t.number().optional()}).strict(),IZt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([p4,c4])}).strict(),gZt=t.object({select:Mz.optional(),include:jz.optional(),where:Gl,create:t.union([p4,c4]),update:t.union([u4,s4])}).strict(),CZt=t.object({data:t.union([kW,kW.array()]),skipDuplicates:t.boolean().optional()}).strict(),AZt=t.object({data:t.union([kW,kW.array()]),skipDuplicates:t.boolean().optional()}).strict(),SZt=t.object({select:Mz.optional(),include:jz.optional(),where:Gl}).strict(),TZt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([u4,s4]),where:Gl}).strict(),PZt=t.object({data:t.union([y4,d4]),where:De.optional(),limit:t.number().optional()}).strict(),WZt=t.object({data:t.union([y4,d4]),where:De.optional(),limit:t.number().optional()}).strict(),RZt=t.object({where:De.optional(),limit:t.number().optional()}).strict(),UZt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([z4,m4])}).strict(),kZt=t.object({select:vz.optional(),include:Zz.optional(),where:ut,create:t.union([z4,m4]),update:t.union([h4,b4])}).strict(),xZt=t.object({data:t.union([xW,xW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jZt=t.object({data:t.union([xW,xW.array()]),skipDuplicates:t.boolean().optional()}).strict(),MZt=t.object({select:vz.optional(),include:Zz.optional(),where:ut}).strict(),ZZt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([h4,b4]),where:ut}).strict(),vZt=t.object({data:t.union([NM,I4]),where:Ke.optional(),limit:t.number().optional()}).strict(),OZt=t.object({data:t.union([NM,I4]),where:Ke.optional(),limit:t.number().optional()}).strict(),fZt=t.object({where:Ke.optional(),limit:t.number().optional()}).strict(),wZt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([g4,C4])}).strict(),NZt=t.object({select:fz.optional(),include:Oz.optional(),where:At,create:t.union([g4,C4]),update:t.union([A4,S4])}).strict(),BZt=t.object({data:t.union([jW,jW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qZt=t.object({data:t.union([jW,jW.array()]),skipDuplicates:t.boolean().optional()}).strict(),FZt=t.object({select:fz.optional(),include:Oz.optional(),where:At}).strict(),DZt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([A4,S4]),where:At}).strict(),EZt=t.object({data:t.union([BM,T4]),where:ja.optional(),limit:t.number().optional()}).strict(),_Zt=t.object({data:t.union([BM,T4]),where:ja.optional(),limit:t.number().optional()}).strict(),LZt=t.object({where:ja.optional(),limit:t.number().optional()}).strict(),VZt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([P4,W4])}).strict(),HZt=t.object({select:Nz.optional(),include:wz.optional(),where:Yt,create:t.union([P4,W4]),update:t.union([R4,U4])}).strict(),QZt=t.object({data:t.union([MW,MW.array()]),skipDuplicates:t.boolean().optional()}).strict(),YZt=t.object({data:t.union([MW,MW.array()]),skipDuplicates:t.boolean().optional()}).strict(),GZt=t.object({select:Nz.optional(),include:wz.optional(),where:Yt}).strict(),$Zt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([R4,U4]),where:Yt}).strict(),JZt=t.object({data:t.union([$B,k4]),where:Oe.optional(),limit:t.number().optional()}).strict(),KZt=t.object({data:t.union([$B,k4]),where:Oe.optional(),limit:t.number().optional()}).strict(),XZt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),tvt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([x4,j4])}).strict(),evt=t.object({select:qz.optional(),include:Bz.optional(),where:oe,create:t.union([x4,j4]),update:t.union([M4,Z4])}).strict(),ovt=t.object({data:t.union([ZW,ZW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nvt=t.object({data:t.union([ZW,ZW.array()]),skipDuplicates:t.boolean().optional()}).strict(),avt=t.object({select:qz.optional(),include:Bz.optional(),where:oe}).strict(),ivt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([M4,Z4]),where:oe}).strict(),lvt=t.object({data:t.union([JB,v4]),where:Xe.optional(),limit:t.number().optional()}).strict(),rvt=t.object({data:t.union([JB,v4]),where:Xe.optional(),limit:t.number().optional()}).strict(),pvt=t.object({where:Xe.optional(),limit:t.number().optional()}).strict(),cvt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([O4,f4])}).strict(),uvt=t.object({select:Dz.optional(),include:Fz.optional(),where:ne,create:t.union([O4,f4]),update:t.union([w4,N4])}).strict(),svt=t.object({data:t.union([vW,vW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yvt=t.object({data:t.union([vW,vW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dvt=t.object({select:Dz.optional(),include:Fz.optional(),where:ne}).strict(),zvt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([w4,N4]),where:ne}).strict(),mvt=t.object({data:t.union([KB,B4]),where:to.optional(),limit:t.number().optional()}).strict(),hvt=t.object({data:t.union([KB,B4]),where:to.optional(),limit:t.number().optional()}).strict(),bvt=t.object({where:to.optional(),limit:t.number().optional()}).strict(),Ivt=t.object({select:_z.optional(),include:Ez.optional(),data:t.union([q4,F4])}).strict(),gvt=t.object({select:_z.optional(),include:Ez.optional(),where:Q,create:t.union([q4,F4]),update:t.union([D4,E4])}).strict(),Cvt=t.object({data:t.union([OW,OW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Avt=t.object({data:t.union([OW,OW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Svt=t.object({select:_z.optional(),include:Ez.optional(),where:Q}).strict(),Tvt=t.object({select:_z.optional(),include:Ez.optional(),data:t.union([D4,E4]),where:Q}).strict(),Pvt=t.object({data:t.union([zP,_4]),where:Ma.optional(),limit:t.number().optional()}).strict(),Wvt=t.object({data:t.union([zP,_4]),where:Ma.optional(),limit:t.number().optional()}).strict(),Rvt=t.object({where:Ma.optional(),limit:t.number().optional()}).strict(),Uvt=t.object({select:Vz.optional(),include:Lz.optional(),data:t.union([L4,V4])}).strict(),kvt=t.object({select:Vz.optional(),include:Lz.optional(),where:ke,create:t.union([L4,V4]),update:t.union([H4,Q4])}).strict(),xvt=t.object({data:t.union([fW,fW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jvt=t.object({data:t.union([fW,fW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mvt=t.object({select:Vz.optional(),include:Lz.optional(),where:ke}).strict(),Zvt=t.object({select:Vz.optional(),include:Lz.optional(),data:t.union([H4,Q4]),where:ke}).strict(),vvt=t.object({data:t.union([XB,Y4]),where:Za.optional(),limit:t.number().optional()}).strict(),Ovt=t.object({data:t.union([XB,Y4]),where:Za.optional(),limit:t.number().optional()}).strict(),fvt=t.object({where:Za.optional(),limit:t.number().optional()}).strict(),wvt=t.object({select:Qz.optional(),include:Hz.optional(),data:t.union([G4,$4])}).strict(),Nvt=t.object({select:Qz.optional(),include:Hz.optional(),where:Gt,create:t.union([G4,$4]),update:t.union([J4,K4])}).strict(),Bvt=t.object({data:t.union([wW,wW.array()]),skipDuplicates:t.boolean().optional()}).strict(),qvt=t.object({data:t.union([wW,wW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fvt=t.object({select:Qz.optional(),include:Hz.optional(),where:Gt}).strict(),Dvt=t.object({select:Qz.optional(),include:Hz.optional(),data:t.union([J4,K4]),where:Gt}).strict(),Evt=t.object({data:t.union([tq,X4]),where:fe.optional(),limit:t.number().optional()}).strict(),_vt=t.object({data:t.union([tq,X4]),where:fe.optional(),limit:t.number().optional()}).strict(),Lvt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),Vvt=t.object({select:Gz.optional(),include:Yz.optional(),data:t.union([t2,e2])}).strict(),Hvt=t.object({select:Gz.optional(),include:Yz.optional(),where:St,create:t.union([t2,e2]),update:t.union([o2,n2])}).strict(),Qvt=t.object({data:t.union([NW,NW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Yvt=t.object({data:t.union([NW,NW.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gvt=t.object({select:Gz.optional(),include:Yz.optional(),where:St}).strict(),$vt=t.object({select:Gz.optional(),include:Yz.optional(),data:t.union([o2,n2]),where:St}).strict(),Jvt=t.object({data:t.union([qM,a2]),where:va.optional(),limit:t.number().optional()}).strict(),Kvt=t.object({data:t.union([qM,a2]),where:va.optional(),limit:t.number().optional()}).strict(),Xvt=t.object({where:va.optional(),limit:t.number().optional()}).strict(),tOt=t.object({select:Jz.optional(),include:$z.optional(),data:t.union([i2,l2])}).strict(),eOt=t.object({select:Jz.optional(),include:$z.optional(),where:x,create:t.union([i2,l2]),update:t.union([r2,p2])}).strict(),oOt=t.object({data:t.union([BW,BW.array()]),skipDuplicates:t.boolean().optional()}).strict(),nOt=t.object({data:t.union([BW,BW.array()]),skipDuplicates:t.boolean().optional()}).strict(),aOt=t.object({select:Jz.optional(),include:$z.optional(),where:x}).strict(),iOt=t.object({select:Jz.optional(),include:$z.optional(),data:t.union([r2,p2]),where:x}).strict(),lOt=t.object({data:t.union([VS,c2]),where:Tt.optional(),limit:t.number().optional()}).strict(),rOt=t.object({data:t.union([VS,c2]),where:Tt.optional(),limit:t.number().optional()}).strict(),pOt=t.object({where:Tt.optional(),limit:t.number().optional()}).strict(),cOt=t.object({select:Xz.optional(),include:Kz.optional(),data:t.union([u2,s2])}).strict(),uOt=t.object({select:Xz.optional(),include:Kz.optional(),where:$l,create:t.union([u2,s2]),update:t.union([y2,d2])}).strict(),sOt=t.object({data:t.union([qW,qW.array()]),skipDuplicates:t.boolean().optional()}).strict(),yOt=t.object({data:t.union([qW,qW.array()]),skipDuplicates:t.boolean().optional()}).strict(),dOt=t.object({select:Xz.optional(),include:Kz.optional(),where:$l}).strict(),zOt=t.object({select:Xz.optional(),include:Kz.optional(),data:t.union([y2,d2]),where:$l}).strict(),mOt=t.object({data:t.union([z2,m2]),where:Ee.optional(),limit:t.number().optional()}).strict(),hOt=t.object({data:t.union([z2,m2]),where:Ee.optional(),limit:t.number().optional()}).strict(),bOt=t.object({where:Ee.optional(),limit:t.number().optional()}).strict(),IOt=t.object({select:em.optional(),include:tm.optional(),data:t.union([h2,b2])}).strict(),gOt=t.object({select:em.optional(),include:tm.optional(),where:xe,create:t.union([h2,b2]),update:t.union([I2,g2])}).strict(),COt=t.object({data:t.union([FW,FW.array()]),skipDuplicates:t.boolean().optional()}).strict(),AOt=t.object({data:t.union([FW,FW.array()]),skipDuplicates:t.boolean().optional()}).strict(),SOt=t.object({select:em.optional(),include:tm.optional(),where:xe}).strict(),TOt=t.object({select:em.optional(),include:tm.optional(),data:t.union([I2,g2]),where:xe}).strict(),POt=t.object({data:t.union([eq,C2]),where:Oa.optional(),limit:t.number().optional()}).strict(),WOt=t.object({data:t.union([eq,C2]),where:Oa.optional(),limit:t.number().optional()}).strict(),ROt=t.object({where:Oa.optional(),limit:t.number().optional()}).strict(),UOt=t.object({select:nm.optional(),include:om.optional(),data:t.union([A2,S2])}).strict(),kOt=t.object({select:nm.optional(),include:om.optional(),where:je,create:t.union([A2,S2]),update:t.union([T2,P2])}).strict(),xOt=t.object({data:t.union([DW,DW.array()]),skipDuplicates:t.boolean().optional()}).strict(),jOt=t.object({data:t.union([DW,DW.array()]),skipDuplicates:t.boolean().optional()}).strict(),MOt=t.object({select:nm.optional(),include:om.optional(),where:je}).strict(),ZOt=t.object({select:nm.optional(),include:om.optional(),data:t.union([T2,P2]),where:je}).strict(),vOt=t.object({data:t.union([oq,W2]),where:fa.optional(),limit:t.number().optional()}).strict(),OOt=t.object({data:t.union([oq,W2]),where:fa.optional(),limit:t.number().optional()}).strict(),fOt=t.object({where:fa.optional(),limit:t.number().optional()}).strict();exports.zodSchemas=Pmt;Object.keys(client).forEach(function(k){if(k!=='default'&&!Object.prototype.hasOwnProperty.call(exports,k))Object.defineProperty(exports,k,{enumerable:true,get:function(){return client[k]}})});